
    import { createRequire } from 'module';
    
    // bun does not implement require, so we need to create it
    import.meta.require = createRequire(import.meta.url);
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __toESM = (mod, isNodeMode, target) => {
  target = mod != null ? __create(__getProtoOf(mod)) : {};
  const to = isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target;
  for (let key of __getOwnPropNames(mod))
    if (!__hasOwnProp.call(to, key))
      __defProp(to, key, {
        get: () => mod[key],
        enumerable: true
      });
  return to;
};
var __toCommonJS = (from) => {
  const moduleCache = __toCommonJS.moduleCache ??= new WeakMap;
  var cached = moduleCache.get(from);
  if (cached)
    return cached;
  var to = __defProp({}, "__esModule", { value: true });
  var desc = { enumerable: false };
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key))
        __defProp(to, key, {
          get: () => from[key],
          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
  }
  moduleCache.set(from, to);
  return to;
};
var __commonJS = (cb, mod) => () => (mod || cb((mod = { exports: {} }).exports, mod), mod.exports);
var __require = (id) => {
  return import.meta.require(id);
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {
      get: all[name],
      enumerable: true,
      configurable: true,
      set: (newValue) => all[name] = () => newValue
    });
};
var __esm = (fn, res) => () => (fn && (res = fn(fn = 0)), res);

// node_modules/@actions/core/lib/utils.js
var require_utils = __commonJS((exports) => {
  var toCommandValue = function(input) {
    if (input === null || input === undefined) {
      return "";
    } else if (typeof input === "string" || input instanceof String) {
      return input;
    }
    return JSON.stringify(input);
  };
  var toCommandProperties = function(annotationProperties) {
    if (!Object.keys(annotationProperties).length) {
      return {};
    }
    return {
      title: annotationProperties.title,
      file: annotationProperties.file,
      line: annotationProperties.startLine,
      endLine: annotationProperties.endLine,
      col: annotationProperties.startColumn,
      endColumn: annotationProperties.endColumn
    };
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.toCommandProperties = exports.toCommandValue = undefined;
  exports.toCommandValue = toCommandValue;
  exports.toCommandProperties = toCommandProperties;
});

// node_modules/@actions/core/lib/command.js
var require_command = __commonJS((exports) => {
  var issueCommand = function(command, properties, message) {
    const cmd = new Command(command, properties, message);
    process.stdout.write(cmd.toString() + os.EOL);
  };
  var issue = function(name, message = "") {
    issueCommand(name, {}, message);
  };
  var escapeData = function(s) {
    return utils_1.toCommandValue(s).replace(/%/g, "%25").replace(/\r/g, "%0D").replace(/\n/g, "%0A");
  };
  var escapeProperty = function(s) {
    return utils_1.toCommandValue(s).replace(/%/g, "%25").replace(/\r/g, "%0D").replace(/\n/g, "%0A").replace(/:/g, "%3A").replace(/,/g, "%2C");
  };
  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() {
      return m[k];
    } });
  } : function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    o[k2] = m[k];
  });
  var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
  } : function(o, v) {
    o["default"] = v;
  });
  var __importStar = exports && exports.__importStar || function(mod) {
    if (mod && mod.__esModule)
      return mod;
    var result = {};
    if (mod != null) {
      for (var k in mod)
        if (k !== "default" && Object.hasOwnProperty.call(mod, k))
          __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.issue = exports.issueCommand = undefined;
  var os = __importStar(__require("os"));
  var utils_1 = require_utils();
  exports.issueCommand = issueCommand;
  exports.issue = issue;
  var CMD_STRING = "::";

  class Command {
    constructor(command, properties, message) {
      if (!command) {
        command = "missing.command";
      }
      this.command = command;
      this.properties = properties;
      this.message = message;
    }
    toString() {
      let cmdStr = CMD_STRING + this.command;
      if (this.properties && Object.keys(this.properties).length > 0) {
        cmdStr += " ";
        let first = true;
        for (const key in this.properties) {
          if (this.properties.hasOwnProperty(key)) {
            const val = this.properties[key];
            if (val) {
              if (first) {
                first = false;
              } else {
                cmdStr += ",";
              }
              cmdStr += `${key}=${escapeProperty(val)}`;
            }
          }
        }
      }
      cmdStr += `${CMD_STRING}${escapeData(this.message)}`;
      return cmdStr;
    }
  }
});

// node_modules/uuid/dist/rng.js
var require_rng = __commonJS((exports) => {
  var _interopRequireDefault = function(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  };
  var rng = function() {
    if (poolPtr > rnds8Pool.length - 16) {
      _crypto.default.randomFillSync(rnds8Pool);
      poolPtr = 0;
    }
    return rnds8Pool.slice(poolPtr, poolPtr += 16);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = rng;
  var _crypto = _interopRequireDefault(__require("crypto"));
  var rnds8Pool = new Uint8Array(256);
  var poolPtr = rnds8Pool.length;
});

// node_modules/uuid/dist/regex.js
var require_regex = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
  exports.default = _default;
});

// node_modules/uuid/dist/validate.js
var require_validate = __commonJS((exports) => {
  var _interopRequireDefault = function(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  };
  var validate = function(uuid) {
    return typeof uuid === "string" && _regex.default.test(uuid);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _regex = _interopRequireDefault(require_regex());
  var _default = validate;
  exports.default = _default;
});

// node_modules/uuid/dist/stringify.js
var require_stringify = __commonJS((exports) => {
  var _interopRequireDefault = function(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  };
  var stringify = function(arr, offset = 0) {
    const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + "-" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + "-" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + "-" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + "-" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();
    if (!(0, _validate.default)(uuid)) {
      throw TypeError("Stringified UUID is invalid");
    }
    return uuid;
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _validate = _interopRequireDefault(require_validate());
  var byteToHex = [];
  for (let i = 0;i < 256; ++i) {
    byteToHex.push((i + 256).toString(16).substr(1));
  }
  var _default = stringify;
  exports.default = _default;
});

// node_modules/uuid/dist/v1.js
var require_v1 = __commonJS((exports) => {
  var _interopRequireDefault = function(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  };
  var v1 = function(options, buf, offset) {
    let i = buf && offset || 0;
    const b = buf || new Array(16);
    options = options || {};
    let node = options.node || _nodeId;
    let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;
    if (node == null || clockseq == null) {
      const seedBytes = options.random || (options.rng || _rng.default)();
      if (node == null) {
        node = _nodeId = [seedBytes[0] | 1, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
      }
      if (clockseq == null) {
        clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 16383;
      }
    }
    let msecs = options.msecs !== undefined ? options.msecs : Date.now();
    let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;
    const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 1e4;
    if (dt < 0 && options.clockseq === undefined) {
      clockseq = clockseq + 1 & 16383;
    }
    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
      nsecs = 0;
    }
    if (nsecs >= 1e4) {
      throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
    }
    _lastMSecs = msecs;
    _lastNSecs = nsecs;
    _clockseq = clockseq;
    msecs += 12219292800000;
    const tl = ((msecs & 268435455) * 1e4 + nsecs) % 4294967296;
    b[i++] = tl >>> 24 & 255;
    b[i++] = tl >>> 16 & 255;
    b[i++] = tl >>> 8 & 255;
    b[i++] = tl & 255;
    const tmh = msecs / 4294967296 * 1e4 & 268435455;
    b[i++] = tmh >>> 8 & 255;
    b[i++] = tmh & 255;
    b[i++] = tmh >>> 24 & 15 | 16;
    b[i++] = tmh >>> 16 & 255;
    b[i++] = clockseq >>> 8 | 128;
    b[i++] = clockseq & 255;
    for (let n = 0;n < 6; ++n) {
      b[i + n] = node[n];
    }
    return buf || (0, _stringify.default)(b);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _rng = _interopRequireDefault(require_rng());
  var _stringify = _interopRequireDefault(require_stringify());
  var _nodeId;
  var _clockseq;
  var _lastMSecs = 0;
  var _lastNSecs = 0;
  var _default = v1;
  exports.default = _default;
});

// node_modules/uuid/dist/parse.js
var require_parse = __commonJS((exports) => {
  var _interopRequireDefault = function(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  };
  var parse = function(uuid) {
    if (!(0, _validate.default)(uuid)) {
      throw TypeError("Invalid UUID");
    }
    let v;
    const arr = new Uint8Array(16);
    arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;
    arr[1] = v >>> 16 & 255;
    arr[2] = v >>> 8 & 255;
    arr[3] = v & 255;
    arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;
    arr[5] = v & 255;
    arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;
    arr[7] = v & 255;
    arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;
    arr[9] = v & 255;
    arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 1099511627776 & 255;
    arr[11] = v / 4294967296 & 255;
    arr[12] = v >>> 24 & 255;
    arr[13] = v >>> 16 & 255;
    arr[14] = v >>> 8 & 255;
    arr[15] = v & 255;
    return arr;
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _validate = _interopRequireDefault(require_validate());
  var _default = parse;
  exports.default = _default;
});

// node_modules/uuid/dist/v35.js
var require_v35 = __commonJS((exports) => {
  var _interopRequireDefault = function(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  };
  var stringToBytes = function(str) {
    str = unescape(encodeURIComponent(str));
    const bytes = [];
    for (let i = 0;i < str.length; ++i) {
      bytes.push(str.charCodeAt(i));
    }
    return bytes;
  };
  var _default = function(name, version, hashfunc) {
    function generateUUID(value, namespace, buf, offset) {
      if (typeof value === "string") {
        value = stringToBytes(value);
      }
      if (typeof namespace === "string") {
        namespace = (0, _parse.default)(namespace);
      }
      if (namespace.length !== 16) {
        throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
      }
      let bytes = new Uint8Array(16 + value.length);
      bytes.set(namespace);
      bytes.set(value, namespace.length);
      bytes = hashfunc(bytes);
      bytes[6] = bytes[6] & 15 | version;
      bytes[8] = bytes[8] & 63 | 128;
      if (buf) {
        offset = offset || 0;
        for (let i = 0;i < 16; ++i) {
          buf[offset + i] = bytes[i];
        }
        return buf;
      }
      return (0, _stringify.default)(bytes);
    }
    try {
      generateUUID.name = name;
    } catch (err) {
    }
    generateUUID.DNS = DNS;
    generateUUID.URL = URL2;
    return generateUUID;
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _default;
  exports.URL = exports.DNS = undefined;
  var _stringify = _interopRequireDefault(require_stringify());
  var _parse = _interopRequireDefault(require_parse());
  var DNS = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
  exports.DNS = DNS;
  var URL2 = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
  exports.URL = URL2;
});

// node_modules/uuid/dist/md5.js
var require_md5 = __commonJS((exports) => {
  var _interopRequireDefault = function(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  };
  var md5 = function(bytes) {
    if (Array.isArray(bytes)) {
      bytes = Buffer.from(bytes);
    } else if (typeof bytes === "string") {
      bytes = Buffer.from(bytes, "utf8");
    }
    return _crypto.default.createHash("md5").update(bytes).digest();
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _crypto = _interopRequireDefault(__require("crypto"));
  var _default = md5;
  exports.default = _default;
});

// node_modules/uuid/dist/v3.js
var require_v3 = __commonJS((exports) => {
  var _interopRequireDefault = function(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _v = _interopRequireDefault(require_v35());
  var _md = _interopRequireDefault(require_md5());
  var v3 = (0, _v.default)("v3", 48, _md.default);
  var _default = v3;
  exports.default = _default;
});

// node_modules/uuid/dist/v4.js
var require_v4 = __commonJS((exports) => {
  var _interopRequireDefault = function(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  };
  var v4 = function(options, buf, offset) {
    options = options || {};
    const rnds = options.random || (options.rng || _rng.default)();
    rnds[6] = rnds[6] & 15 | 64;
    rnds[8] = rnds[8] & 63 | 128;
    if (buf) {
      offset = offset || 0;
      for (let i = 0;i < 16; ++i) {
        buf[offset + i] = rnds[i];
      }
      return buf;
    }
    return (0, _stringify.default)(rnds);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _rng = _interopRequireDefault(require_rng());
  var _stringify = _interopRequireDefault(require_stringify());
  var _default = v4;
  exports.default = _default;
});

// node_modules/uuid/dist/sha1.js
var require_sha1 = __commonJS((exports) => {
  var _interopRequireDefault = function(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  };
  var sha1 = function(bytes) {
    if (Array.isArray(bytes)) {
      bytes = Buffer.from(bytes);
    } else if (typeof bytes === "string") {
      bytes = Buffer.from(bytes, "utf8");
    }
    return _crypto.default.createHash("sha1").update(bytes).digest();
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _crypto = _interopRequireDefault(__require("crypto"));
  var _default = sha1;
  exports.default = _default;
});

// node_modules/uuid/dist/v5.js
var require_v5 = __commonJS((exports) => {
  var _interopRequireDefault = function(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _v = _interopRequireDefault(require_v35());
  var _sha = _interopRequireDefault(require_sha1());
  var v5 = (0, _v.default)("v5", 80, _sha.default);
  var _default = v5;
  exports.default = _default;
});

// node_modules/uuid/dist/nil.js
var require_nil = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = "00000000-0000-0000-0000-000000000000";
  exports.default = _default;
});

// node_modules/uuid/dist/version.js
var require_version = __commonJS((exports) => {
  var _interopRequireDefault = function(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  };
  var version = function(uuid) {
    if (!(0, _validate.default)(uuid)) {
      throw TypeError("Invalid UUID");
    }
    return parseInt(uuid.substr(14, 1), 16);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _validate = _interopRequireDefault(require_validate());
  var _default = version;
  exports.default = _default;
});

// node_modules/uuid/dist/index.js
var require_dist = __commonJS((exports) => {
  var _interopRequireDefault = function(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "v1", {
    enumerable: true,
    get: function() {
      return _v.default;
    }
  });
  Object.defineProperty(exports, "v3", {
    enumerable: true,
    get: function() {
      return _v2.default;
    }
  });
  Object.defineProperty(exports, "v4", {
    enumerable: true,
    get: function() {
      return _v3.default;
    }
  });
  Object.defineProperty(exports, "v5", {
    enumerable: true,
    get: function() {
      return _v4.default;
    }
  });
  Object.defineProperty(exports, "NIL", {
    enumerable: true,
    get: function() {
      return _nil.default;
    }
  });
  Object.defineProperty(exports, "version", {
    enumerable: true,
    get: function() {
      return _version.default;
    }
  });
  Object.defineProperty(exports, "validate", {
    enumerable: true,
    get: function() {
      return _validate.default;
    }
  });
  Object.defineProperty(exports, "stringify", {
    enumerable: true,
    get: function() {
      return _stringify.default;
    }
  });
  Object.defineProperty(exports, "parse", {
    enumerable: true,
    get: function() {
      return _parse.default;
    }
  });
  var _v = _interopRequireDefault(require_v1());
  var _v2 = _interopRequireDefault(require_v3());
  var _v3 = _interopRequireDefault(require_v4());
  var _v4 = _interopRequireDefault(require_v5());
  var _nil = _interopRequireDefault(require_nil());
  var _version = _interopRequireDefault(require_version());
  var _validate = _interopRequireDefault(require_validate());
  var _stringify = _interopRequireDefault(require_stringify());
  var _parse = _interopRequireDefault(require_parse());
});

// node_modules/@actions/core/lib/file-command.js
var require_file_command = __commonJS((exports) => {
  var issueFileCommand = function(command, message) {
    const filePath = process.env[`GITHUB_${command}`];
    if (!filePath) {
      throw new Error(`Unable to find environment variable for file command ${command}`);
    }
    if (!fs.existsSync(filePath)) {
      throw new Error(`Missing file at path: ${filePath}`);
    }
    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {
      encoding: "utf8"
    });
  };
  var prepareKeyValueMessage = function(key, value) {
    const delimiter = `ghadelimiter_${uuid_1.v4()}`;
    const convertedValue = utils_1.toCommandValue(value);
    if (key.includes(delimiter)) {
      throw new Error(`Unexpected input: name should not contain the delimiter "${delimiter}"`);
    }
    if (convertedValue.includes(delimiter)) {
      throw new Error(`Unexpected input: value should not contain the delimiter "${delimiter}"`);
    }
    return `${key}<<${delimiter}${os.EOL}${convertedValue}${os.EOL}${delimiter}`;
  };
  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() {
      return m[k];
    } });
  } : function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    o[k2] = m[k];
  });
  var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
  } : function(o, v) {
    o["default"] = v;
  });
  var __importStar = exports && exports.__importStar || function(mod) {
    if (mod && mod.__esModule)
      return mod;
    var result = {};
    if (mod != null) {
      for (var k in mod)
        if (k !== "default" && Object.hasOwnProperty.call(mod, k))
          __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.prepareKeyValueMessage = exports.issueFileCommand = undefined;
  var fs = __importStar(__require("fs"));
  var os = __importStar(__require("os"));
  var uuid_1 = require_dist();
  var utils_1 = require_utils();
  exports.issueFileCommand = issueFileCommand;
  exports.prepareKeyValueMessage = prepareKeyValueMessage;
});

// node_modules/@actions/http-client/lib/proxy.js
var require_proxy = __commonJS((exports) => {
  var getProxyUrl = function(reqUrl) {
    const usingSsl = reqUrl.protocol === "https:";
    if (checkBypass(reqUrl)) {
      return;
    }
    const proxyVar = (() => {
      if (usingSsl) {
        return process.env["https_proxy"] || process.env["HTTPS_PROXY"];
      } else {
        return process.env["http_proxy"] || process.env["HTTP_PROXY"];
      }
    })();
    if (proxyVar) {
      try {
        return new URL(proxyVar);
      } catch (_a) {
        if (!proxyVar.startsWith("http://") && !proxyVar.startsWith("https://"))
          return new URL(`http://${proxyVar}`);
      }
    } else {
      return;
    }
  };
  var checkBypass = function(reqUrl) {
    if (!reqUrl.hostname) {
      return false;
    }
    const reqHost = reqUrl.hostname;
    if (isLoopbackAddress(reqHost)) {
      return true;
    }
    const noProxy = process.env["no_proxy"] || process.env["NO_PROXY"] || "";
    if (!noProxy) {
      return false;
    }
    let reqPort;
    if (reqUrl.port) {
      reqPort = Number(reqUrl.port);
    } else if (reqUrl.protocol === "http:") {
      reqPort = 80;
    } else if (reqUrl.protocol === "https:") {
      reqPort = 443;
    }
    const upperReqHosts = [reqUrl.hostname.toUpperCase()];
    if (typeof reqPort === "number") {
      upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);
    }
    for (const upperNoProxyItem of noProxy.split(",").map((x) => x.trim().toUpperCase()).filter((x) => x)) {
      if (upperNoProxyItem === "*" || upperReqHosts.some((x) => x === upperNoProxyItem || x.endsWith(`.${upperNoProxyItem}`) || upperNoProxyItem.startsWith(".") && x.endsWith(`${upperNoProxyItem}`))) {
        return true;
      }
    }
    return false;
  };
  var isLoopbackAddress = function(host) {
    const hostLower = host.toLowerCase();
    return hostLower === "localhost" || hostLower.startsWith("127.") || hostLower.startsWith("[::1]") || hostLower.startsWith("[0:0:0:0:0:0:0:1]");
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.checkBypass = exports.getProxyUrl = undefined;
  exports.getProxyUrl = getProxyUrl;
  exports.checkBypass = checkBypass;
});

// node_modules/tunnel/lib/tunnel.js
var require_tunnel = __commonJS((exports) => {
  var httpOverHttp = function(options) {
    var agent = new TunnelingAgent(options);
    agent.request = http.request;
    return agent;
  };
  var httpsOverHttp = function(options) {
    var agent = new TunnelingAgent(options);
    agent.request = http.request;
    agent.createSocket = createSecureSocket;
    agent.defaultPort = 443;
    return agent;
  };
  var httpOverHttps = function(options) {
    var agent = new TunnelingAgent(options);
    agent.request = https.request;
    return agent;
  };
  var httpsOverHttps = function(options) {
    var agent = new TunnelingAgent(options);
    agent.request = https.request;
    agent.createSocket = createSecureSocket;
    agent.defaultPort = 443;
    return agent;
  };
  var TunnelingAgent = function(options) {
    var self2 = this;
    self2.options = options || {};
    self2.proxyOptions = self2.options.proxy || {};
    self2.maxSockets = self2.options.maxSockets || http.Agent.defaultMaxSockets;
    self2.requests = [];
    self2.sockets = [];
    self2.on("free", function onFree(socket, host, port, localAddress) {
      var options2 = toOptions(host, port, localAddress);
      for (var i = 0, len = self2.requests.length;i < len; ++i) {
        var pending = self2.requests[i];
        if (pending.host === options2.host && pending.port === options2.port) {
          self2.requests.splice(i, 1);
          pending.request.onSocket(socket);
          return;
        }
      }
      socket.destroy();
      self2.removeSocket(socket);
    });
  };
  var createSecureSocket = function(options, cb) {
    var self2 = this;
    TunnelingAgent.prototype.createSocket.call(self2, options, function(socket) {
      var hostHeader = options.request.getHeader("host");
      var tlsOptions = mergeOptions({}, self2.options, {
        socket,
        servername: hostHeader ? hostHeader.replace(/:.*$/, "") : options.host
      });
      var secureSocket = tls.connect(0, tlsOptions);
      self2.sockets[self2.sockets.indexOf(socket)] = secureSocket;
      cb(secureSocket);
    });
  };
  var toOptions = function(host, port, localAddress) {
    if (typeof host === "string") {
      return {
        host,
        port,
        localAddress
      };
    }
    return host;
  };
  var mergeOptions = function(target) {
    for (var i = 1, len = arguments.length;i < len; ++i) {
      var overrides = arguments[i];
      if (typeof overrides === "object") {
        var keys = Object.keys(overrides);
        for (var j = 0, keyLen = keys.length;j < keyLen; ++j) {
          var k = keys[j];
          if (overrides[k] !== undefined) {
            target[k] = overrides[k];
          }
        }
      }
    }
    return target;
  };
  var net = __require("net");
  var tls = __require("tls");
  var http = __require("http");
  var https = __require("https");
  var events = __require("events");
  var assert = __require("assert");
  var util = __require("util");
  exports.httpOverHttp = httpOverHttp;
  exports.httpsOverHttp = httpsOverHttp;
  exports.httpOverHttps = httpOverHttps;
  exports.httpsOverHttps = httpsOverHttps;
  util.inherits(TunnelingAgent, events.EventEmitter);
  TunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {
    var self2 = this;
    var options = mergeOptions({ request: req }, self2.options, toOptions(host, port, localAddress));
    if (self2.sockets.length >= this.maxSockets) {
      self2.requests.push(options);
      return;
    }
    self2.createSocket(options, function(socket) {
      socket.on("free", onFree);
      socket.on("close", onCloseOrRemove);
      socket.on("agentRemove", onCloseOrRemove);
      req.onSocket(socket);
      function onFree() {
        self2.emit("free", socket, options);
      }
      function onCloseOrRemove(err) {
        self2.removeSocket(socket);
        socket.removeListener("free", onFree);
        socket.removeListener("close", onCloseOrRemove);
        socket.removeListener("agentRemove", onCloseOrRemove);
      }
    });
  };
  TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
    var self2 = this;
    var placeholder = {};
    self2.sockets.push(placeholder);
    var connectOptions = mergeOptions({}, self2.proxyOptions, {
      method: "CONNECT",
      path: options.host + ":" + options.port,
      agent: false,
      headers: {
        host: options.host + ":" + options.port
      }
    });
    if (options.localAddress) {
      connectOptions.localAddress = options.localAddress;
    }
    if (connectOptions.proxyAuth) {
      connectOptions.headers = connectOptions.headers || {};
      connectOptions.headers["Proxy-Authorization"] = "Basic " + new Buffer(connectOptions.proxyAuth).toString("base64");
    }
    debug("making CONNECT request");
    var connectReq = self2.request(connectOptions);
    connectReq.useChunkedEncodingByDefault = false;
    connectReq.once("response", onResponse);
    connectReq.once("upgrade", onUpgrade);
    connectReq.once("connect", onConnect);
    connectReq.once("error", onError);
    connectReq.end();
    function onResponse(res) {
      res.upgrade = true;
    }
    function onUpgrade(res, socket, head) {
      process.nextTick(function() {
        onConnect(res, socket, head);
      });
    }
    function onConnect(res, socket, head) {
      connectReq.removeAllListeners();
      socket.removeAllListeners();
      if (res.statusCode !== 200) {
        debug("tunneling socket could not be established, statusCode=%d", res.statusCode);
        socket.destroy();
        var error = new Error("tunneling socket could not be established, statusCode=" + res.statusCode);
        error.code = "ECONNRESET";
        options.request.emit("error", error);
        self2.removeSocket(placeholder);
        return;
      }
      if (head.length > 0) {
        debug("got illegal response body from proxy");
        socket.destroy();
        var error = new Error("got illegal response body from proxy");
        error.code = "ECONNRESET";
        options.request.emit("error", error);
        self2.removeSocket(placeholder);
        return;
      }
      debug("tunneling connection has established");
      self2.sockets[self2.sockets.indexOf(placeholder)] = socket;
      return cb(socket);
    }
    function onError(cause) {
      connectReq.removeAllListeners();
      debug("tunneling socket could not be established, cause=%s\n", cause.message, cause.stack);
      var error = new Error("tunneling socket could not be established, cause=" + cause.message);
      error.code = "ECONNRESET";
      options.request.emit("error", error);
      self2.removeSocket(placeholder);
    }
  };
  TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
    var pos = this.sockets.indexOf(socket);
    if (pos === -1) {
      return;
    }
    this.sockets.splice(pos, 1);
    var pending = this.requests.shift();
    if (pending) {
      this.createSocket(pending, function(socket2) {
        pending.request.onSocket(socket2);
      });
    }
  };
  var debug;
  if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
    debug = function() {
      var args = Array.prototype.slice.call(arguments);
      if (typeof args[0] === "string") {
        args[0] = "TUNNEL: " + args[0];
      } else {
        args.unshift("TUNNEL:");
      }
      console.error.apply(console, args);
    };
  } else {
    debug = function() {
    };
  }
  exports.debug = debug;
});

// node_modules/@actions/http-client/lib/index.js
var require_lib = __commonJS((exports) => {
  var getProxyUrl = function(serverUrl) {
    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));
    return proxyUrl ? proxyUrl.href : "";
  };
  var isHttps = function(requestUrl) {
    const parsedUrl = new URL(requestUrl);
    return parsedUrl.protocol === "https:";
  };
  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() {
      return m[k];
    } });
  } : function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    o[k2] = m[k];
  });
  var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
  } : function(o, v) {
    o["default"] = v;
  });
  var __importStar = exports && exports.__importStar || function(mod) {
    if (mod && mod.__esModule)
      return mod;
    var result = {};
    if (mod != null) {
      for (var k in mod)
        if (k !== "default" && Object.hasOwnProperty.call(mod, k))
          __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
  };
  var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = undefined;
  var http = __importStar(__require("http"));
  var https = __importStar(__require("https"));
  var pm = __importStar(require_proxy());
  var tunnel = __importStar(require_tunnel());
  var HttpCodes;
  (function(HttpCodes2) {
    HttpCodes2[HttpCodes2["OK"] = 200] = "OK";
    HttpCodes2[HttpCodes2["MultipleChoices"] = 300] = "MultipleChoices";
    HttpCodes2[HttpCodes2["MovedPermanently"] = 301] = "MovedPermanently";
    HttpCodes2[HttpCodes2["ResourceMoved"] = 302] = "ResourceMoved";
    HttpCodes2[HttpCodes2["SeeOther"] = 303] = "SeeOther";
    HttpCodes2[HttpCodes2["NotModified"] = 304] = "NotModified";
    HttpCodes2[HttpCodes2["UseProxy"] = 305] = "UseProxy";
    HttpCodes2[HttpCodes2["SwitchProxy"] = 306] = "SwitchProxy";
    HttpCodes2[HttpCodes2["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    HttpCodes2[HttpCodes2["PermanentRedirect"] = 308] = "PermanentRedirect";
    HttpCodes2[HttpCodes2["BadRequest"] = 400] = "BadRequest";
    HttpCodes2[HttpCodes2["Unauthorized"] = 401] = "Unauthorized";
    HttpCodes2[HttpCodes2["PaymentRequired"] = 402] = "PaymentRequired";
    HttpCodes2[HttpCodes2["Forbidden"] = 403] = "Forbidden";
    HttpCodes2[HttpCodes2["NotFound"] = 404] = "NotFound";
    HttpCodes2[HttpCodes2["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    HttpCodes2[HttpCodes2["NotAcceptable"] = 406] = "NotAcceptable";
    HttpCodes2[HttpCodes2["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    HttpCodes2[HttpCodes2["RequestTimeout"] = 408] = "RequestTimeout";
    HttpCodes2[HttpCodes2["Conflict"] = 409] = "Conflict";
    HttpCodes2[HttpCodes2["Gone"] = 410] = "Gone";
    HttpCodes2[HttpCodes2["TooManyRequests"] = 429] = "TooManyRequests";
    HttpCodes2[HttpCodes2["InternalServerError"] = 500] = "InternalServerError";
    HttpCodes2[HttpCodes2["NotImplemented"] = 501] = "NotImplemented";
    HttpCodes2[HttpCodes2["BadGateway"] = 502] = "BadGateway";
    HttpCodes2[HttpCodes2["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    HttpCodes2[HttpCodes2["GatewayTimeout"] = 504] = "GatewayTimeout";
  })(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));
  var Headers;
  (function(Headers2) {
    Headers2["Accept"] = "accept";
    Headers2["ContentType"] = "content-type";
  })(Headers = exports.Headers || (exports.Headers = {}));
  var MediaTypes;
  (function(MediaTypes2) {
    MediaTypes2["ApplicationJson"] = "application/json";
  })(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));
  exports.getProxyUrl = getProxyUrl;
  var HttpRedirectCodes = [
    HttpCodes.MovedPermanently,
    HttpCodes.ResourceMoved,
    HttpCodes.SeeOther,
    HttpCodes.TemporaryRedirect,
    HttpCodes.PermanentRedirect
  ];
  var HttpResponseRetryCodes = [
    HttpCodes.BadGateway,
    HttpCodes.ServiceUnavailable,
    HttpCodes.GatewayTimeout
  ];
  var RetryableHttpVerbs = ["OPTIONS", "GET", "DELETE", "HEAD"];
  var ExponentialBackoffCeiling = 10;
  var ExponentialBackoffTimeSlice = 5;

  class HttpClientError extends Error {
    constructor(message, statusCode) {
      super(message);
      this.name = "HttpClientError";
      this.statusCode = statusCode;
      Object.setPrototypeOf(this, HttpClientError.prototype);
    }
  }
  exports.HttpClientError = HttpClientError;

  class HttpClientResponse {
    constructor(message) {
      this.message = message;
    }
    readBody() {
      return __awaiter(this, undefined, undefined, function* () {
        return new Promise((resolve) => __awaiter(this, undefined, undefined, function* () {
          let output = Buffer.alloc(0);
          this.message.on("data", (chunk) => {
            output = Buffer.concat([output, chunk]);
          });
          this.message.on("end", () => {
            resolve(output.toString());
          });
        }));
      });
    }
    readBodyBuffer() {
      return __awaiter(this, undefined, undefined, function* () {
        return new Promise((resolve) => __awaiter(this, undefined, undefined, function* () {
          const chunks = [];
          this.message.on("data", (chunk) => {
            chunks.push(chunk);
          });
          this.message.on("end", () => {
            resolve(Buffer.concat(chunks));
          });
        }));
      });
    }
  }
  exports.HttpClientResponse = HttpClientResponse;
  exports.isHttps = isHttps;

  class HttpClient {
    constructor(userAgent, handlers, requestOptions) {
      this._ignoreSslError = false;
      this._allowRedirects = true;
      this._allowRedirectDowngrade = false;
      this._maxRedirects = 50;
      this._allowRetries = false;
      this._maxRetries = 1;
      this._keepAlive = false;
      this._disposed = false;
      this.userAgent = userAgent;
      this.handlers = handlers || [];
      this.requestOptions = requestOptions;
      if (requestOptions) {
        if (requestOptions.ignoreSslError != null) {
          this._ignoreSslError = requestOptions.ignoreSslError;
        }
        this._socketTimeout = requestOptions.socketTimeout;
        if (requestOptions.allowRedirects != null) {
          this._allowRedirects = requestOptions.allowRedirects;
        }
        if (requestOptions.allowRedirectDowngrade != null) {
          this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;
        }
        if (requestOptions.maxRedirects != null) {
          this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);
        }
        if (requestOptions.keepAlive != null) {
          this._keepAlive = requestOptions.keepAlive;
        }
        if (requestOptions.allowRetries != null) {
          this._allowRetries = requestOptions.allowRetries;
        }
        if (requestOptions.maxRetries != null) {
          this._maxRetries = requestOptions.maxRetries;
        }
      }
    }
    options(requestUrl, additionalHeaders) {
      return __awaiter(this, undefined, undefined, function* () {
        return this.request("OPTIONS", requestUrl, null, additionalHeaders || {});
      });
    }
    get(requestUrl, additionalHeaders) {
      return __awaiter(this, undefined, undefined, function* () {
        return this.request("GET", requestUrl, null, additionalHeaders || {});
      });
    }
    del(requestUrl, additionalHeaders) {
      return __awaiter(this, undefined, undefined, function* () {
        return this.request("DELETE", requestUrl, null, additionalHeaders || {});
      });
    }
    post(requestUrl, data, additionalHeaders) {
      return __awaiter(this, undefined, undefined, function* () {
        return this.request("POST", requestUrl, data, additionalHeaders || {});
      });
    }
    patch(requestUrl, data, additionalHeaders) {
      return __awaiter(this, undefined, undefined, function* () {
        return this.request("PATCH", requestUrl, data, additionalHeaders || {});
      });
    }
    put(requestUrl, data, additionalHeaders) {
      return __awaiter(this, undefined, undefined, function* () {
        return this.request("PUT", requestUrl, data, additionalHeaders || {});
      });
    }
    head(requestUrl, additionalHeaders) {
      return __awaiter(this, undefined, undefined, function* () {
        return this.request("HEAD", requestUrl, null, additionalHeaders || {});
      });
    }
    sendStream(verb, requestUrl, stream, additionalHeaders) {
      return __awaiter(this, undefined, undefined, function* () {
        return this.request(verb, requestUrl, stream, additionalHeaders);
      });
    }
    getJson(requestUrl, additionalHeaders = {}) {
      return __awaiter(this, undefined, undefined, function* () {
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        const res = yield this.get(requestUrl, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
      });
    }
    postJson(requestUrl, obj, additionalHeaders = {}) {
      return __awaiter(this, undefined, undefined, function* () {
        const data = JSON.stringify(obj, null, 2);
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
        const res = yield this.post(requestUrl, data, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
      });
    }
    putJson(requestUrl, obj, additionalHeaders = {}) {
      return __awaiter(this, undefined, undefined, function* () {
        const data = JSON.stringify(obj, null, 2);
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
        const res = yield this.put(requestUrl, data, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
      });
    }
    patchJson(requestUrl, obj, additionalHeaders = {}) {
      return __awaiter(this, undefined, undefined, function* () {
        const data = JSON.stringify(obj, null, 2);
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
        const res = yield this.patch(requestUrl, data, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
      });
    }
    request(verb, requestUrl, data, headers) {
      return __awaiter(this, undefined, undefined, function* () {
        if (this._disposed) {
          throw new Error("Client has already been disposed.");
        }
        const parsedUrl = new URL(requestUrl);
        let info = this._prepareRequest(verb, parsedUrl, headers);
        const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb) ? this._maxRetries + 1 : 1;
        let numTries = 0;
        let response;
        do {
          response = yield this.requestRaw(info, data);
          if (response && response.message && response.message.statusCode === HttpCodes.Unauthorized) {
            let authenticationHandler;
            for (const handler of this.handlers) {
              if (handler.canHandleAuthentication(response)) {
                authenticationHandler = handler;
                break;
              }
            }
            if (authenticationHandler) {
              return authenticationHandler.handleAuthentication(this, info, data);
            } else {
              return response;
            }
          }
          let redirectsRemaining = this._maxRedirects;
          while (response.message.statusCode && HttpRedirectCodes.includes(response.message.statusCode) && this._allowRedirects && redirectsRemaining > 0) {
            const redirectUrl = response.message.headers["location"];
            if (!redirectUrl) {
              break;
            }
            const parsedRedirectUrl = new URL(redirectUrl);
            if (parsedUrl.protocol === "https:" && parsedUrl.protocol !== parsedRedirectUrl.protocol && !this._allowRedirectDowngrade) {
              throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.");
            }
            yield response.readBody();
            if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {
              for (const header in headers) {
                if (header.toLowerCase() === "authorization") {
                  delete headers[header];
                }
              }
            }
            info = this._prepareRequest(verb, parsedRedirectUrl, headers);
            response = yield this.requestRaw(info, data);
            redirectsRemaining--;
          }
          if (!response.message.statusCode || !HttpResponseRetryCodes.includes(response.message.statusCode)) {
            return response;
          }
          numTries += 1;
          if (numTries < maxTries) {
            yield response.readBody();
            yield this._performExponentialBackoff(numTries);
          }
        } while (numTries < maxTries);
        return response;
      });
    }
    dispose() {
      if (this._agent) {
        this._agent.destroy();
      }
      this._disposed = true;
    }
    requestRaw(info, data) {
      return __awaiter(this, undefined, undefined, function* () {
        return new Promise((resolve, reject) => {
          function callbackForResult(err, res) {
            if (err) {
              reject(err);
            } else if (!res) {
              reject(new Error("Unknown error"));
            } else {
              resolve(res);
            }
          }
          this.requestRawWithCallback(info, data, callbackForResult);
        });
      });
    }
    requestRawWithCallback(info, data, onResult) {
      if (typeof data === "string") {
        if (!info.options.headers) {
          info.options.headers = {};
        }
        info.options.headers["Content-Length"] = Buffer.byteLength(data, "utf8");
      }
      let callbackCalled = false;
      function handleResult(err, res) {
        if (!callbackCalled) {
          callbackCalled = true;
          onResult(err, res);
        }
      }
      const req = info.httpModule.request(info.options, (msg) => {
        const res = new HttpClientResponse(msg);
        handleResult(undefined, res);
      });
      let socket;
      req.on("socket", (sock) => {
        socket = sock;
      });
      req.setTimeout(this._socketTimeout || 3 * 60000, () => {
        if (socket) {
          socket.end();
        }
        handleResult(new Error(`Request timeout: ${info.options.path}`));
      });
      req.on("error", function(err) {
        handleResult(err);
      });
      if (data && typeof data === "string") {
        req.write(data, "utf8");
      }
      if (data && typeof data !== "string") {
        data.on("close", function() {
          req.end();
        });
        data.pipe(req);
      } else {
        req.end();
      }
    }
    getAgent(serverUrl) {
      const parsedUrl = new URL(serverUrl);
      return this._getAgent(parsedUrl);
    }
    _prepareRequest(method, requestUrl, headers) {
      const info = {};
      info.parsedUrl = requestUrl;
      const usingSsl = info.parsedUrl.protocol === "https:";
      info.httpModule = usingSsl ? https : http;
      const defaultPort = usingSsl ? 443 : 80;
      info.options = {};
      info.options.host = info.parsedUrl.hostname;
      info.options.port = info.parsedUrl.port ? parseInt(info.parsedUrl.port) : defaultPort;
      info.options.path = (info.parsedUrl.pathname || "") + (info.parsedUrl.search || "");
      info.options.method = method;
      info.options.headers = this._mergeHeaders(headers);
      if (this.userAgent != null) {
        info.options.headers["user-agent"] = this.userAgent;
      }
      info.options.agent = this._getAgent(info.parsedUrl);
      if (this.handlers) {
        for (const handler of this.handlers) {
          handler.prepareRequest(info.options);
        }
      }
      return info;
    }
    _mergeHeaders(headers) {
      if (this.requestOptions && this.requestOptions.headers) {
        return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));
      }
      return lowercaseKeys(headers || {});
    }
    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {
      let clientHeader;
      if (this.requestOptions && this.requestOptions.headers) {
        clientHeader = lowercaseKeys(this.requestOptions.headers)[header];
      }
      return additionalHeaders[header] || clientHeader || _default;
    }
    _getAgent(parsedUrl) {
      let agent;
      const proxyUrl = pm.getProxyUrl(parsedUrl);
      const useProxy = proxyUrl && proxyUrl.hostname;
      if (this._keepAlive && useProxy) {
        agent = this._proxyAgent;
      }
      if (this._keepAlive && !useProxy) {
        agent = this._agent;
      }
      if (agent) {
        return agent;
      }
      const usingSsl = parsedUrl.protocol === "https:";
      let maxSockets = 100;
      if (this.requestOptions) {
        maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;
      }
      if (proxyUrl && proxyUrl.hostname) {
        const agentOptions = {
          maxSockets,
          keepAlive: this._keepAlive,
          proxy: Object.assign(Object.assign({}, (proxyUrl.username || proxyUrl.password) && {
            proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`
          }), { host: proxyUrl.hostname, port: proxyUrl.port })
        };
        let tunnelAgent;
        const overHttps = proxyUrl.protocol === "https:";
        if (usingSsl) {
          tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;
        } else {
          tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;
        }
        agent = tunnelAgent(agentOptions);
        this._proxyAgent = agent;
      }
      if (this._keepAlive && !agent) {
        const options = { keepAlive: this._keepAlive, maxSockets };
        agent = usingSsl ? new https.Agent(options) : new http.Agent(options);
        this._agent = agent;
      }
      if (!agent) {
        agent = usingSsl ? https.globalAgent : http.globalAgent;
      }
      if (usingSsl && this._ignoreSslError) {
        agent.options = Object.assign(agent.options || {}, {
          rejectUnauthorized: false
        });
      }
      return agent;
    }
    _performExponentialBackoff(retryNumber) {
      return __awaiter(this, undefined, undefined, function* () {
        retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);
        const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);
        return new Promise((resolve) => setTimeout(() => resolve(), ms));
      });
    }
    _processResponse(res, options) {
      return __awaiter(this, undefined, undefined, function* () {
        return new Promise((resolve, reject) => __awaiter(this, undefined, undefined, function* () {
          const statusCode = res.message.statusCode || 0;
          const response = {
            statusCode,
            result: null,
            headers: {}
          };
          if (statusCode === HttpCodes.NotFound) {
            resolve(response);
          }
          function dateTimeDeserializer(key, value) {
            if (typeof value === "string") {
              const a = new Date(value);
              if (!isNaN(a.valueOf())) {
                return a;
              }
            }
            return value;
          }
          let obj;
          let contents;
          try {
            contents = yield res.readBody();
            if (contents && contents.length > 0) {
              if (options && options.deserializeDates) {
                obj = JSON.parse(contents, dateTimeDeserializer);
              } else {
                obj = JSON.parse(contents);
              }
              response.result = obj;
            }
            response.headers = res.message.headers;
          } catch (err) {
          }
          if (statusCode > 299) {
            let msg;
            if (obj && obj.message) {
              msg = obj.message;
            } else if (contents && contents.length > 0) {
              msg = contents;
            } else {
              msg = `Failed request: (${statusCode})`;
            }
            const err = new HttpClientError(msg, statusCode);
            err.result = response.result;
            reject(err);
          } else {
            resolve(response);
          }
        }));
      });
    }
  }
  exports.HttpClient = HttpClient;
  var lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => (c[k.toLowerCase()] = obj[k], c), {});
});

// node_modules/@actions/http-client/lib/auth.js
var require_auth = __commonJS((exports) => {
  var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = undefined;

  class BasicCredentialHandler {
    constructor(username, password) {
      this.username = username;
      this.password = password;
    }
    prepareRequest(options) {
      if (!options.headers) {
        throw Error("The request has no headers");
      }
      options.headers["Authorization"] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString("base64")}`;
    }
    canHandleAuthentication() {
      return false;
    }
    handleAuthentication() {
      return __awaiter(this, undefined, undefined, function* () {
        throw new Error("not implemented");
      });
    }
  }
  exports.BasicCredentialHandler = BasicCredentialHandler;

  class BearerCredentialHandler {
    constructor(token) {
      this.token = token;
    }
    prepareRequest(options) {
      if (!options.headers) {
        throw Error("The request has no headers");
      }
      options.headers["Authorization"] = `Bearer ${this.token}`;
    }
    canHandleAuthentication() {
      return false;
    }
    handleAuthentication() {
      return __awaiter(this, undefined, undefined, function* () {
        throw new Error("not implemented");
      });
    }
  }
  exports.BearerCredentialHandler = BearerCredentialHandler;

  class PersonalAccessTokenCredentialHandler {
    constructor(token) {
      this.token = token;
    }
    prepareRequest(options) {
      if (!options.headers) {
        throw Error("The request has no headers");
      }
      options.headers["Authorization"] = `Basic ${Buffer.from(`PAT:${this.token}`).toString("base64")}`;
    }
    canHandleAuthentication() {
      return false;
    }
    handleAuthentication() {
      return __awaiter(this, undefined, undefined, function* () {
        throw new Error("not implemented");
      });
    }
  }
  exports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;
});

// node_modules/@actions/core/lib/oidc-utils.js
var require_oidc_utils = __commonJS((exports) => {
  var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.OidcClient = undefined;
  var http_client_1 = require_lib();
  var auth_1 = require_auth();
  var core_1 = require_core();

  class OidcClient {
    static createHttpClient(allowRetry = true, maxRetry = 10) {
      const requestOptions = {
        allowRetries: allowRetry,
        maxRetries: maxRetry
      };
      return new http_client_1.HttpClient("actions/oidc-client", [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);
    }
    static getRequestToken() {
      const token = process.env["ACTIONS_ID_TOKEN_REQUEST_TOKEN"];
      if (!token) {
        throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable");
      }
      return token;
    }
    static getIDTokenUrl() {
      const runtimeUrl = process.env["ACTIONS_ID_TOKEN_REQUEST_URL"];
      if (!runtimeUrl) {
        throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable");
      }
      return runtimeUrl;
    }
    static getCall(id_token_url) {
      var _a;
      return __awaiter(this, undefined, undefined, function* () {
        const httpclient = OidcClient.createHttpClient();
        const res = yield httpclient.getJson(id_token_url).catch((error) => {
          throw new Error(`Failed to get ID Token. \n 
        Error Code : ${error.statusCode}\n 
        Error Message: ${error.result.message}`);
        });
        const id_token = (_a = res.result) === null || _a === undefined ? undefined : _a.value;
        if (!id_token) {
          throw new Error("Response json body do not have ID Token field");
        }
        return id_token;
      });
    }
    static getIDToken(audience) {
      return __awaiter(this, undefined, undefined, function* () {
        try {
          let id_token_url = OidcClient.getIDTokenUrl();
          if (audience) {
            const encodedAudience = encodeURIComponent(audience);
            id_token_url = `${id_token_url}&audience=${encodedAudience}`;
          }
          core_1.debug(`ID token url is ${id_token_url}`);
          const id_token = yield OidcClient.getCall(id_token_url);
          core_1.setSecret(id_token);
          return id_token;
        } catch (error) {
          throw new Error(`Error message: ${error.message}`);
        }
      });
    }
  }
  exports.OidcClient = OidcClient;
});

// node_modules/@actions/core/lib/summary.js
var require_summary = __commonJS((exports) => {
  var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = undefined;
  var os_1 = __require("os");
  var fs_1 = __require("fs");
  var { access, appendFile, writeFile } = fs_1.promises;
  exports.SUMMARY_ENV_VAR = "GITHUB_STEP_SUMMARY";
  exports.SUMMARY_DOCS_URL = "https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary";

  class Summary {
    constructor() {
      this._buffer = "";
    }
    filePath() {
      return __awaiter(this, undefined, undefined, function* () {
        if (this._filePath) {
          return this._filePath;
        }
        const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];
        if (!pathFromEnv) {
          throw new Error(`Unable to find environment variable for \$${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);
        }
        try {
          yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);
        } catch (_a) {
          throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);
        }
        this._filePath = pathFromEnv;
        return this._filePath;
      });
    }
    wrap(tag, content, attrs = {}) {
      const htmlAttrs = Object.entries(attrs).map(([key, value]) => ` ${key}="${value}"`).join("");
      if (!content) {
        return `<${tag}${htmlAttrs}>`;
      }
      return `<${tag}${htmlAttrs}>${content}</${tag}>`;
    }
    write(options) {
      return __awaiter(this, undefined, undefined, function* () {
        const overwrite = !!(options === null || options === undefined ? undefined : options.overwrite);
        const filePath = yield this.filePath();
        const writeFunc = overwrite ? writeFile : appendFile;
        yield writeFunc(filePath, this._buffer, { encoding: "utf8" });
        return this.emptyBuffer();
      });
    }
    clear() {
      return __awaiter(this, undefined, undefined, function* () {
        return this.emptyBuffer().write({ overwrite: true });
      });
    }
    stringify() {
      return this._buffer;
    }
    isEmptyBuffer() {
      return this._buffer.length === 0;
    }
    emptyBuffer() {
      this._buffer = "";
      return this;
    }
    addRaw(text, addEOL = false) {
      this._buffer += text;
      return addEOL ? this.addEOL() : this;
    }
    addEOL() {
      return this.addRaw(os_1.EOL);
    }
    addCodeBlock(code, lang) {
      const attrs = Object.assign({}, lang && { lang });
      const element = this.wrap("pre", this.wrap("code", code), attrs);
      return this.addRaw(element).addEOL();
    }
    addList(items, ordered = false) {
      const tag = ordered ? "ol" : "ul";
      const listItems = items.map((item) => this.wrap("li", item)).join("");
      const element = this.wrap(tag, listItems);
      return this.addRaw(element).addEOL();
    }
    addTable(rows) {
      const tableBody = rows.map((row) => {
        const cells = row.map((cell) => {
          if (typeof cell === "string") {
            return this.wrap("td", cell);
          }
          const { header, data, colspan, rowspan } = cell;
          const tag = header ? "th" : "td";
          const attrs = Object.assign(Object.assign({}, colspan && { colspan }), rowspan && { rowspan });
          return this.wrap(tag, data, attrs);
        }).join("");
        return this.wrap("tr", cells);
      }).join("");
      const element = this.wrap("table", tableBody);
      return this.addRaw(element).addEOL();
    }
    addDetails(label, content) {
      const element = this.wrap("details", this.wrap("summary", label) + content);
      return this.addRaw(element).addEOL();
    }
    addImage(src, alt, options) {
      const { width, height } = options || {};
      const attrs = Object.assign(Object.assign({}, width && { width }), height && { height });
      const element = this.wrap("img", null, Object.assign({ src, alt }, attrs));
      return this.addRaw(element).addEOL();
    }
    addHeading(text, level) {
      const tag = `h${level}`;
      const allowedTag = ["h1", "h2", "h3", "h4", "h5", "h6"].includes(tag) ? tag : "h1";
      const element = this.wrap(allowedTag, text);
      return this.addRaw(element).addEOL();
    }
    addSeparator() {
      const element = this.wrap("hr", null);
      return this.addRaw(element).addEOL();
    }
    addBreak() {
      const element = this.wrap("br", null);
      return this.addRaw(element).addEOL();
    }
    addQuote(text, cite) {
      const attrs = Object.assign({}, cite && { cite });
      const element = this.wrap("blockquote", text, attrs);
      return this.addRaw(element).addEOL();
    }
    addLink(text, href) {
      const element = this.wrap("a", text, { href });
      return this.addRaw(element).addEOL();
    }
  }
  var _summary = new Summary;
  exports.markdownSummary = _summary;
  exports.summary = _summary;
});

// node_modules/@actions/core/lib/path-utils.js
var require_path_utils = __commonJS((exports) => {
  var toPosixPath = function(pth) {
    return pth.replace(/[\\]/g, "/");
  };
  var toWin32Path = function(pth) {
    return pth.replace(/[/]/g, "\\");
  };
  var toPlatformPath = function(pth) {
    return pth.replace(/[/\\]/g, path.sep);
  };
  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() {
      return m[k];
    } });
  } : function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    o[k2] = m[k];
  });
  var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
  } : function(o, v) {
    o["default"] = v;
  });
  var __importStar = exports && exports.__importStar || function(mod) {
    if (mod && mod.__esModule)
      return mod;
    var result = {};
    if (mod != null) {
      for (var k in mod)
        if (k !== "default" && Object.hasOwnProperty.call(mod, k))
          __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = undefined;
  var path = __importStar(__require("path"));
  exports.toPosixPath = toPosixPath;
  exports.toWin32Path = toWin32Path;
  exports.toPlatformPath = toPlatformPath;
});

// node_modules/@actions/core/lib/core.js
var require_core = __commonJS((exports) => {
  var exportVariable = function(name, val) {
    const convertedVal = utils_1.toCommandValue(val);
    process.env[name] = convertedVal;
    const filePath = process.env["GITHUB_ENV"] || "";
    if (filePath) {
      return file_command_1.issueFileCommand("ENV", file_command_1.prepareKeyValueMessage(name, val));
    }
    command_1.issueCommand("set-env", { name }, convertedVal);
  };
  var setSecret = function(secret) {
    command_1.issueCommand("add-mask", {}, secret);
  };
  var addPath = function(inputPath) {
    const filePath = process.env["GITHUB_PATH"] || "";
    if (filePath) {
      file_command_1.issueFileCommand("PATH", inputPath);
    } else {
      command_1.issueCommand("add-path", {}, inputPath);
    }
    process.env["PATH"] = `${inputPath}${path.delimiter}${process.env["PATH"]}`;
  };
  var getInput = function(name, options) {
    const val = process.env[`INPUT_${name.replace(/ /g, "_").toUpperCase()}`] || "";
    if (options && options.required && !val) {
      throw new Error(`Input required and not supplied: ${name}`);
    }
    if (options && options.trimWhitespace === false) {
      return val;
    }
    return val.trim();
  };
  var getMultilineInput = function(name, options) {
    const inputs = getInput(name, options).split("\n").filter((x) => x !== "");
    if (options && options.trimWhitespace === false) {
      return inputs;
    }
    return inputs.map((input) => input.trim());
  };
  var getBooleanInput = function(name, options) {
    const trueValue = ["true", "True", "TRUE"];
    const falseValue = ["false", "False", "FALSE"];
    const val = getInput(name, options);
    if (trueValue.includes(val))
      return true;
    if (falseValue.includes(val))
      return false;
    throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${name}\n` + `Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
  };
  var setOutput = function(name, value) {
    const filePath = process.env["GITHUB_OUTPUT"] || "";
    if (filePath) {
      return file_command_1.issueFileCommand("OUTPUT", file_command_1.prepareKeyValueMessage(name, value));
    }
    process.stdout.write(os.EOL);
    command_1.issueCommand("set-output", { name }, utils_1.toCommandValue(value));
  };
  var setCommandEcho = function(enabled) {
    command_1.issue("echo", enabled ? "on" : "off");
  };
  var setFailed = function(message) {
    process.exitCode = ExitCode.Failure;
    error(message);
  };
  var isDebug = function() {
    return process.env["RUNNER_DEBUG"] === "1";
  };
  var debug = function(message) {
    command_1.issueCommand("debug", {}, message);
  };
  var error = function(message, properties = {}) {
    command_1.issueCommand("error", utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
  };
  var warning = function(message, properties = {}) {
    command_1.issueCommand("warning", utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
  };
  var notice = function(message, properties = {}) {
    command_1.issueCommand("notice", utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
  };
  var info = function(message) {
    process.stdout.write(message + os.EOL);
  };
  var startGroup = function(name) {
    command_1.issue("group", name);
  };
  var endGroup = function() {
    command_1.issue("endgroup");
  };
  var group = function(name, fn) {
    return __awaiter(this, undefined, undefined, function* () {
      startGroup(name);
      let result;
      try {
        result = yield fn();
      } finally {
        endGroup();
      }
      return result;
    });
  };
  var saveState = function(name, value) {
    const filePath = process.env["GITHUB_STATE"] || "";
    if (filePath) {
      return file_command_1.issueFileCommand("STATE", file_command_1.prepareKeyValueMessage(name, value));
    }
    command_1.issueCommand("save-state", { name }, utils_1.toCommandValue(value));
  };
  var getState = function(name) {
    return process.env[`STATE_${name}`] || "";
  };
  var getIDToken = function(aud) {
    return __awaiter(this, undefined, undefined, function* () {
      return yield oidc_utils_1.OidcClient.getIDToken(aud);
    });
  };
  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() {
      return m[k];
    } });
  } : function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    o[k2] = m[k];
  });
  var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
  } : function(o, v) {
    o["default"] = v;
  });
  var __importStar = exports && exports.__importStar || function(mod) {
    if (mod && mod.__esModule)
      return mod;
    var result = {};
    if (mod != null) {
      for (var k in mod)
        if (k !== "default" && Object.hasOwnProperty.call(mod, k))
          __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
  };
  var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = undefined;
  var command_1 = require_command();
  var file_command_1 = require_file_command();
  var utils_1 = require_utils();
  var os = __importStar(__require("os"));
  var path = __importStar(__require("path"));
  var oidc_utils_1 = require_oidc_utils();
  var ExitCode;
  (function(ExitCode2) {
    ExitCode2[ExitCode2["Success"] = 0] = "Success";
    ExitCode2[ExitCode2["Failure"] = 1] = "Failure";
  })(ExitCode = exports.ExitCode || (exports.ExitCode = {}));
  exports.exportVariable = exportVariable;
  exports.setSecret = setSecret;
  exports.addPath = addPath;
  exports.getInput = getInput;
  exports.getMultilineInput = getMultilineInput;
  exports.getBooleanInput = getBooleanInput;
  exports.setOutput = setOutput;
  exports.setCommandEcho = setCommandEcho;
  exports.setFailed = setFailed;
  exports.isDebug = isDebug;
  exports.debug = debug;
  exports.error = error;
  exports.warning = warning;
  exports.notice = notice;
  exports.info = info;
  exports.startGroup = startGroup;
  exports.endGroup = endGroup;
  exports.group = group;
  exports.saveState = saveState;
  exports.getState = getState;
  exports.getIDToken = getIDToken;
  var summary_1 = require_summary();
  Object.defineProperty(exports, "summary", { enumerable: true, get: function() {
    return summary_1.summary;
  } });
  var summary_2 = require_summary();
  Object.defineProperty(exports, "markdownSummary", { enumerable: true, get: function() {
    return summary_2.markdownSummary;
  } });
  var path_utils_1 = require_path_utils();
  Object.defineProperty(exports, "toPosixPath", { enumerable: true, get: function() {
    return path_utils_1.toPosixPath;
  } });
  Object.defineProperty(exports, "toWin32Path", { enumerable: true, get: function() {
    return path_utils_1.toWin32Path;
  } });
  Object.defineProperty(exports, "toPlatformPath", { enumerable: true, get: function() {
    return path_utils_1.toPlatformPath;
  } });
});

// node_modules/@octokit-next/endpoint/lib/util/lowercase-keys.js
function lowercaseKeys(object) {
  if (!object) {
    return {};
  }
  return Object.keys(object).reduce((newObj, key) => {
    newObj[key.toLowerCase()] = object[key];
    return newObj;
  }, {});
}
var init_lowercase_keys = __esm(() => {
});

// node_modules/is-plain-obj/index.js
function isPlainObject(value) {
  if (typeof value !== "object" || value === null) {
    return false;
  }
  const prototype = Object.getPrototypeOf(value);
  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);
}
var init_is_plain_obj = __esm(() => {
});

// node_modules/@octokit-next/endpoint/lib/util/merge-deep.js
function mergeDeep(defaults, options) {
  const result = Object.assign({}, defaults);
  Object.keys(options).forEach((key) => {
    if (isPlainObject(options[key])) {
      if (!(key in defaults))
        Object.assign(result, { [key]: options[key] });
      else
        result[key] = mergeDeep(defaults[key], options[key]);
    } else {
      Object.assign(result, { [key]: options[key] });
    }
  });
  return result;
}
var init_merge_deep = __esm(() => {
  init_is_plain_obj();
});

// node_modules/@octokit-next/endpoint/lib/util/remove-undefined-properties.js
function removeUndefinedProperties(obj) {
  for (const key in obj) {
    if (obj[key] === undefined) {
      delete obj[key];
    }
  }
  return obj;
}
var init_remove_undefined_properties = __esm(() => {
});

// node_modules/@octokit-next/endpoint/lib/merge.js
function merge(defaults, route, options) {
  if (typeof route === "string") {
    let [method, url] = route.split(" ");
    options = Object.assign(url ? { method, url } : { url: method }, options);
  } else {
    options = Object.assign({}, route);
  }
  options.headers = lowercaseKeys(options.headers);
  removeUndefinedProperties(options);
  removeUndefinedProperties(options.headers);
  const mergedOptions = mergeDeep(defaults || {}, options);
  if (defaults && defaults.mediaType.previews.length) {
    mergedOptions.mediaType.previews = defaults.mediaType.previews.filter((preview) => !mergedOptions.mediaType.previews.includes(preview)).concat(mergedOptions.mediaType.previews);
  }
  mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map((preview) => preview.replace(/-preview/, ""));
  return mergedOptions;
}
var init_merge = __esm(() => {
  init_lowercase_keys();
  init_merge_deep();
  init_remove_undefined_properties();
});

// node_modules/@octokit-next/endpoint/lib/util/add-query-parameters.js
function addQueryParameters(url, parameters) {
  const separator = /\?/.test(url) ? "&" : "?";
  const names = Object.keys(parameters);
  if (names.length === 0) {
    return url;
  }
  const query = names.map((name) => {
    if (name === "q") {
      return "q=" + parameters.q.split("+").map(encodeURIComponent).join("+");
    }
    return `${name}=${encodeURIComponent(parameters[name])}`;
  }).join("&");
  return url + separator + query;
}
var init_add_query_parameters = __esm(() => {
});

// node_modules/@octokit-next/endpoint/lib/util/extract-url-variable-names.js
function extractUrlVariableNames(url) {
  const matches = url.match(urlVariableRegex);
  if (!matches) {
    return [];
  }
  return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);
}
var removeNonChars, urlVariableRegex;
var init_extract_url_variable_names = __esm(() => {
  removeNonChars = function(variableName) {
    return variableName.replace(/^\W+|\W+$/g, "").split(/,/);
  };
  urlVariableRegex = /\{[^}]+\}/g;
});

// node_modules/@octokit-next/endpoint/lib/util/omit.js
function omit(object, keysToOmit) {
  return Object.keys(object).filter((option) => !keysToOmit.includes(option)).reduce((obj, key) => {
    obj[key] = object[key];
    return obj;
  }, {});
}
var init_omit = __esm(() => {
});

// node_modules/@octokit-next/endpoint/lib/util/url-template.js
function parseUrl(template) {
  return {
    expand: expand.bind(null, template)
  };
}
var encodeReserved, encodeUnreserved, encodeValue, isDefined, isKeyOperator, getValues, expand;
var init_url_template = __esm(() => {
  encodeReserved = function(str) {
    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function(part) {
      if (!/%[0-9A-Fa-f]/.test(part)) {
        part = encodeURI(part).replace(/%5B/g, "[").replace(/%5D/g, "]");
      }
      return part;
    }).join("");
  };
  encodeUnreserved = function(str) {
    return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {
      return "%" + c.charCodeAt(0).toString(16).toUpperCase();
    });
  };
  encodeValue = function(operator, value, key) {
    value = operator === "+" || operator === "#" ? encodeReserved(value) : encodeUnreserved(value);
    if (key) {
      return encodeUnreserved(key) + "=" + value;
    } else {
      return value;
    }
  };
  isDefined = function(value) {
    return value !== undefined && value !== null;
  };
  isKeyOperator = function(operator) {
    return operator === ";" || operator === "&" || operator === "?";
  };
  getValues = function(context, operator, key, modifier) {
    var value = context[key], result = [];
    if (isDefined(value) && value !== "") {
      if (typeof value === "string" || typeof value === "number" || typeof value === "boolean") {
        value = value.toString();
        if (modifier && modifier !== "*") {
          value = value.substring(0, parseInt(modifier, 10));
        }
        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : ""));
      } else {
        if (modifier === "*") {
          if (Array.isArray(value)) {
            value.filter(isDefined).forEach(function(value2) {
              result.push(encodeValue(operator, value2, isKeyOperator(operator) ? key : ""));
            });
          } else {
            Object.keys(value).forEach(function(k) {
              if (isDefined(value[k])) {
                result.push(encodeValue(operator, value[k], k));
              }
            });
          }
        } else {
          const tmp = [];
          if (Array.isArray(value)) {
            value.filter(isDefined).forEach(function(value2) {
              tmp.push(encodeValue(operator, value2));
            });
          } else {
            Object.keys(value).forEach(function(k) {
              if (isDefined(value[k])) {
                tmp.push(encodeUnreserved(k));
                tmp.push(encodeValue(operator, value[k].toString()));
              }
            });
          }
          if (isKeyOperator(operator)) {
            result.push(encodeUnreserved(key) + "=" + tmp.join(","));
          } else if (tmp.length !== 0) {
            result.push(tmp.join(","));
          }
        }
      }
    } else {
      if (operator === ";") {
        if (isDefined(value)) {
          result.push(encodeUnreserved(key));
        }
      } else if (value === "" && (operator === "&" || operator === "?")) {
        result.push(encodeUnreserved(key) + "=");
      } else if (value === "") {
        result.push("");
      }
    }
    return result;
  };
  expand = function(template, context) {
    var operators = ["+", "#", ".", "/", ";", "?", "&"];
    return template.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function(_, expression, literal) {
      if (expression) {
        let operator = "";
        const values = [];
        if (operators.indexOf(expression.charAt(0)) !== -1) {
          operator = expression.charAt(0);
          expression = expression.substr(1);
        }
        expression.split(/,/g).forEach(function(variable) {
          var tmp = /([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);
          values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));
        });
        if (operator && operator !== "+") {
          var separator = ",";
          if (operator === "?") {
            separator = "&";
          } else if (operator !== "#") {
            separator = operator;
          }
          return (values.length !== 0 ? operator : "") + values.join(separator);
        } else {
          return values.join(",");
        }
      } else {
        return encodeReserved(literal);
      }
    });
  };
});

// node_modules/@octokit-next/endpoint/lib/parse.js
function parse(options) {
  let method = options.method.toUpperCase();
  let url = (options.url || "/").replace(/:([a-z]\w+)/g, "{$1}");
  let headers = Object.assign({}, options.headers);
  let body;
  let parameters = omit(options, [
    "method",
    "baseUrl",
    "url",
    "headers",
    "request",
    "mediaType"
  ]);
  const urlVariableNames = extractUrlVariableNames(url);
  url = parseUrl(url).expand(parameters);
  if (!/^http/.test(url)) {
    url = options.baseUrl + url;
  }
  const omittedParameters = Object.keys(options).filter((option) => urlVariableNames.includes(option)).concat("baseUrl");
  const remainingParameters = omit(parameters, omittedParameters);
  const isBinaryRequest = /application\/octet-stream/i.test(headers.accept);
  if (!isBinaryRequest) {
    if (options.mediaType.format) {
      headers.accept = headers.accept.split(/,/).map((preview) => preview.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/, `application/vnd\$1\$2.${options.mediaType.format}`)).join(",");
    }
    if (options.mediaType.previews.length) {
      const previewsFromAcceptHeader = headers.accept.match(/[\w-]+(?=-preview)/g) || [];
      headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map((preview) => {
        const format = options.mediaType.format ? `.${options.mediaType.format}` : "+json";
        return `application/vnd.github.${preview}-preview${format}`;
      }).join(",");
    }
  }
  if (["GET", "HEAD"].includes(method)) {
    url = addQueryParameters(url, remainingParameters);
  } else {
    if ("data" in remainingParameters) {
      body = remainingParameters.data;
    } else {
      if (Object.keys(remainingParameters).length) {
        body = remainingParameters;
      }
    }
  }
  if (!headers["content-type"] && typeof body !== "undefined") {
    headers["content-type"] = "application/json; charset=utf-8";
  }
  if (["PATCH", "PUT"].includes(method) && typeof body === "undefined") {
    body = "";
  }
  return Object.assign({ method, url, headers }, typeof body !== "undefined" ? { body } : null, options.request ? { request: options.request } : null);
}
var init_parse = __esm(() => {
  init_add_query_parameters();
  init_extract_url_variable_names();
  init_omit();
  init_url_template();
});

// node_modules/@octokit-next/endpoint/lib/endpoint-with-defaults.js
function endpointWithDefaults(defaults, route, options) {
  return parse(merge(defaults, route, options));
}
var init_endpoint_with_defaults = __esm(() => {
  init_merge();
  init_parse();
});

// node_modules/@octokit-next/endpoint/lib/with-defaults.js
function withDefaults(oldDefaults, newDefaults) {
  const DEFAULTS = merge(oldDefaults, newDefaults);
  const endpoint = endpointWithDefaults.bind(null, DEFAULTS);
  return Object.assign(endpoint, {
    DEFAULTS,
    defaults: withDefaults.bind(null, DEFAULTS),
    merge: merge.bind(null, DEFAULTS),
    parse
  });
}
var init_with_defaults = __esm(() => {
  init_endpoint_with_defaults();
  init_merge();
  init_parse();
});

// node_modules/universal-user-agent/index.js
function getUserAgent() {
  if (typeof navigator === "object" && ("userAgent" in navigator)) {
    return navigator.userAgent;
  }
  if (typeof process === "object" && ("version" in process)) {
    return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;
  }
  return "<environment undetectable>";
}
var init_universal_user_agent = __esm(() => {
});

// node_modules/@octokit-next/endpoint/lib/version.js
var VERSION;
var init_version = __esm(() => {
  VERSION = "2.7.1";
});

// node_modules/@octokit-next/endpoint/lib/defaults.js
var userAgent, DEFAULTS;
var init_defaults = __esm(() => {
  init_universal_user_agent();
  init_version();
  userAgent = `octokit-next-endpoint.js/${VERSION} ${getUserAgent()}`;
  DEFAULTS = {
    method: "GET",
    baseUrl: "https://api.github.com",
    headers: {
      accept: "application/vnd.github.v3+json",
      "user-agent": userAgent
    },
    mediaType: {
      format: "",
      previews: []
    }
  };
});

// node_modules/@octokit-next/endpoint/index.js
var endpoint;
var init_endpoint = __esm(() => {
  init_with_defaults();
  init_defaults();
  init_version();
  endpoint = withDefaults(null, DEFAULTS);
});

// node_modules/@octokit-next/request/version.js
var VERSION2;
var init_version2 = __esm(() => {
  VERSION2 = "0.0.0-development";
});

// node_modules/is-plain-object/dist/is-plain-object.mjs
var isObject, isPlainObject2;
var init_is_plain_object = __esm(() => {
  isObject = function(o) {
    return Object.prototype.toString.call(o) === "[object Object]";
  };
  isPlainObject2 = function(o) {
    var ctor, prot;
    if (isObject(o) === false)
      return false;
    ctor = o.constructor;
    if (ctor === undefined)
      return true;
    prot = ctor.prototype;
    if (isObject(prot) === false)
      return false;
    if (prot.hasOwnProperty("isPrototypeOf") === false) {
      return false;
    }
    return true;
  };
  /*!
   * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   */
});

// node_modules/@octokit-next/request-error/index.js
class RequestError extends Error {
  name;
  status;
  request;
  response;
  constructor(message, statusCode, options) {
    super(message);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
    this.name = "HttpError";
    this.status = statusCode;
    if ("response" in options) {
      this.response = options.response;
    }
    const requestCopy = { ...options.request };
    if (options.request.headers.authorization) {
      requestCopy.headers = {
        ...options.request.headers,
        authorization: options.request.headers.authorization.replace(/ .*$/, " [REDACTED]")
      };
    }
    requestCopy.url = requestCopy.url.replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]").replace(/\baccess_token=\w+/g, "access_token=[REDACTED]");
    this.request = requestCopy;
  }
}
var init_request_error = __esm(() => {
});

// node_modules/@octokit-next/request/get-buffer-response.js
function getBufferResponse(response) {
  return response.arrayBuffer();
}
var init_get_buffer_response = __esm(() => {
});

// node_modules/@octokit-next/request/fetch-wrapper.js
async function getResponseData(response) {
  const contentType = response.headers.get("content-type");
  if (/application\/json/.test(contentType)) {
    return response.json();
  }
  if (!contentType || /^text\/|charset=utf-8$/.test(contentType)) {
    return response.text();
  }
  return getBufferResponse(response);
}
function fetchWrapper(requestOptions) {
  const log = requestOptions.request?.log || console;
  if (isPlainObject2(requestOptions.body) || Array.isArray(requestOptions.body)) {
    requestOptions.body = JSON.stringify(requestOptions.body);
  }
  let responseHeaders = {};
  let status;
  let url;
  const { redirect, fetch, ...remainingRequestOptions } = requestOptions.request || {};
  const fetchOptions = {
    method: requestOptions.method,
    body: requestOptions.body,
    headers: requestOptions.headers,
    redirect,
    ...remainingRequestOptions
  };
  const requestOrGlobalFetch = fetch || globalThis.fetch;
  return requestOrGlobalFetch(requestOptions.url, fetchOptions).then(async (response) => {
    url = response.url;
    status = response.status;
    for (const keyAndValue of response.headers) {
      responseHeaders[keyAndValue[0]] = keyAndValue[1];
    }
    if ("deprecation" in responseHeaders) {
      const matches = responseHeaders.link && responseHeaders.link.match(/<([^>]+)>; rel="deprecation"/);
      const deprecationLink = matches && matches.pop();
      log.warn(`[@octokit/request] "${requestOptions.method} ${requestOptions.url}" is deprecated. It is scheduled to be removed on ${responseHeaders.sunset}${deprecationLink ? `. See ${deprecationLink}` : ""}`);
    }
    if (status === 204 || status === 205) {
      return;
    }
    if (requestOptions.method === "HEAD") {
      if (status < 400) {
        return;
      }
      throw new RequestError(response.statusText, status, {
        response: {
          url,
          status,
          headers: responseHeaders,
          data: undefined
        },
        request: requestOptions
      });
    }
    if (status === 304) {
      throw new RequestError("Not modified", status, {
        response: {
          url,
          status,
          headers: responseHeaders,
          data: await getResponseData(response)
        },
        request: requestOptions
      });
    }
    if (status >= 400) {
      const data = await getResponseData(response);
      const error = new RequestError(toErrorMessage(data), status, {
        response: {
          url,
          status,
          headers: responseHeaders,
          data
        },
        request: requestOptions
      });
      throw error;
    }
    return getResponseData(response);
  }).then((data) => {
    return {
      status,
      url,
      headers: responseHeaders,
      data
    };
  }).catch((error) => {
    if (error instanceof RequestError)
      throw error;
    if (error.name === "AbortError")
      throw error;
    throw new RequestError(error.message, 500, {
      request: requestOptions
    });
  });
}
var toErrorMessage;
var init_fetch_wrapper = __esm(() => {
  init_is_plain_object();
  init_request_error();
  init_get_buffer_response();
  toErrorMessage = function(data) {
    if (typeof data === "string")
      return data;
    if ("message" in data) {
      if (Array.isArray(data.errors)) {
        return `${data.message}: ${data.errors.map(JSON.stringify).join(", ")}`;
      }
      return data.message;
    }
    return `Unknown error: ${JSON.stringify(data)}`;
  };
});

// node_modules/@octokit-next/request/with-defaults.js
function withDefaults2(oldEndpoint, newDefaults) {
  const endpoint2 = oldEndpoint.defaults(newDefaults);
  const newApi = function(route, parameters) {
    const endpointOptions = endpoint2.merge(route, parameters);
    if (!endpointOptions.request || !endpointOptions.request.hook) {
      return fetchWrapper(endpoint2.parse(endpointOptions));
    }
    const request = (route2, parameters2) => {
      return fetchWrapper(endpoint2.parse(endpoint2.merge(route2, parameters2)));
    };
    Object.assign(request, {
      endpoint: endpoint2,
      defaults: withDefaults2.bind(null, endpoint2)
    });
    return endpointOptions.request.hook(request, endpointOptions);
  };
  return Object.assign(newApi, {
    endpoint: endpoint2,
    defaults: withDefaults2.bind(null, endpoint2)
  });
}
var init_with_defaults2 = __esm(() => {
  init_fetch_wrapper();
});

// node_modules/@octokit-next/request/index.js
var request;
var init_request = __esm(() => {
  init_endpoint();
  init_universal_user_agent();
  init_version2();
  init_with_defaults2();
  request = withDefaults2(endpoint, {
    headers: {
      "user-agent": `octokit-request.js/${VERSION2} ${getUserAgent()}`
    }
  });
});

// node_modules/@octokit/graphql/version.js
var VERSION3;
var init_version3 = __esm(() => {
  VERSION3 = "0.0.0-development";
});

// node_modules/@octokit/graphql/error.js
class GraphqlResponseError extends Error {
  constructor(request2, headers, response) {
    super(_buildMessageForResponseErrors(response));
    this.request = request2;
    this.headers = headers;
    this.response = response;
    this.name = "GraphqlResponseError";
    this.errors = response.errors;
    this.data = response.data;
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
  }
}
var _buildMessageForResponseErrors;
var init_error = __esm(() => {
  _buildMessageForResponseErrors = function(data) {
    return `Request failed due to following response errors:\n` + data.errors.map((e) => ` - ${e.message}`).join("\n");
  };
});

// node_modules/@octokit/graphql/graphql.js
function graphql(request2, query, options) {
  if (options) {
    if (typeof query === "string" && ("query" in options)) {
      return Promise.reject(new Error(`[@octokit/graphql] "query" cannot be used as variable name`));
    }
    for (const key in options) {
      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key))
        continue;
      return Promise.reject(new Error(`[@octokit/graphql] "${key}" cannot be used as variable name`));
    }
  }
  const parsedOptions = typeof query === "string" ? Object.assign({ query }, options) : query;
  const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {
    if (NON_VARIABLE_OPTIONS.includes(key)) {
      result[key] = parsedOptions[key];
      return result;
    }
    if (!result.variables) {
      result.variables = {};
    }
    result.variables[key] = parsedOptions[key];
    return result;
  }, {});
  const baseUrl = parsedOptions.baseUrl || request2.endpoint.DEFAULTS.baseUrl;
  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {
    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, "/api/graphql");
  }
  return request2(requestOptions).then((response) => {
    if (response.data.errors) {
      const headers = {};
      for (const key of Object.keys(response.headers)) {
        headers[key] = response.headers[key];
      }
      throw new GraphqlResponseError(requestOptions, headers, response.data);
    }
    return response.data.data;
  });
}
var NON_VARIABLE_OPTIONS, FORBIDDEN_VARIABLE_OPTIONS, GHES_V3_SUFFIX_REGEX;
var init_graphql = __esm(() => {
  init_error();
  NON_VARIABLE_OPTIONS = [
    "method",
    "baseUrl",
    "url",
    "headers",
    "request",
    "query",
    "mediaType"
  ];
  FORBIDDEN_VARIABLE_OPTIONS = ["query", "method", "url"];
  GHES_V3_SUFFIX_REGEX = /\/api\/v3\/?$/;
});

// node_modules/@octokit/graphql/with-defaults.js
function withDefaults3(oldRequest, newDefaults) {
  const newRequest = oldRequest.defaults(newDefaults);
  const newApi = (query, options) => {
    return graphql(newRequest, query, options);
  };
  return Object.assign(newApi, {
    defaults: withDefaults3.bind(null, newRequest),
    endpoint: newRequest.endpoint
  });
}
var init_with_defaults3 = __esm(() => {
  init_graphql();
});

// node_modules/@octokit/graphql/index.js
var exports_graphql = {};
__export(exports_graphql, {
  withCustomRequest: () => {
    {
      return withCustomRequest;
    }
  },
  graphql: () => {
    {
      return graphql3;
    }
  },
  GraphqlResponseError: () => {
    {
      return GraphqlResponseError;
    }
  }
});
function withCustomRequest(customRequest) {
  return withDefaults3(customRequest, {
    method: "POST",
    url: "/graphql"
  });
}
var graphql3;
var init_graphql2 = __esm(() => {
  init_request();
  init_universal_user_agent();
  init_version3();
  init_with_defaults3();
  init_error();
  graphql3 = withDefaults3(request, {
    headers: {
      "user-agent": `octokit-graphql.js/${VERSION3} ${getUserAgent()}`
    },
    method: "POST",
    url: "/graphql"
  });
});

// node_modules/@octokit/plugin-request-log/dist-node/index.js
var require_dist_node = __commonJS((exports) => {
  var requestLog = function(octokit) {
    octokit.hook.wrap("request", (request3, options) => {
      octokit.log.debug("request", options);
      const start = Date.now();
      const requestOptions = octokit.request.endpoint.parse(options);
      const path = requestOptions.url.replace(options.baseUrl, "");
      return request3(options).then((response) => {
        octokit.log.info(`${requestOptions.method} ${path} - ${response.status} in ${Date.now() - start}ms`);
        return response;
      }).catch((error2) => {
        octokit.log.info(`${requestOptions.method} ${path} - ${error2.status} in ${Date.now() - start}ms`);
        throw error2;
      });
    });
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  var VERSION4 = "1.0.4";
  requestLog.VERSION = VERSION4;
  exports.requestLog = requestLog;
});

// node_modules/deprecation/dist-node/index.js
var require_dist_node2 = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", { value: true });

  class Deprecation extends Error {
    constructor(message) {
      super(message);
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
      }
      this.name = "Deprecation";
    }
  }
  exports.Deprecation = Deprecation;
});

// node_modules/@octokit/plugin-rest-endpoint-methods/dist-node/index.js
var require_dist_node3 = __commonJS((exports) => {
  var registerEndpoints = function(octokit, routes) {
    Object.keys(routes).forEach((namespaceName) => {
      if (!octokit[namespaceName]) {
        octokit[namespaceName] = {};
      }
      Object.keys(routes[namespaceName]).forEach((apiName) => {
        const apiOptions = routes[namespaceName][apiName];
        const endpointDefaults = ["method", "url", "headers"].reduce((map, key) => {
          if (typeof apiOptions[key] !== "undefined") {
            map[key] = apiOptions[key];
          }
          return map;
        }, {});
        endpointDefaults.request = {
          validate: apiOptions.params
        };
        let request3 = octokit.request.defaults(endpointDefaults);
        const hasDeprecatedParam = Object.keys(apiOptions.params || {}).find((key) => apiOptions.params[key].deprecated);
        if (hasDeprecatedParam) {
          const patch = patchForDeprecation.bind(null, octokit, apiOptions);
          request3 = patch(octokit.request.defaults(endpointDefaults), `.${namespaceName}.${apiName}()`);
          request3.endpoint = patch(request3.endpoint, `.${namespaceName}.${apiName}.endpoint()`);
          request3.endpoint.merge = patch(request3.endpoint.merge, `.${namespaceName}.${apiName}.endpoint.merge()`);
        }
        if (apiOptions.deprecated) {
          octokit[namespaceName][apiName] = Object.assign(function deprecatedEndpointMethod() {
            octokit.log.warn(new deprecation.Deprecation(`[@octokit/rest] ${apiOptions.deprecated}`));
            octokit[namespaceName][apiName] = request3;
            return request3.apply(null, arguments);
          }, request3);
          return;
        }
        octokit[namespaceName][apiName] = request3;
      });
    });
  };
  var patchForDeprecation = function(octokit, apiOptions, method, methodName) {
    const patchedMethod = (options) => {
      options = Object.assign({}, options);
      Object.keys(options).forEach((key) => {
        if (apiOptions.params[key] && apiOptions.params[key].deprecated) {
          const aliasKey = apiOptions.params[key].alias;
          octokit.log.warn(new deprecation.Deprecation(`[@octokit/rest] "${key}" parameter is deprecated for "${methodName}". Use "${aliasKey}" instead`));
          if (!(aliasKey in options)) {
            options[aliasKey] = options[key];
          }
          delete options[key];
        }
      });
      return method(options);
    };
    Object.keys(method).forEach((key) => {
      patchedMethod[key] = method[key];
    });
    return patchedMethod;
  };
  var restEndpointMethods = function(octokit) {
    octokit.registerEndpoints = registerEndpoints.bind(null, octokit);
    registerEndpoints(octokit, endpointsByScope);
    [["gitdata", "git"], ["authorization", "oauthAuthorizations"], ["pullRequests", "pulls"]].forEach(([deprecatedScope, scope]) => {
      Object.defineProperty(octokit, deprecatedScope, {
        get() {
          octokit.log.warn(new deprecation.Deprecation(`[@octokit/plugin-rest-endpoint-methods] "octokit.${deprecatedScope}.*" methods are deprecated, use "octokit.${scope}.*" instead`));
          return octokit[scope];
        }
      });
    });
    return {};
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  var deprecation = require_dist_node2();
  var endpointsByScope = {
    actions: {
      cancelWorkflowRun: {
        method: "POST",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          run_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/actions/runs/:run_id/cancel"
      },
      createOrUpdateSecretForRepo: {
        method: "PUT",
        params: {
          encrypted_value: {
            type: "string"
          },
          key_id: {
            type: "string"
          },
          name: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/secrets/:name"
      },
      createRegistrationToken: {
        method: "POST",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/runners/registration-token"
      },
      createRemoveToken: {
        method: "POST",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/runners/remove-token"
      },
      deleteArtifact: {
        method: "DELETE",
        params: {
          artifact_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/artifacts/:artifact_id"
      },
      deleteSecretFromRepo: {
        method: "DELETE",
        params: {
          name: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/secrets/:name"
      },
      downloadArtifact: {
        method: "GET",
        params: {
          archive_format: {
            required: true,
            type: "string"
          },
          artifact_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/artifacts/:artifact_id/:archive_format"
      },
      getArtifact: {
        method: "GET",
        params: {
          artifact_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/artifacts/:artifact_id"
      },
      getPublicKey: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/secrets/public-key"
      },
      getSecret: {
        method: "GET",
        params: {
          name: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/secrets/:name"
      },
      getSelfHostedRunner: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          runner_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/actions/runners/:runner_id"
      },
      getWorkflow: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          workflow_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/actions/workflows/:workflow_id"
      },
      getWorkflowJob: {
        method: "GET",
        params: {
          job_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/jobs/:job_id"
      },
      getWorkflowRun: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          run_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/actions/runs/:run_id"
      },
      listDownloadsForSelfHostedRunnerApplication: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/runners/downloads"
      },
      listJobsForWorkflowRun: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          run_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/actions/runs/:run_id/jobs"
      },
      listRepoWorkflowRuns: {
        method: "GET",
        params: {
          actor: {
            type: "string"
          },
          branch: {
            type: "string"
          },
          event: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          status: {
            enum: ["completed", "status", "conclusion"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/runs"
      },
      listRepoWorkflows: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/workflows"
      },
      listSecretsForRepo: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/secrets"
      },
      listSelfHostedRunnersForRepo: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/runners"
      },
      listWorkflowJobLogs: {
        method: "GET",
        params: {
          job_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/actions/jobs/:job_id/logs"
      },
      listWorkflowRunArtifacts: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          run_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/actions/runs/:run_id/artifacts"
      },
      listWorkflowRunLogs: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          run_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/actions/runs/:run_id/logs"
      },
      listWorkflowRuns: {
        method: "GET",
        params: {
          actor: {
            type: "string"
          },
          branch: {
            type: "string"
          },
          event: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          status: {
            enum: ["completed", "status", "conclusion"],
            type: "string"
          },
          workflow_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/actions/workflows/:workflow_id/runs"
      },
      reRunWorkflow: {
        method: "POST",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          run_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/actions/runs/:run_id/rerun"
      },
      removeSelfHostedRunner: {
        method: "DELETE",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          runner_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/actions/runners/:runner_id"
      }
    },
    activity: {
      checkStarringRepo: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/user/starred/:owner/:repo"
      },
      deleteRepoSubscription: {
        method: "DELETE",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/subscription"
      },
      deleteThreadSubscription: {
        method: "DELETE",
        params: {
          thread_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/notifications/threads/:thread_id/subscription"
      },
      getRepoSubscription: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/subscription"
      },
      getThread: {
        method: "GET",
        params: {
          thread_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/notifications/threads/:thread_id"
      },
      getThreadSubscription: {
        method: "GET",
        params: {
          thread_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/notifications/threads/:thread_id/subscription"
      },
      listEventsForOrg: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/events/orgs/:org"
      },
      listEventsForUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/events"
      },
      listFeeds: {
        method: "GET",
        params: {},
        url: "/feeds"
      },
      listNotifications: {
        method: "GET",
        params: {
          all: {
            type: "boolean"
          },
          before: {
            type: "string"
          },
          page: {
            type: "integer"
          },
          participating: {
            type: "boolean"
          },
          per_page: {
            type: "integer"
          },
          since: {
            type: "string"
          }
        },
        url: "/notifications"
      },
      listNotificationsForRepo: {
        method: "GET",
        params: {
          all: {
            type: "boolean"
          },
          before: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          participating: {
            type: "boolean"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          since: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/notifications"
      },
      listPublicEvents: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/events"
      },
      listPublicEventsForOrg: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/orgs/:org/events"
      },
      listPublicEventsForRepoNetwork: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/networks/:owner/:repo/events"
      },
      listPublicEventsForUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/events/public"
      },
      listReceivedEventsForUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/received_events"
      },
      listReceivedPublicEventsForUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/received_events/public"
      },
      listRepoEvents: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/events"
      },
      listReposStarredByAuthenticatedUser: {
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          sort: {
            enum: ["created", "updated"],
            type: "string"
          }
        },
        url: "/user/starred"
      },
      listReposStarredByUser: {
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          sort: {
            enum: ["created", "updated"],
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/starred"
      },
      listReposWatchedByUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/subscriptions"
      },
      listStargazersForRepo: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/stargazers"
      },
      listWatchedReposForAuthenticatedUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/subscriptions"
      },
      listWatchersForRepo: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/subscribers"
      },
      markAsRead: {
        method: "PUT",
        params: {
          last_read_at: {
            type: "string"
          }
        },
        url: "/notifications"
      },
      markNotificationsAsReadForRepo: {
        method: "PUT",
        params: {
          last_read_at: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/notifications"
      },
      markThreadAsRead: {
        method: "PATCH",
        params: {
          thread_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/notifications/threads/:thread_id"
      },
      setRepoSubscription: {
        method: "PUT",
        params: {
          ignored: {
            type: "boolean"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          subscribed: {
            type: "boolean"
          }
        },
        url: "/repos/:owner/:repo/subscription"
      },
      setThreadSubscription: {
        method: "PUT",
        params: {
          ignored: {
            type: "boolean"
          },
          thread_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/notifications/threads/:thread_id/subscription"
      },
      starRepo: {
        method: "PUT",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/user/starred/:owner/:repo"
      },
      unstarRepo: {
        method: "DELETE",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/user/starred/:owner/:repo"
      }
    },
    apps: {
      addRepoToInstallation: {
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "PUT",
        params: {
          installation_id: {
            required: true,
            type: "integer"
          },
          repository_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/user/installations/:installation_id/repositories/:repository_id"
      },
      checkAccountIsAssociatedWithAny: {
        method: "GET",
        params: {
          account_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/marketplace_listing/accounts/:account_id"
      },
      checkAccountIsAssociatedWithAnyStubbed: {
        method: "GET",
        params: {
          account_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/marketplace_listing/stubbed/accounts/:account_id"
      },
      checkAuthorization: {
        deprecated: "octokit.apps.checkAuthorization() is deprecated, see https://developer.github.com/v3/apps/oauth_applications/#check-an-authorization",
        method: "GET",
        params: {
          access_token: {
            required: true,
            type: "string"
          },
          client_id: {
            required: true,
            type: "string"
          }
        },
        url: "/applications/:client_id/tokens/:access_token"
      },
      checkToken: {
        headers: {
          accept: "application/vnd.github.doctor-strange-preview+json"
        },
        method: "POST",
        params: {
          access_token: {
            type: "string"
          },
          client_id: {
            required: true,
            type: "string"
          }
        },
        url: "/applications/:client_id/token"
      },
      createContentAttachment: {
        headers: {
          accept: "application/vnd.github.corsair-preview+json"
        },
        method: "POST",
        params: {
          body: {
            required: true,
            type: "string"
          },
          content_reference_id: {
            required: true,
            type: "integer"
          },
          title: {
            required: true,
            type: "string"
          }
        },
        url: "/content_references/:content_reference_id/attachments"
      },
      createFromManifest: {
        headers: {
          accept: "application/vnd.github.fury-preview+json"
        },
        method: "POST",
        params: {
          code: {
            required: true,
            type: "string"
          }
        },
        url: "/app-manifests/:code/conversions"
      },
      createInstallationToken: {
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "POST",
        params: {
          installation_id: {
            required: true,
            type: "integer"
          },
          permissions: {
            type: "object"
          },
          repository_ids: {
            type: "integer[]"
          }
        },
        url: "/app/installations/:installation_id/access_tokens"
      },
      deleteAuthorization: {
        headers: {
          accept: "application/vnd.github.doctor-strange-preview+json"
        },
        method: "DELETE",
        params: {
          access_token: {
            type: "string"
          },
          client_id: {
            required: true,
            type: "string"
          }
        },
        url: "/applications/:client_id/grant"
      },
      deleteInstallation: {
        headers: {
          accept: "application/vnd.github.gambit-preview+json,application/vnd.github.machine-man-preview+json"
        },
        method: "DELETE",
        params: {
          installation_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/app/installations/:installation_id"
      },
      deleteToken: {
        headers: {
          accept: "application/vnd.github.doctor-strange-preview+json"
        },
        method: "DELETE",
        params: {
          access_token: {
            type: "string"
          },
          client_id: {
            required: true,
            type: "string"
          }
        },
        url: "/applications/:client_id/token"
      },
      findOrgInstallation: {
        deprecated: "octokit.apps.findOrgInstallation() has been renamed to octokit.apps.getOrgInstallation() (2019-04-10)",
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/installation"
      },
      findRepoInstallation: {
        deprecated: "octokit.apps.findRepoInstallation() has been renamed to octokit.apps.getRepoInstallation() (2019-04-10)",
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/installation"
      },
      findUserInstallation: {
        deprecated: "octokit.apps.findUserInstallation() has been renamed to octokit.apps.getUserInstallation() (2019-04-10)",
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "GET",
        params: {
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/installation"
      },
      getAuthenticated: {
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "GET",
        params: {},
        url: "/app"
      },
      getBySlug: {
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "GET",
        params: {
          app_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/apps/:app_slug"
      },
      getInstallation: {
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "GET",
        params: {
          installation_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/app/installations/:installation_id"
      },
      getOrgInstallation: {
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/installation"
      },
      getRepoInstallation: {
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/installation"
      },
      getUserInstallation: {
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "GET",
        params: {
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/installation"
      },
      listAccountsUserOrOrgOnPlan: {
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          plan_id: {
            required: true,
            type: "integer"
          },
          sort: {
            enum: ["created", "updated"],
            type: "string"
          }
        },
        url: "/marketplace_listing/plans/:plan_id/accounts"
      },
      listAccountsUserOrOrgOnPlanStubbed: {
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          plan_id: {
            required: true,
            type: "integer"
          },
          sort: {
            enum: ["created", "updated"],
            type: "string"
          }
        },
        url: "/marketplace_listing/stubbed/plans/:plan_id/accounts"
      },
      listInstallationReposForAuthenticatedUser: {
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "GET",
        params: {
          installation_id: {
            required: true,
            type: "integer"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/installations/:installation_id/repositories"
      },
      listInstallations: {
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/app/installations"
      },
      listInstallationsForAuthenticatedUser: {
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/installations"
      },
      listMarketplacePurchasesForAuthenticatedUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/marketplace_purchases"
      },
      listMarketplacePurchasesForAuthenticatedUserStubbed: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/marketplace_purchases/stubbed"
      },
      listPlans: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/marketplace_listing/plans"
      },
      listPlansStubbed: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/marketplace_listing/stubbed/plans"
      },
      listRepos: {
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/installation/repositories"
      },
      removeRepoFromInstallation: {
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "DELETE",
        params: {
          installation_id: {
            required: true,
            type: "integer"
          },
          repository_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/user/installations/:installation_id/repositories/:repository_id"
      },
      resetAuthorization: {
        deprecated: "octokit.apps.resetAuthorization() is deprecated, see https://developer.github.com/v3/apps/oauth_applications/#reset-an-authorization",
        method: "POST",
        params: {
          access_token: {
            required: true,
            type: "string"
          },
          client_id: {
            required: true,
            type: "string"
          }
        },
        url: "/applications/:client_id/tokens/:access_token"
      },
      resetToken: {
        headers: {
          accept: "application/vnd.github.doctor-strange-preview+json"
        },
        method: "PATCH",
        params: {
          access_token: {
            type: "string"
          },
          client_id: {
            required: true,
            type: "string"
          }
        },
        url: "/applications/:client_id/token"
      },
      revokeAuthorizationForApplication: {
        deprecated: "octokit.apps.revokeAuthorizationForApplication() is deprecated, see https://developer.github.com/v3/apps/oauth_applications/#revoke-an-authorization-for-an-application",
        method: "DELETE",
        params: {
          access_token: {
            required: true,
            type: "string"
          },
          client_id: {
            required: true,
            type: "string"
          }
        },
        url: "/applications/:client_id/tokens/:access_token"
      },
      revokeGrantForApplication: {
        deprecated: "octokit.apps.revokeGrantForApplication() is deprecated, see https://developer.github.com/v3/apps/oauth_applications/#revoke-a-grant-for-an-application",
        method: "DELETE",
        params: {
          access_token: {
            required: true,
            type: "string"
          },
          client_id: {
            required: true,
            type: "string"
          }
        },
        url: "/applications/:client_id/grants/:access_token"
      },
      revokeInstallationToken: {
        headers: {
          accept: "application/vnd.github.gambit-preview+json"
        },
        method: "DELETE",
        params: {},
        url: "/installation/token"
      }
    },
    checks: {
      create: {
        headers: {
          accept: "application/vnd.github.antiope-preview+json"
        },
        method: "POST",
        params: {
          actions: {
            type: "object[]"
          },
          "actions[].description": {
            required: true,
            type: "string"
          },
          "actions[].identifier": {
            required: true,
            type: "string"
          },
          "actions[].label": {
            required: true,
            type: "string"
          },
          completed_at: {
            type: "string"
          },
          conclusion: {
            enum: ["success", "failure", "neutral", "cancelled", "timed_out", "action_required"],
            type: "string"
          },
          details_url: {
            type: "string"
          },
          external_id: {
            type: "string"
          },
          head_sha: {
            required: true,
            type: "string"
          },
          name: {
            required: true,
            type: "string"
          },
          output: {
            type: "object"
          },
          "output.annotations": {
            type: "object[]"
          },
          "output.annotations[].annotation_level": {
            enum: ["notice", "warning", "failure"],
            required: true,
            type: "string"
          },
          "output.annotations[].end_column": {
            type: "integer"
          },
          "output.annotations[].end_line": {
            required: true,
            type: "integer"
          },
          "output.annotations[].message": {
            required: true,
            type: "string"
          },
          "output.annotations[].path": {
            required: true,
            type: "string"
          },
          "output.annotations[].raw_details": {
            type: "string"
          },
          "output.annotations[].start_column": {
            type: "integer"
          },
          "output.annotations[].start_line": {
            required: true,
            type: "integer"
          },
          "output.annotations[].title": {
            type: "string"
          },
          "output.images": {
            type: "object[]"
          },
          "output.images[].alt": {
            required: true,
            type: "string"
          },
          "output.images[].caption": {
            type: "string"
          },
          "output.images[].image_url": {
            required: true,
            type: "string"
          },
          "output.summary": {
            required: true,
            type: "string"
          },
          "output.text": {
            type: "string"
          },
          "output.title": {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          started_at: {
            type: "string"
          },
          status: {
            enum: ["queued", "in_progress", "completed"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/check-runs"
      },
      createSuite: {
        headers: {
          accept: "application/vnd.github.antiope-preview+json"
        },
        method: "POST",
        params: {
          head_sha: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/check-suites"
      },
      get: {
        headers: {
          accept: "application/vnd.github.antiope-preview+json"
        },
        method: "GET",
        params: {
          check_run_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/check-runs/:check_run_id"
      },
      getSuite: {
        headers: {
          accept: "application/vnd.github.antiope-preview+json"
        },
        method: "GET",
        params: {
          check_suite_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/check-suites/:check_suite_id"
      },
      listAnnotations: {
        headers: {
          accept: "application/vnd.github.antiope-preview+json"
        },
        method: "GET",
        params: {
          check_run_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/check-runs/:check_run_id/annotations"
      },
      listForRef: {
        headers: {
          accept: "application/vnd.github.antiope-preview+json"
        },
        method: "GET",
        params: {
          check_name: {
            type: "string"
          },
          filter: {
            enum: ["latest", "all"],
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          ref: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          status: {
            enum: ["queued", "in_progress", "completed"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/commits/:ref/check-runs"
      },
      listForSuite: {
        headers: {
          accept: "application/vnd.github.antiope-preview+json"
        },
        method: "GET",
        params: {
          check_name: {
            type: "string"
          },
          check_suite_id: {
            required: true,
            type: "integer"
          },
          filter: {
            enum: ["latest", "all"],
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          status: {
            enum: ["queued", "in_progress", "completed"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/check-suites/:check_suite_id/check-runs"
      },
      listSuitesForRef: {
        headers: {
          accept: "application/vnd.github.antiope-preview+json"
        },
        method: "GET",
        params: {
          app_id: {
            type: "integer"
          },
          check_name: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          ref: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/commits/:ref/check-suites"
      },
      rerequestSuite: {
        headers: {
          accept: "application/vnd.github.antiope-preview+json"
        },
        method: "POST",
        params: {
          check_suite_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/check-suites/:check_suite_id/rerequest"
      },
      setSuitesPreferences: {
        headers: {
          accept: "application/vnd.github.antiope-preview+json"
        },
        method: "PATCH",
        params: {
          auto_trigger_checks: {
            type: "object[]"
          },
          "auto_trigger_checks[].app_id": {
            required: true,
            type: "integer"
          },
          "auto_trigger_checks[].setting": {
            required: true,
            type: "boolean"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/check-suites/preferences"
      },
      update: {
        headers: {
          accept: "application/vnd.github.antiope-preview+json"
        },
        method: "PATCH",
        params: {
          actions: {
            type: "object[]"
          },
          "actions[].description": {
            required: true,
            type: "string"
          },
          "actions[].identifier": {
            required: true,
            type: "string"
          },
          "actions[].label": {
            required: true,
            type: "string"
          },
          check_run_id: {
            required: true,
            type: "integer"
          },
          completed_at: {
            type: "string"
          },
          conclusion: {
            enum: ["success", "failure", "neutral", "cancelled", "timed_out", "action_required"],
            type: "string"
          },
          details_url: {
            type: "string"
          },
          external_id: {
            type: "string"
          },
          name: {
            type: "string"
          },
          output: {
            type: "object"
          },
          "output.annotations": {
            type: "object[]"
          },
          "output.annotations[].annotation_level": {
            enum: ["notice", "warning", "failure"],
            required: true,
            type: "string"
          },
          "output.annotations[].end_column": {
            type: "integer"
          },
          "output.annotations[].end_line": {
            required: true,
            type: "integer"
          },
          "output.annotations[].message": {
            required: true,
            type: "string"
          },
          "output.annotations[].path": {
            required: true,
            type: "string"
          },
          "output.annotations[].raw_details": {
            type: "string"
          },
          "output.annotations[].start_column": {
            type: "integer"
          },
          "output.annotations[].start_line": {
            required: true,
            type: "integer"
          },
          "output.annotations[].title": {
            type: "string"
          },
          "output.images": {
            type: "object[]"
          },
          "output.images[].alt": {
            required: true,
            type: "string"
          },
          "output.images[].caption": {
            type: "string"
          },
          "output.images[].image_url": {
            required: true,
            type: "string"
          },
          "output.summary": {
            required: true,
            type: "string"
          },
          "output.text": {
            type: "string"
          },
          "output.title": {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          started_at: {
            type: "string"
          },
          status: {
            enum: ["queued", "in_progress", "completed"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/check-runs/:check_run_id"
      }
    },
    codesOfConduct: {
      getConductCode: {
        headers: {
          accept: "application/vnd.github.scarlet-witch-preview+json"
        },
        method: "GET",
        params: {
          key: {
            required: true,
            type: "string"
          }
        },
        url: "/codes_of_conduct/:key"
      },
      getForRepo: {
        headers: {
          accept: "application/vnd.github.scarlet-witch-preview+json"
        },
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/community/code_of_conduct"
      },
      listConductCodes: {
        headers: {
          accept: "application/vnd.github.scarlet-witch-preview+json"
        },
        method: "GET",
        params: {},
        url: "/codes_of_conduct"
      }
    },
    emojis: {
      get: {
        method: "GET",
        params: {},
        url: "/emojis"
      }
    },
    gists: {
      checkIsStarred: {
        method: "GET",
        params: {
          gist_id: {
            required: true,
            type: "string"
          }
        },
        url: "/gists/:gist_id/star"
      },
      create: {
        method: "POST",
        params: {
          description: {
            type: "string"
          },
          files: {
            required: true,
            type: "object"
          },
          "files.content": {
            type: "string"
          },
          public: {
            type: "boolean"
          }
        },
        url: "/gists"
      },
      createComment: {
        method: "POST",
        params: {
          body: {
            required: true,
            type: "string"
          },
          gist_id: {
            required: true,
            type: "string"
          }
        },
        url: "/gists/:gist_id/comments"
      },
      delete: {
        method: "DELETE",
        params: {
          gist_id: {
            required: true,
            type: "string"
          }
        },
        url: "/gists/:gist_id"
      },
      deleteComment: {
        method: "DELETE",
        params: {
          comment_id: {
            required: true,
            type: "integer"
          },
          gist_id: {
            required: true,
            type: "string"
          }
        },
        url: "/gists/:gist_id/comments/:comment_id"
      },
      fork: {
        method: "POST",
        params: {
          gist_id: {
            required: true,
            type: "string"
          }
        },
        url: "/gists/:gist_id/forks"
      },
      get: {
        method: "GET",
        params: {
          gist_id: {
            required: true,
            type: "string"
          }
        },
        url: "/gists/:gist_id"
      },
      getComment: {
        method: "GET",
        params: {
          comment_id: {
            required: true,
            type: "integer"
          },
          gist_id: {
            required: true,
            type: "string"
          }
        },
        url: "/gists/:gist_id/comments/:comment_id"
      },
      getRevision: {
        method: "GET",
        params: {
          gist_id: {
            required: true,
            type: "string"
          },
          sha: {
            required: true,
            type: "string"
          }
        },
        url: "/gists/:gist_id/:sha"
      },
      list: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          since: {
            type: "string"
          }
        },
        url: "/gists"
      },
      listComments: {
        method: "GET",
        params: {
          gist_id: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/gists/:gist_id/comments"
      },
      listCommits: {
        method: "GET",
        params: {
          gist_id: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/gists/:gist_id/commits"
      },
      listForks: {
        method: "GET",
        params: {
          gist_id: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/gists/:gist_id/forks"
      },
      listPublic: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          since: {
            type: "string"
          }
        },
        url: "/gists/public"
      },
      listPublicForUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          since: {
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/gists"
      },
      listStarred: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          since: {
            type: "string"
          }
        },
        url: "/gists/starred"
      },
      star: {
        method: "PUT",
        params: {
          gist_id: {
            required: true,
            type: "string"
          }
        },
        url: "/gists/:gist_id/star"
      },
      unstar: {
        method: "DELETE",
        params: {
          gist_id: {
            required: true,
            type: "string"
          }
        },
        url: "/gists/:gist_id/star"
      },
      update: {
        method: "PATCH",
        params: {
          description: {
            type: "string"
          },
          files: {
            type: "object"
          },
          "files.content": {
            type: "string"
          },
          "files.filename": {
            type: "string"
          },
          gist_id: {
            required: true,
            type: "string"
          }
        },
        url: "/gists/:gist_id"
      },
      updateComment: {
        method: "PATCH",
        params: {
          body: {
            required: true,
            type: "string"
          },
          comment_id: {
            required: true,
            type: "integer"
          },
          gist_id: {
            required: true,
            type: "string"
          }
        },
        url: "/gists/:gist_id/comments/:comment_id"
      }
    },
    git: {
      createBlob: {
        method: "POST",
        params: {
          content: {
            required: true,
            type: "string"
          },
          encoding: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/git/blobs"
      },
      createCommit: {
        method: "POST",
        params: {
          author: {
            type: "object"
          },
          "author.date": {
            type: "string"
          },
          "author.email": {
            type: "string"
          },
          "author.name": {
            type: "string"
          },
          committer: {
            type: "object"
          },
          "committer.date": {
            type: "string"
          },
          "committer.email": {
            type: "string"
          },
          "committer.name": {
            type: "string"
          },
          message: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          parents: {
            required: true,
            type: "string[]"
          },
          repo: {
            required: true,
            type: "string"
          },
          signature: {
            type: "string"
          },
          tree: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/git/commits"
      },
      createRef: {
        method: "POST",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          ref: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          sha: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/git/refs"
      },
      createTag: {
        method: "POST",
        params: {
          message: {
            required: true,
            type: "string"
          },
          object: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          tag: {
            required: true,
            type: "string"
          },
          tagger: {
            type: "object"
          },
          "tagger.date": {
            type: "string"
          },
          "tagger.email": {
            type: "string"
          },
          "tagger.name": {
            type: "string"
          },
          type: {
            enum: ["commit", "tree", "blob"],
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/git/tags"
      },
      createTree: {
        method: "POST",
        params: {
          base_tree: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          tree: {
            required: true,
            type: "object[]"
          },
          "tree[].content": {
            type: "string"
          },
          "tree[].mode": {
            enum: ["100644", "100755", "040000", "160000", "120000"],
            type: "string"
          },
          "tree[].path": {
            type: "string"
          },
          "tree[].sha": {
            allowNull: true,
            type: "string"
          },
          "tree[].type": {
            enum: ["blob", "tree", "commit"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/git/trees"
      },
      deleteRef: {
        method: "DELETE",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          ref: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/git/refs/:ref"
      },
      getBlob: {
        method: "GET",
        params: {
          file_sha: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/git/blobs/:file_sha"
      },
      getCommit: {
        method: "GET",
        params: {
          commit_sha: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/git/commits/:commit_sha"
      },
      getRef: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          ref: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/git/ref/:ref"
      },
      getTag: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          tag_sha: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/git/tags/:tag_sha"
      },
      getTree: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          recursive: {
            enum: ["1"],
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          tree_sha: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/git/trees/:tree_sha"
      },
      listMatchingRefs: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          ref: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/git/matching-refs/:ref"
      },
      listRefs: {
        method: "GET",
        params: {
          namespace: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/git/refs/:namespace"
      },
      updateRef: {
        method: "PATCH",
        params: {
          force: {
            type: "boolean"
          },
          owner: {
            required: true,
            type: "string"
          },
          ref: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          sha: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/git/refs/:ref"
      }
    },
    gitignore: {
      getTemplate: {
        method: "GET",
        params: {
          name: {
            required: true,
            type: "string"
          }
        },
        url: "/gitignore/templates/:name"
      },
      listTemplates: {
        method: "GET",
        params: {},
        url: "/gitignore/templates"
      }
    },
    interactions: {
      addOrUpdateRestrictionsForOrg: {
        headers: {
          accept: "application/vnd.github.sombra-preview+json"
        },
        method: "PUT",
        params: {
          limit: {
            enum: ["existing_users", "contributors_only", "collaborators_only"],
            required: true,
            type: "string"
          },
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/interaction-limits"
      },
      addOrUpdateRestrictionsForRepo: {
        headers: {
          accept: "application/vnd.github.sombra-preview+json"
        },
        method: "PUT",
        params: {
          limit: {
            enum: ["existing_users", "contributors_only", "collaborators_only"],
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/interaction-limits"
      },
      getRestrictionsForOrg: {
        headers: {
          accept: "application/vnd.github.sombra-preview+json"
        },
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/interaction-limits"
      },
      getRestrictionsForRepo: {
        headers: {
          accept: "application/vnd.github.sombra-preview+json"
        },
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/interaction-limits"
      },
      removeRestrictionsForOrg: {
        headers: {
          accept: "application/vnd.github.sombra-preview+json"
        },
        method: "DELETE",
        params: {
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/interaction-limits"
      },
      removeRestrictionsForRepo: {
        headers: {
          accept: "application/vnd.github.sombra-preview+json"
        },
        method: "DELETE",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/interaction-limits"
      }
    },
    issues: {
      addAssignees: {
        method: "POST",
        params: {
          assignees: {
            type: "string[]"
          },
          issue_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number/assignees"
      },
      addLabels: {
        method: "POST",
        params: {
          issue_number: {
            required: true,
            type: "integer"
          },
          labels: {
            required: true,
            type: "string[]"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number/labels"
      },
      checkAssignee: {
        method: "GET",
        params: {
          assignee: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/assignees/:assignee"
      },
      create: {
        method: "POST",
        params: {
          assignee: {
            type: "string"
          },
          assignees: {
            type: "string[]"
          },
          body: {
            type: "string"
          },
          labels: {
            type: "string[]"
          },
          milestone: {
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          title: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues"
      },
      createComment: {
        method: "POST",
        params: {
          body: {
            required: true,
            type: "string"
          },
          issue_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number/comments"
      },
      createLabel: {
        method: "POST",
        params: {
          color: {
            required: true,
            type: "string"
          },
          description: {
            type: "string"
          },
          name: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/labels"
      },
      createMilestone: {
        method: "POST",
        params: {
          description: {
            type: "string"
          },
          due_on: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          state: {
            enum: ["open", "closed"],
            type: "string"
          },
          title: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/milestones"
      },
      deleteComment: {
        method: "DELETE",
        params: {
          comment_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/comments/:comment_id"
      },
      deleteLabel: {
        method: "DELETE",
        params: {
          name: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/labels/:name"
      },
      deleteMilestone: {
        method: "DELETE",
        params: {
          milestone_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "milestone_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/milestones/:milestone_number"
      },
      get: {
        method: "GET",
        params: {
          issue_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number"
      },
      getComment: {
        method: "GET",
        params: {
          comment_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/comments/:comment_id"
      },
      getEvent: {
        method: "GET",
        params: {
          event_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/events/:event_id"
      },
      getLabel: {
        method: "GET",
        params: {
          name: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/labels/:name"
      },
      getMilestone: {
        method: "GET",
        params: {
          milestone_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "milestone_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/milestones/:milestone_number"
      },
      list: {
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          filter: {
            enum: ["assigned", "created", "mentioned", "subscribed", "all"],
            type: "string"
          },
          labels: {
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          since: {
            type: "string"
          },
          sort: {
            enum: ["created", "updated", "comments"],
            type: "string"
          },
          state: {
            enum: ["open", "closed", "all"],
            type: "string"
          }
        },
        url: "/issues"
      },
      listAssignees: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/assignees"
      },
      listComments: {
        method: "GET",
        params: {
          issue_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          since: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number/comments"
      },
      listCommentsForRepo: {
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          since: {
            type: "string"
          },
          sort: {
            enum: ["created", "updated"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/comments"
      },
      listEvents: {
        method: "GET",
        params: {
          issue_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number/events"
      },
      listEventsForRepo: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/events"
      },
      listEventsForTimeline: {
        headers: {
          accept: "application/vnd.github.mockingbird-preview+json"
        },
        method: "GET",
        params: {
          issue_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number/timeline"
      },
      listForAuthenticatedUser: {
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          filter: {
            enum: ["assigned", "created", "mentioned", "subscribed", "all"],
            type: "string"
          },
          labels: {
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          since: {
            type: "string"
          },
          sort: {
            enum: ["created", "updated", "comments"],
            type: "string"
          },
          state: {
            enum: ["open", "closed", "all"],
            type: "string"
          }
        },
        url: "/user/issues"
      },
      listForOrg: {
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          filter: {
            enum: ["assigned", "created", "mentioned", "subscribed", "all"],
            type: "string"
          },
          labels: {
            type: "string"
          },
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          since: {
            type: "string"
          },
          sort: {
            enum: ["created", "updated", "comments"],
            type: "string"
          },
          state: {
            enum: ["open", "closed", "all"],
            type: "string"
          }
        },
        url: "/orgs/:org/issues"
      },
      listForRepo: {
        method: "GET",
        params: {
          assignee: {
            type: "string"
          },
          creator: {
            type: "string"
          },
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          labels: {
            type: "string"
          },
          mentioned: {
            type: "string"
          },
          milestone: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          since: {
            type: "string"
          },
          sort: {
            enum: ["created", "updated", "comments"],
            type: "string"
          },
          state: {
            enum: ["open", "closed", "all"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues"
      },
      listLabelsForMilestone: {
        method: "GET",
        params: {
          milestone_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "milestone_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/milestones/:milestone_number/labels"
      },
      listLabelsForRepo: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/labels"
      },
      listLabelsOnIssue: {
        method: "GET",
        params: {
          issue_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number/labels"
      },
      listMilestonesForRepo: {
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          sort: {
            enum: ["due_on", "completeness"],
            type: "string"
          },
          state: {
            enum: ["open", "closed", "all"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/milestones"
      },
      lock: {
        method: "PUT",
        params: {
          issue_number: {
            required: true,
            type: "integer"
          },
          lock_reason: {
            enum: ["off-topic", "too heated", "resolved", "spam"],
            type: "string"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number/lock"
      },
      removeAssignees: {
        method: "DELETE",
        params: {
          assignees: {
            type: "string[]"
          },
          issue_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number/assignees"
      },
      removeLabel: {
        method: "DELETE",
        params: {
          issue_number: {
            required: true,
            type: "integer"
          },
          name: {
            required: true,
            type: "string"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number/labels/:name"
      },
      removeLabels: {
        method: "DELETE",
        params: {
          issue_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number/labels"
      },
      replaceLabels: {
        method: "PUT",
        params: {
          issue_number: {
            required: true,
            type: "integer"
          },
          labels: {
            type: "string[]"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number/labels"
      },
      unlock: {
        method: "DELETE",
        params: {
          issue_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number/lock"
      },
      update: {
        method: "PATCH",
        params: {
          assignee: {
            type: "string"
          },
          assignees: {
            type: "string[]"
          },
          body: {
            type: "string"
          },
          issue_number: {
            required: true,
            type: "integer"
          },
          labels: {
            type: "string[]"
          },
          milestone: {
            allowNull: true,
            type: "integer"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          state: {
            enum: ["open", "closed"],
            type: "string"
          },
          title: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number"
      },
      updateComment: {
        method: "PATCH",
        params: {
          body: {
            required: true,
            type: "string"
          },
          comment_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/comments/:comment_id"
      },
      updateLabel: {
        method: "PATCH",
        params: {
          color: {
            type: "string"
          },
          current_name: {
            required: true,
            type: "string"
          },
          description: {
            type: "string"
          },
          name: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/labels/:current_name"
      },
      updateMilestone: {
        method: "PATCH",
        params: {
          description: {
            type: "string"
          },
          due_on: {
            type: "string"
          },
          milestone_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "milestone_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          state: {
            enum: ["open", "closed"],
            type: "string"
          },
          title: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/milestones/:milestone_number"
      }
    },
    licenses: {
      get: {
        method: "GET",
        params: {
          license: {
            required: true,
            type: "string"
          }
        },
        url: "/licenses/:license"
      },
      getForRepo: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/license"
      },
      list: {
        deprecated: "octokit.licenses.list() has been renamed to octokit.licenses.listCommonlyUsed() (2019-03-05)",
        method: "GET",
        params: {},
        url: "/licenses"
      },
      listCommonlyUsed: {
        method: "GET",
        params: {},
        url: "/licenses"
      }
    },
    markdown: {
      render: {
        method: "POST",
        params: {
          context: {
            type: "string"
          },
          mode: {
            enum: ["markdown", "gfm"],
            type: "string"
          },
          text: {
            required: true,
            type: "string"
          }
        },
        url: "/markdown"
      },
      renderRaw: {
        headers: {
          "content-type": "text/plain; charset=utf-8"
        },
        method: "POST",
        params: {
          data: {
            mapTo: "data",
            required: true,
            type: "string"
          }
        },
        url: "/markdown/raw"
      }
    },
    meta: {
      get: {
        method: "GET",
        params: {},
        url: "/meta"
      }
    },
    migrations: {
      cancelImport: {
        method: "DELETE",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/import"
      },
      deleteArchiveForAuthenticatedUser: {
        headers: {
          accept: "application/vnd.github.wyandotte-preview+json"
        },
        method: "DELETE",
        params: {
          migration_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/user/migrations/:migration_id/archive"
      },
      deleteArchiveForOrg: {
        headers: {
          accept: "application/vnd.github.wyandotte-preview+json"
        },
        method: "DELETE",
        params: {
          migration_id: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/migrations/:migration_id/archive"
      },
      downloadArchiveForOrg: {
        headers: {
          accept: "application/vnd.github.wyandotte-preview+json"
        },
        method: "GET",
        params: {
          migration_id: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/migrations/:migration_id/archive"
      },
      getArchiveForAuthenticatedUser: {
        headers: {
          accept: "application/vnd.github.wyandotte-preview+json"
        },
        method: "GET",
        params: {
          migration_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/user/migrations/:migration_id/archive"
      },
      getArchiveForOrg: {
        deprecated: "octokit.migrations.getArchiveForOrg() has been renamed to octokit.migrations.downloadArchiveForOrg() (2020-01-27)",
        headers: {
          accept: "application/vnd.github.wyandotte-preview+json"
        },
        method: "GET",
        params: {
          migration_id: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/migrations/:migration_id/archive"
      },
      getCommitAuthors: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          since: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/import/authors"
      },
      getImportProgress: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/import"
      },
      getLargeFiles: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/import/large_files"
      },
      getStatusForAuthenticatedUser: {
        headers: {
          accept: "application/vnd.github.wyandotte-preview+json"
        },
        method: "GET",
        params: {
          migration_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/user/migrations/:migration_id"
      },
      getStatusForOrg: {
        headers: {
          accept: "application/vnd.github.wyandotte-preview+json"
        },
        method: "GET",
        params: {
          migration_id: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/migrations/:migration_id"
      },
      listForAuthenticatedUser: {
        headers: {
          accept: "application/vnd.github.wyandotte-preview+json"
        },
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/migrations"
      },
      listForOrg: {
        headers: {
          accept: "application/vnd.github.wyandotte-preview+json"
        },
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/orgs/:org/migrations"
      },
      listReposForOrg: {
        headers: {
          accept: "application/vnd.github.wyandotte-preview+json"
        },
        method: "GET",
        params: {
          migration_id: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/orgs/:org/migrations/:migration_id/repositories"
      },
      listReposForUser: {
        headers: {
          accept: "application/vnd.github.wyandotte-preview+json"
        },
        method: "GET",
        params: {
          migration_id: {
            required: true,
            type: "integer"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/:migration_id/repositories"
      },
      mapCommitAuthor: {
        method: "PATCH",
        params: {
          author_id: {
            required: true,
            type: "integer"
          },
          email: {
            type: "string"
          },
          name: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/import/authors/:author_id"
      },
      setLfsPreference: {
        method: "PATCH",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          use_lfs: {
            enum: ["opt_in", "opt_out"],
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/import/lfs"
      },
      startForAuthenticatedUser: {
        method: "POST",
        params: {
          exclude_attachments: {
            type: "boolean"
          },
          lock_repositories: {
            type: "boolean"
          },
          repositories: {
            required: true,
            type: "string[]"
          }
        },
        url: "/user/migrations"
      },
      startForOrg: {
        method: "POST",
        params: {
          exclude_attachments: {
            type: "boolean"
          },
          lock_repositories: {
            type: "boolean"
          },
          org: {
            required: true,
            type: "string"
          },
          repositories: {
            required: true,
            type: "string[]"
          }
        },
        url: "/orgs/:org/migrations"
      },
      startImport: {
        method: "PUT",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          tfvc_project: {
            type: "string"
          },
          vcs: {
            enum: ["subversion", "git", "mercurial", "tfvc"],
            type: "string"
          },
          vcs_password: {
            type: "string"
          },
          vcs_url: {
            required: true,
            type: "string"
          },
          vcs_username: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/import"
      },
      unlockRepoForAuthenticatedUser: {
        headers: {
          accept: "application/vnd.github.wyandotte-preview+json"
        },
        method: "DELETE",
        params: {
          migration_id: {
            required: true,
            type: "integer"
          },
          repo_name: {
            required: true,
            type: "string"
          }
        },
        url: "/user/migrations/:migration_id/repos/:repo_name/lock"
      },
      unlockRepoForOrg: {
        headers: {
          accept: "application/vnd.github.wyandotte-preview+json"
        },
        method: "DELETE",
        params: {
          migration_id: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          repo_name: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/migrations/:migration_id/repos/:repo_name/lock"
      },
      updateImport: {
        method: "PATCH",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          vcs_password: {
            type: "string"
          },
          vcs_username: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/import"
      }
    },
    oauthAuthorizations: {
      checkAuthorization: {
        deprecated: "octokit.oauthAuthorizations.checkAuthorization() has been renamed to octokit.apps.checkAuthorization() (2019-11-05)",
        method: "GET",
        params: {
          access_token: {
            required: true,
            type: "string"
          },
          client_id: {
            required: true,
            type: "string"
          }
        },
        url: "/applications/:client_id/tokens/:access_token"
      },
      createAuthorization: {
        deprecated: "octokit.oauthAuthorizations.createAuthorization() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization",
        method: "POST",
        params: {
          client_id: {
            type: "string"
          },
          client_secret: {
            type: "string"
          },
          fingerprint: {
            type: "string"
          },
          note: {
            required: true,
            type: "string"
          },
          note_url: {
            type: "string"
          },
          scopes: {
            type: "string[]"
          }
        },
        url: "/authorizations"
      },
      deleteAuthorization: {
        deprecated: "octokit.oauthAuthorizations.deleteAuthorization() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#delete-an-authorization",
        method: "DELETE",
        params: {
          authorization_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/authorizations/:authorization_id"
      },
      deleteGrant: {
        deprecated: "octokit.oauthAuthorizations.deleteGrant() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#delete-a-grant",
        method: "DELETE",
        params: {
          grant_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/applications/grants/:grant_id"
      },
      getAuthorization: {
        deprecated: "octokit.oauthAuthorizations.getAuthorization() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#get-a-single-authorization",
        method: "GET",
        params: {
          authorization_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/authorizations/:authorization_id"
      },
      getGrant: {
        deprecated: "octokit.oauthAuthorizations.getGrant() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#get-a-single-grant",
        method: "GET",
        params: {
          grant_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/applications/grants/:grant_id"
      },
      getOrCreateAuthorizationForApp: {
        deprecated: "octokit.oauthAuthorizations.getOrCreateAuthorizationForApp() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app",
        method: "PUT",
        params: {
          client_id: {
            required: true,
            type: "string"
          },
          client_secret: {
            required: true,
            type: "string"
          },
          fingerprint: {
            type: "string"
          },
          note: {
            type: "string"
          },
          note_url: {
            type: "string"
          },
          scopes: {
            type: "string[]"
          }
        },
        url: "/authorizations/clients/:client_id"
      },
      getOrCreateAuthorizationForAppAndFingerprint: {
        deprecated: "octokit.oauthAuthorizations.getOrCreateAuthorizationForAppAndFingerprint() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint",
        method: "PUT",
        params: {
          client_id: {
            required: true,
            type: "string"
          },
          client_secret: {
            required: true,
            type: "string"
          },
          fingerprint: {
            required: true,
            type: "string"
          },
          note: {
            type: "string"
          },
          note_url: {
            type: "string"
          },
          scopes: {
            type: "string[]"
          }
        },
        url: "/authorizations/clients/:client_id/:fingerprint"
      },
      getOrCreateAuthorizationForAppFingerprint: {
        deprecated: "octokit.oauthAuthorizations.getOrCreateAuthorizationForAppFingerprint() has been renamed to octokit.oauthAuthorizations.getOrCreateAuthorizationForAppAndFingerprint() (2018-12-27)",
        method: "PUT",
        params: {
          client_id: {
            required: true,
            type: "string"
          },
          client_secret: {
            required: true,
            type: "string"
          },
          fingerprint: {
            required: true,
            type: "string"
          },
          note: {
            type: "string"
          },
          note_url: {
            type: "string"
          },
          scopes: {
            type: "string[]"
          }
        },
        url: "/authorizations/clients/:client_id/:fingerprint"
      },
      listAuthorizations: {
        deprecated: "octokit.oauthAuthorizations.listAuthorizations() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#list-your-authorizations",
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/authorizations"
      },
      listGrants: {
        deprecated: "octokit.oauthAuthorizations.listGrants() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#list-your-grants",
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/applications/grants"
      },
      resetAuthorization: {
        deprecated: "octokit.oauthAuthorizations.resetAuthorization() has been renamed to octokit.apps.resetAuthorization() (2019-11-05)",
        method: "POST",
        params: {
          access_token: {
            required: true,
            type: "string"
          },
          client_id: {
            required: true,
            type: "string"
          }
        },
        url: "/applications/:client_id/tokens/:access_token"
      },
      revokeAuthorizationForApplication: {
        deprecated: "octokit.oauthAuthorizations.revokeAuthorizationForApplication() has been renamed to octokit.apps.revokeAuthorizationForApplication() (2019-11-05)",
        method: "DELETE",
        params: {
          access_token: {
            required: true,
            type: "string"
          },
          client_id: {
            required: true,
            type: "string"
          }
        },
        url: "/applications/:client_id/tokens/:access_token"
      },
      revokeGrantForApplication: {
        deprecated: "octokit.oauthAuthorizations.revokeGrantForApplication() has been renamed to octokit.apps.revokeGrantForApplication() (2019-11-05)",
        method: "DELETE",
        params: {
          access_token: {
            required: true,
            type: "string"
          },
          client_id: {
            required: true,
            type: "string"
          }
        },
        url: "/applications/:client_id/grants/:access_token"
      },
      updateAuthorization: {
        deprecated: "octokit.oauthAuthorizations.updateAuthorization() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#update-an-existing-authorization",
        method: "PATCH",
        params: {
          add_scopes: {
            type: "string[]"
          },
          authorization_id: {
            required: true,
            type: "integer"
          },
          fingerprint: {
            type: "string"
          },
          note: {
            type: "string"
          },
          note_url: {
            type: "string"
          },
          remove_scopes: {
            type: "string[]"
          },
          scopes: {
            type: "string[]"
          }
        },
        url: "/authorizations/:authorization_id"
      }
    },
    orgs: {
      addOrUpdateMembership: {
        method: "PUT",
        params: {
          org: {
            required: true,
            type: "string"
          },
          role: {
            enum: ["admin", "member"],
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/memberships/:username"
      },
      blockUser: {
        method: "PUT",
        params: {
          org: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/blocks/:username"
      },
      checkBlockedUser: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/blocks/:username"
      },
      checkMembership: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/members/:username"
      },
      checkPublicMembership: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/public_members/:username"
      },
      concealMembership: {
        method: "DELETE",
        params: {
          org: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/public_members/:username"
      },
      convertMemberToOutsideCollaborator: {
        method: "PUT",
        params: {
          org: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/outside_collaborators/:username"
      },
      createHook: {
        method: "POST",
        params: {
          active: {
            type: "boolean"
          },
          config: {
            required: true,
            type: "object"
          },
          "config.content_type": {
            type: "string"
          },
          "config.insecure_ssl": {
            type: "string"
          },
          "config.secret": {
            type: "string"
          },
          "config.url": {
            required: true,
            type: "string"
          },
          events: {
            type: "string[]"
          },
          name: {
            required: true,
            type: "string"
          },
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/hooks"
      },
      createInvitation: {
        method: "POST",
        params: {
          email: {
            type: "string"
          },
          invitee_id: {
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          role: {
            enum: ["admin", "direct_member", "billing_manager"],
            type: "string"
          },
          team_ids: {
            type: "integer[]"
          }
        },
        url: "/orgs/:org/invitations"
      },
      deleteHook: {
        method: "DELETE",
        params: {
          hook_id: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/hooks/:hook_id"
      },
      get: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org"
      },
      getHook: {
        method: "GET",
        params: {
          hook_id: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/hooks/:hook_id"
      },
      getMembership: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/memberships/:username"
      },
      getMembershipForAuthenticatedUser: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/user/memberships/orgs/:org"
      },
      list: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          since: {
            type: "integer"
          }
        },
        url: "/organizations"
      },
      listBlockedUsers: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/blocks"
      },
      listForAuthenticatedUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/orgs"
      },
      listForUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/orgs"
      },
      listHooks: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/orgs/:org/hooks"
      },
      listInstallations: {
        headers: {
          accept: "application/vnd.github.machine-man-preview+json"
        },
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/orgs/:org/installations"
      },
      listInvitationTeams: {
        method: "GET",
        params: {
          invitation_id: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/orgs/:org/invitations/:invitation_id/teams"
      },
      listMembers: {
        method: "GET",
        params: {
          filter: {
            enum: ["2fa_disabled", "all"],
            type: "string"
          },
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          role: {
            enum: ["all", "admin", "member"],
            type: "string"
          }
        },
        url: "/orgs/:org/members"
      },
      listMemberships: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          state: {
            enum: ["active", "pending"],
            type: "string"
          }
        },
        url: "/user/memberships/orgs"
      },
      listOutsideCollaborators: {
        method: "GET",
        params: {
          filter: {
            enum: ["2fa_disabled", "all"],
            type: "string"
          },
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/orgs/:org/outside_collaborators"
      },
      listPendingInvitations: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/orgs/:org/invitations"
      },
      listPublicMembers: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/orgs/:org/public_members"
      },
      pingHook: {
        method: "POST",
        params: {
          hook_id: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/hooks/:hook_id/pings"
      },
      publicizeMembership: {
        method: "PUT",
        params: {
          org: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/public_members/:username"
      },
      removeMember: {
        method: "DELETE",
        params: {
          org: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/members/:username"
      },
      removeMembership: {
        method: "DELETE",
        params: {
          org: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/memberships/:username"
      },
      removeOutsideCollaborator: {
        method: "DELETE",
        params: {
          org: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/outside_collaborators/:username"
      },
      unblockUser: {
        method: "DELETE",
        params: {
          org: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/blocks/:username"
      },
      update: {
        method: "PATCH",
        params: {
          billing_email: {
            type: "string"
          },
          company: {
            type: "string"
          },
          default_repository_permission: {
            enum: ["read", "write", "admin", "none"],
            type: "string"
          },
          description: {
            type: "string"
          },
          email: {
            type: "string"
          },
          has_organization_projects: {
            type: "boolean"
          },
          has_repository_projects: {
            type: "boolean"
          },
          location: {
            type: "string"
          },
          members_allowed_repository_creation_type: {
            enum: ["all", "private", "none"],
            type: "string"
          },
          members_can_create_internal_repositories: {
            type: "boolean"
          },
          members_can_create_private_repositories: {
            type: "boolean"
          },
          members_can_create_public_repositories: {
            type: "boolean"
          },
          members_can_create_repositories: {
            type: "boolean"
          },
          name: {
            type: "string"
          },
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org"
      },
      updateHook: {
        method: "PATCH",
        params: {
          active: {
            type: "boolean"
          },
          config: {
            type: "object"
          },
          "config.content_type": {
            type: "string"
          },
          "config.insecure_ssl": {
            type: "string"
          },
          "config.secret": {
            type: "string"
          },
          "config.url": {
            required: true,
            type: "string"
          },
          events: {
            type: "string[]"
          },
          hook_id: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/hooks/:hook_id"
      },
      updateMembership: {
        method: "PATCH",
        params: {
          org: {
            required: true,
            type: "string"
          },
          state: {
            enum: ["active"],
            required: true,
            type: "string"
          }
        },
        url: "/user/memberships/orgs/:org"
      }
    },
    projects: {
      addCollaborator: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "PUT",
        params: {
          permission: {
            enum: ["read", "write", "admin"],
            type: "string"
          },
          project_id: {
            required: true,
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/projects/:project_id/collaborators/:username"
      },
      createCard: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "POST",
        params: {
          column_id: {
            required: true,
            type: "integer"
          },
          content_id: {
            type: "integer"
          },
          content_type: {
            type: "string"
          },
          note: {
            type: "string"
          }
        },
        url: "/projects/columns/:column_id/cards"
      },
      createColumn: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "POST",
        params: {
          name: {
            required: true,
            type: "string"
          },
          project_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/projects/:project_id/columns"
      },
      createForAuthenticatedUser: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "POST",
        params: {
          body: {
            type: "string"
          },
          name: {
            required: true,
            type: "string"
          }
        },
        url: "/user/projects"
      },
      createForOrg: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "POST",
        params: {
          body: {
            type: "string"
          },
          name: {
            required: true,
            type: "string"
          },
          org: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/projects"
      },
      createForRepo: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "POST",
        params: {
          body: {
            type: "string"
          },
          name: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/projects"
      },
      delete: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "DELETE",
        params: {
          project_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/projects/:project_id"
      },
      deleteCard: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "DELETE",
        params: {
          card_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/projects/columns/cards/:card_id"
      },
      deleteColumn: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "DELETE",
        params: {
          column_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/projects/columns/:column_id"
      },
      get: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          project_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/projects/:project_id"
      },
      getCard: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          card_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/projects/columns/cards/:card_id"
      },
      getColumn: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          column_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/projects/columns/:column_id"
      },
      listCards: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          archived_state: {
            enum: ["all", "archived", "not_archived"],
            type: "string"
          },
          column_id: {
            required: true,
            type: "integer"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/projects/columns/:column_id/cards"
      },
      listCollaborators: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          affiliation: {
            enum: ["outside", "direct", "all"],
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          project_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/projects/:project_id/collaborators"
      },
      listColumns: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          project_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/projects/:project_id/columns"
      },
      listForOrg: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          state: {
            enum: ["open", "closed", "all"],
            type: "string"
          }
        },
        url: "/orgs/:org/projects"
      },
      listForRepo: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          state: {
            enum: ["open", "closed", "all"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/projects"
      },
      listForUser: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          state: {
            enum: ["open", "closed", "all"],
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/projects"
      },
      moveCard: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "POST",
        params: {
          card_id: {
            required: true,
            type: "integer"
          },
          column_id: {
            type: "integer"
          },
          position: {
            required: true,
            type: "string",
            validation: "^(top|bottom|after:\\d+)$"
          }
        },
        url: "/projects/columns/cards/:card_id/moves"
      },
      moveColumn: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "POST",
        params: {
          column_id: {
            required: true,
            type: "integer"
          },
          position: {
            required: true,
            type: "string",
            validation: "^(first|last|after:\\d+)$"
          }
        },
        url: "/projects/columns/:column_id/moves"
      },
      removeCollaborator: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "DELETE",
        params: {
          project_id: {
            required: true,
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/projects/:project_id/collaborators/:username"
      },
      reviewUserPermissionLevel: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          project_id: {
            required: true,
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/projects/:project_id/collaborators/:username/permission"
      },
      update: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "PATCH",
        params: {
          body: {
            type: "string"
          },
          name: {
            type: "string"
          },
          organization_permission: {
            type: "string"
          },
          private: {
            type: "boolean"
          },
          project_id: {
            required: true,
            type: "integer"
          },
          state: {
            enum: ["open", "closed"],
            type: "string"
          }
        },
        url: "/projects/:project_id"
      },
      updateCard: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "PATCH",
        params: {
          archived: {
            type: "boolean"
          },
          card_id: {
            required: true,
            type: "integer"
          },
          note: {
            type: "string"
          }
        },
        url: "/projects/columns/cards/:card_id"
      },
      updateColumn: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "PATCH",
        params: {
          column_id: {
            required: true,
            type: "integer"
          },
          name: {
            required: true,
            type: "string"
          }
        },
        url: "/projects/columns/:column_id"
      }
    },
    pulls: {
      checkIfMerged: {
        method: "GET",
        params: {
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/merge"
      },
      create: {
        method: "POST",
        params: {
          base: {
            required: true,
            type: "string"
          },
          body: {
            type: "string"
          },
          draft: {
            type: "boolean"
          },
          head: {
            required: true,
            type: "string"
          },
          maintainer_can_modify: {
            type: "boolean"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          title: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls"
      },
      createComment: {
        method: "POST",
        params: {
          body: {
            required: true,
            type: "string"
          },
          commit_id: {
            required: true,
            type: "string"
          },
          in_reply_to: {
            deprecated: true,
            description: "The comment ID to reply to. **Note**: This must be the ID of a top-level comment, not a reply to that comment. Replies to replies are not supported.",
            type: "integer"
          },
          line: {
            type: "integer"
          },
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          path: {
            required: true,
            type: "string"
          },
          position: {
            type: "integer"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          side: {
            enum: ["LEFT", "RIGHT"],
            type: "string"
          },
          start_line: {
            type: "integer"
          },
          start_side: {
            enum: ["LEFT", "RIGHT", "side"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/comments"
      },
      createCommentReply: {
        deprecated: "octokit.pulls.createCommentReply() has been renamed to octokit.pulls.createComment() (2019-09-09)",
        method: "POST",
        params: {
          body: {
            required: true,
            type: "string"
          },
          commit_id: {
            required: true,
            type: "string"
          },
          in_reply_to: {
            deprecated: true,
            description: "The comment ID to reply to. **Note**: This must be the ID of a top-level comment, not a reply to that comment. Replies to replies are not supported.",
            type: "integer"
          },
          line: {
            type: "integer"
          },
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          path: {
            required: true,
            type: "string"
          },
          position: {
            type: "integer"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          side: {
            enum: ["LEFT", "RIGHT"],
            type: "string"
          },
          start_line: {
            type: "integer"
          },
          start_side: {
            enum: ["LEFT", "RIGHT", "side"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/comments"
      },
      createFromIssue: {
        deprecated: "octokit.pulls.createFromIssue() is deprecated, see https://developer.github.com/v3/pulls/#create-a-pull-request",
        method: "POST",
        params: {
          base: {
            required: true,
            type: "string"
          },
          draft: {
            type: "boolean"
          },
          head: {
            required: true,
            type: "string"
          },
          issue: {
            required: true,
            type: "integer"
          },
          maintainer_can_modify: {
            type: "boolean"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls"
      },
      createReview: {
        method: "POST",
        params: {
          body: {
            type: "string"
          },
          comments: {
            type: "object[]"
          },
          "comments[].body": {
            required: true,
            type: "string"
          },
          "comments[].path": {
            required: true,
            type: "string"
          },
          "comments[].position": {
            required: true,
            type: "integer"
          },
          commit_id: {
            type: "string"
          },
          event: {
            enum: ["APPROVE", "REQUEST_CHANGES", "COMMENT"],
            type: "string"
          },
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/reviews"
      },
      createReviewCommentReply: {
        method: "POST",
        params: {
          body: {
            required: true,
            type: "string"
          },
          comment_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/comments/:comment_id/replies"
      },
      createReviewRequest: {
        method: "POST",
        params: {
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          reviewers: {
            type: "string[]"
          },
          team_reviewers: {
            type: "string[]"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/requested_reviewers"
      },
      deleteComment: {
        method: "DELETE",
        params: {
          comment_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/comments/:comment_id"
      },
      deletePendingReview: {
        method: "DELETE",
        params: {
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          review_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id"
      },
      deleteReviewRequest: {
        method: "DELETE",
        params: {
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          reviewers: {
            type: "string[]"
          },
          team_reviewers: {
            type: "string[]"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/requested_reviewers"
      },
      dismissReview: {
        method: "PUT",
        params: {
          message: {
            required: true,
            type: "string"
          },
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          review_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/dismissals"
      },
      get: {
        method: "GET",
        params: {
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number"
      },
      getComment: {
        method: "GET",
        params: {
          comment_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/comments/:comment_id"
      },
      getCommentsForReview: {
        method: "GET",
        params: {
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          review_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/comments"
      },
      getReview: {
        method: "GET",
        params: {
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          review_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id"
      },
      list: {
        method: "GET",
        params: {
          base: {
            type: "string"
          },
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          head: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          sort: {
            enum: ["created", "updated", "popularity", "long-running"],
            type: "string"
          },
          state: {
            enum: ["open", "closed", "all"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls"
      },
      listComments: {
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          since: {
            type: "string"
          },
          sort: {
            enum: ["created", "updated"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/comments"
      },
      listCommentsForRepo: {
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          since: {
            type: "string"
          },
          sort: {
            enum: ["created", "updated"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/comments"
      },
      listCommits: {
        method: "GET",
        params: {
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/commits"
      },
      listFiles: {
        method: "GET",
        params: {
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/files"
      },
      listReviewRequests: {
        method: "GET",
        params: {
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/requested_reviewers"
      },
      listReviews: {
        method: "GET",
        params: {
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/reviews"
      },
      merge: {
        method: "PUT",
        params: {
          commit_message: {
            type: "string"
          },
          commit_title: {
            type: "string"
          },
          merge_method: {
            enum: ["merge", "squash", "rebase"],
            type: "string"
          },
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          sha: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/merge"
      },
      submitReview: {
        method: "POST",
        params: {
          body: {
            type: "string"
          },
          event: {
            enum: ["APPROVE", "REQUEST_CHANGES", "COMMENT"],
            required: true,
            type: "string"
          },
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          review_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/events"
      },
      update: {
        method: "PATCH",
        params: {
          base: {
            type: "string"
          },
          body: {
            type: "string"
          },
          maintainer_can_modify: {
            type: "boolean"
          },
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          state: {
            enum: ["open", "closed"],
            type: "string"
          },
          title: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number"
      },
      updateBranch: {
        headers: {
          accept: "application/vnd.github.lydian-preview+json"
        },
        method: "PUT",
        params: {
          expected_head_sha: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/update-branch"
      },
      updateComment: {
        method: "PATCH",
        params: {
          body: {
            required: true,
            type: "string"
          },
          comment_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/comments/:comment_id"
      },
      updateReview: {
        method: "PUT",
        params: {
          body: {
            required: true,
            type: "string"
          },
          number: {
            alias: "pull_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          pull_number: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          review_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id"
      }
    },
    rateLimit: {
      get: {
        method: "GET",
        params: {},
        url: "/rate_limit"
      }
    },
    reactions: {
      createForCommitComment: {
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "POST",
        params: {
          comment_id: {
            required: true,
            type: "integer"
          },
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/comments/:comment_id/reactions"
      },
      createForIssue: {
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "POST",
        params: {
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            required: true,
            type: "string"
          },
          issue_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number/reactions"
      },
      createForIssueComment: {
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "POST",
        params: {
          comment_id: {
            required: true,
            type: "integer"
          },
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/comments/:comment_id/reactions"
      },
      createForPullRequestReviewComment: {
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "POST",
        params: {
          comment_id: {
            required: true,
            type: "integer"
          },
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/comments/:comment_id/reactions"
      },
      createForTeamDiscussion: {
        deprecated: "octokit.reactions.createForTeamDiscussion() has been renamed to octokit.reactions.createForTeamDiscussionLegacy() (2020-01-16)",
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "POST",
        params: {
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            required: true,
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/reactions"
      },
      createForTeamDiscussionComment: {
        deprecated: "octokit.reactions.createForTeamDiscussionComment() has been renamed to octokit.reactions.createForTeamDiscussionCommentLegacy() (2020-01-16)",
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "POST",
        params: {
          comment_number: {
            required: true,
            type: "integer"
          },
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            required: true,
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"
      },
      createForTeamDiscussionCommentInOrg: {
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "POST",
        params: {
          comment_number: {
            required: true,
            type: "integer"
          },
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            required: true,
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number/reactions"
      },
      createForTeamDiscussionCommentLegacy: {
        deprecated: "octokit.reactions.createForTeamDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion-comment-legacy",
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "POST",
        params: {
          comment_number: {
            required: true,
            type: "integer"
          },
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            required: true,
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"
      },
      createForTeamDiscussionInOrg: {
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "POST",
        params: {
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            required: true,
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/reactions"
      },
      createForTeamDiscussionLegacy: {
        deprecated: "octokit.reactions.createForTeamDiscussionLegacy() is deprecated, see https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion-legacy",
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "POST",
        params: {
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            required: true,
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/reactions"
      },
      delete: {
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "DELETE",
        params: {
          reaction_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/reactions/:reaction_id"
      },
      listForCommitComment: {
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "GET",
        params: {
          comment_id: {
            required: true,
            type: "integer"
          },
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/comments/:comment_id/reactions"
      },
      listForIssue: {
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "GET",
        params: {
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            type: "string"
          },
          issue_number: {
            required: true,
            type: "integer"
          },
          number: {
            alias: "issue_number",
            deprecated: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/:issue_number/reactions"
      },
      listForIssueComment: {
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "GET",
        params: {
          comment_id: {
            required: true,
            type: "integer"
          },
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/issues/comments/:comment_id/reactions"
      },
      listForPullRequestReviewComment: {
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "GET",
        params: {
          comment_id: {
            required: true,
            type: "integer"
          },
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pulls/comments/:comment_id/reactions"
      },
      listForTeamDiscussion: {
        deprecated: "octokit.reactions.listForTeamDiscussion() has been renamed to octokit.reactions.listForTeamDiscussionLegacy() (2020-01-16)",
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "GET",
        params: {
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/reactions"
      },
      listForTeamDiscussionComment: {
        deprecated: "octokit.reactions.listForTeamDiscussionComment() has been renamed to octokit.reactions.listForTeamDiscussionCommentLegacy() (2020-01-16)",
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "GET",
        params: {
          comment_number: {
            required: true,
            type: "integer"
          },
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"
      },
      listForTeamDiscussionCommentInOrg: {
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "GET",
        params: {
          comment_number: {
            required: true,
            type: "integer"
          },
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number/reactions"
      },
      listForTeamDiscussionCommentLegacy: {
        deprecated: "octokit.reactions.listForTeamDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment-legacy",
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "GET",
        params: {
          comment_number: {
            required: true,
            type: "integer"
          },
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"
      },
      listForTeamDiscussionInOrg: {
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "GET",
        params: {
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/reactions"
      },
      listForTeamDiscussionLegacy: {
        deprecated: "octokit.reactions.listForTeamDiscussionLegacy() is deprecated, see https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-legacy",
        headers: {
          accept: "application/vnd.github.squirrel-girl-preview+json"
        },
        method: "GET",
        params: {
          content: {
            enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/reactions"
      }
    },
    repos: {
      acceptInvitation: {
        method: "PATCH",
        params: {
          invitation_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/user/repository_invitations/:invitation_id"
      },
      addCollaborator: {
        method: "PUT",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          permission: {
            enum: ["pull", "push", "admin"],
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/collaborators/:username"
      },
      addDeployKey: {
        method: "POST",
        params: {
          key: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          read_only: {
            type: "boolean"
          },
          repo: {
            required: true,
            type: "string"
          },
          title: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/keys"
      },
      addProtectedBranchAdminEnforcement: {
        method: "POST",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/enforce_admins"
      },
      addProtectedBranchAppRestrictions: {
        method: "POST",
        params: {
          apps: {
            mapTo: "data",
            required: true,
            type: "string[]"
          },
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"
      },
      addProtectedBranchRequiredSignatures: {
        headers: {
          accept: "application/vnd.github.zzzax-preview+json"
        },
        method: "POST",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/required_signatures"
      },
      addProtectedBranchRequiredStatusChecksContexts: {
        method: "POST",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          contexts: {
            mapTo: "data",
            required: true,
            type: "string[]"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
      },
      addProtectedBranchTeamRestrictions: {
        method: "POST",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          teams: {
            mapTo: "data",
            required: true,
            type: "string[]"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
      },
      addProtectedBranchUserRestrictions: {
        method: "POST",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          users: {
            mapTo: "data",
            required: true,
            type: "string[]"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
      },
      checkCollaborator: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/collaborators/:username"
      },
      checkVulnerabilityAlerts: {
        headers: {
          accept: "application/vnd.github.dorian-preview+json"
        },
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/vulnerability-alerts"
      },
      compareCommits: {
        method: "GET",
        params: {
          base: {
            required: true,
            type: "string"
          },
          head: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/compare/:base...:head"
      },
      createCommitComment: {
        method: "POST",
        params: {
          body: {
            required: true,
            type: "string"
          },
          commit_sha: {
            required: true,
            type: "string"
          },
          line: {
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          path: {
            type: "string"
          },
          position: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          sha: {
            alias: "commit_sha",
            deprecated: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/commits/:commit_sha/comments"
      },
      createDeployment: {
        method: "POST",
        params: {
          auto_merge: {
            type: "boolean"
          },
          description: {
            type: "string"
          },
          environment: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          payload: {
            type: "string"
          },
          production_environment: {
            type: "boolean"
          },
          ref: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          required_contexts: {
            type: "string[]"
          },
          task: {
            type: "string"
          },
          transient_environment: {
            type: "boolean"
          }
        },
        url: "/repos/:owner/:repo/deployments"
      },
      createDeploymentStatus: {
        method: "POST",
        params: {
          auto_inactive: {
            type: "boolean"
          },
          deployment_id: {
            required: true,
            type: "integer"
          },
          description: {
            type: "string"
          },
          environment: {
            enum: ["production", "staging", "qa"],
            type: "string"
          },
          environment_url: {
            type: "string"
          },
          log_url: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          state: {
            enum: ["error", "failure", "inactive", "in_progress", "queued", "pending", "success"],
            required: true,
            type: "string"
          },
          target_url: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/deployments/:deployment_id/statuses"
      },
      createDispatchEvent: {
        method: "POST",
        params: {
          client_payload: {
            type: "object"
          },
          event_type: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/dispatches"
      },
      createFile: {
        deprecated: "octokit.repos.createFile() has been renamed to octokit.repos.createOrUpdateFile() (2019-06-07)",
        method: "PUT",
        params: {
          author: {
            type: "object"
          },
          "author.email": {
            required: true,
            type: "string"
          },
          "author.name": {
            required: true,
            type: "string"
          },
          branch: {
            type: "string"
          },
          committer: {
            type: "object"
          },
          "committer.email": {
            required: true,
            type: "string"
          },
          "committer.name": {
            required: true,
            type: "string"
          },
          content: {
            required: true,
            type: "string"
          },
          message: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          path: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          sha: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/contents/:path"
      },
      createForAuthenticatedUser: {
        method: "POST",
        params: {
          allow_merge_commit: {
            type: "boolean"
          },
          allow_rebase_merge: {
            type: "boolean"
          },
          allow_squash_merge: {
            type: "boolean"
          },
          auto_init: {
            type: "boolean"
          },
          delete_branch_on_merge: {
            type: "boolean"
          },
          description: {
            type: "string"
          },
          gitignore_template: {
            type: "string"
          },
          has_issues: {
            type: "boolean"
          },
          has_projects: {
            type: "boolean"
          },
          has_wiki: {
            type: "boolean"
          },
          homepage: {
            type: "string"
          },
          is_template: {
            type: "boolean"
          },
          license_template: {
            type: "string"
          },
          name: {
            required: true,
            type: "string"
          },
          private: {
            type: "boolean"
          },
          team_id: {
            type: "integer"
          },
          visibility: {
            enum: ["public", "private", "visibility", "internal"],
            type: "string"
          }
        },
        url: "/user/repos"
      },
      createFork: {
        method: "POST",
        params: {
          organization: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/forks"
      },
      createHook: {
        method: "POST",
        params: {
          active: {
            type: "boolean"
          },
          config: {
            required: true,
            type: "object"
          },
          "config.content_type": {
            type: "string"
          },
          "config.insecure_ssl": {
            type: "string"
          },
          "config.secret": {
            type: "string"
          },
          "config.url": {
            required: true,
            type: "string"
          },
          events: {
            type: "string[]"
          },
          name: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/hooks"
      },
      createInOrg: {
        method: "POST",
        params: {
          allow_merge_commit: {
            type: "boolean"
          },
          allow_rebase_merge: {
            type: "boolean"
          },
          allow_squash_merge: {
            type: "boolean"
          },
          auto_init: {
            type: "boolean"
          },
          delete_branch_on_merge: {
            type: "boolean"
          },
          description: {
            type: "string"
          },
          gitignore_template: {
            type: "string"
          },
          has_issues: {
            type: "boolean"
          },
          has_projects: {
            type: "boolean"
          },
          has_wiki: {
            type: "boolean"
          },
          homepage: {
            type: "string"
          },
          is_template: {
            type: "boolean"
          },
          license_template: {
            type: "string"
          },
          name: {
            required: true,
            type: "string"
          },
          org: {
            required: true,
            type: "string"
          },
          private: {
            type: "boolean"
          },
          team_id: {
            type: "integer"
          },
          visibility: {
            enum: ["public", "private", "visibility", "internal"],
            type: "string"
          }
        },
        url: "/orgs/:org/repos"
      },
      createOrUpdateFile: {
        method: "PUT",
        params: {
          author: {
            type: "object"
          },
          "author.email": {
            required: true,
            type: "string"
          },
          "author.name": {
            required: true,
            type: "string"
          },
          branch: {
            type: "string"
          },
          committer: {
            type: "object"
          },
          "committer.email": {
            required: true,
            type: "string"
          },
          "committer.name": {
            required: true,
            type: "string"
          },
          content: {
            required: true,
            type: "string"
          },
          message: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          path: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          sha: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/contents/:path"
      },
      createRelease: {
        method: "POST",
        params: {
          body: {
            type: "string"
          },
          draft: {
            type: "boolean"
          },
          name: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          prerelease: {
            type: "boolean"
          },
          repo: {
            required: true,
            type: "string"
          },
          tag_name: {
            required: true,
            type: "string"
          },
          target_commitish: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/releases"
      },
      createStatus: {
        method: "POST",
        params: {
          context: {
            type: "string"
          },
          description: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          sha: {
            required: true,
            type: "string"
          },
          state: {
            enum: ["error", "failure", "pending", "success"],
            required: true,
            type: "string"
          },
          target_url: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/statuses/:sha"
      },
      createUsingTemplate: {
        headers: {
          accept: "application/vnd.github.baptiste-preview+json"
        },
        method: "POST",
        params: {
          description: {
            type: "string"
          },
          name: {
            required: true,
            type: "string"
          },
          owner: {
            type: "string"
          },
          private: {
            type: "boolean"
          },
          template_owner: {
            required: true,
            type: "string"
          },
          template_repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:template_owner/:template_repo/generate"
      },
      declineInvitation: {
        method: "DELETE",
        params: {
          invitation_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/user/repository_invitations/:invitation_id"
      },
      delete: {
        method: "DELETE",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo"
      },
      deleteCommitComment: {
        method: "DELETE",
        params: {
          comment_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/comments/:comment_id"
      },
      deleteDownload: {
        method: "DELETE",
        params: {
          download_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/downloads/:download_id"
      },
      deleteFile: {
        method: "DELETE",
        params: {
          author: {
            type: "object"
          },
          "author.email": {
            type: "string"
          },
          "author.name": {
            type: "string"
          },
          branch: {
            type: "string"
          },
          committer: {
            type: "object"
          },
          "committer.email": {
            type: "string"
          },
          "committer.name": {
            type: "string"
          },
          message: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          path: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          sha: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/contents/:path"
      },
      deleteHook: {
        method: "DELETE",
        params: {
          hook_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/hooks/:hook_id"
      },
      deleteInvitation: {
        method: "DELETE",
        params: {
          invitation_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/invitations/:invitation_id"
      },
      deleteRelease: {
        method: "DELETE",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          release_id: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/releases/:release_id"
      },
      deleteReleaseAsset: {
        method: "DELETE",
        params: {
          asset_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/releases/assets/:asset_id"
      },
      disableAutomatedSecurityFixes: {
        headers: {
          accept: "application/vnd.github.london-preview+json"
        },
        method: "DELETE",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/automated-security-fixes"
      },
      disablePagesSite: {
        headers: {
          accept: "application/vnd.github.switcheroo-preview+json"
        },
        method: "DELETE",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pages"
      },
      disableVulnerabilityAlerts: {
        headers: {
          accept: "application/vnd.github.dorian-preview+json"
        },
        method: "DELETE",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/vulnerability-alerts"
      },
      enableAutomatedSecurityFixes: {
        headers: {
          accept: "application/vnd.github.london-preview+json"
        },
        method: "PUT",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/automated-security-fixes"
      },
      enablePagesSite: {
        headers: {
          accept: "application/vnd.github.switcheroo-preview+json"
        },
        method: "POST",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          source: {
            type: "object"
          },
          "source.branch": {
            enum: ["master", "gh-pages"],
            type: "string"
          },
          "source.path": {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pages"
      },
      enableVulnerabilityAlerts: {
        headers: {
          accept: "application/vnd.github.dorian-preview+json"
        },
        method: "PUT",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/vulnerability-alerts"
      },
      get: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo"
      },
      getAppsWithAccessToProtectedBranch: {
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"
      },
      getArchiveLink: {
        method: "GET",
        params: {
          archive_format: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          ref: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/:archive_format/:ref"
      },
      getBranch: {
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch"
      },
      getBranchProtection: {
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection"
      },
      getClones: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          per: {
            enum: ["day", "week"],
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/traffic/clones"
      },
      getCodeFrequencyStats: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/stats/code_frequency"
      },
      getCollaboratorPermissionLevel: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/collaborators/:username/permission"
      },
      getCombinedStatusForRef: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          ref: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/commits/:ref/status"
      },
      getCommit: {
        method: "GET",
        params: {
          commit_sha: {
            alias: "ref",
            deprecated: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          ref: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          sha: {
            alias: "ref",
            deprecated: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/commits/:ref"
      },
      getCommitActivityStats: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/stats/commit_activity"
      },
      getCommitComment: {
        method: "GET",
        params: {
          comment_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/comments/:comment_id"
      },
      getCommitRefSha: {
        deprecated: "octokit.repos.getCommitRefSha() is deprecated, see https://developer.github.com/v3/repos/commits/#get-a-single-commit",
        headers: {
          accept: "application/vnd.github.v3.sha"
        },
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          ref: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/commits/:ref"
      },
      getContents: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          path: {
            required: true,
            type: "string"
          },
          ref: {
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/contents/:path"
      },
      getContributorsStats: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/stats/contributors"
      },
      getDeployKey: {
        method: "GET",
        params: {
          key_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/keys/:key_id"
      },
      getDeployment: {
        method: "GET",
        params: {
          deployment_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/deployments/:deployment_id"
      },
      getDeploymentStatus: {
        method: "GET",
        params: {
          deployment_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          status_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/deployments/:deployment_id/statuses/:status_id"
      },
      getDownload: {
        method: "GET",
        params: {
          download_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/downloads/:download_id"
      },
      getHook: {
        method: "GET",
        params: {
          hook_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/hooks/:hook_id"
      },
      getLatestPagesBuild: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pages/builds/latest"
      },
      getLatestRelease: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/releases/latest"
      },
      getPages: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pages"
      },
      getPagesBuild: {
        method: "GET",
        params: {
          build_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pages/builds/:build_id"
      },
      getParticipationStats: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/stats/participation"
      },
      getProtectedBranchAdminEnforcement: {
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/enforce_admins"
      },
      getProtectedBranchPullRequestReviewEnforcement: {
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews"
      },
      getProtectedBranchRequiredSignatures: {
        headers: {
          accept: "application/vnd.github.zzzax-preview+json"
        },
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/required_signatures"
      },
      getProtectedBranchRequiredStatusChecks: {
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/required_status_checks"
      },
      getProtectedBranchRestrictions: {
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions"
      },
      getPunchCardStats: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/stats/punch_card"
      },
      getReadme: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          ref: {
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/readme"
      },
      getRelease: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          release_id: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/releases/:release_id"
      },
      getReleaseAsset: {
        method: "GET",
        params: {
          asset_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/releases/assets/:asset_id"
      },
      getReleaseByTag: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          tag: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/releases/tags/:tag"
      },
      getTeamsWithAccessToProtectedBranch: {
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
      },
      getTopPaths: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/traffic/popular/paths"
      },
      getTopReferrers: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/traffic/popular/referrers"
      },
      getUsersWithAccessToProtectedBranch: {
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
      },
      getViews: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          per: {
            enum: ["day", "week"],
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/traffic/views"
      },
      list: {
        method: "GET",
        params: {
          affiliation: {
            type: "string"
          },
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          sort: {
            enum: ["created", "updated", "pushed", "full_name"],
            type: "string"
          },
          type: {
            enum: ["all", "owner", "public", "private", "member"],
            type: "string"
          },
          visibility: {
            enum: ["all", "public", "private"],
            type: "string"
          }
        },
        url: "/user/repos"
      },
      listAppsWithAccessToProtectedBranch: {
        deprecated: "octokit.repos.listAppsWithAccessToProtectedBranch() has been renamed to octokit.repos.getAppsWithAccessToProtectedBranch() (2019-09-13)",
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"
      },
      listAssetsForRelease: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          release_id: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/releases/:release_id/assets"
      },
      listBranches: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          protected: {
            type: "boolean"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches"
      },
      listBranchesForHeadCommit: {
        headers: {
          accept: "application/vnd.github.groot-preview+json"
        },
        method: "GET",
        params: {
          commit_sha: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/commits/:commit_sha/branches-where-head"
      },
      listCollaborators: {
        method: "GET",
        params: {
          affiliation: {
            enum: ["outside", "direct", "all"],
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/collaborators"
      },
      listCommentsForCommit: {
        method: "GET",
        params: {
          commit_sha: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          ref: {
            alias: "commit_sha",
            deprecated: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/commits/:commit_sha/comments"
      },
      listCommitComments: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/comments"
      },
      listCommits: {
        method: "GET",
        params: {
          author: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          path: {
            type: "string"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          sha: {
            type: "string"
          },
          since: {
            type: "string"
          },
          until: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/commits"
      },
      listContributors: {
        method: "GET",
        params: {
          anon: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/contributors"
      },
      listDeployKeys: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/keys"
      },
      listDeploymentStatuses: {
        method: "GET",
        params: {
          deployment_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/deployments/:deployment_id/statuses"
      },
      listDeployments: {
        method: "GET",
        params: {
          environment: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          ref: {
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          sha: {
            type: "string"
          },
          task: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/deployments"
      },
      listDownloads: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/downloads"
      },
      listForOrg: {
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          sort: {
            enum: ["created", "updated", "pushed", "full_name"],
            type: "string"
          },
          type: {
            enum: ["all", "public", "private", "forks", "sources", "member", "internal"],
            type: "string"
          }
        },
        url: "/orgs/:org/repos"
      },
      listForUser: {
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          sort: {
            enum: ["created", "updated", "pushed", "full_name"],
            type: "string"
          },
          type: {
            enum: ["all", "owner", "member"],
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/repos"
      },
      listForks: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          sort: {
            enum: ["newest", "oldest", "stargazers"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/forks"
      },
      listHooks: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/hooks"
      },
      listInvitations: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/invitations"
      },
      listInvitationsForAuthenticatedUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/repository_invitations"
      },
      listLanguages: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/languages"
      },
      listPagesBuilds: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pages/builds"
      },
      listProtectedBranchRequiredStatusChecksContexts: {
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
      },
      listProtectedBranchTeamRestrictions: {
        deprecated: "octokit.repos.listProtectedBranchTeamRestrictions() has been renamed to octokit.repos.getTeamsWithAccessToProtectedBranch() (2019-09-09)",
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
      },
      listProtectedBranchUserRestrictions: {
        deprecated: "octokit.repos.listProtectedBranchUserRestrictions() has been renamed to octokit.repos.getUsersWithAccessToProtectedBranch() (2019-09-09)",
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
      },
      listPublic: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          since: {
            type: "integer"
          }
        },
        url: "/repositories"
      },
      listPullRequestsAssociatedWithCommit: {
        headers: {
          accept: "application/vnd.github.groot-preview+json"
        },
        method: "GET",
        params: {
          commit_sha: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/commits/:commit_sha/pulls"
      },
      listReleases: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/releases"
      },
      listStatusesForRef: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          ref: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/commits/:ref/statuses"
      },
      listTags: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/tags"
      },
      listTeams: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/teams"
      },
      listTeamsWithAccessToProtectedBranch: {
        deprecated: "octokit.repos.listTeamsWithAccessToProtectedBranch() has been renamed to octokit.repos.getTeamsWithAccessToProtectedBranch() (2019-09-13)",
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
      },
      listTopics: {
        headers: {
          accept: "application/vnd.github.mercy-preview+json"
        },
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/topics"
      },
      listUsersWithAccessToProtectedBranch: {
        deprecated: "octokit.repos.listUsersWithAccessToProtectedBranch() has been renamed to octokit.repos.getUsersWithAccessToProtectedBranch() (2019-09-13)",
        method: "GET",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
      },
      merge: {
        method: "POST",
        params: {
          base: {
            required: true,
            type: "string"
          },
          commit_message: {
            type: "string"
          },
          head: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/merges"
      },
      pingHook: {
        method: "POST",
        params: {
          hook_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/hooks/:hook_id/pings"
      },
      removeBranchProtection: {
        method: "DELETE",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection"
      },
      removeCollaborator: {
        method: "DELETE",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/collaborators/:username"
      },
      removeDeployKey: {
        method: "DELETE",
        params: {
          key_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/keys/:key_id"
      },
      removeProtectedBranchAdminEnforcement: {
        method: "DELETE",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/enforce_admins"
      },
      removeProtectedBranchAppRestrictions: {
        method: "DELETE",
        params: {
          apps: {
            mapTo: "data",
            required: true,
            type: "string[]"
          },
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"
      },
      removeProtectedBranchPullRequestReviewEnforcement: {
        method: "DELETE",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews"
      },
      removeProtectedBranchRequiredSignatures: {
        headers: {
          accept: "application/vnd.github.zzzax-preview+json"
        },
        method: "DELETE",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/required_signatures"
      },
      removeProtectedBranchRequiredStatusChecks: {
        method: "DELETE",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/required_status_checks"
      },
      removeProtectedBranchRequiredStatusChecksContexts: {
        method: "DELETE",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          contexts: {
            mapTo: "data",
            required: true,
            type: "string[]"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
      },
      removeProtectedBranchRestrictions: {
        method: "DELETE",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions"
      },
      removeProtectedBranchTeamRestrictions: {
        method: "DELETE",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          teams: {
            mapTo: "data",
            required: true,
            type: "string[]"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
      },
      removeProtectedBranchUserRestrictions: {
        method: "DELETE",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          users: {
            mapTo: "data",
            required: true,
            type: "string[]"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
      },
      replaceProtectedBranchAppRestrictions: {
        method: "PUT",
        params: {
          apps: {
            mapTo: "data",
            required: true,
            type: "string[]"
          },
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"
      },
      replaceProtectedBranchRequiredStatusChecksContexts: {
        method: "PUT",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          contexts: {
            mapTo: "data",
            required: true,
            type: "string[]"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
      },
      replaceProtectedBranchTeamRestrictions: {
        method: "PUT",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          teams: {
            mapTo: "data",
            required: true,
            type: "string[]"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
      },
      replaceProtectedBranchUserRestrictions: {
        method: "PUT",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          users: {
            mapTo: "data",
            required: true,
            type: "string[]"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
      },
      replaceTopics: {
        headers: {
          accept: "application/vnd.github.mercy-preview+json"
        },
        method: "PUT",
        params: {
          names: {
            required: true,
            type: "string[]"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/topics"
      },
      requestPageBuild: {
        method: "POST",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pages/builds"
      },
      retrieveCommunityProfileMetrics: {
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/community/profile"
      },
      testPushHook: {
        method: "POST",
        params: {
          hook_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/hooks/:hook_id/tests"
      },
      transfer: {
        method: "POST",
        params: {
          new_owner: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          team_ids: {
            type: "integer[]"
          }
        },
        url: "/repos/:owner/:repo/transfer"
      },
      update: {
        method: "PATCH",
        params: {
          allow_merge_commit: {
            type: "boolean"
          },
          allow_rebase_merge: {
            type: "boolean"
          },
          allow_squash_merge: {
            type: "boolean"
          },
          archived: {
            type: "boolean"
          },
          default_branch: {
            type: "string"
          },
          delete_branch_on_merge: {
            type: "boolean"
          },
          description: {
            type: "string"
          },
          has_issues: {
            type: "boolean"
          },
          has_projects: {
            type: "boolean"
          },
          has_wiki: {
            type: "boolean"
          },
          homepage: {
            type: "string"
          },
          is_template: {
            type: "boolean"
          },
          name: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          private: {
            type: "boolean"
          },
          repo: {
            required: true,
            type: "string"
          },
          visibility: {
            enum: ["public", "private", "visibility", "internal"],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo"
      },
      updateBranchProtection: {
        method: "PUT",
        params: {
          allow_deletions: {
            type: "boolean"
          },
          allow_force_pushes: {
            allowNull: true,
            type: "boolean"
          },
          branch: {
            required: true,
            type: "string"
          },
          enforce_admins: {
            allowNull: true,
            required: true,
            type: "boolean"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          required_linear_history: {
            type: "boolean"
          },
          required_pull_request_reviews: {
            allowNull: true,
            required: true,
            type: "object"
          },
          "required_pull_request_reviews.dismiss_stale_reviews": {
            type: "boolean"
          },
          "required_pull_request_reviews.dismissal_restrictions": {
            type: "object"
          },
          "required_pull_request_reviews.dismissal_restrictions.teams": {
            type: "string[]"
          },
          "required_pull_request_reviews.dismissal_restrictions.users": {
            type: "string[]"
          },
          "required_pull_request_reviews.require_code_owner_reviews": {
            type: "boolean"
          },
          "required_pull_request_reviews.required_approving_review_count": {
            type: "integer"
          },
          required_status_checks: {
            allowNull: true,
            required: true,
            type: "object"
          },
          "required_status_checks.contexts": {
            required: true,
            type: "string[]"
          },
          "required_status_checks.strict": {
            required: true,
            type: "boolean"
          },
          restrictions: {
            allowNull: true,
            required: true,
            type: "object"
          },
          "restrictions.apps": {
            type: "string[]"
          },
          "restrictions.teams": {
            required: true,
            type: "string[]"
          },
          "restrictions.users": {
            required: true,
            type: "string[]"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection"
      },
      updateCommitComment: {
        method: "PATCH",
        params: {
          body: {
            required: true,
            type: "string"
          },
          comment_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/comments/:comment_id"
      },
      updateFile: {
        deprecated: "octokit.repos.updateFile() has been renamed to octokit.repos.createOrUpdateFile() (2019-06-07)",
        method: "PUT",
        params: {
          author: {
            type: "object"
          },
          "author.email": {
            required: true,
            type: "string"
          },
          "author.name": {
            required: true,
            type: "string"
          },
          branch: {
            type: "string"
          },
          committer: {
            type: "object"
          },
          "committer.email": {
            required: true,
            type: "string"
          },
          "committer.name": {
            required: true,
            type: "string"
          },
          content: {
            required: true,
            type: "string"
          },
          message: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          path: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          sha: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/contents/:path"
      },
      updateHook: {
        method: "PATCH",
        params: {
          active: {
            type: "boolean"
          },
          add_events: {
            type: "string[]"
          },
          config: {
            type: "object"
          },
          "config.content_type": {
            type: "string"
          },
          "config.insecure_ssl": {
            type: "string"
          },
          "config.secret": {
            type: "string"
          },
          "config.url": {
            required: true,
            type: "string"
          },
          events: {
            type: "string[]"
          },
          hook_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          remove_events: {
            type: "string[]"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/hooks/:hook_id"
      },
      updateInformationAboutPagesSite: {
        method: "PUT",
        params: {
          cname: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          source: {
            enum: ['"gh-pages"', '"master"', '"master /docs"'],
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/pages"
      },
      updateInvitation: {
        method: "PATCH",
        params: {
          invitation_id: {
            required: true,
            type: "integer"
          },
          owner: {
            required: true,
            type: "string"
          },
          permissions: {
            enum: ["read", "write", "admin"],
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/invitations/:invitation_id"
      },
      updateProtectedBranchPullRequestReviewEnforcement: {
        method: "PATCH",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          dismiss_stale_reviews: {
            type: "boolean"
          },
          dismissal_restrictions: {
            type: "object"
          },
          "dismissal_restrictions.teams": {
            type: "string[]"
          },
          "dismissal_restrictions.users": {
            type: "string[]"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          require_code_owner_reviews: {
            type: "boolean"
          },
          required_approving_review_count: {
            type: "integer"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews"
      },
      updateProtectedBranchRequiredStatusChecks: {
        method: "PATCH",
        params: {
          branch: {
            required: true,
            type: "string"
          },
          contexts: {
            type: "string[]"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          strict: {
            type: "boolean"
          }
        },
        url: "/repos/:owner/:repo/branches/:branch/protection/required_status_checks"
      },
      updateRelease: {
        method: "PATCH",
        params: {
          body: {
            type: "string"
          },
          draft: {
            type: "boolean"
          },
          name: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          prerelease: {
            type: "boolean"
          },
          release_id: {
            required: true,
            type: "integer"
          },
          repo: {
            required: true,
            type: "string"
          },
          tag_name: {
            type: "string"
          },
          target_commitish: {
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/releases/:release_id"
      },
      updateReleaseAsset: {
        method: "PATCH",
        params: {
          asset_id: {
            required: true,
            type: "integer"
          },
          label: {
            type: "string"
          },
          name: {
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          }
        },
        url: "/repos/:owner/:repo/releases/assets/:asset_id"
      },
      uploadReleaseAsset: {
        method: "POST",
        params: {
          data: {
            mapTo: "data",
            required: true,
            type: "string | object"
          },
          file: {
            alias: "data",
            deprecated: true,
            type: "string | object"
          },
          headers: {
            required: true,
            type: "object"
          },
          "headers.content-length": {
            required: true,
            type: "integer"
          },
          "headers.content-type": {
            required: true,
            type: "string"
          },
          label: {
            type: "string"
          },
          name: {
            required: true,
            type: "string"
          },
          url: {
            required: true,
            type: "string"
          }
        },
        url: ":url"
      }
    },
    search: {
      code: {
        method: "GET",
        params: {
          order: {
            enum: ["desc", "asc"],
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          q: {
            required: true,
            type: "string"
          },
          sort: {
            enum: ["indexed"],
            type: "string"
          }
        },
        url: "/search/code"
      },
      commits: {
        headers: {
          accept: "application/vnd.github.cloak-preview+json"
        },
        method: "GET",
        params: {
          order: {
            enum: ["desc", "asc"],
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          q: {
            required: true,
            type: "string"
          },
          sort: {
            enum: ["author-date", "committer-date"],
            type: "string"
          }
        },
        url: "/search/commits"
      },
      issues: {
        deprecated: "octokit.search.issues() has been renamed to octokit.search.issuesAndPullRequests() (2018-12-27)",
        method: "GET",
        params: {
          order: {
            enum: ["desc", "asc"],
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          q: {
            required: true,
            type: "string"
          },
          sort: {
            enum: ["comments", "reactions", "reactions-+1", "reactions--1", "reactions-smile", "reactions-thinking_face", "reactions-heart", "reactions-tada", "interactions", "created", "updated"],
            type: "string"
          }
        },
        url: "/search/issues"
      },
      issuesAndPullRequests: {
        method: "GET",
        params: {
          order: {
            enum: ["desc", "asc"],
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          q: {
            required: true,
            type: "string"
          },
          sort: {
            enum: ["comments", "reactions", "reactions-+1", "reactions--1", "reactions-smile", "reactions-thinking_face", "reactions-heart", "reactions-tada", "interactions", "created", "updated"],
            type: "string"
          }
        },
        url: "/search/issues"
      },
      labels: {
        method: "GET",
        params: {
          order: {
            enum: ["desc", "asc"],
            type: "string"
          },
          q: {
            required: true,
            type: "string"
          },
          repository_id: {
            required: true,
            type: "integer"
          },
          sort: {
            enum: ["created", "updated"],
            type: "string"
          }
        },
        url: "/search/labels"
      },
      repos: {
        method: "GET",
        params: {
          order: {
            enum: ["desc", "asc"],
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          q: {
            required: true,
            type: "string"
          },
          sort: {
            enum: ["stars", "forks", "help-wanted-issues", "updated"],
            type: "string"
          }
        },
        url: "/search/repositories"
      },
      topics: {
        method: "GET",
        params: {
          q: {
            required: true,
            type: "string"
          }
        },
        url: "/search/topics"
      },
      users: {
        method: "GET",
        params: {
          order: {
            enum: ["desc", "asc"],
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          q: {
            required: true,
            type: "string"
          },
          sort: {
            enum: ["followers", "repositories", "joined"],
            type: "string"
          }
        },
        url: "/search/users"
      }
    },
    teams: {
      addMember: {
        deprecated: "octokit.teams.addMember() has been renamed to octokit.teams.addMemberLegacy() (2020-01-16)",
        method: "PUT",
        params: {
          team_id: {
            required: true,
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/teams/:team_id/members/:username"
      },
      addMemberLegacy: {
        deprecated: "octokit.teams.addMemberLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#add-team-member-legacy",
        method: "PUT",
        params: {
          team_id: {
            required: true,
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/teams/:team_id/members/:username"
      },
      addOrUpdateMembership: {
        deprecated: "octokit.teams.addOrUpdateMembership() has been renamed to octokit.teams.addOrUpdateMembershipLegacy() (2020-01-16)",
        method: "PUT",
        params: {
          role: {
            enum: ["member", "maintainer"],
            type: "string"
          },
          team_id: {
            required: true,
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/teams/:team_id/memberships/:username"
      },
      addOrUpdateMembershipInOrg: {
        method: "PUT",
        params: {
          org: {
            required: true,
            type: "string"
          },
          role: {
            enum: ["member", "maintainer"],
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/memberships/:username"
      },
      addOrUpdateMembershipLegacy: {
        deprecated: "octokit.teams.addOrUpdateMembershipLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#add-or-update-team-membership-legacy",
        method: "PUT",
        params: {
          role: {
            enum: ["member", "maintainer"],
            type: "string"
          },
          team_id: {
            required: true,
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/teams/:team_id/memberships/:username"
      },
      addOrUpdateProject: {
        deprecated: "octokit.teams.addOrUpdateProject() has been renamed to octokit.teams.addOrUpdateProjectLegacy() (2020-01-16)",
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "PUT",
        params: {
          permission: {
            enum: ["read", "write", "admin"],
            type: "string"
          },
          project_id: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/projects/:project_id"
      },
      addOrUpdateProjectInOrg: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "PUT",
        params: {
          org: {
            required: true,
            type: "string"
          },
          permission: {
            enum: ["read", "write", "admin"],
            type: "string"
          },
          project_id: {
            required: true,
            type: "integer"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/projects/:project_id"
      },
      addOrUpdateProjectLegacy: {
        deprecated: "octokit.teams.addOrUpdateProjectLegacy() is deprecated, see https://developer.github.com/v3/teams/#add-or-update-team-project-legacy",
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "PUT",
        params: {
          permission: {
            enum: ["read", "write", "admin"],
            type: "string"
          },
          project_id: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/projects/:project_id"
      },
      addOrUpdateRepo: {
        deprecated: "octokit.teams.addOrUpdateRepo() has been renamed to octokit.teams.addOrUpdateRepoLegacy() (2020-01-16)",
        method: "PUT",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          permission: {
            enum: ["pull", "push", "admin"],
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/repos/:owner/:repo"
      },
      addOrUpdateRepoInOrg: {
        method: "PUT",
        params: {
          org: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          permission: {
            enum: ["pull", "push", "admin"],
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/repos/:owner/:repo"
      },
      addOrUpdateRepoLegacy: {
        deprecated: "octokit.teams.addOrUpdateRepoLegacy() is deprecated, see https://developer.github.com/v3/teams/#add-or-update-team-repository-legacy",
        method: "PUT",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          permission: {
            enum: ["pull", "push", "admin"],
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/repos/:owner/:repo"
      },
      checkManagesRepo: {
        deprecated: "octokit.teams.checkManagesRepo() has been renamed to octokit.teams.checkManagesRepoLegacy() (2020-01-16)",
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/repos/:owner/:repo"
      },
      checkManagesRepoInOrg: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/repos/:owner/:repo"
      },
      checkManagesRepoLegacy: {
        deprecated: "octokit.teams.checkManagesRepoLegacy() is deprecated, see https://developer.github.com/v3/teams/#check-if-a-team-manages-a-repository-legacy",
        method: "GET",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/repos/:owner/:repo"
      },
      create: {
        method: "POST",
        params: {
          description: {
            type: "string"
          },
          maintainers: {
            type: "string[]"
          },
          name: {
            required: true,
            type: "string"
          },
          org: {
            required: true,
            type: "string"
          },
          parent_team_id: {
            type: "integer"
          },
          permission: {
            enum: ["pull", "push", "admin"],
            type: "string"
          },
          privacy: {
            enum: ["secret", "closed"],
            type: "string"
          },
          repo_names: {
            type: "string[]"
          }
        },
        url: "/orgs/:org/teams"
      },
      createDiscussion: {
        deprecated: "octokit.teams.createDiscussion() has been renamed to octokit.teams.createDiscussionLegacy() (2020-01-16)",
        method: "POST",
        params: {
          body: {
            required: true,
            type: "string"
          },
          private: {
            type: "boolean"
          },
          team_id: {
            required: true,
            type: "integer"
          },
          title: {
            required: true,
            type: "string"
          }
        },
        url: "/teams/:team_id/discussions"
      },
      createDiscussionComment: {
        deprecated: "octokit.teams.createDiscussionComment() has been renamed to octokit.teams.createDiscussionCommentLegacy() (2020-01-16)",
        method: "POST",
        params: {
          body: {
            required: true,
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/comments"
      },
      createDiscussionCommentInOrg: {
        method: "POST",
        params: {
          body: {
            required: true,
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments"
      },
      createDiscussionCommentLegacy: {
        deprecated: "octokit.teams.createDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/teams/discussion_comments/#create-a-comment-legacy",
        method: "POST",
        params: {
          body: {
            required: true,
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/comments"
      },
      createDiscussionInOrg: {
        method: "POST",
        params: {
          body: {
            required: true,
            type: "string"
          },
          org: {
            required: true,
            type: "string"
          },
          private: {
            type: "boolean"
          },
          team_slug: {
            required: true,
            type: "string"
          },
          title: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/discussions"
      },
      createDiscussionLegacy: {
        deprecated: "octokit.teams.createDiscussionLegacy() is deprecated, see https://developer.github.com/v3/teams/discussions/#create-a-discussion-legacy",
        method: "POST",
        params: {
          body: {
            required: true,
            type: "string"
          },
          private: {
            type: "boolean"
          },
          team_id: {
            required: true,
            type: "integer"
          },
          title: {
            required: true,
            type: "string"
          }
        },
        url: "/teams/:team_id/discussions"
      },
      delete: {
        deprecated: "octokit.teams.delete() has been renamed to octokit.teams.deleteLegacy() (2020-01-16)",
        method: "DELETE",
        params: {
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id"
      },
      deleteDiscussion: {
        deprecated: "octokit.teams.deleteDiscussion() has been renamed to octokit.teams.deleteDiscussionLegacy() (2020-01-16)",
        method: "DELETE",
        params: {
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number"
      },
      deleteDiscussionComment: {
        deprecated: "octokit.teams.deleteDiscussionComment() has been renamed to octokit.teams.deleteDiscussionCommentLegacy() (2020-01-16)",
        method: "DELETE",
        params: {
          comment_number: {
            required: true,
            type: "integer"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
      },
      deleteDiscussionCommentInOrg: {
        method: "DELETE",
        params: {
          comment_number: {
            required: true,
            type: "integer"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number"
      },
      deleteDiscussionCommentLegacy: {
        deprecated: "octokit.teams.deleteDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/teams/discussion_comments/#delete-a-comment-legacy",
        method: "DELETE",
        params: {
          comment_number: {
            required: true,
            type: "integer"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
      },
      deleteDiscussionInOrg: {
        method: "DELETE",
        params: {
          discussion_number: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number"
      },
      deleteDiscussionLegacy: {
        deprecated: "octokit.teams.deleteDiscussionLegacy() is deprecated, see https://developer.github.com/v3/teams/discussions/#delete-a-discussion-legacy",
        method: "DELETE",
        params: {
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number"
      },
      deleteInOrg: {
        method: "DELETE",
        params: {
          org: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug"
      },
      deleteLegacy: {
        deprecated: "octokit.teams.deleteLegacy() is deprecated, see https://developer.github.com/v3/teams/#delete-team-legacy",
        method: "DELETE",
        params: {
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id"
      },
      get: {
        deprecated: "octokit.teams.get() has been renamed to octokit.teams.getLegacy() (2020-01-16)",
        method: "GET",
        params: {
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id"
      },
      getByName: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug"
      },
      getDiscussion: {
        deprecated: "octokit.teams.getDiscussion() has been renamed to octokit.teams.getDiscussionLegacy() (2020-01-16)",
        method: "GET",
        params: {
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number"
      },
      getDiscussionComment: {
        deprecated: "octokit.teams.getDiscussionComment() has been renamed to octokit.teams.getDiscussionCommentLegacy() (2020-01-16)",
        method: "GET",
        params: {
          comment_number: {
            required: true,
            type: "integer"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
      },
      getDiscussionCommentInOrg: {
        method: "GET",
        params: {
          comment_number: {
            required: true,
            type: "integer"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number"
      },
      getDiscussionCommentLegacy: {
        deprecated: "octokit.teams.getDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/teams/discussion_comments/#get-a-single-comment-legacy",
        method: "GET",
        params: {
          comment_number: {
            required: true,
            type: "integer"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
      },
      getDiscussionInOrg: {
        method: "GET",
        params: {
          discussion_number: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number"
      },
      getDiscussionLegacy: {
        deprecated: "octokit.teams.getDiscussionLegacy() is deprecated, see https://developer.github.com/v3/teams/discussions/#get-a-single-discussion-legacy",
        method: "GET",
        params: {
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number"
      },
      getLegacy: {
        deprecated: "octokit.teams.getLegacy() is deprecated, see https://developer.github.com/v3/teams/#get-team-legacy",
        method: "GET",
        params: {
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id"
      },
      getMember: {
        deprecated: "octokit.teams.getMember() has been renamed to octokit.teams.getMemberLegacy() (2020-01-16)",
        method: "GET",
        params: {
          team_id: {
            required: true,
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/teams/:team_id/members/:username"
      },
      getMemberLegacy: {
        deprecated: "octokit.teams.getMemberLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#get-team-member-legacy",
        method: "GET",
        params: {
          team_id: {
            required: true,
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/teams/:team_id/members/:username"
      },
      getMembership: {
        deprecated: "octokit.teams.getMembership() has been renamed to octokit.teams.getMembershipLegacy() (2020-01-16)",
        method: "GET",
        params: {
          team_id: {
            required: true,
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/teams/:team_id/memberships/:username"
      },
      getMembershipInOrg: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/memberships/:username"
      },
      getMembershipLegacy: {
        deprecated: "octokit.teams.getMembershipLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#get-team-membership-legacy",
        method: "GET",
        params: {
          team_id: {
            required: true,
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/teams/:team_id/memberships/:username"
      },
      list: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/orgs/:org/teams"
      },
      listChild: {
        deprecated: "octokit.teams.listChild() has been renamed to octokit.teams.listChildLegacy() (2020-01-16)",
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/teams"
      },
      listChildInOrg: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/teams"
      },
      listChildLegacy: {
        deprecated: "octokit.teams.listChildLegacy() is deprecated, see https://developer.github.com/v3/teams/#list-child-teams-legacy",
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/teams"
      },
      listDiscussionComments: {
        deprecated: "octokit.teams.listDiscussionComments() has been renamed to octokit.teams.listDiscussionCommentsLegacy() (2020-01-16)",
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/comments"
      },
      listDiscussionCommentsInOrg: {
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments"
      },
      listDiscussionCommentsLegacy: {
        deprecated: "octokit.teams.listDiscussionCommentsLegacy() is deprecated, see https://developer.github.com/v3/teams/discussion_comments/#list-comments-legacy",
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/comments"
      },
      listDiscussions: {
        deprecated: "octokit.teams.listDiscussions() has been renamed to octokit.teams.listDiscussionsLegacy() (2020-01-16)",
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions"
      },
      listDiscussionsInOrg: {
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/discussions"
      },
      listDiscussionsLegacy: {
        deprecated: "octokit.teams.listDiscussionsLegacy() is deprecated, see https://developer.github.com/v3/teams/discussions/#list-discussions-legacy",
        method: "GET",
        params: {
          direction: {
            enum: ["asc", "desc"],
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions"
      },
      listForAuthenticatedUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/teams"
      },
      listMembers: {
        deprecated: "octokit.teams.listMembers() has been renamed to octokit.teams.listMembersLegacy() (2020-01-16)",
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          role: {
            enum: ["member", "maintainer", "all"],
            type: "string"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/members"
      },
      listMembersInOrg: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          role: {
            enum: ["member", "maintainer", "all"],
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/members"
      },
      listMembersLegacy: {
        deprecated: "octokit.teams.listMembersLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#list-team-members-legacy",
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          role: {
            enum: ["member", "maintainer", "all"],
            type: "string"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/members"
      },
      listPendingInvitations: {
        deprecated: "octokit.teams.listPendingInvitations() has been renamed to octokit.teams.listPendingInvitationsLegacy() (2020-01-16)",
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/invitations"
      },
      listPendingInvitationsInOrg: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/invitations"
      },
      listPendingInvitationsLegacy: {
        deprecated: "octokit.teams.listPendingInvitationsLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#list-pending-team-invitations-legacy",
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/invitations"
      },
      listProjects: {
        deprecated: "octokit.teams.listProjects() has been renamed to octokit.teams.listProjectsLegacy() (2020-01-16)",
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/projects"
      },
      listProjectsInOrg: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/projects"
      },
      listProjectsLegacy: {
        deprecated: "octokit.teams.listProjectsLegacy() is deprecated, see https://developer.github.com/v3/teams/#list-team-projects-legacy",
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/projects"
      },
      listRepos: {
        deprecated: "octokit.teams.listRepos() has been renamed to octokit.teams.listReposLegacy() (2020-01-16)",
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/repos"
      },
      listReposInOrg: {
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/repos"
      },
      listReposLegacy: {
        deprecated: "octokit.teams.listReposLegacy() is deprecated, see https://developer.github.com/v3/teams/#list-team-repos-legacy",
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/repos"
      },
      removeMember: {
        deprecated: "octokit.teams.removeMember() has been renamed to octokit.teams.removeMemberLegacy() (2020-01-16)",
        method: "DELETE",
        params: {
          team_id: {
            required: true,
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/teams/:team_id/members/:username"
      },
      removeMemberLegacy: {
        deprecated: "octokit.teams.removeMemberLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#remove-team-member-legacy",
        method: "DELETE",
        params: {
          team_id: {
            required: true,
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/teams/:team_id/members/:username"
      },
      removeMembership: {
        deprecated: "octokit.teams.removeMembership() has been renamed to octokit.teams.removeMembershipLegacy() (2020-01-16)",
        method: "DELETE",
        params: {
          team_id: {
            required: true,
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/teams/:team_id/memberships/:username"
      },
      removeMembershipInOrg: {
        method: "DELETE",
        params: {
          org: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/memberships/:username"
      },
      removeMembershipLegacy: {
        deprecated: "octokit.teams.removeMembershipLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#remove-team-membership-legacy",
        method: "DELETE",
        params: {
          team_id: {
            required: true,
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/teams/:team_id/memberships/:username"
      },
      removeProject: {
        deprecated: "octokit.teams.removeProject() has been renamed to octokit.teams.removeProjectLegacy() (2020-01-16)",
        method: "DELETE",
        params: {
          project_id: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/projects/:project_id"
      },
      removeProjectInOrg: {
        method: "DELETE",
        params: {
          org: {
            required: true,
            type: "string"
          },
          project_id: {
            required: true,
            type: "integer"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/projects/:project_id"
      },
      removeProjectLegacy: {
        deprecated: "octokit.teams.removeProjectLegacy() is deprecated, see https://developer.github.com/v3/teams/#remove-team-project-legacy",
        method: "DELETE",
        params: {
          project_id: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/projects/:project_id"
      },
      removeRepo: {
        deprecated: "octokit.teams.removeRepo() has been renamed to octokit.teams.removeRepoLegacy() (2020-01-16)",
        method: "DELETE",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/repos/:owner/:repo"
      },
      removeRepoInOrg: {
        method: "DELETE",
        params: {
          org: {
            required: true,
            type: "string"
          },
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/repos/:owner/:repo"
      },
      removeRepoLegacy: {
        deprecated: "octokit.teams.removeRepoLegacy() is deprecated, see https://developer.github.com/v3/teams/#remove-team-repository-legacy",
        method: "DELETE",
        params: {
          owner: {
            required: true,
            type: "string"
          },
          repo: {
            required: true,
            type: "string"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/repos/:owner/:repo"
      },
      reviewProject: {
        deprecated: "octokit.teams.reviewProject() has been renamed to octokit.teams.reviewProjectLegacy() (2020-01-16)",
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          project_id: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/projects/:project_id"
      },
      reviewProjectInOrg: {
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          org: {
            required: true,
            type: "string"
          },
          project_id: {
            required: true,
            type: "integer"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/projects/:project_id"
      },
      reviewProjectLegacy: {
        deprecated: "octokit.teams.reviewProjectLegacy() is deprecated, see https://developer.github.com/v3/teams/#review-a-team-project-legacy",
        headers: {
          accept: "application/vnd.github.inertia-preview+json"
        },
        method: "GET",
        params: {
          project_id: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/projects/:project_id"
      },
      update: {
        deprecated: "octokit.teams.update() has been renamed to octokit.teams.updateLegacy() (2020-01-16)",
        method: "PATCH",
        params: {
          description: {
            type: "string"
          },
          name: {
            required: true,
            type: "string"
          },
          parent_team_id: {
            type: "integer"
          },
          permission: {
            enum: ["pull", "push", "admin"],
            type: "string"
          },
          privacy: {
            enum: ["secret", "closed"],
            type: "string"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id"
      },
      updateDiscussion: {
        deprecated: "octokit.teams.updateDiscussion() has been renamed to octokit.teams.updateDiscussionLegacy() (2020-01-16)",
        method: "PATCH",
        params: {
          body: {
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          },
          title: {
            type: "string"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number"
      },
      updateDiscussionComment: {
        deprecated: "octokit.teams.updateDiscussionComment() has been renamed to octokit.teams.updateDiscussionCommentLegacy() (2020-01-16)",
        method: "PATCH",
        params: {
          body: {
            required: true,
            type: "string"
          },
          comment_number: {
            required: true,
            type: "integer"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
      },
      updateDiscussionCommentInOrg: {
        method: "PATCH",
        params: {
          body: {
            required: true,
            type: "string"
          },
          comment_number: {
            required: true,
            type: "integer"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number"
      },
      updateDiscussionCommentLegacy: {
        deprecated: "octokit.teams.updateDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/teams/discussion_comments/#edit-a-comment-legacy",
        method: "PATCH",
        params: {
          body: {
            required: true,
            type: "string"
          },
          comment_number: {
            required: true,
            type: "integer"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
      },
      updateDiscussionInOrg: {
        method: "PATCH",
        params: {
          body: {
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          org: {
            required: true,
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          },
          title: {
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number"
      },
      updateDiscussionLegacy: {
        deprecated: "octokit.teams.updateDiscussionLegacy() is deprecated, see https://developer.github.com/v3/teams/discussions/#edit-a-discussion-legacy",
        method: "PATCH",
        params: {
          body: {
            type: "string"
          },
          discussion_number: {
            required: true,
            type: "integer"
          },
          team_id: {
            required: true,
            type: "integer"
          },
          title: {
            type: "string"
          }
        },
        url: "/teams/:team_id/discussions/:discussion_number"
      },
      updateInOrg: {
        method: "PATCH",
        params: {
          description: {
            type: "string"
          },
          name: {
            required: true,
            type: "string"
          },
          org: {
            required: true,
            type: "string"
          },
          parent_team_id: {
            type: "integer"
          },
          permission: {
            enum: ["pull", "push", "admin"],
            type: "string"
          },
          privacy: {
            enum: ["secret", "closed"],
            type: "string"
          },
          team_slug: {
            required: true,
            type: "string"
          }
        },
        url: "/orgs/:org/teams/:team_slug"
      },
      updateLegacy: {
        deprecated: "octokit.teams.updateLegacy() is deprecated, see https://developer.github.com/v3/teams/#edit-team-legacy",
        method: "PATCH",
        params: {
          description: {
            type: "string"
          },
          name: {
            required: true,
            type: "string"
          },
          parent_team_id: {
            type: "integer"
          },
          permission: {
            enum: ["pull", "push", "admin"],
            type: "string"
          },
          privacy: {
            enum: ["secret", "closed"],
            type: "string"
          },
          team_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/teams/:team_id"
      }
    },
    users: {
      addEmails: {
        method: "POST",
        params: {
          emails: {
            required: true,
            type: "string[]"
          }
        },
        url: "/user/emails"
      },
      block: {
        method: "PUT",
        params: {
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/user/blocks/:username"
      },
      checkBlocked: {
        method: "GET",
        params: {
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/user/blocks/:username"
      },
      checkFollowing: {
        method: "GET",
        params: {
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/user/following/:username"
      },
      checkFollowingForUser: {
        method: "GET",
        params: {
          target_user: {
            required: true,
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/following/:target_user"
      },
      createGpgKey: {
        method: "POST",
        params: {
          armored_public_key: {
            type: "string"
          }
        },
        url: "/user/gpg_keys"
      },
      createPublicKey: {
        method: "POST",
        params: {
          key: {
            type: "string"
          },
          title: {
            type: "string"
          }
        },
        url: "/user/keys"
      },
      deleteEmails: {
        method: "DELETE",
        params: {
          emails: {
            required: true,
            type: "string[]"
          }
        },
        url: "/user/emails"
      },
      deleteGpgKey: {
        method: "DELETE",
        params: {
          gpg_key_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/user/gpg_keys/:gpg_key_id"
      },
      deletePublicKey: {
        method: "DELETE",
        params: {
          key_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/user/keys/:key_id"
      },
      follow: {
        method: "PUT",
        params: {
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/user/following/:username"
      },
      getAuthenticated: {
        method: "GET",
        params: {},
        url: "/user"
      },
      getByUsername: {
        method: "GET",
        params: {
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username"
      },
      getContextForUser: {
        method: "GET",
        params: {
          subject_id: {
            type: "string"
          },
          subject_type: {
            enum: ["organization", "repository", "issue", "pull_request"],
            type: "string"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/hovercard"
      },
      getGpgKey: {
        method: "GET",
        params: {
          gpg_key_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/user/gpg_keys/:gpg_key_id"
      },
      getPublicKey: {
        method: "GET",
        params: {
          key_id: {
            required: true,
            type: "integer"
          }
        },
        url: "/user/keys/:key_id"
      },
      list: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          since: {
            type: "string"
          }
        },
        url: "/users"
      },
      listBlocked: {
        method: "GET",
        params: {},
        url: "/user/blocks"
      },
      listEmails: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/emails"
      },
      listFollowersForAuthenticatedUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/followers"
      },
      listFollowersForUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/followers"
      },
      listFollowingForAuthenticatedUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/following"
      },
      listFollowingForUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/following"
      },
      listGpgKeys: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/gpg_keys"
      },
      listGpgKeysForUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/gpg_keys"
      },
      listPublicEmails: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/public_emails"
      },
      listPublicKeys: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          }
        },
        url: "/user/keys"
      },
      listPublicKeysForUser: {
        method: "GET",
        params: {
          page: {
            type: "integer"
          },
          per_page: {
            type: "integer"
          },
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/users/:username/keys"
      },
      togglePrimaryEmailVisibility: {
        method: "PATCH",
        params: {
          email: {
            required: true,
            type: "string"
          },
          visibility: {
            required: true,
            type: "string"
          }
        },
        url: "/user/email/visibility"
      },
      unblock: {
        method: "DELETE",
        params: {
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/user/blocks/:username"
      },
      unfollow: {
        method: "DELETE",
        params: {
          username: {
            required: true,
            type: "string"
          }
        },
        url: "/user/following/:username"
      },
      updateAuthenticated: {
        method: "PATCH",
        params: {
          bio: {
            type: "string"
          },
          blog: {
            type: "string"
          },
          company: {
            type: "string"
          },
          email: {
            type: "string"
          },
          hireable: {
            type: "boolean"
          },
          location: {
            type: "string"
          },
          name: {
            type: "string"
          }
        },
        url: "/user"
      }
    }
  };
  var VERSION4 = "2.4.0";
  restEndpointMethods.VERSION = VERSION4;
  exports.restEndpointMethods = restEndpointMethods;
});

// node_modules/is-plain-object/dist/is-plain-object.js
var require_is_plain_object = __commonJS((exports) => {
  var isObject2 = function(o) {
    return Object.prototype.toString.call(o) === "[object Object]";
  };
  var isPlainObject3 = function(o) {
    var ctor, prot;
    if (isObject2(o) === false)
      return false;
    ctor = o.constructor;
    if (ctor === undefined)
      return true;
    prot = ctor.prototype;
    if (isObject2(prot) === false)
      return false;
    if (prot.hasOwnProperty("isPrototypeOf") === false) {
      return false;
    }
    return true;
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  /*!
   * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   */
  exports.isPlainObject = isPlainObject3;
});

// node_modules/@octokit/endpoint/node_modules/universal-user-agent/dist-node/index.js
var require_dist_node4 = __commonJS((exports) => {
  var getUserAgent2 = function() {
    if (typeof navigator === "object" && ("userAgent" in navigator)) {
      return navigator.userAgent;
    }
    if (typeof process === "object" && ("version" in process)) {
      return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;
    }
    return "<environment undetectable>";
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.getUserAgent = getUserAgent2;
});

// node_modules/@octokit/endpoint/dist-node/index.js
var require_dist_node5 = __commonJS((exports) => {
  var lowercaseKeys2 = function(object) {
    if (!object) {
      return {};
    }
    return Object.keys(object).reduce((newObj, key) => {
      newObj[key.toLowerCase()] = object[key];
      return newObj;
    }, {});
  };
  var mergeDeep2 = function(defaults2, options) {
    const result = Object.assign({}, defaults2);
    Object.keys(options).forEach((key) => {
      if (isPlainObject3.isPlainObject(options[key])) {
        if (!(key in defaults2))
          Object.assign(result, {
            [key]: options[key]
          });
        else
          result[key] = mergeDeep2(defaults2[key], options[key]);
      } else {
        Object.assign(result, {
          [key]: options[key]
        });
      }
    });
    return result;
  };
  var removeUndefinedProperties2 = function(obj) {
    for (const key in obj) {
      if (obj[key] === undefined) {
        delete obj[key];
      }
    }
    return obj;
  };
  var merge4 = function(defaults2, route, options) {
    if (typeof route === "string") {
      let [method, url] = route.split(" ");
      options = Object.assign(url ? {
        method,
        url
      } : {
        url: method
      }, options);
    } else {
      options = Object.assign({}, route);
    }
    options.headers = lowercaseKeys2(options.headers);
    removeUndefinedProperties2(options);
    removeUndefinedProperties2(options.headers);
    const mergedOptions = mergeDeep2(defaults2 || {}, options);
    if (defaults2 && defaults2.mediaType.previews.length) {
      mergedOptions.mediaType.previews = defaults2.mediaType.previews.filter((preview) => !mergedOptions.mediaType.previews.includes(preview)).concat(mergedOptions.mediaType.previews);
    }
    mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map((preview) => preview.replace(/-preview/, ""));
    return mergedOptions;
  };
  var addQueryParameters2 = function(url, parameters) {
    const separator = /\?/.test(url) ? "&" : "?";
    const names = Object.keys(parameters);
    if (names.length === 0) {
      return url;
    }
    return url + separator + names.map((name) => {
      if (name === "q") {
        return "q=" + parameters.q.split("+").map(encodeURIComponent).join("+");
      }
      return `${name}=${encodeURIComponent(parameters[name])}`;
    }).join("&");
  };
  var removeNonChars2 = function(variableName) {
    return variableName.replace(/^\W+|\W+$/g, "").split(/,/);
  };
  var extractUrlVariableNames2 = function(url) {
    const matches = url.match(urlVariableRegex2);
    if (!matches) {
      return [];
    }
    return matches.map(removeNonChars2).reduce((a, b) => a.concat(b), []);
  };
  var omit3 = function(object, keysToOmit) {
    return Object.keys(object).filter((option) => !keysToOmit.includes(option)).reduce((obj, key) => {
      obj[key] = object[key];
      return obj;
    }, {});
  };
  var encodeReserved2 = function(str) {
    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function(part) {
      if (!/%[0-9A-Fa-f]/.test(part)) {
        part = encodeURI(part).replace(/%5B/g, "[").replace(/%5D/g, "]");
      }
      return part;
    }).join("");
  };
  var encodeUnreserved2 = function(str) {
    return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {
      return "%" + c.charCodeAt(0).toString(16).toUpperCase();
    });
  };
  var encodeValue2 = function(operator, value, key) {
    value = operator === "+" || operator === "#" ? encodeReserved2(value) : encodeUnreserved2(value);
    if (key) {
      return encodeUnreserved2(key) + "=" + value;
    } else {
      return value;
    }
  };
  var isDefined2 = function(value) {
    return value !== undefined && value !== null;
  };
  var isKeyOperator2 = function(operator) {
    return operator === ";" || operator === "&" || operator === "?";
  };
  var getValues2 = function(context, operator, key, modifier) {
    var value = context[key], result = [];
    if (isDefined2(value) && value !== "") {
      if (typeof value === "string" || typeof value === "number" || typeof value === "boolean") {
        value = value.toString();
        if (modifier && modifier !== "*") {
          value = value.substring(0, parseInt(modifier, 10));
        }
        result.push(encodeValue2(operator, value, isKeyOperator2(operator) ? key : ""));
      } else {
        if (modifier === "*") {
          if (Array.isArray(value)) {
            value.filter(isDefined2).forEach(function(value2) {
              result.push(encodeValue2(operator, value2, isKeyOperator2(operator) ? key : ""));
            });
          } else {
            Object.keys(value).forEach(function(k) {
              if (isDefined2(value[k])) {
                result.push(encodeValue2(operator, value[k], k));
              }
            });
          }
        } else {
          const tmp = [];
          if (Array.isArray(value)) {
            value.filter(isDefined2).forEach(function(value2) {
              tmp.push(encodeValue2(operator, value2));
            });
          } else {
            Object.keys(value).forEach(function(k) {
              if (isDefined2(value[k])) {
                tmp.push(encodeUnreserved2(k));
                tmp.push(encodeValue2(operator, value[k].toString()));
              }
            });
          }
          if (isKeyOperator2(operator)) {
            result.push(encodeUnreserved2(key) + "=" + tmp.join(","));
          } else if (tmp.length !== 0) {
            result.push(tmp.join(","));
          }
        }
      }
    } else {
      if (operator === ";") {
        if (isDefined2(value)) {
          result.push(encodeUnreserved2(key));
        }
      } else if (value === "" && (operator === "&" || operator === "?")) {
        result.push(encodeUnreserved2(key) + "=");
      } else if (value === "") {
        result.push("");
      }
    }
    return result;
  };
  var parseUrl2 = function(template) {
    return {
      expand: expand2.bind(null, template)
    };
  };
  var expand2 = function(template, context) {
    var operators = ["+", "#", ".", "/", ";", "?", "&"];
    return template.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function(_, expression, literal) {
      if (expression) {
        let operator = "";
        const values = [];
        if (operators.indexOf(expression.charAt(0)) !== -1) {
          operator = expression.charAt(0);
          expression = expression.substr(1);
        }
        expression.split(/,/g).forEach(function(variable) {
          var tmp = /([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);
          values.push(getValues2(context, operator, tmp[1], tmp[2] || tmp[3]));
        });
        if (operator && operator !== "+") {
          var separator = ",";
          if (operator === "?") {
            separator = "&";
          } else if (operator !== "#") {
            separator = operator;
          }
          return (values.length !== 0 ? operator : "") + values.join(separator);
        } else {
          return values.join(",");
        }
      } else {
        return encodeReserved2(literal);
      }
    });
  };
  var parse4 = function(options) {
    let method = options.method.toUpperCase();
    let url = (options.url || "/").replace(/:([a-z]\w+)/g, "{$1}");
    let headers = Object.assign({}, options.headers);
    let body;
    let parameters = omit3(options, ["method", "baseUrl", "url", "headers", "request", "mediaType"]);
    const urlVariableNames = extractUrlVariableNames2(url);
    url = parseUrl2(url).expand(parameters);
    if (!/^http/.test(url)) {
      url = options.baseUrl + url;
    }
    const omittedParameters = Object.keys(options).filter((option) => urlVariableNames.includes(option)).concat("baseUrl");
    const remainingParameters = omit3(parameters, omittedParameters);
    const isBinaryRequest = /application\/octet-stream/i.test(headers.accept);
    if (!isBinaryRequest) {
      if (options.mediaType.format) {
        headers.accept = headers.accept.split(/,/).map((preview) => preview.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/, `application/vnd\$1\$2.${options.mediaType.format}`)).join(",");
      }
      if (options.mediaType.previews.length) {
        const previewsFromAcceptHeader = headers.accept.match(/[\w-]+(?=-preview)/g) || [];
        headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map((preview) => {
          const format = options.mediaType.format ? `.${options.mediaType.format}` : "+json";
          return `application/vnd.github.${preview}-preview${format}`;
        }).join(",");
      }
    }
    if (["GET", "HEAD"].includes(method)) {
      url = addQueryParameters2(url, remainingParameters);
    } else {
      if ("data" in remainingParameters) {
        body = remainingParameters.data;
      } else {
        if (Object.keys(remainingParameters).length) {
          body = remainingParameters;
        } else {
          headers["content-length"] = 0;
        }
      }
    }
    if (!headers["content-type"] && typeof body !== "undefined") {
      headers["content-type"] = "application/json; charset=utf-8";
    }
    if (["PATCH", "PUT"].includes(method) && typeof body === "undefined") {
      body = "";
    }
    return Object.assign({
      method,
      url,
      headers
    }, typeof body !== "undefined" ? {
      body
    } : null, options.request ? {
      request: options.request
    } : null);
  };
  var endpointWithDefaults2 = function(defaults2, route, options) {
    return parse4(merge4(defaults2, route, options));
  };
  var withDefaults4 = function(oldDefaults, newDefaults) {
    const DEFAULTS3 = merge4(oldDefaults, newDefaults);
    const endpoint4 = endpointWithDefaults2.bind(null, DEFAULTS3);
    return Object.assign(endpoint4, {
      DEFAULTS: DEFAULTS3,
      defaults: withDefaults4.bind(null, DEFAULTS3),
      merge: merge4.bind(null, DEFAULTS3),
      parse: parse4
    });
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  var isPlainObject3 = require_is_plain_object();
  var universalUserAgent = require_dist_node4();
  var urlVariableRegex2 = /\{[^}]+\}/g;
  var VERSION4 = "6.0.12";
  var userAgent2 = `octokit-endpoint.js/${VERSION4} ${universalUserAgent.getUserAgent()}`;
  var DEFAULTS2 = {
    method: "GET",
    baseUrl: "https://api.github.com",
    headers: {
      accept: "application/vnd.github.v3+json",
      "user-agent": userAgent2
    },
    mediaType: {
      format: "",
      previews: []
    }
  };
  var endpoint3 = withDefaults4(null, DEFAULTS2);
  exports.endpoint = endpoint3;
});

// node_modules/@octokit/request/node_modules/universal-user-agent/dist-node/index.js
var require_dist_node6 = __commonJS((exports) => {
  var getUserAgent2 = function() {
    if (typeof navigator === "object" && ("userAgent" in navigator)) {
      return navigator.userAgent;
    }
    if (typeof process === "object" && ("version" in process)) {
      return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;
    }
    return "<environment undetectable>";
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.getUserAgent = getUserAgent2;
});

// node_modules/wrappy/wrappy.js
var require_wrappy = __commonJS((exports, module) => {
  var wrappy = function(fn, cb) {
    if (fn && cb)
      return wrappy(fn)(cb);
    if (typeof fn !== "function")
      throw new TypeError("need wrapper function");
    Object.keys(fn).forEach(function(k) {
      wrapper[k] = fn[k];
    });
    return wrapper;
    function wrapper() {
      var args = new Array(arguments.length);
      for (var i = 0;i < args.length; i++) {
        args[i] = arguments[i];
      }
      var ret = fn.apply(this, args);
      var cb2 = args[args.length - 1];
      if (typeof ret === "function" && ret !== cb2) {
        Object.keys(cb2).forEach(function(k) {
          ret[k] = cb2[k];
        });
      }
      return ret;
    }
  };
  module.exports = wrappy;
});

// node_modules/once/once.js
var require_once = __commonJS((exports, module) => {
  var once = function(fn) {
    var f = function() {
      if (f.called)
        return f.value;
      f.called = true;
      return f.value = fn.apply(this, arguments);
    };
    f.called = false;
    return f;
  };
  var onceStrict = function(fn) {
    var f = function() {
      if (f.called)
        throw new Error(f.onceError);
      f.called = true;
      return f.value = fn.apply(this, arguments);
    };
    var name = fn.name || "Function wrapped with `once`";
    f.onceError = name + " shouldn't be called more than once";
    f.called = false;
    return f;
  };
  var wrappy = require_wrappy();
  module.exports = wrappy(once);
  module.exports.strict = wrappy(onceStrict);
  once.proto = once(function() {
    Object.defineProperty(Function.prototype, "once", {
      value: function() {
        return once(this);
      },
      configurable: true
    });
    Object.defineProperty(Function.prototype, "onceStrict", {
      value: function() {
        return onceStrict(this);
      },
      configurable: true
    });
  });
});

// node_modules/@octokit/request/node_modules/@octokit/request-error/dist-node/index.js
var require_dist_node7 = __commonJS((exports) => {
  var _interopDefault = function(ex) {
    return ex && typeof ex === "object" && ("default" in ex) ? ex["default"] : ex;
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  var deprecation = require_dist_node2();
  var once = _interopDefault(require_once());
  var logOnceCode = once((deprecation2) => console.warn(deprecation2));
  var logOnceHeaders = once((deprecation2) => console.warn(deprecation2));

  class RequestError2 extends Error {
    constructor(message, statusCode, options) {
      super(message);
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
      }
      this.name = "HttpError";
      this.status = statusCode;
      let headers;
      if (("headers" in options) && typeof options.headers !== "undefined") {
        headers = options.headers;
      }
      if ("response" in options) {
        this.response = options.response;
        headers = options.response.headers;
      }
      const requestCopy = Object.assign({}, options.request);
      if (options.request.headers.authorization) {
        requestCopy.headers = Object.assign({}, options.request.headers, {
          authorization: options.request.headers.authorization.replace(/ .*$/, " [REDACTED]")
        });
      }
      requestCopy.url = requestCopy.url.replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]").replace(/\baccess_token=\w+/g, "access_token=[REDACTED]");
      this.request = requestCopy;
      Object.defineProperty(this, "code", {
        get() {
          logOnceCode(new deprecation.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));
          return statusCode;
        }
      });
      Object.defineProperty(this, "headers", {
        get() {
          logOnceHeaders(new deprecation.Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`."));
          return headers || {};
        }
      });
    }
  }
  exports.RequestError = RequestError2;
});

// node_modules/@octokit/request/dist-node/index.js
var require_dist_node8 = __commonJS((exports) => {
  var _interopDefault = function(ex) {
    return ex && typeof ex === "object" && ("default" in ex) ? ex["default"] : ex;
  };
  var getBufferResponse2 = function(response) {
    return response.arrayBuffer();
  };
  var fetchWrapper2 = function(requestOptions) {
    const log = requestOptions.request && requestOptions.request.log ? requestOptions.request.log : console;
    if (isPlainObject3.isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body)) {
      requestOptions.body = JSON.stringify(requestOptions.body);
    }
    let headers = {};
    let status;
    let url;
    const fetch = requestOptions.request && requestOptions.request.fetch || nodeFetch;
    return fetch(requestOptions.url, Object.assign({
      method: requestOptions.method,
      body: requestOptions.body,
      headers: requestOptions.headers,
      redirect: requestOptions.redirect
    }, requestOptions.request)).then(async (response) => {
      url = response.url;
      status = response.status;
      for (const keyAndValue of response.headers) {
        headers[keyAndValue[0]] = keyAndValue[1];
      }
      if ("deprecation" in headers) {
        const matches = headers.link && headers.link.match(/<([^>]+)>; rel="deprecation"/);
        const deprecationLink = matches && matches.pop();
        log.warn(`[@octokit/request] "${requestOptions.method} ${requestOptions.url}" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : ""}`);
      }
      if (status === 204 || status === 205) {
        return;
      }
      if (requestOptions.method === "HEAD") {
        if (status < 400) {
          return;
        }
        throw new requestError.RequestError(response.statusText, status, {
          response: {
            url,
            status,
            headers,
            data: undefined
          },
          request: requestOptions
        });
      }
      if (status === 304) {
        throw new requestError.RequestError("Not modified", status, {
          response: {
            url,
            status,
            headers,
            data: await getResponseData2(response)
          },
          request: requestOptions
        });
      }
      if (status >= 400) {
        const data = await getResponseData2(response);
        const error2 = new requestError.RequestError(toErrorMessage2(data), status, {
          response: {
            url,
            status,
            headers,
            data
          },
          request: requestOptions
        });
        throw error2;
      }
      return getResponseData2(response);
    }).then((data) => {
      return {
        status,
        url,
        headers,
        data
      };
    }).catch((error2) => {
      if (error2 instanceof requestError.RequestError)
        throw error2;
      throw new requestError.RequestError(error2.message, 500, {
        request: requestOptions
      });
    });
  };
  async function getResponseData2(response) {
    const contentType = response.headers.get("content-type");
    if (/application\/json/.test(contentType)) {
      return response.json();
    }
    if (!contentType || /^text\/|charset=utf-8$/.test(contentType)) {
      return response.text();
    }
    return getBufferResponse2(response);
  }
  var toErrorMessage2 = function(data) {
    if (typeof data === "string")
      return data;
    if ("message" in data) {
      if (Array.isArray(data.errors)) {
        return `${data.message}: ${data.errors.map(JSON.stringify).join(", ")}`;
      }
      return data.message;
    }
    return `Unknown error: ${JSON.stringify(data)}`;
  };
  var withDefaults4 = function(oldEndpoint, newDefaults) {
    const endpoint4 = oldEndpoint.defaults(newDefaults);
    const newApi = function(route, parameters) {
      const endpointOptions = endpoint4.merge(route, parameters);
      if (!endpointOptions.request || !endpointOptions.request.hook) {
        return fetchWrapper2(endpoint4.parse(endpointOptions));
      }
      const request4 = (route2, parameters2) => {
        return fetchWrapper2(endpoint4.parse(endpoint4.merge(route2, parameters2)));
      };
      Object.assign(request4, {
        endpoint: endpoint4,
        defaults: withDefaults4.bind(null, endpoint4)
      });
      return endpointOptions.request.hook(request4, endpointOptions);
    };
    return Object.assign(newApi, {
      endpoint: endpoint4,
      defaults: withDefaults4.bind(null, endpoint4)
    });
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  var endpoint3 = require_dist_node5();
  var universalUserAgent = require_dist_node6();
  var isPlainObject3 = require_is_plain_object();
  var nodeFetch = _interopDefault(__require("node-fetch"));
  var requestError = require_dist_node7();
  var VERSION4 = "5.6.3";
  var request3 = withDefaults4(endpoint3.endpoint, {
    headers: {
      "user-agent": `octokit-request.js/${VERSION4} ${universalUserAgent.getUserAgent()}`
    }
  });
  exports.request = request3;
});

// node_modules/@octokit/rest/node_modules/before-after-hook/lib/register.js
var require_register = __commonJS((exports, module) => {
  var register = function(state, name, method, options) {
    if (typeof method !== "function") {
      throw new Error("method for before hook must be a function");
    }
    if (!options) {
      options = {};
    }
    if (Array.isArray(name)) {
      return name.reverse().reduce(function(callback, name2) {
        return register.bind(null, state, name2, callback, options);
      }, method)();
    }
    return Promise.resolve().then(function() {
      if (!state.registry[name]) {
        return method(options);
      }
      return state.registry[name].reduce(function(method2, registered) {
        return registered.hook.bind(null, method2, options);
      }, method)();
    });
  };
  module.exports = register;
});

// node_modules/@octokit/rest/node_modules/before-after-hook/lib/add.js
var require_add = __commonJS((exports, module) => {
  var addHook = function(state, kind, name, hook) {
    var orig = hook;
    if (!state.registry[name]) {
      state.registry[name] = [];
    }
    if (kind === "before") {
      hook = function(method, options) {
        return Promise.resolve().then(orig.bind(null, options)).then(method.bind(null, options));
      };
    }
    if (kind === "after") {
      hook = function(method, options) {
        var result;
        return Promise.resolve().then(method.bind(null, options)).then(function(result_) {
          result = result_;
          return orig(result, options);
        }).then(function() {
          return result;
        });
      };
    }
    if (kind === "error") {
      hook = function(method, options) {
        return Promise.resolve().then(method.bind(null, options)).catch(function(error2) {
          return orig(error2, options);
        });
      };
    }
    state.registry[name].push({
      hook,
      orig
    });
  };
  module.exports = addHook;
});

// node_modules/@octokit/rest/node_modules/before-after-hook/lib/remove.js
var require_remove = __commonJS((exports, module) => {
  var removeHook = function(state, name, method) {
    if (!state.registry[name]) {
      return;
    }
    var index = state.registry[name].map(function(registered) {
      return registered.orig;
    }).indexOf(method);
    if (index === -1) {
      return;
    }
    state.registry[name].splice(index, 1);
  };
  module.exports = removeHook;
});

// node_modules/@octokit/rest/node_modules/before-after-hook/index.js
var require_before_after_hook = __commonJS((exports, module) => {
  var bindApi = function(hook, state, name) {
    var removeHookRef = bindable(removeHook, null).apply(null, name ? [state, name] : [state]);
    hook.api = { remove: removeHookRef };
    hook.remove = removeHookRef;
    ["before", "error", "after", "wrap"].forEach(function(kind) {
      var args = name ? [state, kind, name] : [state, kind];
      hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args);
    });
  };
  var HookSingular = function() {
    var singularHookName = "h";
    var singularHookState = {
      registry: {}
    };
    var singularHook = register.bind(null, singularHookState, singularHookName);
    bindApi(singularHook, singularHookState, singularHookName);
    return singularHook;
  };
  var HookCollection = function() {
    var state = {
      registry: {}
    };
    var hook = register.bind(null, state);
    bindApi(hook, state);
    return hook;
  };
  var Hook = function() {
    if (!collectionHookDeprecationMessageDisplayed) {
      console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4');
      collectionHookDeprecationMessageDisplayed = true;
    }
    return HookCollection();
  };
  var register = require_register();
  var addHook = require_add();
  var removeHook = require_remove();
  var bind = Function.bind;
  var bindable = bind.bind(bind);
  var collectionHookDeprecationMessageDisplayed = false;
  Hook.Singular = HookSingular.bind();
  Hook.Collection = HookCollection.bind();
  module.exports = Hook;
  module.exports.Hook = Hook;
  module.exports.Singular = Hook.Singular;
  module.exports.Collection = Hook.Collection;
});

// node_modules/macos-release/index.js
var require_macos_release = __commonJS((exports, module) => {
  var os = __require("os");
  var nameMap = new Map([
    [21, ["Monterey", "12"]],
    [20, ["Big Sur", "11"]],
    [19, ["Catalina", "10.15"]],
    [18, ["Mojave", "10.14"]],
    [17, ["High Sierra", "10.13"]],
    [16, ["Sierra", "10.12"]],
    [15, ["El Capitan", "10.11"]],
    [14, ["Yosemite", "10.10"]],
    [13, ["Mavericks", "10.9"]],
    [12, ["Mountain Lion", "10.8"]],
    [11, ["Lion", "10.7"]],
    [10, ["Snow Leopard", "10.6"]],
    [9, ["Leopard", "10.5"]],
    [8, ["Tiger", "10.4"]],
    [7, ["Panther", "10.3"]],
    [6, ["Jaguar", "10.2"]],
    [5, ["Puma", "10.1"]]
  ]);
  var macosRelease = (release) => {
    release = Number((release || os.release()).split(".")[0]);
    const [name, version4] = nameMap.get(release) || ["Unknown", ""];
    return {
      name,
      version: version4
    };
  };
  module.exports = macosRelease;
  module.exports.default = macosRelease;
});

// node_modules/nice-try/src/index.js
var require_src = __commonJS((exports, module) => {
  module.exports = function(fn) {
    try {
      return fn();
    } catch (e) {
    }
  };
});

// node_modules/isexe/windows.js
var require_windows = __commonJS((exports, module) => {
  var checkPathExt = function(path, options) {
    var pathext = options.pathExt !== undefined ? options.pathExt : process.env.PATHEXT;
    if (!pathext) {
      return true;
    }
    pathext = pathext.split(";");
    if (pathext.indexOf("") !== -1) {
      return true;
    }
    for (var i = 0;i < pathext.length; i++) {
      var p = pathext[i].toLowerCase();
      if (p && path.substr(-p.length).toLowerCase() === p) {
        return true;
      }
    }
    return false;
  };
  var checkStat = function(stat, path, options) {
    if (!stat.isSymbolicLink() && !stat.isFile()) {
      return false;
    }
    return checkPathExt(path, options);
  };
  var isexe = function(path, options, cb) {
    fs.stat(path, function(er, stat) {
      cb(er, er ? false : checkStat(stat, path, options));
    });
  };
  var sync = function(path, options) {
    return checkStat(fs.statSync(path), path, options);
  };
  module.exports = isexe;
  isexe.sync = sync;
  var fs = __require("fs");
});

// node_modules/isexe/mode.js
var require_mode = __commonJS((exports, module) => {
  var isexe = function(path, options, cb) {
    fs.stat(path, function(er, stat) {
      cb(er, er ? false : checkStat(stat, options));
    });
  };
  var sync = function(path, options) {
    return checkStat(fs.statSync(path), options);
  };
  var checkStat = function(stat, options) {
    return stat.isFile() && checkMode(stat, options);
  };
  var checkMode = function(stat, options) {
    var mod = stat.mode;
    var uid = stat.uid;
    var gid = stat.gid;
    var myUid = options.uid !== undefined ? options.uid : process.getuid && process.getuid();
    var myGid = options.gid !== undefined ? options.gid : process.getgid && process.getgid();
    var u = parseInt("100", 8);
    var g = parseInt("010", 8);
    var o = parseInt("001", 8);
    var ug = u | g;
    var ret = mod & o || mod & g && gid === myGid || mod & u && uid === myUid || mod & ug && myUid === 0;
    return ret;
  };
  module.exports = isexe;
  isexe.sync = sync;
  var fs = __require("fs");
});

// node_modules/isexe/index.js
var require_isexe = __commonJS((exports, module) => {
  var isexe = function(path, options, cb) {
    if (typeof options === "function") {
      cb = options;
      options = {};
    }
    if (!cb) {
      if (typeof Promise !== "function") {
        throw new TypeError("callback not provided");
      }
      return new Promise(function(resolve, reject) {
        isexe(path, options || {}, function(er, is) {
          if (er) {
            reject(er);
          } else {
            resolve(is);
          }
        });
      });
    }
    core(path, options || {}, function(er, is) {
      if (er) {
        if (er.code === "EACCES" || options && options.ignoreErrors) {
          er = null;
          is = false;
        }
      }
      cb(er, is);
    });
  };
  var sync = function(path, options) {
    try {
      return core.sync(path, options || {});
    } catch (er) {
      if (options && options.ignoreErrors || er.code === "EACCES") {
        return false;
      } else {
        throw er;
      }
    }
  };
  var fs = __require("fs");
  var core;
  if (process.platform === "win32" || global.TESTING_WINDOWS) {
    core = require_windows();
  } else {
    core = require_mode();
  }
  module.exports = isexe;
  isexe.sync = sync;
});

// node_modules/windows-release/node_modules/execa/node_modules/cross-spawn/node_modules/which/which.js
var require_which = __commonJS((exports, module) => {
  var getNotFoundError = function(cmd) {
    var er = new Error("not found: " + cmd);
    er.code = "ENOENT";
    return er;
  };
  var getPathInfo = function(cmd, opt) {
    var colon = opt.colon || COLON;
    var pathEnv = opt.path || process.env.PATH || "";
    var pathExt = [""];
    pathEnv = pathEnv.split(colon);
    var pathExtExe = "";
    if (isWindows) {
      pathEnv.unshift(process.cwd());
      pathExtExe = opt.pathExt || process.env.PATHEXT || ".EXE;.CMD;.BAT;.COM";
      pathExt = pathExtExe.split(colon);
      if (cmd.indexOf(".") !== -1 && pathExt[0] !== "")
        pathExt.unshift("");
    }
    if (cmd.match(/\//) || isWindows && cmd.match(/\\/))
      pathEnv = [""];
    return {
      env: pathEnv,
      ext: pathExt,
      extExe: pathExtExe
    };
  };
  var which = function(cmd, opt, cb) {
    if (typeof opt === "function") {
      cb = opt;
      opt = {};
    }
    var info = getPathInfo(cmd, opt);
    var pathEnv = info.env;
    var pathExt = info.ext;
    var pathExtExe = info.extExe;
    var found = [];
    (function F(i, l) {
      if (i === l) {
        if (opt.all && found.length)
          return cb(null, found);
        else
          return cb(getNotFoundError(cmd));
      }
      var pathPart = pathEnv[i];
      if (pathPart.charAt(0) === '"' && pathPart.slice(-1) === '"')
        pathPart = pathPart.slice(1, -1);
      var p = path.join(pathPart, cmd);
      if (!pathPart && /^\.[\\\/]/.test(cmd)) {
        p = cmd.slice(0, 2) + p;
      }
      (function E(ii, ll) {
        if (ii === ll)
          return F(i + 1, l);
        var ext = pathExt[ii];
        isexe(p + ext, { pathExt: pathExtExe }, function(er, is) {
          if (!er && is) {
            if (opt.all)
              found.push(p + ext);
            else
              return cb(null, p + ext);
          }
          return E(ii + 1, ll);
        });
      })(0, pathExt.length);
    })(0, pathEnv.length);
  };
  var whichSync = function(cmd, opt) {
    opt = opt || {};
    var info = getPathInfo(cmd, opt);
    var pathEnv = info.env;
    var pathExt = info.ext;
    var pathExtExe = info.extExe;
    var found = [];
    for (var i = 0, l = pathEnv.length;i < l; i++) {
      var pathPart = pathEnv[i];
      if (pathPart.charAt(0) === '"' && pathPart.slice(-1) === '"')
        pathPart = pathPart.slice(1, -1);
      var p = path.join(pathPart, cmd);
      if (!pathPart && /^\.[\\\/]/.test(cmd)) {
        p = cmd.slice(0, 2) + p;
      }
      for (var j = 0, ll = pathExt.length;j < ll; j++) {
        var cur = p + pathExt[j];
        var is;
        try {
          is = isexe.sync(cur, { pathExt: pathExtExe });
          if (is) {
            if (opt.all)
              found.push(cur);
            else
              return cur;
          }
        } catch (ex) {
        }
      }
    }
    if (opt.all && found.length)
      return found;
    if (opt.nothrow)
      return null;
    throw getNotFoundError(cmd);
  };
  module.exports = which;
  which.sync = whichSync;
  var isWindows = process.platform === "win32" || process.env.OSTYPE === "cygwin" || process.env.OSTYPE === "msys";
  var path = __require("path");
  var COLON = isWindows ? ";" : ":";
  var isexe = require_isexe();
});

// node_modules/windows-release/node_modules/execa/node_modules/cross-spawn/node_modules/path-key/index.js
var require_path_key = __commonJS((exports, module) => {
  module.exports = (opts) => {
    opts = opts || {};
    const env = opts.env || process.env;
    const platform = opts.platform || process.platform;
    if (platform !== "win32") {
      return "PATH";
    }
    return Object.keys(env).find((x) => x.toUpperCase() === "PATH") || "Path";
  };
});

// node_modules/windows-release/node_modules/execa/node_modules/cross-spawn/lib/util/resolveCommand.js
var require_resolveCommand = __commonJS((exports, module) => {
  var resolveCommandAttempt = function(parsed, withoutPathExt) {
    const cwd = process.cwd();
    const hasCustomCwd = parsed.options.cwd != null;
    if (hasCustomCwd) {
      try {
        process.chdir(parsed.options.cwd);
      } catch (err) {
      }
    }
    let resolved;
    try {
      resolved = which.sync(parsed.command, {
        path: (parsed.options.env || process.env)[pathKey],
        pathExt: withoutPathExt ? path.delimiter : undefined
      });
    } catch (e) {
    } finally {
      process.chdir(cwd);
    }
    if (resolved) {
      resolved = path.resolve(hasCustomCwd ? parsed.options.cwd : "", resolved);
    }
    return resolved;
  };
  var resolveCommand = function(parsed) {
    return resolveCommandAttempt(parsed) || resolveCommandAttempt(parsed, true);
  };
  var path = __require("path");
  var which = require_which();
  var pathKey = require_path_key()();
  module.exports = resolveCommand;
});

// node_modules/windows-release/node_modules/execa/node_modules/cross-spawn/lib/util/escape.js
var require_escape = __commonJS((exports, module) => {
  var escapeCommand = function(arg) {
    arg = arg.replace(metaCharsRegExp, "^$1");
    return arg;
  };
  var escapeArgument = function(arg, doubleEscapeMetaChars) {
    arg = `${arg}`;
    arg = arg.replace(/(\\*)"/g, '$1$1\\"');
    arg = arg.replace(/(\\*)$/, "$1$1");
    arg = `"${arg}"`;
    arg = arg.replace(metaCharsRegExp, "^$1");
    if (doubleEscapeMetaChars) {
      arg = arg.replace(metaCharsRegExp, "^$1");
    }
    return arg;
  };
  var metaCharsRegExp = /([()\][%!^"`<>&|;, *?])/g;
  exports.command = escapeCommand;
  exports.argument = escapeArgument;
});

// node_modules/windows-release/node_modules/execa/node_modules/cross-spawn/node_modules/shebang-command/node_modules/shebang-regex/index.js
var require_shebang_regex = __commonJS((exports, module) => {
  module.exports = /^#!.*/;
});

// node_modules/windows-release/node_modules/execa/node_modules/cross-spawn/node_modules/shebang-command/index.js
var require_shebang_command = __commonJS((exports, module) => {
  var shebangRegex = require_shebang_regex();
  module.exports = function(str) {
    var match = str.match(shebangRegex);
    if (!match) {
      return null;
    }
    var arr = match[0].replace(/#! ?/, "").split(" ");
    var bin = arr[0].split("/").pop();
    var arg = arr[1];
    return bin === "env" ? arg : bin + (arg ? " " + arg : "");
  };
});

// node_modules/windows-release/node_modules/execa/node_modules/cross-spawn/lib/util/readShebang.js
var require_readShebang = __commonJS((exports, module) => {
  var readShebang = function(command) {
    const size = 150;
    let buffer;
    if (Buffer.alloc) {
      buffer = Buffer.alloc(size);
    } else {
      buffer = new Buffer(size);
      buffer.fill(0);
    }
    let fd;
    try {
      fd = fs.openSync(command, "r");
      fs.readSync(fd, buffer, 0, size, 0);
      fs.closeSync(fd);
    } catch (e) {
    }
    return shebangCommand(buffer.toString());
  };
  var fs = __require("fs");
  var shebangCommand = require_shebang_command();
  module.exports = readShebang;
});

// node_modules/windows-release/node_modules/execa/node_modules/cross-spawn/node_modules/semver/semver.js
var require_semver = __commonJS((exports, module) => {
  var makeSafeRe = function(value) {
    for (var i2 = 0;i2 < safeRegexReplacements.length; i2++) {
      var token = safeRegexReplacements[i2][0];
      var max = safeRegexReplacements[i2][1];
      value = value.split(token + "*").join(token + "{0," + max + "}").split(token + "+").join(token + "{1," + max + "}");
    }
    return value;
  };
  var parse4 = function(version4, options) {
    if (!options || typeof options !== "object") {
      options = {
        loose: !!options,
        includePrerelease: false
      };
    }
    if (version4 instanceof SemVer) {
      return version4;
    }
    if (typeof version4 !== "string") {
      return null;
    }
    if (version4.length > MAX_LENGTH) {
      return null;
    }
    var r = options.loose ? safeRe[LOOSE] : safeRe[FULL];
    if (!r.test(version4)) {
      return null;
    }
    try {
      return new SemVer(version4, options);
    } catch (er) {
      return null;
    }
  };
  var valid = function(version4, options) {
    var v = parse4(version4, options);
    return v ? v.version : null;
  };
  var clean = function(version4, options) {
    var s = parse4(version4.trim().replace(/^[=v]+/, ""), options);
    return s ? s.version : null;
  };
  var SemVer = function(version4, options) {
    if (!options || typeof options !== "object") {
      options = {
        loose: !!options,
        includePrerelease: false
      };
    }
    if (version4 instanceof SemVer) {
      if (version4.loose === options.loose) {
        return version4;
      } else {
        version4 = version4.version;
      }
    } else if (typeof version4 !== "string") {
      throw new TypeError("Invalid Version: " + version4);
    }
    if (version4.length > MAX_LENGTH) {
      throw new TypeError("version is longer than " + MAX_LENGTH + " characters");
    }
    if (!(this instanceof SemVer)) {
      return new SemVer(version4, options);
    }
    debug("SemVer", version4, options);
    this.options = options;
    this.loose = !!options.loose;
    var m = version4.trim().match(options.loose ? safeRe[LOOSE] : safeRe[FULL]);
    if (!m) {
      throw new TypeError("Invalid Version: " + version4);
    }
    this.raw = version4;
    this.major = +m[1];
    this.minor = +m[2];
    this.patch = +m[3];
    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
      throw new TypeError("Invalid major version");
    }
    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
      throw new TypeError("Invalid minor version");
    }
    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
      throw new TypeError("Invalid patch version");
    }
    if (!m[4]) {
      this.prerelease = [];
    } else {
      this.prerelease = m[4].split(".").map(function(id) {
        if (/^[0-9]+$/.test(id)) {
          var num = +id;
          if (num >= 0 && num < MAX_SAFE_INTEGER) {
            return num;
          }
        }
        return id;
      });
    }
    this.build = m[5] ? m[5].split(".") : [];
    this.format();
  };
  var inc = function(version4, release, loose, identifier) {
    if (typeof loose === "string") {
      identifier = loose;
      loose = undefined;
    }
    try {
      return new SemVer(version4, loose).inc(release, identifier).version;
    } catch (er) {
      return null;
    }
  };
  var diff = function(version1, version22) {
    if (eq(version1, version22)) {
      return null;
    } else {
      var v1 = parse4(version1);
      var v2 = parse4(version22);
      var prefix = "";
      if (v1.prerelease.length || v2.prerelease.length) {
        prefix = "pre";
        var defaultResult = "prerelease";
      }
      for (var key in v1) {
        if (key === "major" || key === "minor" || key === "patch") {
          if (v1[key] !== v2[key]) {
            return prefix + key;
          }
        }
      }
      return defaultResult;
    }
  };
  var compareIdentifiers = function(a, b) {
    var anum = numeric.test(a);
    var bnum = numeric.test(b);
    if (anum && bnum) {
      a = +a;
      b = +b;
    }
    return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;
  };
  var rcompareIdentifiers = function(a, b) {
    return compareIdentifiers(b, a);
  };
  var major = function(a, loose) {
    return new SemVer(a, loose).major;
  };
  var minor = function(a, loose) {
    return new SemVer(a, loose).minor;
  };
  var patch = function(a, loose) {
    return new SemVer(a, loose).patch;
  };
  var compare = function(a, b, loose) {
    return new SemVer(a, loose).compare(new SemVer(b, loose));
  };
  var compareLoose = function(a, b) {
    return compare(a, b, true);
  };
  var rcompare = function(a, b, loose) {
    return compare(b, a, loose);
  };
  var sort = function(list, loose) {
    return list.sort(function(a, b) {
      return exports.compare(a, b, loose);
    });
  };
  var rsort = function(list, loose) {
    return list.sort(function(a, b) {
      return exports.rcompare(a, b, loose);
    });
  };
  var gt = function(a, b, loose) {
    return compare(a, b, loose) > 0;
  };
  var lt = function(a, b, loose) {
    return compare(a, b, loose) < 0;
  };
  var eq = function(a, b, loose) {
    return compare(a, b, loose) === 0;
  };
  var neq = function(a, b, loose) {
    return compare(a, b, loose) !== 0;
  };
  var gte = function(a, b, loose) {
    return compare(a, b, loose) >= 0;
  };
  var lte = function(a, b, loose) {
    return compare(a, b, loose) <= 0;
  };
  var cmp = function(a, op, b, loose) {
    switch (op) {
      case "===":
        if (typeof a === "object")
          a = a.version;
        if (typeof b === "object")
          b = b.version;
        return a === b;
      case "!==":
        if (typeof a === "object")
          a = a.version;
        if (typeof b === "object")
          b = b.version;
        return a !== b;
      case "":
      case "=":
      case "==":
        return eq(a, b, loose);
      case "!=":
        return neq(a, b, loose);
      case ">":
        return gt(a, b, loose);
      case ">=":
        return gte(a, b, loose);
      case "<":
        return lt(a, b, loose);
      case "<=":
        return lte(a, b, loose);
      default:
        throw new TypeError("Invalid operator: " + op);
    }
  };
  var Comparator = function(comp, options) {
    if (!options || typeof options !== "object") {
      options = {
        loose: !!options,
        includePrerelease: false
      };
    }
    if (comp instanceof Comparator) {
      if (comp.loose === !!options.loose) {
        return comp;
      } else {
        comp = comp.value;
      }
    }
    if (!(this instanceof Comparator)) {
      return new Comparator(comp, options);
    }
    comp = comp.trim().split(/\s+/).join(" ");
    debug("comparator", comp, options);
    this.options = options;
    this.loose = !!options.loose;
    this.parse(comp);
    if (this.semver === ANY) {
      this.value = "";
    } else {
      this.value = this.operator + this.semver.version;
    }
    debug("comp", this);
  };
  var Range = function(range, options) {
    if (!options || typeof options !== "object") {
      options = {
        loose: !!options,
        includePrerelease: false
      };
    }
    if (range instanceof Range) {
      if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {
        return range;
      } else {
        return new Range(range.raw, options);
      }
    }
    if (range instanceof Comparator) {
      return new Range(range.value, options);
    }
    if (!(this instanceof Range)) {
      return new Range(range, options);
    }
    this.options = options;
    this.loose = !!options.loose;
    this.includePrerelease = !!options.includePrerelease;
    this.raw = range.trim().split(/\s+/).join(" ");
    this.set = this.raw.split("||").map(function(range2) {
      return this.parseRange(range2.trim());
    }, this).filter(function(c) {
      return c.length;
    });
    if (!this.set.length) {
      throw new TypeError("Invalid SemVer Range: " + this.raw);
    }
    this.format();
  };
  var toComparators = function(range, options) {
    return new Range(range, options).set.map(function(comp) {
      return comp.map(function(c) {
        return c.value;
      }).join(" ").trim().split(" ");
    });
  };
  var parseComparator = function(comp, options) {
    debug("comp", comp, options);
    comp = replaceCarets(comp, options);
    debug("caret", comp);
    comp = replaceTildes(comp, options);
    debug("tildes", comp);
    comp = replaceXRanges(comp, options);
    debug("xrange", comp);
    comp = replaceStars(comp, options);
    debug("stars", comp);
    return comp;
  };
  var isX = function(id) {
    return !id || id.toLowerCase() === "x" || id === "*";
  };
  var replaceTildes = function(comp, options) {
    return comp.trim().split(/\s+/).map(function(comp2) {
      return replaceTilde(comp2, options);
    }).join(" ");
  };
  var replaceTilde = function(comp, options) {
    var r = options.loose ? safeRe[TILDELOOSE] : safeRe[TILDE];
    return comp.replace(r, function(_, M, m, p, pr) {
      debug("tilde", comp, _, M, m, p, pr);
      var ret;
      if (isX(M)) {
        ret = "";
      } else if (isX(m)) {
        ret = ">=" + M + ".0.0 <" + (+M + 1) + ".0.0";
      } else if (isX(p)) {
        ret = ">=" + M + "." + m + ".0 <" + M + "." + (+m + 1) + ".0";
      } else if (pr) {
        debug("replaceTilde pr", pr);
        ret = ">=" + M + "." + m + "." + p + "-" + pr + " <" + M + "." + (+m + 1) + ".0";
      } else {
        ret = ">=" + M + "." + m + "." + p + " <" + M + "." + (+m + 1) + ".0";
      }
      debug("tilde return", ret);
      return ret;
    });
  };
  var replaceCarets = function(comp, options) {
    return comp.trim().split(/\s+/).map(function(comp2) {
      return replaceCaret(comp2, options);
    }).join(" ");
  };
  var replaceCaret = function(comp, options) {
    debug("caret", comp, options);
    var r = options.loose ? safeRe[CARETLOOSE] : safeRe[CARET];
    return comp.replace(r, function(_, M, m, p, pr) {
      debug("caret", comp, _, M, m, p, pr);
      var ret;
      if (isX(M)) {
        ret = "";
      } else if (isX(m)) {
        ret = ">=" + M + ".0.0 <" + (+M + 1) + ".0.0";
      } else if (isX(p)) {
        if (M === "0") {
          ret = ">=" + M + "." + m + ".0 <" + M + "." + (+m + 1) + ".0";
        } else {
          ret = ">=" + M + "." + m + ".0 <" + (+M + 1) + ".0.0";
        }
      } else if (pr) {
        debug("replaceCaret pr", pr);
        if (M === "0") {
          if (m === "0") {
            ret = ">=" + M + "." + m + "." + p + "-" + pr + " <" + M + "." + m + "." + (+p + 1);
          } else {
            ret = ">=" + M + "." + m + "." + p + "-" + pr + " <" + M + "." + (+m + 1) + ".0";
          }
        } else {
          ret = ">=" + M + "." + m + "." + p + "-" + pr + " <" + (+M + 1) + ".0.0";
        }
      } else {
        debug("no pr");
        if (M === "0") {
          if (m === "0") {
            ret = ">=" + M + "." + m + "." + p + " <" + M + "." + m + "." + (+p + 1);
          } else {
            ret = ">=" + M + "." + m + "." + p + " <" + M + "." + (+m + 1) + ".0";
          }
        } else {
          ret = ">=" + M + "." + m + "." + p + " <" + (+M + 1) + ".0.0";
        }
      }
      debug("caret return", ret);
      return ret;
    });
  };
  var replaceXRanges = function(comp, options) {
    debug("replaceXRanges", comp, options);
    return comp.split(/\s+/).map(function(comp2) {
      return replaceXRange(comp2, options);
    }).join(" ");
  };
  var replaceXRange = function(comp, options) {
    comp = comp.trim();
    var r = options.loose ? safeRe[XRANGELOOSE] : safeRe[XRANGE];
    return comp.replace(r, function(ret, gtlt, M, m, p, pr) {
      debug("xRange", comp, ret, gtlt, M, m, p, pr);
      var xM = isX(M);
      var xm = xM || isX(m);
      var xp = xm || isX(p);
      var anyX = xp;
      if (gtlt === "=" && anyX) {
        gtlt = "";
      }
      if (xM) {
        if (gtlt === ">" || gtlt === "<") {
          ret = "<0.0.0";
        } else {
          ret = "*";
        }
      } else if (gtlt && anyX) {
        if (xm) {
          m = 0;
        }
        p = 0;
        if (gtlt === ">") {
          gtlt = ">=";
          if (xm) {
            M = +M + 1;
            m = 0;
            p = 0;
          } else {
            m = +m + 1;
            p = 0;
          }
        } else if (gtlt === "<=") {
          gtlt = "<";
          if (xm) {
            M = +M + 1;
          } else {
            m = +m + 1;
          }
        }
        ret = gtlt + M + "." + m + "." + p;
      } else if (xm) {
        ret = ">=" + M + ".0.0 <" + (+M + 1) + ".0.0";
      } else if (xp) {
        ret = ">=" + M + "." + m + ".0 <" + M + "." + (+m + 1) + ".0";
      }
      debug("xRange return", ret);
      return ret;
    });
  };
  var replaceStars = function(comp, options) {
    debug("replaceStars", comp, options);
    return comp.trim().replace(safeRe[STAR], "");
  };
  var hyphenReplace = function($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {
    if (isX(fM)) {
      from = "";
    } else if (isX(fm)) {
      from = ">=" + fM + ".0.0";
    } else if (isX(fp)) {
      from = ">=" + fM + "." + fm + ".0";
    } else {
      from = ">=" + from;
    }
    if (isX(tM)) {
      to = "";
    } else if (isX(tm)) {
      to = "<" + (+tM + 1) + ".0.0";
    } else if (isX(tp)) {
      to = "<" + tM + "." + (+tm + 1) + ".0";
    } else if (tpr) {
      to = "<=" + tM + "." + tm + "." + tp + "-" + tpr;
    } else {
      to = "<=" + to;
    }
    return (from + " " + to).trim();
  };
  var testSet = function(set, version4, options) {
    for (var i2 = 0;i2 < set.length; i2++) {
      if (!set[i2].test(version4)) {
        return false;
      }
    }
    if (version4.prerelease.length && !options.includePrerelease) {
      for (i2 = 0;i2 < set.length; i2++) {
        debug(set[i2].semver);
        if (set[i2].semver === ANY) {
          continue;
        }
        if (set[i2].semver.prerelease.length > 0) {
          var allowed = set[i2].semver;
          if (allowed.major === version4.major && allowed.minor === version4.minor && allowed.patch === version4.patch) {
            return true;
          }
        }
      }
      return false;
    }
    return true;
  };
  var satisfies = function(version4, range, options) {
    try {
      range = new Range(range, options);
    } catch (er) {
      return false;
    }
    return range.test(version4);
  };
  var maxSatisfying = function(versions, range, options) {
    var max = null;
    var maxSV = null;
    try {
      var rangeObj = new Range(range, options);
    } catch (er) {
      return null;
    }
    versions.forEach(function(v) {
      if (rangeObj.test(v)) {
        if (!max || maxSV.compare(v) === -1) {
          max = v;
          maxSV = new SemVer(max, options);
        }
      }
    });
    return max;
  };
  var minSatisfying = function(versions, range, options) {
    var min = null;
    var minSV = null;
    try {
      var rangeObj = new Range(range, options);
    } catch (er) {
      return null;
    }
    versions.forEach(function(v) {
      if (rangeObj.test(v)) {
        if (!min || minSV.compare(v) === 1) {
          min = v;
          minSV = new SemVer(min, options);
        }
      }
    });
    return min;
  };
  var minVersion = function(range, loose) {
    range = new Range(range, loose);
    var minver = new SemVer("0.0.0");
    if (range.test(minver)) {
      return minver;
    }
    minver = new SemVer("0.0.0-0");
    if (range.test(minver)) {
      return minver;
    }
    minver = null;
    for (var i2 = 0;i2 < range.set.length; ++i2) {
      var comparators = range.set[i2];
      comparators.forEach(function(comparator) {
        var compver = new SemVer(comparator.semver.version);
        switch (comparator.operator) {
          case ">":
            if (compver.prerelease.length === 0) {
              compver.patch++;
            } else {
              compver.prerelease.push(0);
            }
            compver.raw = compver.format();
          case "":
          case ">=":
            if (!minver || gt(minver, compver)) {
              minver = compver;
            }
            break;
          case "<":
          case "<=":
            break;
          default:
            throw new Error("Unexpected operation: " + comparator.operator);
        }
      });
    }
    if (minver && range.test(minver)) {
      return minver;
    }
    return null;
  };
  var validRange = function(range, options) {
    try {
      return new Range(range, options).range || "*";
    } catch (er) {
      return null;
    }
  };
  var ltr = function(version4, range, options) {
    return outside(version4, range, "<", options);
  };
  var gtr = function(version4, range, options) {
    return outside(version4, range, ">", options);
  };
  var outside = function(version4, range, hilo, options) {
    version4 = new SemVer(version4, options);
    range = new Range(range, options);
    var gtfn, ltefn, ltfn, comp, ecomp;
    switch (hilo) {
      case ">":
        gtfn = gt;
        ltefn = lte;
        ltfn = lt;
        comp = ">";
        ecomp = ">=";
        break;
      case "<":
        gtfn = lt;
        ltefn = gte;
        ltfn = gt;
        comp = "<";
        ecomp = "<=";
        break;
      default:
        throw new TypeError('Must provide a hilo val of "<" or ">"');
    }
    if (satisfies(version4, range, options)) {
      return false;
    }
    for (var i2 = 0;i2 < range.set.length; ++i2) {
      var comparators = range.set[i2];
      var high = null;
      var low = null;
      comparators.forEach(function(comparator) {
        if (comparator.semver === ANY) {
          comparator = new Comparator(">=0.0.0");
        }
        high = high || comparator;
        low = low || comparator;
        if (gtfn(comparator.semver, high.semver, options)) {
          high = comparator;
        } else if (ltfn(comparator.semver, low.semver, options)) {
          low = comparator;
        }
      });
      if (high.operator === comp || high.operator === ecomp) {
        return false;
      }
      if ((!low.operator || low.operator === comp) && ltefn(version4, low.semver)) {
        return false;
      } else if (low.operator === ecomp && ltfn(version4, low.semver)) {
        return false;
      }
    }
    return true;
  };
  var prerelease = function(version4, options) {
    var parsed = parse4(version4, options);
    return parsed && parsed.prerelease.length ? parsed.prerelease : null;
  };
  var intersects = function(r1, r2, options) {
    r1 = new Range(r1, options);
    r2 = new Range(r2, options);
    return r1.intersects(r2);
  };
  var coerce = function(version4) {
    if (version4 instanceof SemVer) {
      return version4;
    }
    if (typeof version4 !== "string") {
      return null;
    }
    var match = version4.match(safeRe[COERCE]);
    if (match == null) {
      return null;
    }
    return parse4(match[1] + "." + (match[2] || "0") + "." + (match[3] || "0"));
  };
  exports = module.exports = SemVer;
  var debug;
  if (typeof process === "object" && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG)) {
    debug = function() {
      var args = Array.prototype.slice.call(arguments, 0);
      args.unshift("SEMVER");
      console.log.apply(console, args);
    };
  } else {
    debug = function() {
    };
  }
  exports.SEMVER_SPEC_VERSION = "2.0.0";
  var MAX_LENGTH = 256;
  var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;
  var MAX_SAFE_COMPONENT_LENGTH = 16;
  var MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6;
  var re = exports.re = [];
  var safeRe = exports.safeRe = [];
  var src = exports.src = [];
  var R = 0;
  var LETTERDASHNUMBER = "[a-zA-Z0-9-]";
  var safeRegexReplacements = [
    ["\\s", 1],
    ["\\d", MAX_LENGTH],
    [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH]
  ];
  var NUMERICIDENTIFIER = R++;
  src[NUMERICIDENTIFIER] = "0|[1-9]\\d*";
  var NUMERICIDENTIFIERLOOSE = R++;
  src[NUMERICIDENTIFIERLOOSE] = "\\d+";
  var NONNUMERICIDENTIFIER = R++;
  src[NONNUMERICIDENTIFIER] = "\\d*[a-zA-Z-]" + LETTERDASHNUMBER + "*";
  var MAINVERSION = R++;
  src[MAINVERSION] = "(" + src[NUMERICIDENTIFIER] + ")\\.(" + src[NUMERICIDENTIFIER] + ")\\.(" + src[NUMERICIDENTIFIER] + ")";
  var MAINVERSIONLOOSE = R++;
  src[MAINVERSIONLOOSE] = "(" + src[NUMERICIDENTIFIERLOOSE] + ")\\.(" + src[NUMERICIDENTIFIERLOOSE] + ")\\.(" + src[NUMERICIDENTIFIERLOOSE] + ")";
  var PRERELEASEIDENTIFIER = R++;
  src[PRERELEASEIDENTIFIER] = "(?:" + src[NUMERICIDENTIFIER] + "|" + src[NONNUMERICIDENTIFIER] + ")";
  var PRERELEASEIDENTIFIERLOOSE = R++;
  src[PRERELEASEIDENTIFIERLOOSE] = "(?:" + src[NUMERICIDENTIFIERLOOSE] + "|" + src[NONNUMERICIDENTIFIER] + ")";
  var PRERELEASE = R++;
  src[PRERELEASE] = "(?:-(" + src[PRERELEASEIDENTIFIER] + "(?:\\." + src[PRERELEASEIDENTIFIER] + ")*))";
  var PRERELEASELOOSE = R++;
  src[PRERELEASELOOSE] = "(?:-?(" + src[PRERELEASEIDENTIFIERLOOSE] + "(?:\\." + src[PRERELEASEIDENTIFIERLOOSE] + ")*))";
  var BUILDIDENTIFIER = R++;
  src[BUILDIDENTIFIER] = LETTERDASHNUMBER + "+";
  var BUILD = R++;
  src[BUILD] = "(?:\\+(" + src[BUILDIDENTIFIER] + "(?:\\." + src[BUILDIDENTIFIER] + ")*))";
  var FULL = R++;
  var FULLPLAIN = "v?" + src[MAINVERSION] + src[PRERELEASE] + "?" + src[BUILD] + "?";
  src[FULL] = "^" + FULLPLAIN + "$";
  var LOOSEPLAIN = "[v=\\s]*" + src[MAINVERSIONLOOSE] + src[PRERELEASELOOSE] + "?" + src[BUILD] + "?";
  var LOOSE = R++;
  src[LOOSE] = "^" + LOOSEPLAIN + "$";
  var GTLT = R++;
  src[GTLT] = "((?:<|>)?=?)";
  var XRANGEIDENTIFIERLOOSE = R++;
  src[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + "|x|X|\\*";
  var XRANGEIDENTIFIER = R++;
  src[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + "|x|X|\\*";
  var XRANGEPLAIN = R++;
  src[XRANGEPLAIN] = "[v=\\s]*(" + src[XRANGEIDENTIFIER] + ")(?:\\.(" + src[XRANGEIDENTIFIER] + ")(?:\\.(" + src[XRANGEIDENTIFIER] + ")(?:" + src[PRERELEASE] + ")?" + src[BUILD] + "?)?)?";
  var XRANGEPLAINLOOSE = R++;
  src[XRANGEPLAINLOOSE] = "[v=\\s]*(" + src[XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + src[XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + src[XRANGEIDENTIFIERLOOSE] + ")(?:" + src[PRERELEASELOOSE] + ")?" + src[BUILD] + "?)?)?";
  var XRANGE = R++;
  src[XRANGE] = "^" + src[GTLT] + "\\s*" + src[XRANGEPLAIN] + "$";
  var XRANGELOOSE = R++;
  src[XRANGELOOSE] = "^" + src[GTLT] + "\\s*" + src[XRANGEPLAINLOOSE] + "$";
  var COERCE = R++;
  src[COERCE] = "(?:^|[^\\d])(\\d{1," + MAX_SAFE_COMPONENT_LENGTH + "})(?:\\.(\\d{1," + MAX_SAFE_COMPONENT_LENGTH + "}))?(?:\\.(\\d{1," + MAX_SAFE_COMPONENT_LENGTH + "}))?(?:$|[^\\d])";
  var LONETILDE = R++;
  src[LONETILDE] = "(?:~>?)";
  var TILDETRIM = R++;
  src[TILDETRIM] = "(\\s*)" + src[LONETILDE] + "\\s+";
  re[TILDETRIM] = new RegExp(src[TILDETRIM], "g");
  safeRe[TILDETRIM] = new RegExp(makeSafeRe(src[TILDETRIM]), "g");
  var tildeTrimReplace = "$1~";
  var TILDE = R++;
  src[TILDE] = "^" + src[LONETILDE] + src[XRANGEPLAIN] + "$";
  var TILDELOOSE = R++;
  src[TILDELOOSE] = "^" + src[LONETILDE] + src[XRANGEPLAINLOOSE] + "$";
  var LONECARET = R++;
  src[LONECARET] = "(?:\\^)";
  var CARETTRIM = R++;
  src[CARETTRIM] = "(\\s*)" + src[LONECARET] + "\\s+";
  re[CARETTRIM] = new RegExp(src[CARETTRIM], "g");
  safeRe[CARETTRIM] = new RegExp(makeSafeRe(src[CARETTRIM]), "g");
  var caretTrimReplace = "$1^";
  var CARET = R++;
  src[CARET] = "^" + src[LONECARET] + src[XRANGEPLAIN] + "$";
  var CARETLOOSE = R++;
  src[CARETLOOSE] = "^" + src[LONECARET] + src[XRANGEPLAINLOOSE] + "$";
  var COMPARATORLOOSE = R++;
  src[COMPARATORLOOSE] = "^" + src[GTLT] + "\\s*(" + LOOSEPLAIN + ")$|^$";
  var COMPARATOR = R++;
  src[COMPARATOR] = "^" + src[GTLT] + "\\s*(" + FULLPLAIN + ")$|^$";
  var COMPARATORTRIM = R++;
  src[COMPARATORTRIM] = "(\\s*)" + src[GTLT] + "\\s*(" + LOOSEPLAIN + "|" + src[XRANGEPLAIN] + ")";
  re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], "g");
  safeRe[COMPARATORTRIM] = new RegExp(makeSafeRe(src[COMPARATORTRIM]), "g");
  var comparatorTrimReplace = "$1$2$3";
  var HYPHENRANGE = R++;
  src[HYPHENRANGE] = "^\\s*(" + src[XRANGEPLAIN] + ")\\s+-\\s+(" + src[XRANGEPLAIN] + ")\\s*$";
  var HYPHENRANGELOOSE = R++;
  src[HYPHENRANGELOOSE] = "^\\s*(" + src[XRANGEPLAINLOOSE] + ")\\s+-\\s+(" + src[XRANGEPLAINLOOSE] + ")\\s*$";
  var STAR = R++;
  src[STAR] = "(<|>)?=?\\s*\\*";
  for (i = 0;i < R; i++) {
    debug(i, src[i]);
    if (!re[i]) {
      re[i] = new RegExp(src[i]);
      safeRe[i] = new RegExp(makeSafeRe(src[i]));
    }
  }
  var i;
  exports.parse = parse4;
  exports.valid = valid;
  exports.clean = clean;
  exports.SemVer = SemVer;
  SemVer.prototype.format = function() {
    this.version = this.major + "." + this.minor + "." + this.patch;
    if (this.prerelease.length) {
      this.version += "-" + this.prerelease.join(".");
    }
    return this.version;
  };
  SemVer.prototype.toString = function() {
    return this.version;
  };
  SemVer.prototype.compare = function(other) {
    debug("SemVer.compare", this.version, this.options, other);
    if (!(other instanceof SemVer)) {
      other = new SemVer(other, this.options);
    }
    return this.compareMain(other) || this.comparePre(other);
  };
  SemVer.prototype.compareMain = function(other) {
    if (!(other instanceof SemVer)) {
      other = new SemVer(other, this.options);
    }
    return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);
  };
  SemVer.prototype.comparePre = function(other) {
    if (!(other instanceof SemVer)) {
      other = new SemVer(other, this.options);
    }
    if (this.prerelease.length && !other.prerelease.length) {
      return -1;
    } else if (!this.prerelease.length && other.prerelease.length) {
      return 1;
    } else if (!this.prerelease.length && !other.prerelease.length) {
      return 0;
    }
    var i2 = 0;
    do {
      var a = this.prerelease[i2];
      var b = other.prerelease[i2];
      debug("prerelease compare", i2, a, b);
      if (a === undefined && b === undefined) {
        return 0;
      } else if (b === undefined) {
        return 1;
      } else if (a === undefined) {
        return -1;
      } else if (a === b) {
        continue;
      } else {
        return compareIdentifiers(a, b);
      }
    } while (++i2);
  };
  SemVer.prototype.inc = function(release, identifier) {
    switch (release) {
      case "premajor":
        this.prerelease.length = 0;
        this.patch = 0;
        this.minor = 0;
        this.major++;
        this.inc("pre", identifier);
        break;
      case "preminor":
        this.prerelease.length = 0;
        this.patch = 0;
        this.minor++;
        this.inc("pre", identifier);
        break;
      case "prepatch":
        this.prerelease.length = 0;
        this.inc("patch", identifier);
        this.inc("pre", identifier);
        break;
      case "prerelease":
        if (this.prerelease.length === 0) {
          this.inc("patch", identifier);
        }
        this.inc("pre", identifier);
        break;
      case "major":
        if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {
          this.major++;
        }
        this.minor = 0;
        this.patch = 0;
        this.prerelease = [];
        break;
      case "minor":
        if (this.patch !== 0 || this.prerelease.length === 0) {
          this.minor++;
        }
        this.patch = 0;
        this.prerelease = [];
        break;
      case "patch":
        if (this.prerelease.length === 0) {
          this.patch++;
        }
        this.prerelease = [];
        break;
      case "pre":
        if (this.prerelease.length === 0) {
          this.prerelease = [0];
        } else {
          var i2 = this.prerelease.length;
          while (--i2 >= 0) {
            if (typeof this.prerelease[i2] === "number") {
              this.prerelease[i2]++;
              i2 = -2;
            }
          }
          if (i2 === -1) {
            this.prerelease.push(0);
          }
        }
        if (identifier) {
          if (this.prerelease[0] === identifier) {
            if (isNaN(this.prerelease[1])) {
              this.prerelease = [identifier, 0];
            }
          } else {
            this.prerelease = [identifier, 0];
          }
        }
        break;
      default:
        throw new Error("invalid increment argument: " + release);
    }
    this.format();
    this.raw = this.version;
    return this;
  };
  exports.inc = inc;
  exports.diff = diff;
  exports.compareIdentifiers = compareIdentifiers;
  var numeric = /^[0-9]+$/;
  exports.rcompareIdentifiers = rcompareIdentifiers;
  exports.major = major;
  exports.minor = minor;
  exports.patch = patch;
  exports.compare = compare;
  exports.compareLoose = compareLoose;
  exports.rcompare = rcompare;
  exports.sort = sort;
  exports.rsort = rsort;
  exports.gt = gt;
  exports.lt = lt;
  exports.eq = eq;
  exports.neq = neq;
  exports.gte = gte;
  exports.lte = lte;
  exports.cmp = cmp;
  exports.Comparator = Comparator;
  var ANY = {};
  Comparator.prototype.parse = function(comp) {
    var r = this.options.loose ? safeRe[COMPARATORLOOSE] : safeRe[COMPARATOR];
    var m = comp.match(r);
    if (!m) {
      throw new TypeError("Invalid comparator: " + comp);
    }
    this.operator = m[1];
    if (this.operator === "=") {
      this.operator = "";
    }
    if (!m[2]) {
      this.semver = ANY;
    } else {
      this.semver = new SemVer(m[2], this.options.loose);
    }
  };
  Comparator.prototype.toString = function() {
    return this.value;
  };
  Comparator.prototype.test = function(version4) {
    debug("Comparator.test", version4, this.options.loose);
    if (this.semver === ANY) {
      return true;
    }
    if (typeof version4 === "string") {
      version4 = new SemVer(version4, this.options);
    }
    return cmp(version4, this.operator, this.semver, this.options);
  };
  Comparator.prototype.intersects = function(comp, options) {
    if (!(comp instanceof Comparator)) {
      throw new TypeError("a Comparator is required");
    }
    if (!options || typeof options !== "object") {
      options = {
        loose: !!options,
        includePrerelease: false
      };
    }
    var rangeTmp;
    if (this.operator === "") {
      rangeTmp = new Range(comp.value, options);
      return satisfies(this.value, rangeTmp, options);
    } else if (comp.operator === "") {
      rangeTmp = new Range(this.value, options);
      return satisfies(comp.semver, rangeTmp, options);
    }
    var sameDirectionIncreasing = (this.operator === ">=" || this.operator === ">") && (comp.operator === ">=" || comp.operator === ">");
    var sameDirectionDecreasing = (this.operator === "<=" || this.operator === "<") && (comp.operator === "<=" || comp.operator === "<");
    var sameSemVer = this.semver.version === comp.semver.version;
    var differentDirectionsInclusive = (this.operator === ">=" || this.operator === "<=") && (comp.operator === ">=" || comp.operator === "<=");
    var oppositeDirectionsLessThan = cmp(this.semver, "<", comp.semver, options) && ((this.operator === ">=" || this.operator === ">") && (comp.operator === "<=" || comp.operator === "<"));
    var oppositeDirectionsGreaterThan = cmp(this.semver, ">", comp.semver, options) && ((this.operator === "<=" || this.operator === "<") && (comp.operator === ">=" || comp.operator === ">"));
    return sameDirectionIncreasing || sameDirectionDecreasing || sameSemVer && differentDirectionsInclusive || oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;
  };
  exports.Range = Range;
  Range.prototype.format = function() {
    this.range = this.set.map(function(comps) {
      return comps.join(" ").trim();
    }).join("||").trim();
    return this.range;
  };
  Range.prototype.toString = function() {
    return this.range;
  };
  Range.prototype.parseRange = function(range) {
    var loose = this.options.loose;
    var hr = loose ? safeRe[HYPHENRANGELOOSE] : safeRe[HYPHENRANGE];
    range = range.replace(hr, hyphenReplace);
    debug("hyphen replace", range);
    range = range.replace(safeRe[COMPARATORTRIM], comparatorTrimReplace);
    debug("comparator trim", range, safeRe[COMPARATORTRIM]);
    range = range.replace(safeRe[TILDETRIM], tildeTrimReplace);
    range = range.replace(safeRe[CARETTRIM], caretTrimReplace);
    var compRe = loose ? safeRe[COMPARATORLOOSE] : safeRe[COMPARATOR];
    var set = range.split(" ").map(function(comp) {
      return parseComparator(comp, this.options);
    }, this).join(" ").split(/\s+/);
    if (this.options.loose) {
      set = set.filter(function(comp) {
        return !!comp.match(compRe);
      });
    }
    set = set.map(function(comp) {
      return new Comparator(comp, this.options);
    }, this);
    return set;
  };
  Range.prototype.intersects = function(range, options) {
    if (!(range instanceof Range)) {
      throw new TypeError("a Range is required");
    }
    return this.set.some(function(thisComparators) {
      return thisComparators.every(function(thisComparator) {
        return range.set.some(function(rangeComparators) {
          return rangeComparators.every(function(rangeComparator) {
            return thisComparator.intersects(rangeComparator, options);
          });
        });
      });
    });
  };
  exports.toComparators = toComparators;
  Range.prototype.test = function(version4) {
    if (!version4) {
      return false;
    }
    if (typeof version4 === "string") {
      version4 = new SemVer(version4, this.options);
    }
    for (var i2 = 0;i2 < this.set.length; i2++) {
      if (testSet(this.set[i2], version4, this.options)) {
        return true;
      }
    }
    return false;
  };
  exports.satisfies = satisfies;
  exports.maxSatisfying = maxSatisfying;
  exports.minSatisfying = minSatisfying;
  exports.minVersion = minVersion;
  exports.validRange = validRange;
  exports.ltr = ltr;
  exports.gtr = gtr;
  exports.outside = outside;
  exports.prerelease = prerelease;
  exports.intersects = intersects;
  exports.coerce = coerce;
});

// node_modules/windows-release/node_modules/execa/node_modules/cross-spawn/lib/parse.js
var require_parse2 = __commonJS((exports, module) => {
  var detectShebang = function(parsed) {
    parsed.file = resolveCommand(parsed);
    const shebang = parsed.file && readShebang(parsed.file);
    if (shebang) {
      parsed.args.unshift(parsed.file);
      parsed.command = shebang;
      return resolveCommand(parsed);
    }
    return parsed.file;
  };
  var parseNonShell = function(parsed) {
    if (!isWin) {
      return parsed;
    }
    const commandFile = detectShebang(parsed);
    const needsShell = !isExecutableRegExp.test(commandFile);
    if (parsed.options.forceShell || needsShell) {
      const needsDoubleEscapeMetaChars = isCmdShimRegExp.test(commandFile);
      parsed.command = path.normalize(parsed.command);
      parsed.command = escape2.command(parsed.command);
      parsed.args = parsed.args.map((arg) => escape2.argument(arg, needsDoubleEscapeMetaChars));
      const shellCommand = [parsed.command].concat(parsed.args).join(" ");
      parsed.args = ["/d", "/s", "/c", `"${shellCommand}"`];
      parsed.command = process.env.comspec || "cmd.exe";
      parsed.options.windowsVerbatimArguments = true;
    }
    return parsed;
  };
  var parseShell = function(parsed) {
    if (supportsShellOption) {
      return parsed;
    }
    const shellCommand = [parsed.command].concat(parsed.args).join(" ");
    if (isWin) {
      parsed.command = typeof parsed.options.shell === "string" ? parsed.options.shell : process.env.comspec || "cmd.exe";
      parsed.args = ["/d", "/s", "/c", `"${shellCommand}"`];
      parsed.options.windowsVerbatimArguments = true;
    } else {
      if (typeof parsed.options.shell === "string") {
        parsed.command = parsed.options.shell;
      } else if (process.platform === "android") {
        parsed.command = "/system/bin/sh";
      } else {
        parsed.command = "/bin/sh";
      }
      parsed.args = ["-c", shellCommand];
    }
    return parsed;
  };
  var parse4 = function(command, args, options) {
    if (args && !Array.isArray(args)) {
      options = args;
      args = null;
    }
    args = args ? args.slice(0) : [];
    options = Object.assign({}, options);
    const parsed = {
      command,
      args,
      options,
      file: undefined,
      original: {
        command,
        args
      }
    };
    return options.shell ? parseShell(parsed) : parseNonShell(parsed);
  };
  var path = __require("path");
  var niceTry = require_src();
  var resolveCommand = require_resolveCommand();
  var escape2 = require_escape();
  var readShebang = require_readShebang();
  var semver = require_semver();
  var isWin = process.platform === "win32";
  var isExecutableRegExp = /\.(?:com|exe)$/i;
  var isCmdShimRegExp = /node_modules[\\/].bin[\\/][^\\/]+\.cmd$/i;
  var supportsShellOption = niceTry(() => semver.satisfies(process.version, "^4.8.0 || ^5.7.0 || >= 6.0.0", true)) || false;
  module.exports = parse4;
});

// node_modules/windows-release/node_modules/execa/node_modules/cross-spawn/lib/enoent.js
var require_enoent = __commonJS((exports, module) => {
  var notFoundError = function(original, syscall) {
    return Object.assign(new Error(`${syscall} ${original.command} ENOENT`), {
      code: "ENOENT",
      errno: "ENOENT",
      syscall: `${syscall} ${original.command}`,
      path: original.command,
      spawnargs: original.args
    });
  };
  var hookChildProcess = function(cp, parsed) {
    if (!isWin) {
      return;
    }
    const originalEmit = cp.emit;
    cp.emit = function(name, arg1) {
      if (name === "exit") {
        const err = verifyENOENT(arg1, parsed, "spawn");
        if (err) {
          return originalEmit.call(cp, "error", err);
        }
      }
      return originalEmit.apply(cp, arguments);
    };
  };
  var verifyENOENT = function(status, parsed) {
    if (isWin && status === 1 && !parsed.file) {
      return notFoundError(parsed.original, "spawn");
    }
    return null;
  };
  var verifyENOENTSync = function(status, parsed) {
    if (isWin && status === 1 && !parsed.file) {
      return notFoundError(parsed.original, "spawnSync");
    }
    return null;
  };
  var isWin = process.platform === "win32";
  module.exports = {
    hookChildProcess,
    verifyENOENT,
    verifyENOENTSync,
    notFoundError
  };
});

// node_modules/windows-release/node_modules/execa/node_modules/cross-spawn/index.js
var require_cross_spawn = __commonJS((exports, module) => {
  var spawn = function(command, args, options) {
    const parsed = parse4(command, args, options);
    const spawned = cp.spawn(parsed.command, parsed.args, parsed.options);
    enoent.hookChildProcess(spawned, parsed);
    return spawned;
  };
  var spawnSync = function(command, args, options) {
    const parsed = parse4(command, args, options);
    const result = cp.spawnSync(parsed.command, parsed.args, parsed.options);
    result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);
    return result;
  };
  var cp = __require("child_process");
  var parse4 = require_parse2();
  var enoent = require_enoent();
  module.exports = spawn;
  module.exports.spawn = spawn;
  module.exports.sync = spawnSync;
  module.exports._parse = parse4;
  module.exports._enoent = enoent;
});

// node_modules/strip-eof/index.js
var require_strip_eof = __commonJS((exports, module) => {
  module.exports = function(x) {
    var lf = typeof x === "string" ? "\n" : "\n".charCodeAt();
    var cr = typeof x === "string" ? "\r" : "\r".charCodeAt();
    if (x[x.length - 1] === lf) {
      x = x.slice(0, x.length - 1);
    }
    if (x[x.length - 1] === cr) {
      x = x.slice(0, x.length - 1);
    }
    return x;
  };
});

// node_modules/windows-release/node_modules/execa/node_modules/npm-run-path/node_modules/path-key/index.js
var require_path_key2 = __commonJS((exports, module) => {
  module.exports = (opts) => {
    opts = opts || {};
    const env = opts.env || process.env;
    const platform = opts.platform || process.platform;
    if (platform !== "win32") {
      return "PATH";
    }
    return Object.keys(env).find((x) => x.toUpperCase() === "PATH") || "Path";
  };
});

// node_modules/windows-release/node_modules/execa/node_modules/npm-run-path/index.js
var require_npm_run_path = __commonJS((exports, module) => {
  var path = __require("path");
  var pathKey = require_path_key2();
  module.exports = (opts) => {
    opts = Object.assign({
      cwd: process.cwd(),
      path: process.env[pathKey()]
    }, opts);
    let prev;
    let pth = path.resolve(opts.cwd);
    const ret = [];
    while (prev !== pth) {
      ret.push(path.join(pth, "node_modules/.bin"));
      prev = pth;
      pth = path.resolve(pth, "..");
    }
    ret.push(path.dirname(process.execPath));
    return ret.concat(opts.path).join(path.delimiter);
  };
  module.exports.env = (opts) => {
    opts = Object.assign({
      env: process.env
    }, opts);
    const env = Object.assign({}, opts.env);
    const path2 = pathKey({ env });
    opts.path = env[path2];
    env[path2] = module.exports(opts);
    return env;
  };
});

// node_modules/windows-release/node_modules/execa/node_modules/is-stream/index.js
var require_is_stream = __commonJS((exports, module) => {
  var isStream = module.exports = function(stream) {
    return stream !== null && typeof stream === "object" && typeof stream.pipe === "function";
  };
  isStream.writable = function(stream) {
    return isStream(stream) && stream.writable !== false && typeof stream._write === "function" && typeof stream._writableState === "object";
  };
  isStream.readable = function(stream) {
    return isStream(stream) && stream.readable !== false && typeof stream._read === "function" && typeof stream._readableState === "object";
  };
  isStream.duplex = function(stream) {
    return isStream.writable(stream) && isStream.readable(stream);
  };
  isStream.transform = function(stream) {
    return isStream.duplex(stream) && typeof stream._transform === "function" && typeof stream._transformState === "object";
  };
});

// node_modules/end-of-stream/index.js
var require_end_of_stream = __commonJS((exports, module) => {
  var once = require_once();
  var noop = function() {
  };
  var isRequest = function(stream) {
    return stream.setHeader && typeof stream.abort === "function";
  };
  var isChildProcess = function(stream) {
    return stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3;
  };
  var eos = function(stream, opts, callback) {
    if (typeof opts === "function")
      return eos(stream, null, opts);
    if (!opts)
      opts = {};
    callback = once(callback || noop);
    var ws = stream._writableState;
    var rs = stream._readableState;
    var readable = opts.readable || opts.readable !== false && stream.readable;
    var writable = opts.writable || opts.writable !== false && stream.writable;
    var cancelled = false;
    var onlegacyfinish = function() {
      if (!stream.writable)
        onfinish();
    };
    var onfinish = function() {
      writable = false;
      if (!readable)
        callback.call(stream);
    };
    var onend = function() {
      readable = false;
      if (!writable)
        callback.call(stream);
    };
    var onexit = function(exitCode) {
      callback.call(stream, exitCode ? new Error("exited with error code: " + exitCode) : null);
    };
    var onerror = function(err) {
      callback.call(stream, err);
    };
    var onclose = function() {
      process.nextTick(onclosenexttick);
    };
    var onclosenexttick = function() {
      if (cancelled)
        return;
      if (readable && !(rs && (rs.ended && !rs.destroyed)))
        return callback.call(stream, new Error("premature close"));
      if (writable && !(ws && (ws.ended && !ws.destroyed)))
        return callback.call(stream, new Error("premature close"));
    };
    var onrequest = function() {
      stream.req.on("finish", onfinish);
    };
    if (isRequest(stream)) {
      stream.on("complete", onfinish);
      stream.on("abort", onclose);
      if (stream.req)
        onrequest();
      else
        stream.on("request", onrequest);
    } else if (writable && !ws) {
      stream.on("end", onlegacyfinish);
      stream.on("close", onlegacyfinish);
    }
    if (isChildProcess(stream))
      stream.on("exit", onexit);
    stream.on("end", onend);
    stream.on("finish", onfinish);
    if (opts.error !== false)
      stream.on("error", onerror);
    stream.on("close", onclose);
    return function() {
      cancelled = true;
      stream.removeListener("complete", onfinish);
      stream.removeListener("abort", onclose);
      stream.removeListener("request", onrequest);
      if (stream.req)
        stream.req.removeListener("finish", onfinish);
      stream.removeListener("end", onlegacyfinish);
      stream.removeListener("close", onlegacyfinish);
      stream.removeListener("finish", onfinish);
      stream.removeListener("exit", onexit);
      stream.removeListener("end", onend);
      stream.removeListener("error", onerror);
      stream.removeListener("close", onclose);
    };
  };
  module.exports = eos;
});

// node_modules/pump/index.js
var require_pump = __commonJS((exports, module) => {
  var once = require_once();
  var eos = require_end_of_stream();
  var fs = __require("fs");
  var noop = function() {
  };
  var ancient = /^v?\.0/.test(process.version);
  var isFn = function(fn) {
    return typeof fn === "function";
  };
  var isFS = function(stream) {
    if (!ancient)
      return false;
    if (!fs)
      return false;
    return (stream instanceof (fs.ReadStream || noop) || stream instanceof (fs.WriteStream || noop)) && isFn(stream.close);
  };
  var isRequest = function(stream) {
    return stream.setHeader && isFn(stream.abort);
  };
  var destroyer = function(stream, reading, writing, callback) {
    callback = once(callback);
    var closed = false;
    stream.on("close", function() {
      closed = true;
    });
    eos(stream, { readable: reading, writable: writing }, function(err) {
      if (err)
        return callback(err);
      closed = true;
      callback();
    });
    var destroyed = false;
    return function(err) {
      if (closed)
        return;
      if (destroyed)
        return;
      destroyed = true;
      if (isFS(stream))
        return stream.close(noop);
      if (isRequest(stream))
        return stream.abort();
      if (isFn(stream.destroy))
        return stream.destroy();
      callback(err || new Error("stream was destroyed"));
    };
  };
  var call = function(fn) {
    fn();
  };
  var pipe = function(from, to) {
    return from.pipe(to);
  };
  var pump = function() {
    var streams = Array.prototype.slice.call(arguments);
    var callback = isFn(streams[streams.length - 1] || noop) && streams.pop() || noop;
    if (Array.isArray(streams[0]))
      streams = streams[0];
    if (streams.length < 2)
      throw new Error("pump requires two streams per minimum");
    var error2;
    var destroys = streams.map(function(stream, i) {
      var reading = i < streams.length - 1;
      var writing = i > 0;
      return destroyer(stream, reading, writing, function(err) {
        if (!error2)
          error2 = err;
        if (err)
          destroys.forEach(call);
        if (reading)
          return;
        destroys.forEach(call);
        callback(error2);
      });
    });
    return streams.reduce(pipe);
  };
  module.exports = pump;
});

// node_modules/windows-release/node_modules/execa/node_modules/get-stream/buffer-stream.js
var require_buffer_stream = __commonJS((exports, module) => {
  var { PassThrough } = __require("stream");
  module.exports = (options) => {
    options = Object.assign({}, options);
    const { array } = options;
    let { encoding } = options;
    const buffer = encoding === "buffer";
    let objectMode = false;
    if (array) {
      objectMode = !(encoding || buffer);
    } else {
      encoding = encoding || "utf8";
    }
    if (buffer) {
      encoding = null;
    }
    let len = 0;
    const ret = [];
    const stream = new PassThrough({ objectMode });
    if (encoding) {
      stream.setEncoding(encoding);
    }
    stream.on("data", (chunk) => {
      ret.push(chunk);
      if (objectMode) {
        len = ret.length;
      } else {
        len += chunk.length;
      }
    });
    stream.getBufferedValue = () => {
      if (array) {
        return ret;
      }
      return buffer ? Buffer.concat(ret, len) : ret.join("");
    };
    stream.getBufferedLength = () => len;
    return stream;
  };
});

// node_modules/windows-release/node_modules/execa/node_modules/get-stream/index.js
var require_get_stream = __commonJS((exports, module) => {
  var getStream = function(inputStream, options) {
    if (!inputStream) {
      return Promise.reject(new Error("Expected a stream"));
    }
    options = Object.assign({ maxBuffer: Infinity }, options);
    const { maxBuffer } = options;
    let stream;
    return new Promise((resolve, reject) => {
      const rejectPromise = (error2) => {
        if (error2) {
          error2.bufferedData = stream.getBufferedValue();
        }
        reject(error2);
      };
      stream = pump(inputStream, bufferStream(options), (error2) => {
        if (error2) {
          rejectPromise(error2);
          return;
        }
        resolve();
      });
      stream.on("data", () => {
        if (stream.getBufferedLength() > maxBuffer) {
          rejectPromise(new MaxBufferError);
        }
      });
    }).then(() => stream.getBufferedValue());
  };
  var pump = require_pump();
  var bufferStream = require_buffer_stream();

  class MaxBufferError extends Error {
    constructor() {
      super("maxBuffer exceeded");
      this.name = "MaxBufferError";
    }
  }
  module.exports = getStream;
  module.exports.buffer = (stream, options) => getStream(stream, Object.assign({}, options, { encoding: "buffer" }));
  module.exports.array = (stream, options) => getStream(stream, Object.assign({}, options, { array: true }));
  module.exports.MaxBufferError = MaxBufferError;
});

// node_modules/p-finally/index.js
var require_p_finally = __commonJS((exports, module) => {
  module.exports = (promise, onFinally) => {
    onFinally = onFinally || (() => {
    });
    return promise.then((val) => new Promise((resolve) => {
      resolve(onFinally());
    }).then(() => val), (err) => new Promise((resolve) => {
      resolve(onFinally());
    }).then(() => {
      throw err;
    }));
  };
});

// node_modules/signal-exit/signals.js
var require_signals = __commonJS((exports, module) => {
  module.exports = [
    "SIGABRT",
    "SIGALRM",
    "SIGHUP",
    "SIGINT",
    "SIGTERM"
  ];
  if (process.platform !== "win32") {
    module.exports.push("SIGVTALRM", "SIGXCPU", "SIGXFSZ", "SIGUSR2", "SIGTRAP", "SIGSYS", "SIGQUIT", "SIGIOT");
  }
  if (process.platform === "linux") {
    module.exports.push("SIGIO", "SIGPOLL", "SIGPWR", "SIGSTKFLT", "SIGUNUSED");
  }
});

// node_modules/signal-exit/index.js
var require_signal_exit = __commonJS((exports, module) => {
  var process2 = global.process;
  var processOk = function(process3) {
    return process3 && typeof process3 === "object" && typeof process3.removeListener === "function" && typeof process3.emit === "function" && typeof process3.reallyExit === "function" && typeof process3.listeners === "function" && typeof process3.kill === "function" && typeof process3.pid === "number" && typeof process3.on === "function";
  };
  if (!processOk(process2)) {
    module.exports = function() {
      return function() {
      };
    };
  } else {
    assert = __require("assert");
    signals = require_signals();
    isWin = /^win/i.test(process2.platform);
    EE = __require("events");
    if (typeof EE !== "function") {
      EE = EE.EventEmitter;
    }
    if (process2.__signal_exit_emitter__) {
      emitter = process2.__signal_exit_emitter__;
    } else {
      emitter = process2.__signal_exit_emitter__ = new EE;
      emitter.count = 0;
      emitter.emitted = {};
    }
    if (!emitter.infinite) {
      emitter.setMaxListeners(Infinity);
      emitter.infinite = true;
    }
    module.exports = function(cb, opts) {
      if (!processOk(global.process)) {
        return function() {
        };
      }
      assert.equal(typeof cb, "function", "a callback must be provided for exit handler");
      if (loaded === false) {
        load();
      }
      var ev = "exit";
      if (opts && opts.alwaysLast) {
        ev = "afterexit";
      }
      var remove = function() {
        emitter.removeListener(ev, cb);
        if (emitter.listeners("exit").length === 0 && emitter.listeners("afterexit").length === 0) {
          unload();
        }
      };
      emitter.on(ev, cb);
      return remove;
    };
    unload = function unload() {
      if (!loaded || !processOk(global.process)) {
        return;
      }
      loaded = false;
      signals.forEach(function(sig) {
        try {
          process2.removeListener(sig, sigListeners[sig]);
        } catch (er) {
        }
      });
      process2.emit = originalProcessEmit;
      process2.reallyExit = originalProcessReallyExit;
      emitter.count -= 1;
    };
    module.exports.unload = unload;
    emit = function emit(event, code, signal) {
      if (emitter.emitted[event]) {
        return;
      }
      emitter.emitted[event] = true;
      emitter.emit(event, code, signal);
    };
    sigListeners = {};
    signals.forEach(function(sig) {
      sigListeners[sig] = function listener() {
        if (!processOk(global.process)) {
          return;
        }
        var listeners = process2.listeners(sig);
        if (listeners.length === emitter.count) {
          unload();
          emit("exit", null, sig);
          emit("afterexit", null, sig);
          if (isWin && sig === "SIGHUP") {
            sig = "SIGINT";
          }
          process2.kill(process2.pid, sig);
        }
      };
    });
    module.exports.signals = function() {
      return signals;
    };
    loaded = false;
    load = function load() {
      if (loaded || !processOk(global.process)) {
        return;
      }
      loaded = true;
      emitter.count += 1;
      signals = signals.filter(function(sig) {
        try {
          process2.on(sig, sigListeners[sig]);
          return true;
        } catch (er) {
          return false;
        }
      });
      process2.emit = processEmit;
      process2.reallyExit = processReallyExit;
    };
    module.exports.load = load;
    originalProcessReallyExit = process2.reallyExit;
    processReallyExit = function processReallyExit(code) {
      if (!processOk(global.process)) {
        return;
      }
      process2.exitCode = code || 0;
      emit("exit", process2.exitCode, null);
      emit("afterexit", process2.exitCode, null);
      originalProcessReallyExit.call(process2, process2.exitCode);
    };
    originalProcessEmit = process2.emit;
    processEmit = function processEmit(ev, arg) {
      if (ev === "exit" && processOk(global.process)) {
        if (arg !== undefined) {
          process2.exitCode = arg;
        }
        var ret = originalProcessEmit.apply(this, arguments);
        emit("exit", process2.exitCode, null);
        emit("afterexit", process2.exitCode, null);
        return ret;
      } else {
        return originalProcessEmit.apply(this, arguments);
      }
    };
  }
  var assert;
  var signals;
  var isWin;
  var EE;
  var emitter;
  var unload;
  var emit;
  var sigListeners;
  var loaded;
  var load;
  var originalProcessReallyExit;
  var processReallyExit;
  var originalProcessEmit;
  var processEmit;
});

// node_modules/windows-release/node_modules/execa/lib/errname.js
var require_errname = __commonJS((exports, module) => {
  var errname = function(uv2, code) {
    if (uv2) {
      return uv2.errname(code);
    }
    if (!(code < 0)) {
      throw new Error("err >= 0");
    }
    return `Unknown system error ${code}`;
  };
  var util = __require("util");
  var uv;
  if (typeof util.getSystemErrorName === "function") {
    module.exports = util.getSystemErrorName;
  } else {
    try {
      uv = process.binding("uv");
      if (typeof uv.errname !== "function") {
        throw new TypeError("uv.errname is not a function");
      }
    } catch (err) {
      console.error("execa/lib/errname: unable to establish process.binding(\'uv\')", err);
      uv = null;
    }
    module.exports = (code) => errname(uv, code);
  }
  module.exports.__test__ = errname;
});

// node_modules/windows-release/node_modules/execa/lib/stdio.js
var require_stdio = __commonJS((exports, module) => {
  var alias = ["stdin", "stdout", "stderr"];
  var hasAlias = (opts) => alias.some((x) => Boolean(opts[x]));
  module.exports = (opts) => {
    if (!opts) {
      return null;
    }
    if (opts.stdio && hasAlias(opts)) {
      throw new Error(`It's not possible to provide \`stdio\` in combination with one of ${alias.map((x) => `\`${x}\``).join(", ")}`);
    }
    if (typeof opts.stdio === "string") {
      return opts.stdio;
    }
    const stdio = opts.stdio || [];
    if (!Array.isArray(stdio)) {
      throw new TypeError(`Expected \`stdio\` to be of type \`string\` or \`Array\`, got \`${typeof stdio}\``);
    }
    const result = [];
    const len = Math.max(stdio.length, alias.length);
    for (let i = 0;i < len; i++) {
      let value = null;
      if (stdio[i] !== undefined) {
        value = stdio[i];
      } else if (opts[alias[i]] !== undefined) {
        value = opts[alias[i]];
      }
      result[i] = value;
    }
    return result;
  };
});

// node_modules/windows-release/node_modules/execa/index.js
var require_execa = __commonJS((exports, module) => {
  var handleArgs = function(cmd, args, opts) {
    let parsed;
    opts = Object.assign({
      extendEnv: true,
      env: {}
    }, opts);
    if (opts.extendEnv) {
      opts.env = Object.assign({}, process.env, opts.env);
    }
    if (opts.__winShell === true) {
      delete opts.__winShell;
      parsed = {
        command: cmd,
        args,
        options: opts,
        file: cmd,
        original: {
          cmd,
          args
        }
      };
    } else {
      parsed = crossSpawn._parse(cmd, args, opts);
    }
    opts = Object.assign({
      maxBuffer: TEN_MEGABYTES,
      buffer: true,
      stripEof: true,
      preferLocal: true,
      localDir: parsed.options.cwd || process.cwd(),
      encoding: "utf8",
      reject: true,
      cleanup: true
    }, parsed.options);
    opts.stdio = stdio(opts);
    if (opts.preferLocal) {
      opts.env = npmRunPath.env(Object.assign({}, opts, { cwd: opts.localDir }));
    }
    if (opts.detached) {
      opts.cleanup = false;
    }
    if (process.platform === "win32" && path.basename(parsed.command) === "cmd.exe") {
      parsed.args.unshift("/q");
    }
    return {
      cmd: parsed.command,
      args: parsed.args,
      opts,
      parsed
    };
  };
  var handleInput = function(spawned, input) {
    if (input === null || input === undefined) {
      return;
    }
    if (isStream(input)) {
      input.pipe(spawned.stdin);
    } else {
      spawned.stdin.end(input);
    }
  };
  var handleOutput = function(opts, val) {
    if (val && opts.stripEof) {
      val = stripEof(val);
    }
    return val;
  };
  var handleShell = function(fn, cmd, opts) {
    let file = "/bin/sh";
    let args = ["-c", cmd];
    opts = Object.assign({}, opts);
    if (process.platform === "win32") {
      opts.__winShell = true;
      file = process.env.comspec || "cmd.exe";
      args = ["/s", "/c", `"${cmd}"`];
      opts.windowsVerbatimArguments = true;
    }
    if (opts.shell) {
      file = opts.shell;
      delete opts.shell;
    }
    return fn(file, args, opts);
  };
  var getStream = function(process2, stream, { encoding, buffer, maxBuffer }) {
    if (!process2[stream]) {
      return null;
    }
    let ret;
    if (!buffer) {
      ret = new Promise((resolve, reject) => {
        process2[stream].once("end", resolve).once("error", reject);
      });
    } else if (encoding) {
      ret = _getStream(process2[stream], {
        encoding,
        maxBuffer
      });
    } else {
      ret = _getStream.buffer(process2[stream], { maxBuffer });
    }
    return ret.catch((err) => {
      err.stream = stream;
      err.message = `${stream} ${err.message}`;
      throw err;
    });
  };
  var makeError = function(result, options) {
    const { stdout, stderr } = result;
    let err = result.error;
    const { code, signal } = result;
    const { parsed, joinedCmd } = options;
    const timedOut = options.timedOut || false;
    if (!err) {
      let output = "";
      if (Array.isArray(parsed.opts.stdio)) {
        if (parsed.opts.stdio[2] !== "inherit") {
          output += output.length > 0 ? stderr : `\n${stderr}`;
        }
        if (parsed.opts.stdio[1] !== "inherit") {
          output += `\n${stdout}`;
        }
      } else if (parsed.opts.stdio !== "inherit") {
        output = `\n${stderr}${stdout}`;
      }
      err = new Error(`Command failed: ${joinedCmd}${output}`);
      err.code = code < 0 ? errname(code) : code;
    }
    err.stdout = stdout;
    err.stderr = stderr;
    err.failed = true;
    err.signal = signal || null;
    err.cmd = joinedCmd;
    err.timedOut = timedOut;
    return err;
  };
  var joinCmd = function(cmd, args) {
    let joinedCmd = cmd;
    if (Array.isArray(args) && args.length > 0) {
      joinedCmd += " " + args.join(" ");
    }
    return joinedCmd;
  };
  var path = __require("path");
  var childProcess = __require("child_process");
  var crossSpawn = require_cross_spawn();
  var stripEof = require_strip_eof();
  var npmRunPath = require_npm_run_path();
  var isStream = require_is_stream();
  var _getStream = require_get_stream();
  var pFinally = require_p_finally();
  var onExit = require_signal_exit();
  var errname = require_errname();
  var stdio = require_stdio();
  var TEN_MEGABYTES = 1000 * 1000 * 10;
  module.exports = (cmd, args, opts) => {
    const parsed = handleArgs(cmd, args, opts);
    const { encoding, buffer, maxBuffer } = parsed.opts;
    const joinedCmd = joinCmd(cmd, args);
    let spawned;
    try {
      spawned = childProcess.spawn(parsed.cmd, parsed.args, parsed.opts);
    } catch (err) {
      return Promise.reject(err);
    }
    let removeExitHandler;
    if (parsed.opts.cleanup) {
      removeExitHandler = onExit(() => {
        spawned.kill();
      });
    }
    let timeoutId = null;
    let timedOut = false;
    const cleanup = () => {
      if (timeoutId) {
        clearTimeout(timeoutId);
        timeoutId = null;
      }
      if (removeExitHandler) {
        removeExitHandler();
      }
    };
    if (parsed.opts.timeout > 0) {
      timeoutId = setTimeout(() => {
        timeoutId = null;
        timedOut = true;
        spawned.kill(parsed.opts.killSignal);
      }, parsed.opts.timeout);
    }
    const processDone = new Promise((resolve) => {
      spawned.on("exit", (code, signal) => {
        cleanup();
        resolve({ code, signal });
      });
      spawned.on("error", (err) => {
        cleanup();
        resolve({ error: err });
      });
      if (spawned.stdin) {
        spawned.stdin.on("error", (err) => {
          cleanup();
          resolve({ error: err });
        });
      }
    });
    function destroy() {
      if (spawned.stdout) {
        spawned.stdout.destroy();
      }
      if (spawned.stderr) {
        spawned.stderr.destroy();
      }
    }
    const handlePromise = () => pFinally(Promise.all([
      processDone,
      getStream(spawned, "stdout", { encoding, buffer, maxBuffer }),
      getStream(spawned, "stderr", { encoding, buffer, maxBuffer })
    ]).then((arr) => {
      const result = arr[0];
      result.stdout = arr[1];
      result.stderr = arr[2];
      if (result.error || result.code !== 0 || result.signal !== null) {
        const err = makeError(result, {
          joinedCmd,
          parsed,
          timedOut
        });
        err.killed = err.killed || spawned.killed;
        if (!parsed.opts.reject) {
          return err;
        }
        throw err;
      }
      return {
        stdout: handleOutput(parsed.opts, result.stdout),
        stderr: handleOutput(parsed.opts, result.stderr),
        code: 0,
        failed: false,
        killed: false,
        signal: null,
        cmd: joinedCmd,
        timedOut: false
      };
    }), destroy);
    crossSpawn._enoent.hookChildProcess(spawned, parsed.parsed);
    handleInput(spawned, parsed.opts.input);
    spawned.then = (onfulfilled, onrejected) => handlePromise().then(onfulfilled, onrejected);
    spawned.catch = (onrejected) => handlePromise().catch(onrejected);
    return spawned;
  };
  module.exports.stdout = (...args) => module.exports(...args).then((x) => x.stdout);
  module.exports.stderr = (...args) => module.exports(...args).then((x) => x.stderr);
  module.exports.shell = (cmd, opts) => handleShell(module.exports, cmd, opts);
  module.exports.sync = (cmd, args, opts) => {
    const parsed = handleArgs(cmd, args, opts);
    const joinedCmd = joinCmd(cmd, args);
    if (isStream(parsed.opts.input)) {
      throw new TypeError("The `input` option cannot be a stream in sync mode");
    }
    const result = childProcess.spawnSync(parsed.cmd, parsed.args, parsed.opts);
    result.code = result.status;
    if (result.error || result.status !== 0 || result.signal !== null) {
      const err = makeError(result, {
        joinedCmd,
        parsed
      });
      if (!parsed.opts.reject) {
        return err;
      }
      throw err;
    }
    return {
      stdout: handleOutput(parsed.opts, result.stdout),
      stderr: handleOutput(parsed.opts, result.stderr),
      code: 0,
      failed: false,
      signal: null,
      cmd: joinedCmd,
      timedOut: false
    };
  };
  module.exports.shellSync = (cmd, opts) => handleShell(module.exports.sync, cmd, opts);
});

// node_modules/windows-release/index.js
var require_windows_release = __commonJS((exports, module) => {
  var os = __require("os");
  var execa = require_execa();
  var names = new Map([
    ["10.0", "10"],
    ["6.3", "8.1"],
    ["6.2", "8"],
    ["6.1", "7"],
    ["6.0", "Vista"],
    ["5.2", "Server 2003"],
    ["5.1", "XP"],
    ["5.0", "2000"],
    ["4.9", "ME"],
    ["4.1", "98"],
    ["4.0", "95"]
  ]);
  var windowsRelease = (release) => {
    const version4 = /\d+\.\d/.exec(release || os.release());
    if (release && !version4) {
      throw new Error("`release` argument doesn\'t match `n.n`");
    }
    const ver = (version4 || [])[0];
    if ((!release || release === os.release()) && ["6.1", "6.2", "6.3", "10.0"].includes(ver)) {
      let stdout;
      try {
        stdout = execa.sync("wmic", ["os", "get", "Caption"]).stdout || "";
      } catch (_) {
        stdout = execa.sync("powershell", ["(Get-CimInstance -ClassName Win32_OperatingSystem).caption"]).stdout || "";
      }
      const year = (stdout.match(/2008|2012|2016|2019/) || [])[0];
      if (year) {
        return `Server ${year}`;
      }
    }
    return names.get(ver);
  };
  module.exports = windowsRelease;
});

// node_modules/os-name/index.js
var require_os_name = __commonJS((exports, module) => {
  var os = __require("os");
  var macosRelease = require_macos_release();
  var winRelease = require_windows_release();
  var osName = (platform, release) => {
    if (!platform && release) {
      throw new Error("You can\'t specify a `release` without specifying `platform`");
    }
    platform = platform || os.platform();
    let id;
    if (platform === "darwin") {
      if (!release && os.platform() === "darwin") {
        release = os.release();
      }
      const prefix = release ? Number(release.split(".")[0]) > 15 ? "macOS" : "OS X" : "macOS";
      id = release ? macosRelease(release).name : "";
      return prefix + (id ? " " + id : "");
    }
    if (platform === "linux") {
      if (!release && os.platform() === "linux") {
        release = os.release();
      }
      id = release ? release.replace(/^(\d+\.\d+).*/, "$1") : "";
      return "Linux" + (id ? " " + id : "");
    }
    if (platform === "win32") {
      if (!release && os.platform() === "win32") {
        release = os.release();
      }
      id = release ? winRelease(release) : "";
      return "Windows" + (id ? " " + id : "");
    }
    return platform;
  };
  module.exports = osName;
});

// node_modules/@octokit/rest/node_modules/universal-user-agent/dist-node/index.js
var require_dist_node9 = __commonJS((exports) => {
  var _interopDefault = function(ex) {
    return ex && typeof ex === "object" && ("default" in ex) ? ex["default"] : ex;
  };
  var getUserAgent2 = function() {
    try {
      return `Node.js/${process.version.substr(1)} (${osName()}; ${process.arch})`;
    } catch (error2) {
      if (/wmic os get Caption/.test(error2.message)) {
        return "Windows <version undetectable>";
      }
      throw error2;
    }
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  var osName = _interopDefault(require_os_name());
  exports.getUserAgent = getUserAgent2;
});

// node_modules/@octokit/rest/package.json
var require_package = __commonJS((exports, module) => {
  module.exports = {
    name: "@octokit/rest",
    version: "16.43.2",
    publishConfig: {
      access: "public"
    },
    description: "GitHub REST API client for Node.js",
    keywords: [
      "octokit",
      "github",
      "rest",
      "api-client"
    ],
    author: "Gregor Martynus (https://github.com/gr2m)",
    contributors: [
      {
        name: "Mike de Boer",
        email: "info@mikedeboer.nl"
      },
      {
        name: "Fabian Jakobs",
        email: "fabian@c9.io"
      },
      {
        name: "Joe Gallo",
        email: "joe@brassafrax.com"
      },
      {
        name: "Gregor Martynus",
        url: "https://github.com/gr2m"
      }
    ],
    repository: "https://github.com/octokit/rest.js",
    dependencies: {
      "@octokit/auth-token": "^2.4.0",
      "@octokit/plugin-paginate-rest": "^1.1.1",
      "@octokit/plugin-request-log": "^1.0.0",
      "@octokit/plugin-rest-endpoint-methods": "2.4.0",
      "@octokit/request": "^5.2.0",
      "@octokit/request-error": "^1.0.2",
      "atob-lite": "^2.0.0",
      "before-after-hook": "^2.0.0",
      "btoa-lite": "^1.0.0",
      deprecation: "^2.0.0",
      "lodash.get": "^4.4.2",
      "lodash.set": "^4.3.2",
      "lodash.uniq": "^4.5.0",
      "octokit-pagination-methods": "^1.1.0",
      once: "^1.4.0",
      "universal-user-agent": "^4.0.0"
    },
    devDependencies: {
      "@gimenete/type-writer": "^0.1.3",
      "@octokit/auth": "^1.1.1",
      "@octokit/fixtures-server": "^5.0.6",
      "@octokit/graphql": "^4.2.0",
      "@types/node": "^13.1.0",
      bundlesize: "^0.18.0",
      chai: "^4.1.2",
      "compression-webpack-plugin": "^3.1.0",
      cypress: "^4.0.0",
      glob: "^7.1.2",
      "http-proxy-agent": "^4.0.0",
      "lodash.camelcase": "^4.3.0",
      "lodash.merge": "^4.6.1",
      "lodash.upperfirst": "^4.3.1",
      lolex: "^6.0.0",
      mkdirp: "^1.0.0",
      mocha: "^7.0.1",
      mustache: "^4.0.0",
      nock: "^11.3.3",
      "npm-run-all": "^4.1.2",
      nyc: "^15.0.0",
      prettier: "^1.14.2",
      proxy: "^1.0.0",
      "semantic-release": "^17.0.0",
      sinon: "^8.0.0",
      "sinon-chai": "^3.0.0",
      "sort-keys": "^4.0.0",
      "string-to-arraybuffer": "^1.0.0",
      "string-to-jsdoc-comment": "^1.0.0",
      typescript: "^3.3.1",
      webpack: "^4.0.0",
      "webpack-bundle-analyzer": "^3.0.0",
      "webpack-cli": "^3.0.0"
    },
    types: "index.d.ts",
    scripts: {
      coverage: "nyc report --reporter=html && open coverage/index.html",
      lint: "prettier --check '{lib,plugins,scripts,test}/**/*.{js,json,ts}' 'docs/*.{js,json}' 'docs/src/**/*' index.js README.md package.json",
      "lint:fix": "prettier --write '{lib,plugins,scripts,test}/**/*.{js,json,ts}' 'docs/*.{js,json}' 'docs/src/**/*' index.js README.md package.json",
      pretest: "npm run -s lint",
      test: "nyc mocha test/mocha-node-setup.js \"test/*/**/*-test.js\"",
      "test:browser": "cypress run --browser chrome",
      build: "npm-run-all build:*",
      "build:ts": "npm run -s update-endpoints:typescript",
      "prebuild:browser": "mkdirp dist/",
      "build:browser": "npm-run-all build:browser:*",
      "build:browser:development": "webpack --mode development --entry . --output-library=Octokit --output=./dist/octokit-rest.js --profile --json > dist/bundle-stats.json",
      "build:browser:production": "webpack --mode production --entry . --plugin=compression-webpack-plugin --output-library=Octokit --output-path=./dist --output-filename=octokit-rest.min.js --devtool source-map",
      "generate-bundle-report": "webpack-bundle-analyzer dist/bundle-stats.json --mode=static --no-open --report dist/bundle-report.html",
      "update-endpoints": "npm-run-all update-endpoints:*",
      "update-endpoints:fetch-json": "node scripts/update-endpoints/fetch-json",
      "update-endpoints:typescript": "node scripts/update-endpoints/typescript",
      "prevalidate:ts": "npm run -s build:ts",
      "validate:ts": "tsc --target es6 --noImplicitAny index.d.ts",
      "postvalidate:ts": "tsc --noEmit --target es6 test/typescript-validate.ts",
      "start-fixtures-server": "octokit-fixtures-server"
    },
    license: "MIT",
    files: [
      "index.js",
      "index.d.ts",
      "lib",
      "plugins"
    ],
    nyc: {
      ignore: [
        "test"
      ]
    },
    release: {
      publish: [
        "@semantic-release/npm",
        {
          path: "@semantic-release/github",
          assets: [
            "dist/*",
            "!dist/*.map.gz"
          ]
        }
      ]
    },
    bundlesize: [
      {
        path: "./dist/octokit-rest.min.js.gz",
        maxSize: "33 kB"
      }
    ]
  };
});

// node_modules/@octokit/rest/lib/parse-client-options.js
var require_parse_client_options = __commonJS((exports, module) => {
  var parseOptions = function(options, log, hook) {
    if (options.headers) {
      options.headers = Object.keys(options.headers).reduce((newObj, key) => {
        newObj[key.toLowerCase()] = options.headers[key];
        return newObj;
      }, {});
    }
    const clientDefaults = {
      headers: options.headers || {},
      request: options.request || {},
      mediaType: {
        previews: [],
        format: ""
      }
    };
    if (options.baseUrl) {
      clientDefaults.baseUrl = options.baseUrl;
    }
    if (options.userAgent) {
      clientDefaults.headers["user-agent"] = options.userAgent;
    }
    if (options.previews) {
      clientDefaults.mediaType.previews = options.previews;
    }
    if (options.timeZone) {
      clientDefaults.headers["time-zone"] = options.timeZone;
    }
    if (options.timeout) {
      deprecateOptionsTimeout(log, new Deprecation("[@octokit/rest] new Octokit({timeout}) is deprecated. Use {request: {timeout}} instead. See https://github.com/octokit/request.js#request"));
      clientDefaults.request.timeout = options.timeout;
    }
    if (options.agent) {
      deprecateOptionsAgent(log, new Deprecation("[@octokit/rest] new Octokit({agent}) is deprecated. Use {request: {agent}} instead. See https://github.com/octokit/request.js#request"));
      clientDefaults.request.agent = options.agent;
    }
    if (options.headers) {
      deprecateOptionsHeaders(log, new Deprecation("[@octokit/rest] new Octokit({headers}) is deprecated. Use {userAgent, previews} instead. See https://github.com/octokit/request.js#request"));
    }
    const userAgentOption = clientDefaults.headers["user-agent"];
    const defaultUserAgent = `octokit.js/${pkg.version} ${getUserAgent2()}`;
    clientDefaults.headers["user-agent"] = [userAgentOption, defaultUserAgent].filter(Boolean).join(" ");
    clientDefaults.request.hook = hook.bind(null, "request");
    return clientDefaults;
  };
  module.exports = parseOptions;
  var { Deprecation } = require_dist_node2();
  var { getUserAgent: getUserAgent2 } = require_dist_node9();
  var once = require_once();
  var pkg = require_package();
  var deprecateOptionsTimeout = once((log, deprecation) => log.warn(deprecation));
  var deprecateOptionsAgent = once((log, deprecation) => log.warn(deprecation));
  var deprecateOptionsHeaders = once((log, deprecation) => log.warn(deprecation));
});

// node_modules/@octokit/rest/lib/constructor.js
var require_constructor = __commonJS((exports, module) => {
  var Octokit = function(plugins, options) {
    options = options || {};
    const hook = new Hook.Collection;
    const log = Object.assign({
      debug: () => {
      },
      info: () => {
      },
      warn: console.warn,
      error: console.error
    }, options && options.log);
    const api = {
      hook,
      log,
      request: request3.defaults(parseClientOptions(options, log, hook))
    };
    plugins.forEach((pluginFunction) => pluginFunction(api, options));
    return api;
  };
  module.exports = Octokit;
  var { request: request3 } = require_dist_node8();
  var Hook = require_before_after_hook();
  var parseClientOptions = require_parse_client_options();
});

// node_modules/@octokit/rest/lib/register-plugin.js
var require_register_plugin = __commonJS((exports, module) => {
  var registerPlugin = function(plugins, pluginFunction) {
    return factory(plugins.includes(pluginFunction) ? plugins : plugins.concat(pluginFunction));
  };
  module.exports = registerPlugin;
  var factory = require_factory();
});

// node_modules/@octokit/rest/lib/factory.js
var require_factory = __commonJS((exports, module) => {
  var factory = function(plugins) {
    const Api = Octokit.bind(null, plugins || []);
    Api.plugin = registerPlugin.bind(null, plugins || []);
    return Api;
  };
  module.exports = factory;
  var Octokit = require_constructor();
  var registerPlugin = require_register_plugin();
});

// node_modules/@octokit/rest/lib/core.js
var require_core2 = __commonJS((exports, module) => {
  var factory = require_factory();
  module.exports = factory();
});

// node_modules/@octokit/auth-token/dist-node/index.js
var require_dist_node10 = __commonJS((exports) => {
  async function auth(token) {
    const isApp = token.split(/\./).length === 3;
    const isInstallation = REGEX_IS_INSTALLATION_LEGACY.test(token) || REGEX_IS_INSTALLATION.test(token);
    const isUserToServer = REGEX_IS_USER_TO_SERVER.test(token);
    const tokenType = isApp ? "app" : isInstallation ? "installation" : isUserToServer ? "user-to-server" : "oauth";
    return {
      type: "token",
      token,
      tokenType
    };
  }
  var withAuthorizationPrefix = function(token) {
    if (token.split(/\./).length === 3) {
      return `bearer ${token}`;
    }
    return `token ${token}`;
  };
  async function hook(token, request3, route, parameters) {
    const endpoint3 = request3.endpoint.merge(route, parameters);
    endpoint3.headers.authorization = withAuthorizationPrefix(token);
    return request3(endpoint3);
  }
  Object.defineProperty(exports, "__esModule", { value: true });
  var REGEX_IS_INSTALLATION_LEGACY = /^v1\./;
  var REGEX_IS_INSTALLATION = /^ghs_/;
  var REGEX_IS_USER_TO_SERVER = /^ghu_/;
  var createTokenAuth = function createTokenAuth(token) {
    if (!token) {
      throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");
    }
    if (typeof token !== "string") {
      throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");
    }
    token = token.replace(/^(token|bearer) +/i, "");
    return Object.assign(auth.bind(null, token), {
      hook: hook.bind(null, token)
    });
  };
  exports.createTokenAuth = createTokenAuth;
});

// node_modules/btoa-lite/btoa-node.js
var require_btoa_node = __commonJS((exports, module) => {
  module.exports = function btoa(str) {
    return new Buffer(str).toString("base64");
  };
});

// node_modules/atob-lite/atob-node.js
var require_atob_node = __commonJS((exports, module) => {
  module.exports = function atob(str) {
    return Buffer.from(str, "base64").toString("binary");
  };
});

// node_modules/@octokit/rest/plugins/authentication/with-authorization-prefix.js
var require_with_authorization_prefix = __commonJS((exports, module) => {
  var withAuthorizationPrefix = function(authorization) {
    if (/^(basic|bearer|token) /i.test(authorization)) {
      return authorization;
    }
    try {
      if (REGEX_IS_BASIC_AUTH.test(atob(authorization))) {
        return `basic ${authorization}`;
      }
    } catch (error2) {
    }
    if (authorization.split(/\./).length === 3) {
      return `bearer ${authorization}`;
    }
    return `token ${authorization}`;
  };
  module.exports = withAuthorizationPrefix;
  var atob = require_atob_node();
  var REGEX_IS_BASIC_AUTH = /^[\w-]+:/;
});

// node_modules/@octokit/rest/plugins/authentication/before-request.js
var require_before_request = __commonJS((exports, module) => {
  var authenticationBeforeRequest = function(state, options) {
    if (typeof state.auth === "string") {
      options.headers.authorization = withAuthorizationPrefix(state.auth);
      return;
    }
    if (state.auth.username) {
      const hash = btoa(`${state.auth.username}:${state.auth.password}`);
      options.headers.authorization = `Basic ${hash}`;
      if (state.otp) {
        options.headers["x-github-otp"] = state.otp;
      }
      return;
    }
    if (state.auth.clientId) {
      if (/\/applications\/:?[\w_]+\/tokens\/:?[\w_]+($|\?)/.test(options.url)) {
        const hash = btoa(`${state.auth.clientId}:${state.auth.clientSecret}`);
        options.headers.authorization = `Basic ${hash}`;
        return;
      }
      options.url += options.url.indexOf("?") === -1 ? "?" : "&";
      options.url += `client_id=${state.auth.clientId}&client_secret=${state.auth.clientSecret}`;
      return;
    }
    return Promise.resolve().then(() => {
      return state.auth();
    }).then((authorization) => {
      options.headers.authorization = withAuthorizationPrefix(authorization);
    });
  };
  module.exports = authenticationBeforeRequest;
  var btoa = require_btoa_node();
  var withAuthorizationPrefix = require_with_authorization_prefix();
});

// node_modules/@octokit/request-error/dist-node/index.js
var require_dist_node11 = __commonJS((exports) => {
  var _interopDefault = function(ex) {
    return ex && typeof ex === "object" && ("default" in ex) ? ex["default"] : ex;
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  var deprecation = require_dist_node2();
  var once = _interopDefault(require_once());
  var logOnce = once((deprecation2) => console.warn(deprecation2));

  class RequestError2 extends Error {
    constructor(message, statusCode, options) {
      super(message);
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
      }
      this.name = "HttpError";
      this.status = statusCode;
      Object.defineProperty(this, "code", {
        get() {
          logOnce(new deprecation.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));
          return statusCode;
        }
      });
      this.headers = options.headers || {};
      const requestCopy = Object.assign({}, options.request);
      if (options.request.headers.authorization) {
        requestCopy.headers = Object.assign({}, options.request.headers, {
          authorization: options.request.headers.authorization.replace(/ .*$/, " [REDACTED]")
        });
      }
      requestCopy.url = requestCopy.url.replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]").replace(/\baccess_token=\w+/g, "access_token=[REDACTED]");
      this.request = requestCopy;
    }
  }
  exports.RequestError = RequestError2;
});

// node_modules/@octokit/rest/plugins/authentication/request-error.js
var require_request_error = __commonJS((exports, module) => {
  var authenticationRequestError = function(state, error2, options) {
    if (!error2.headers)
      throw error2;
    const otpRequired = /required/.test(error2.headers["x-github-otp"] || "");
    if (error2.status !== 401 || !otpRequired) {
      throw error2;
    }
    if (error2.status === 401 && otpRequired && error2.request && error2.request.headers["x-github-otp"]) {
      if (state.otp) {
        delete state.otp;
      } else {
        throw new RequestError2("Invalid one-time password for two-factor authentication", 401, {
          headers: error2.headers,
          request: options
        });
      }
    }
    if (typeof state.auth.on2fa !== "function") {
      throw new RequestError2("2FA required, but options.on2fa is not a function. See https://github.com/octokit/rest.js#authentication", 401, {
        headers: error2.headers,
        request: options
      });
    }
    return Promise.resolve().then(() => {
      return state.auth.on2fa();
    }).then((oneTimePassword) => {
      const newOptions = Object.assign(options, {
        headers: Object.assign(options.headers, {
          "x-github-otp": oneTimePassword
        })
      });
      return state.octokit.request(newOptions).then((response) => {
        state.otp = oneTimePassword;
        return response;
      });
    });
  };
  module.exports = authenticationRequestError;
  var { RequestError: RequestError2 } = require_dist_node11();
});

// node_modules/@octokit/rest/plugins/authentication/validate.js
var require_validate2 = __commonJS((exports, module) => {
  var validateAuth = function(auth) {
    if (typeof auth === "string") {
      return;
    }
    if (typeof auth === "function") {
      return;
    }
    if (auth.username && auth.password) {
      return;
    }
    if (auth.clientId && auth.clientSecret) {
      return;
    }
    throw new Error(`Invalid "auth" option: ${JSON.stringify(auth)}`);
  };
  module.exports = validateAuth;
});

// node_modules/@octokit/rest/plugins/authentication/index.js
var require_authentication = __commonJS((exports, module) => {
  var authenticationPlugin = function(octokit, options) {
    if (options.authStrategy) {
      const auth = options.authStrategy(options.auth);
      octokit.hook.wrap("request", auth.hook);
      octokit.auth = auth;
      return;
    }
    if (!options.auth) {
      octokit.auth = () => Promise.resolve({
        type: "unauthenticated"
      });
      return;
    }
    const isBasicAuthString = typeof options.auth === "string" && /^basic/.test(withAuthorizationPrefix(options.auth));
    if (typeof options.auth === "string" && !isBasicAuthString) {
      const auth = createTokenAuth(options.auth);
      octokit.hook.wrap("request", auth.hook);
      octokit.auth = auth;
      return;
    }
    const [deprecationMethod, deprecationMessapge] = isBasicAuthString ? [
      deprecateAuthBasic,
      'Setting the "new Octokit({ auth })" option to a Basic Auth string is deprecated. Use https://github.com/octokit/auth-basic.js instead. See (https://octokit.github.io/rest.js/#authentication)'
    ] : [
      deprecateAuthObject,
      'Setting the "new Octokit({ auth })" option to an object without also setting the "authStrategy" option is deprecated and will be removed in v17. See (https://octokit.github.io/rest.js/#authentication)'
    ];
    deprecationMethod(octokit.log, new Deprecation("[@octokit/rest] " + deprecationMessapge));
    octokit.auth = () => Promise.resolve({
      type: "deprecated",
      message: deprecationMessapge
    });
    validate(options.auth);
    const state = {
      octokit,
      auth: options.auth
    };
    octokit.hook.before("request", beforeRequest.bind(null, state));
    octokit.hook.error("request", requestError.bind(null, state));
  };
  module.exports = authenticationPlugin;
  var { createTokenAuth } = require_dist_node10();
  var { Deprecation } = require_dist_node2();
  var once = require_once();
  var beforeRequest = require_before_request();
  var requestError = require_request_error();
  var validate = require_validate2();
  var withAuthorizationPrefix = require_with_authorization_prefix();
  var deprecateAuthBasic = once((log, deprecation) => log.warn(deprecation));
  var deprecateAuthObject = once((log, deprecation) => log.warn(deprecation));
});

// node_modules/@octokit/rest/plugins/authentication-deprecated/authenticate.js
var require_authenticate = __commonJS((exports, module) => {
  var authenticate = function(state, options) {
    deprecateAuthenticate(state.octokit.log, new Deprecation('[@octokit/rest] octokit.authenticate() is deprecated. Use "auth" constructor option instead.'));
    if (!options) {
      state.auth = false;
      return;
    }
    switch (options.type) {
      case "basic":
        if (!options.username || !options.password) {
          throw new Error("Basic authentication requires both a username and password to be set");
        }
        break;
      case "oauth":
        if (!options.token && !(options.key && options.secret)) {
          throw new Error("OAuth2 authentication requires a token or key & secret to be set");
        }
        break;
      case "token":
      case "app":
        if (!options.token) {
          throw new Error("Token authentication requires a token to be set");
        }
        break;
      default:
        throw new Error("Invalid authentication type, must be 'basic', 'oauth', 'token' or 'app'");
    }
    state.auth = options;
  };
  module.exports = authenticate;
  var { Deprecation } = require_dist_node2();
  var once = require_once();
  var deprecateAuthenticate = once((log, deprecation) => log.warn(deprecation));
});

// node_modules/lodash.uniq/index.js
var require_lodash = __commonJS((exports, module) => {
  var arrayIncludes = function(array, value) {
    var length = array ? array.length : 0;
    return !!length && baseIndexOf(array, value, 0) > -1;
  };
  var arrayIncludesWith = function(array, value, comparator) {
    var index = -1, length = array ? array.length : 0;
    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  };
  var baseFindIndex = function(array, predicate, fromIndex, fromRight) {
    var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
    while (fromRight ? index-- : ++index < length) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  };
  var baseIndexOf = function(array, value, fromIndex) {
    if (value !== value) {
      return baseFindIndex(array, baseIsNaN, fromIndex);
    }
    var index = fromIndex - 1, length = array.length;
    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  };
  var baseIsNaN = function(value) {
    return value !== value;
  };
  var cacheHas = function(cache, key) {
    return cache.has(key);
  };
  var getValue = function(object, key) {
    return object == null ? undefined : object[key];
  };
  var isHostObject = function(value) {
    var result = false;
    if (value != null && typeof value.toString != "function") {
      try {
        result = !!(value + "");
      } catch (e) {
      }
    }
    return result;
  };
  var setToArray = function(set) {
    var index = -1, result = Array(set.size);
    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  };
  var Hash = function(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  };
  var hashClear = function() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
  };
  var hashDelete = function(key) {
    return this.has(key) && delete this.__data__[key];
  };
  var hashGet = function(key) {
    var data = this.__data__;
    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
  };
  var hashHas = function(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
  };
  var hashSet = function(key, value) {
    var data = this.__data__;
    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
    return this;
  };
  var ListCache = function(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  };
  var listCacheClear = function() {
    this.__data__ = [];
  };
  var listCacheDelete = function(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    return true;
  };
  var listCacheGet = function(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    return index < 0 ? undefined : data[index][1];
  };
  var listCacheHas = function(key) {
    return assocIndexOf(this.__data__, key) > -1;
  };
  var listCacheSet = function(key, value) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  };
  var MapCache = function(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  };
  var mapCacheClear = function() {
    this.__data__ = {
      hash: new Hash,
      map: new (Map2 || ListCache),
      string: new Hash
    };
  };
  var mapCacheDelete = function(key) {
    return getMapData(this, key)["delete"](key);
  };
  var mapCacheGet = function(key) {
    return getMapData(this, key).get(key);
  };
  var mapCacheHas = function(key) {
    return getMapData(this, key).has(key);
  };
  var mapCacheSet = function(key, value) {
    getMapData(this, key).set(key, value);
    return this;
  };
  var SetCache = function(values) {
    var index = -1, length = values ? values.length : 0;
    this.__data__ = new MapCache;
    while (++index < length) {
      this.add(values[index]);
    }
  };
  var setCacheAdd = function(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
  };
  var setCacheHas = function(value) {
    return this.__data__.has(value);
  };
  var assocIndexOf = function(array, key) {
    var length = array.length;
    while (length--) {
      if (eq(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  };
  var baseIsNative = function(value) {
    if (!isObject2(value) || isMasked(value)) {
      return false;
    }
    var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  };
  var baseUniq = function(array, iteratee, comparator) {
    var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
    if (comparator) {
      isCommon = false;
      includes = arrayIncludesWith;
    } else if (length >= LARGE_ARRAY_SIZE) {
      var set = iteratee ? null : createSet(array);
      if (set) {
        return setToArray(set);
      }
      isCommon = false;
      includes = cacheHas;
      seen = new SetCache;
    } else {
      seen = iteratee ? [] : result;
    }
    outer:
      while (++index < length) {
        var value = array[index], computed = iteratee ? iteratee(value) : value;
        value = comparator || value !== 0 ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        } else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
    return result;
  };
  var getMapData = function(map, key) {
    var data = map.__data__;
    return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
  };
  var getNative = function(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
  };
  var isKeyable = function(value) {
    var type = typeof value;
    return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
  };
  var isMasked = function(func) {
    return !!maskSrcKey && (maskSrcKey in func);
  };
  var toSource = function(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {
      }
      try {
        return func + "";
      } catch (e) {
      }
    }
    return "";
  };
  var uniq = function(array) {
    return array && array.length ? baseUniq(array) : [];
  };
  var eq = function(value, other) {
    return value === other || value !== value && other !== other;
  };
  var isFunction = function(value) {
    var tag = isObject2(value) ? objectToString.call(value) : "";
    return tag == funcTag || tag == genTag;
  };
  var isObject2 = function(value) {
    var type = typeof value;
    return !!value && (type == "object" || type == "function");
  };
  var noop = function() {
  };
  var LARGE_ARRAY_SIZE = 200;
  var HASH_UNDEFINED = "__lodash_hash_undefined__";
  var INFINITY = 1 / 0;
  var funcTag = "[object Function]";
  var genTag = "[object GeneratorFunction]";
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
  var freeSelf = typeof self == "object" && self && self.Object === Object && self;
  var root = freeGlobal || freeSelf || Function("return this")();
  var arrayProto = Array.prototype;
  var funcProto = Function.prototype;
  var objectProto = Object.prototype;
  var coreJsData = root["__core-js_shared__"];
  var maskSrcKey = function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
    return uid ? "Symbol(src)_1." + uid : "";
  }();
  var funcToString = funcProto.toString;
  var hasOwnProperty = objectProto.hasOwnProperty;
  var objectToString = objectProto.toString;
  var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
  var splice = arrayProto.splice;
  var Map2 = getNative(root, "Map");
  var Set2 = getNative(root, "Set");
  var nativeCreate = getNative(Object, "create");
  Hash.prototype.clear = hashClear;
  Hash.prototype["delete"] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;
  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype["delete"] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;
  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype["delete"] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;
  SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
  SetCache.prototype.has = setCacheHas;
  var createSet = !(Set2 && 1 / setToArray(new Set2([, -0]))[1] == INFINITY) ? noop : function(values) {
    return new Set2(values);
  };
  module.exports = uniq;
});

// node_modules/@octokit/rest/plugins/authentication-deprecated/before-request.js
var require_before_request2 = __commonJS((exports, module) => {
  var authenticationBeforeRequest = function(state, options) {
    if (!state.auth.type) {
      return;
    }
    if (state.auth.type === "basic") {
      const hash = btoa(`${state.auth.username}:${state.auth.password}`);
      options.headers.authorization = `Basic ${hash}`;
      return;
    }
    if (state.auth.type === "token") {
      options.headers.authorization = `token ${state.auth.token}`;
      return;
    }
    if (state.auth.type === "app") {
      options.headers.authorization = `Bearer ${state.auth.token}`;
      const acceptHeaders = options.headers.accept.split(",").concat("application/vnd.github.machine-man-preview+json");
      options.headers.accept = uniq(acceptHeaders).filter(Boolean).join(",");
      return;
    }
    options.url += options.url.indexOf("?") === -1 ? "?" : "&";
    if (state.auth.token) {
      options.url += `access_token=${encodeURIComponent(state.auth.token)}`;
      return;
    }
    const key = encodeURIComponent(state.auth.key);
    const secret = encodeURIComponent(state.auth.secret);
    options.url += `client_id=${key}&client_secret=${secret}`;
  };
  module.exports = authenticationBeforeRequest;
  var btoa = require_btoa_node();
  var uniq = require_lodash();
});

// node_modules/@octokit/rest/plugins/authentication-deprecated/request-error.js
var require_request_error2 = __commonJS((exports, module) => {
  var authenticationRequestError = function(state, error2, options) {
    if (!error2.headers)
      throw error2;
    const otpRequired = /required/.test(error2.headers["x-github-otp"] || "");
    if (error2.status !== 401 || !otpRequired) {
      throw error2;
    }
    if (error2.status === 401 && otpRequired && error2.request && error2.request.headers["x-github-otp"]) {
      throw new RequestError2("Invalid one-time password for two-factor authentication", 401, {
        headers: error2.headers,
        request: options
      });
    }
    if (typeof state.auth.on2fa !== "function") {
      throw new RequestError2("2FA required, but options.on2fa is not a function. See https://github.com/octokit/rest.js#authentication", 401, {
        headers: error2.headers,
        request: options
      });
    }
    return Promise.resolve().then(() => {
      return state.auth.on2fa();
    }).then((oneTimePassword) => {
      const newOptions = Object.assign(options, {
        headers: Object.assign({ "x-github-otp": oneTimePassword }, options.headers)
      });
      return state.octokit.request(newOptions);
    });
  };
  module.exports = authenticationRequestError;
  var { RequestError: RequestError2 } = require_dist_node11();
});

// node_modules/@octokit/rest/plugins/authentication-deprecated/index.js
var require_authentication_deprecated = __commonJS((exports, module) => {
  var authenticationPlugin = function(octokit, options) {
    if (options.auth) {
      octokit.authenticate = () => {
        deprecateAuthenticate(octokit.log, new Deprecation('[@octokit/rest] octokit.authenticate() is deprecated and has no effect when "auth" option is set on Octokit constructor'));
      };
      return;
    }
    const state = {
      octokit,
      auth: false
    };
    octokit.authenticate = authenticate.bind(null, state);
    octokit.hook.before("request", beforeRequest.bind(null, state));
    octokit.hook.error("request", requestError.bind(null, state));
  };
  module.exports = authenticationPlugin;
  var { Deprecation } = require_dist_node2();
  var once = require_once();
  var deprecateAuthenticate = once((log, deprecation) => log.warn(deprecation));
  var authenticate = require_authenticate();
  var beforeRequest = require_before_request2();
  var requestError = require_request_error2();
});

// node_modules/@octokit/plugin-paginate-rest/dist-node/index.js
var require_dist_node12 = __commonJS((exports) => {
  var normalizePaginatedListResponse = function(octokit, url, response) {
    const path = url.replace(octokit.request.endpoint.DEFAULTS.baseUrl, "");
    const responseNeedsNormalization = REGEX.find((regex) => regex.test(path));
    if (!responseNeedsNormalization)
      return;
    const incompleteResults = response.data.incomplete_results;
    const repositorySelection = response.data.repository_selection;
    const totalCount = response.data.total_count;
    delete response.data.incomplete_results;
    delete response.data.repository_selection;
    delete response.data.total_count;
    const namespaceKey = Object.keys(response.data)[0];
    const data = response.data[namespaceKey];
    response.data = data;
    if (typeof incompleteResults !== "undefined") {
      response.data.incomplete_results = incompleteResults;
    }
    if (typeof repositorySelection !== "undefined") {
      response.data.repository_selection = repositorySelection;
    }
    response.data.total_count = totalCount;
    Object.defineProperty(response.data, namespaceKey, {
      get() {
        octokit.log.warn(`[@octokit/paginate-rest] "response.data.${namespaceKey}" is deprecated for "GET ${path}". Get the results directly from "response.data"`);
        return Array.from(data);
      }
    });
  };
  var iterator = function(octokit, route, parameters) {
    const options = octokit.request.endpoint(route, parameters);
    const method = options.method;
    const headers = options.headers;
    let url = options.url;
    return {
      [Symbol.asyncIterator]: () => ({
        next() {
          if (!url) {
            return Promise.resolve({
              done: true
            });
          }
          return octokit.request({
            method,
            url,
            headers
          }).then((response) => {
            normalizePaginatedListResponse(octokit, url, response);
            url = ((response.headers.link || "").match(/<([^>]+)>;\s*rel="next"/) || [])[1];
            return {
              value: response
            };
          });
        }
      })
    };
  };
  var paginate = function(octokit, route, parameters, mapFn) {
    if (typeof parameters === "function") {
      mapFn = parameters;
      parameters = undefined;
    }
    return gather(octokit, [], iterator(octokit, route, parameters)[Symbol.asyncIterator](), mapFn);
  };
  var gather = function(octokit, results, iterator2, mapFn) {
    return iterator2.next().then((result) => {
      if (result.done) {
        return results;
      }
      let earlyExit = false;
      function done() {
        earlyExit = true;
      }
      results = results.concat(mapFn ? mapFn(result.value, done) : result.value.data);
      if (earlyExit) {
        return results;
      }
      return gather(octokit, results, iterator2, mapFn);
    });
  };
  var paginateRest = function(octokit) {
    return {
      paginate: Object.assign(paginate.bind(null, octokit), {
        iterator: iterator.bind(null, octokit)
      })
    };
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  var VERSION4 = "1.1.2";
  var REGEX = [/^\/search\//, /^\/repos\/[^/]+\/[^/]+\/commits\/[^/]+\/(check-runs|check-suites)([^/]|$)/, /^\/installation\/repositories([^/]|$)/, /^\/user\/installations([^/]|$)/, /^\/repos\/[^/]+\/[^/]+\/actions\/secrets([^/]|$)/, /^\/repos\/[^/]+\/[^/]+\/actions\/workflows(\/[^/]+\/runs)?([^/]|$)/, /^\/repos\/[^/]+\/[^/]+\/actions\/runs(\/[^/]+\/(artifacts|jobs))?([^/]|$)/];
  paginateRest.VERSION = VERSION4;
  exports.paginateRest = paginateRest;
});

// node_modules/@octokit/rest/plugins/pagination/index.js
var require_pagination = __commonJS((exports, module) => {
  var paginatePlugin = function(octokit) {
    Object.assign(octokit, paginateRest(octokit));
  };
  module.exports = paginatePlugin;
  var { paginateRest } = require_dist_node12();
});

// node_modules/lodash.get/index.js
var require_lodash2 = __commonJS((exports, module) => {
  var getValue = function(object, key) {
    return object == null ? undefined : object[key];
  };
  var isHostObject = function(value) {
    var result = false;
    if (value != null && typeof value.toString != "function") {
      try {
        result = !!(value + "");
      } catch (e) {
      }
    }
    return result;
  };
  var Hash = function(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  };
  var hashClear = function() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
  };
  var hashDelete = function(key) {
    return this.has(key) && delete this.__data__[key];
  };
  var hashGet = function(key) {
    var data = this.__data__;
    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
  };
  var hashHas = function(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
  };
  var hashSet = function(key, value) {
    var data = this.__data__;
    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
    return this;
  };
  var ListCache = function(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  };
  var listCacheClear = function() {
    this.__data__ = [];
  };
  var listCacheDelete = function(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    return true;
  };
  var listCacheGet = function(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    return index < 0 ? undefined : data[index][1];
  };
  var listCacheHas = function(key) {
    return assocIndexOf(this.__data__, key) > -1;
  };
  var listCacheSet = function(key, value) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  };
  var MapCache = function(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  };
  var mapCacheClear = function() {
    this.__data__ = {
      hash: new Hash,
      map: new (Map2 || ListCache),
      string: new Hash
    };
  };
  var mapCacheDelete = function(key) {
    return getMapData(this, key)["delete"](key);
  };
  var mapCacheGet = function(key) {
    return getMapData(this, key).get(key);
  };
  var mapCacheHas = function(key) {
    return getMapData(this, key).has(key);
  };
  var mapCacheSet = function(key, value) {
    getMapData(this, key).set(key, value);
    return this;
  };
  var assocIndexOf = function(array, key) {
    var length = array.length;
    while (length--) {
      if (eq(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  };
  var baseGet = function(object, path) {
    path = isKey(path, object) ? [path] : castPath(path);
    var index = 0, length = path.length;
    while (object != null && index < length) {
      object = object[toKey(path[index++])];
    }
    return index && index == length ? object : undefined;
  };
  var baseIsNative = function(value) {
    if (!isObject2(value) || isMasked(value)) {
      return false;
    }
    var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  };
  var baseToString = function(value) {
    if (typeof value == "string") {
      return value;
    }
    if (isSymbol(value)) {
      return symbolToString ? symbolToString.call(value) : "";
    }
    var result = value + "";
    return result == "0" && 1 / value == -INFINITY ? "-0" : result;
  };
  var castPath = function(value) {
    return isArray(value) ? value : stringToPath(value);
  };
  var getMapData = function(map, key) {
    var data = map.__data__;
    return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
  };
  var getNative = function(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
  };
  var isKey = function(value, object) {
    if (isArray(value)) {
      return false;
    }
    var type = typeof value;
    if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
      return true;
    }
    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && (value in Object(object));
  };
  var isKeyable = function(value) {
    var type = typeof value;
    return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
  };
  var isMasked = function(func) {
    return !!maskSrcKey && (maskSrcKey in func);
  };
  var toKey = function(value) {
    if (typeof value == "string" || isSymbol(value)) {
      return value;
    }
    var result = value + "";
    return result == "0" && 1 / value == -INFINITY ? "-0" : result;
  };
  var toSource = function(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {
      }
      try {
        return func + "";
      } catch (e) {
      }
    }
    return "";
  };
  var memoize = function(func, resolver) {
    if (typeof func != "function" || resolver && typeof resolver != "function") {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    var memoized = function() {
      var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
      if (cache.has(key)) {
        return cache.get(key);
      }
      var result = func.apply(this, args);
      memoized.cache = cache.set(key, result);
      return result;
    };
    memoized.cache = new (memoize.Cache || MapCache);
    return memoized;
  };
  var eq = function(value, other) {
    return value === other || value !== value && other !== other;
  };
  var isFunction = function(value) {
    var tag = isObject2(value) ? objectToString.call(value) : "";
    return tag == funcTag || tag == genTag;
  };
  var isObject2 = function(value) {
    var type = typeof value;
    return !!value && (type == "object" || type == "function");
  };
  var isObjectLike = function(value) {
    return !!value && typeof value == "object";
  };
  var isSymbol = function(value) {
    return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
  };
  var toString = function(value) {
    return value == null ? "" : baseToString(value);
  };
  var get = function(object, path, defaultValue) {
    var result = object == null ? undefined : baseGet(object, path);
    return result === undefined ? defaultValue : result;
  };
  var FUNC_ERROR_TEXT = "Expected a function";
  var HASH_UNDEFINED = "__lodash_hash_undefined__";
  var INFINITY = 1 / 0;
  var funcTag = "[object Function]";
  var genTag = "[object GeneratorFunction]";
  var symbolTag = "[object Symbol]";
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
  var reIsPlainProp = /^\w*$/;
  var reLeadingDot = /^\./;
  var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var reEscapeChar = /\\(\\)?/g;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
  var freeSelf = typeof self == "object" && self && self.Object === Object && self;
  var root = freeGlobal || freeSelf || Function("return this")();
  var arrayProto = Array.prototype;
  var funcProto = Function.prototype;
  var objectProto = Object.prototype;
  var coreJsData = root["__core-js_shared__"];
  var maskSrcKey = function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
    return uid ? "Symbol(src)_1." + uid : "";
  }();
  var funcToString = funcProto.toString;
  var hasOwnProperty = objectProto.hasOwnProperty;
  var objectToString = objectProto.toString;
  var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
  var Symbol2 = root.Symbol;
  var splice = arrayProto.splice;
  var Map2 = getNative(root, "Map");
  var nativeCreate = getNative(Object, "create");
  var symbolProto = Symbol2 ? Symbol2.prototype : undefined;
  var symbolToString = symbolProto ? symbolProto.toString : undefined;
  Hash.prototype.clear = hashClear;
  Hash.prototype["delete"] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;
  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype["delete"] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;
  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype["delete"] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;
  var stringToPath = memoize(function(string) {
    string = toString(string);
    var result = [];
    if (reLeadingDot.test(string)) {
      result.push("");
    }
    string.replace(rePropName, function(match, number, quote, string2) {
      result.push(quote ? string2.replace(reEscapeChar, "$1") : number || match);
    });
    return result;
  });
  memoize.Cache = MapCache;
  var isArray = Array.isArray;
  module.exports = get;
});

// node_modules/lodash.set/index.js
var require_lodash3 = __commonJS((exports, module) => {
  var getValue = function(object, key) {
    return object == null ? undefined : object[key];
  };
  var isHostObject = function(value) {
    var result = false;
    if (value != null && typeof value.toString != "function") {
      try {
        result = !!(value + "");
      } catch (e) {
      }
    }
    return result;
  };
  var Hash = function(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  };
  var hashClear = function() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
  };
  var hashDelete = function(key) {
    return this.has(key) && delete this.__data__[key];
  };
  var hashGet = function(key) {
    var data = this.__data__;
    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
  };
  var hashHas = function(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
  };
  var hashSet = function(key, value) {
    var data = this.__data__;
    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
    return this;
  };
  var ListCache = function(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  };
  var listCacheClear = function() {
    this.__data__ = [];
  };
  var listCacheDelete = function(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    return true;
  };
  var listCacheGet = function(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    return index < 0 ? undefined : data[index][1];
  };
  var listCacheHas = function(key) {
    return assocIndexOf(this.__data__, key) > -1;
  };
  var listCacheSet = function(key, value) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  };
  var MapCache = function(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  };
  var mapCacheClear = function() {
    this.__data__ = {
      hash: new Hash,
      map: new (Map2 || ListCache),
      string: new Hash
    };
  };
  var mapCacheDelete = function(key) {
    return getMapData(this, key)["delete"](key);
  };
  var mapCacheGet = function(key) {
    return getMapData(this, key).get(key);
  };
  var mapCacheHas = function(key) {
    return getMapData(this, key).has(key);
  };
  var mapCacheSet = function(key, value) {
    getMapData(this, key).set(key, value);
    return this;
  };
  var assignValue = function(object, key, value) {
    var objValue = object[key];
    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
      object[key] = value;
    }
  };
  var assocIndexOf = function(array, key) {
    var length = array.length;
    while (length--) {
      if (eq(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  };
  var baseIsNative = function(value) {
    if (!isObject2(value) || isMasked(value)) {
      return false;
    }
    var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  };
  var baseSet = function(object, path, value, customizer) {
    if (!isObject2(object)) {
      return object;
    }
    path = isKey(path, object) ? [path] : castPath(path);
    var index = -1, length = path.length, lastIndex = length - 1, nested = object;
    while (nested != null && ++index < length) {
      var key = toKey(path[index]), newValue = value;
      if (index != lastIndex) {
        var objValue = nested[key];
        newValue = customizer ? customizer(objValue, key, nested) : undefined;
        if (newValue === undefined) {
          newValue = isObject2(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
        }
      }
      assignValue(nested, key, newValue);
      nested = nested[key];
    }
    return object;
  };
  var baseToString = function(value) {
    if (typeof value == "string") {
      return value;
    }
    if (isSymbol(value)) {
      return symbolToString ? symbolToString.call(value) : "";
    }
    var result = value + "";
    return result == "0" && 1 / value == -INFINITY ? "-0" : result;
  };
  var castPath = function(value) {
    return isArray(value) ? value : stringToPath(value);
  };
  var getMapData = function(map, key) {
    var data = map.__data__;
    return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
  };
  var getNative = function(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
  };
  var isIndex = function(value, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
  };
  var isKey = function(value, object) {
    if (isArray(value)) {
      return false;
    }
    var type = typeof value;
    if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
      return true;
    }
    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && (value in Object(object));
  };
  var isKeyable = function(value) {
    var type = typeof value;
    return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
  };
  var isMasked = function(func) {
    return !!maskSrcKey && (maskSrcKey in func);
  };
  var toKey = function(value) {
    if (typeof value == "string" || isSymbol(value)) {
      return value;
    }
    var result = value + "";
    return result == "0" && 1 / value == -INFINITY ? "-0" : result;
  };
  var toSource = function(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {
      }
      try {
        return func + "";
      } catch (e) {
      }
    }
    return "";
  };
  var memoize = function(func, resolver) {
    if (typeof func != "function" || resolver && typeof resolver != "function") {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    var memoized = function() {
      var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
      if (cache.has(key)) {
        return cache.get(key);
      }
      var result = func.apply(this, args);
      memoized.cache = cache.set(key, result);
      return result;
    };
    memoized.cache = new (memoize.Cache || MapCache);
    return memoized;
  };
  var eq = function(value, other) {
    return value === other || value !== value && other !== other;
  };
  var isFunction = function(value) {
    var tag = isObject2(value) ? objectToString.call(value) : "";
    return tag == funcTag || tag == genTag;
  };
  var isObject2 = function(value) {
    var type = typeof value;
    return !!value && (type == "object" || type == "function");
  };
  var isObjectLike = function(value) {
    return !!value && typeof value == "object";
  };
  var isSymbol = function(value) {
    return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
  };
  var toString = function(value) {
    return value == null ? "" : baseToString(value);
  };
  var set = function(object, path, value) {
    return object == null ? object : baseSet(object, path, value);
  };
  var FUNC_ERROR_TEXT = "Expected a function";
  var HASH_UNDEFINED = "__lodash_hash_undefined__";
  var INFINITY = 1 / 0;
  var MAX_SAFE_INTEGER = 9007199254740991;
  var funcTag = "[object Function]";
  var genTag = "[object GeneratorFunction]";
  var symbolTag = "[object Symbol]";
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
  var reIsPlainProp = /^\w*$/;
  var reLeadingDot = /^\./;
  var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var reEscapeChar = /\\(\\)?/g;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var reIsUint = /^(?:0|[1-9]\d*)$/;
  var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
  var freeSelf = typeof self == "object" && self && self.Object === Object && self;
  var root = freeGlobal || freeSelf || Function("return this")();
  var arrayProto = Array.prototype;
  var funcProto = Function.prototype;
  var objectProto = Object.prototype;
  var coreJsData = root["__core-js_shared__"];
  var maskSrcKey = function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
    return uid ? "Symbol(src)_1." + uid : "";
  }();
  var funcToString = funcProto.toString;
  var hasOwnProperty = objectProto.hasOwnProperty;
  var objectToString = objectProto.toString;
  var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
  var Symbol2 = root.Symbol;
  var splice = arrayProto.splice;
  var Map2 = getNative(root, "Map");
  var nativeCreate = getNative(Object, "create");
  var symbolProto = Symbol2 ? Symbol2.prototype : undefined;
  var symbolToString = symbolProto ? symbolProto.toString : undefined;
  Hash.prototype.clear = hashClear;
  Hash.prototype["delete"] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;
  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype["delete"] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;
  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype["delete"] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;
  var stringToPath = memoize(function(string) {
    string = toString(string);
    var result = [];
    if (reLeadingDot.test(string)) {
      result.push("");
    }
    string.replace(rePropName, function(match, number, quote, string2) {
      result.push(quote ? string2.replace(reEscapeChar, "$1") : number || match);
    });
    return result;
  });
  memoize.Cache = MapCache;
  var isArray = Array.isArray;
  module.exports = set;
});

// node_modules/@octokit/rest/plugins/validate/validate.js
var require_validate3 = __commonJS((exports, module) => {
  var validate = function(octokit, options) {
    if (!options.request.validate) {
      return;
    }
    const { validate: params } = options.request;
    Object.keys(params).forEach((parameterName) => {
      const parameter = get(params, parameterName);
      const expectedType = parameter.type;
      let parentParameterName;
      let parentValue;
      let parentParamIsPresent = true;
      let parentParameterIsArray = false;
      if (/\./.test(parameterName)) {
        parentParameterName = parameterName.replace(/\.[^.]+$/, "");
        parentParameterIsArray = parentParameterName.slice(-2) === "[]";
        if (parentParameterIsArray) {
          parentParameterName = parentParameterName.slice(0, -2);
        }
        parentValue = get(options, parentParameterName);
        parentParamIsPresent = parentParameterName === "headers" || typeof parentValue === "object" && parentValue !== null;
      }
      const values = parentParameterIsArray ? (get(options, parentParameterName) || []).map((value) => value[parameterName.split(/\./).pop()]) : [get(options, parameterName)];
      values.forEach((value, i) => {
        const valueIsPresent = typeof value !== "undefined";
        const valueIsNull = value === null;
        const currentParameterName = parentParameterIsArray ? parameterName.replace(/\[\]/, `[${i}]`) : parameterName;
        if (!parameter.required && !valueIsPresent) {
          return;
        }
        if (!parentParamIsPresent) {
          return;
        }
        if (parameter.allowNull && valueIsNull) {
          return;
        }
        if (!parameter.allowNull && valueIsNull) {
          throw new RequestError2(`'${currentParameterName}' cannot be null`, 400, {
            request: options
          });
        }
        if (parameter.required && !valueIsPresent) {
          throw new RequestError2(`Empty value for parameter '${currentParameterName}': ${JSON.stringify(value)}`, 400, {
            request: options
          });
        }
        if (expectedType === "integer") {
          const unparsedValue = value;
          value = parseInt(value, 10);
          if (isNaN(value)) {
            throw new RequestError2(`Invalid value for parameter '${currentParameterName}': ${JSON.stringify(unparsedValue)} is NaN`, 400, {
              request: options
            });
          }
        }
        if (parameter.enum && parameter.enum.indexOf(String(value)) === -1) {
          throw new RequestError2(`Invalid value for parameter '${currentParameterName}': ${JSON.stringify(value)}`, 400, {
            request: options
          });
        }
        if (parameter.validation) {
          const regex = new RegExp(parameter.validation);
          if (!regex.test(value)) {
            throw new RequestError2(`Invalid value for parameter '${currentParameterName}': ${JSON.stringify(value)}`, 400, {
              request: options
            });
          }
        }
        if (expectedType === "object" && typeof value === "string") {
          try {
            value = JSON.parse(value);
          } catch (exception) {
            throw new RequestError2(`JSON parse error of value for parameter '${currentParameterName}': ${JSON.stringify(value)}`, 400, {
              request: options
            });
          }
        }
        set(options, parameter.mapTo || currentParameterName, value);
      });
    });
    return options;
  };
  module.exports = validate;
  var { RequestError: RequestError2 } = require_dist_node11();
  var get = require_lodash2();
  var set = require_lodash3();
});

// node_modules/@octokit/rest/plugins/validate/index.js
var require_validate4 = __commonJS((exports, module) => {
  var octokitValidate = function(octokit) {
    octokit.hook.before("request", validate.bind(null, octokit));
  };
  module.exports = octokitValidate;
  var validate = require_validate3();
});

// node_modules/octokit-pagination-methods/lib/deprecate.js
var require_deprecate = __commonJS((exports, module) => {
  var deprecate = function(message) {
    if (loggedMessages[message]) {
      return;
    }
    console.warn(`DEPRECATED (@octokit/rest): ${message}`);
    loggedMessages[message] = 1;
  };
  module.exports = deprecate;
  var loggedMessages = {};
});

// node_modules/octokit-pagination-methods/lib/get-page-links.js
var require_get_page_links = __commonJS((exports, module) => {
  var getPageLinks = function(link) {
    link = link.link || link.headers.link || "";
    const links = {};
    link.replace(/<([^>]*)>;\s*rel="([\w]*)"/g, (m, uri, type) => {
      links[type] = uri;
    });
    return links;
  };
  module.exports = getPageLinks;
});

// node_modules/octokit-pagination-methods/lib/http-error.js
var require_http_error = __commonJS((exports, module) => {
  module.exports = class HttpError extends Error {
    constructor(message, code, headers) {
      super(message);
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
      }
      this.name = "HttpError";
      this.code = code;
      this.headers = headers;
    }
  };
});

// node_modules/octokit-pagination-methods/lib/get-page.js
var require_get_page = __commonJS((exports, module) => {
  var getPage = function(octokit, link, which, headers) {
    deprecate(`octokit.get${which.charAt(0).toUpperCase() + which.slice(1)}Page() \u2013 You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`);
    const url = getPageLinks(link)[which];
    if (!url) {
      const urlError = new HttpError(`No ${which} page found`, 404);
      return Promise.reject(urlError);
    }
    const requestOptions = {
      url,
      headers: applyAcceptHeader(link, headers)
    };
    const promise = octokit.request(requestOptions);
    return promise;
  };
  var applyAcceptHeader = function(res, headers) {
    const previous = res.headers && res.headers["x-github-media-type"];
    if (!previous || headers && headers.accept) {
      return headers;
    }
    headers = headers || {};
    headers.accept = "application/vnd." + previous.replace("; param=", ".").replace("; format=", "+");
    return headers;
  };
  module.exports = getPage;
  var deprecate = require_deprecate();
  var getPageLinks = require_get_page_links();
  var HttpError = require_http_error();
});

// node_modules/octokit-pagination-methods/lib/get-first-page.js
var require_get_first_page = __commonJS((exports, module) => {
  var getFirstPage = function(octokit, link, headers) {
    return getPage(octokit, link, "first", headers);
  };
  module.exports = getFirstPage;
  var getPage = require_get_page();
});

// node_modules/octokit-pagination-methods/lib/get-last-page.js
var require_get_last_page = __commonJS((exports, module) => {
  var getLastPage = function(octokit, link, headers) {
    return getPage(octokit, link, "last", headers);
  };
  module.exports = getLastPage;
  var getPage = require_get_page();
});

// node_modules/octokit-pagination-methods/lib/get-next-page.js
var require_get_next_page = __commonJS((exports, module) => {
  var getNextPage = function(octokit, link, headers) {
    return getPage(octokit, link, "next", headers);
  };
  module.exports = getNextPage;
  var getPage = require_get_page();
});

// node_modules/octokit-pagination-methods/lib/get-previous-page.js
var require_get_previous_page = __commonJS((exports, module) => {
  var getPreviousPage = function(octokit, link, headers) {
    return getPage(octokit, link, "prev", headers);
  };
  module.exports = getPreviousPage;
  var getPage = require_get_page();
});

// node_modules/octokit-pagination-methods/lib/has-first-page.js
var require_has_first_page = __commonJS((exports, module) => {
  var hasFirstPage = function(link) {
    deprecate(`octokit.hasFirstPage() \u2013 You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`);
    return getPageLinks(link).first;
  };
  module.exports = hasFirstPage;
  var deprecate = require_deprecate();
  var getPageLinks = require_get_page_links();
});

// node_modules/octokit-pagination-methods/lib/has-last-page.js
var require_has_last_page = __commonJS((exports, module) => {
  var hasLastPage = function(link) {
    deprecate(`octokit.hasLastPage() \u2013 You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`);
    return getPageLinks(link).last;
  };
  module.exports = hasLastPage;
  var deprecate = require_deprecate();
  var getPageLinks = require_get_page_links();
});

// node_modules/octokit-pagination-methods/lib/has-next-page.js
var require_has_next_page = __commonJS((exports, module) => {
  var hasNextPage = function(link) {
    deprecate(`octokit.hasNextPage() \u2013 You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`);
    return getPageLinks(link).next;
  };
  module.exports = hasNextPage;
  var deprecate = require_deprecate();
  var getPageLinks = require_get_page_links();
});

// node_modules/octokit-pagination-methods/lib/has-previous-page.js
var require_has_previous_page = __commonJS((exports, module) => {
  var hasPreviousPage = function(link) {
    deprecate(`octokit.hasPreviousPage() \u2013 You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`);
    return getPageLinks(link).prev;
  };
  module.exports = hasPreviousPage;
  var deprecate = require_deprecate();
  var getPageLinks = require_get_page_links();
});

// node_modules/octokit-pagination-methods/index.js
var require_octokit_pagination_methods = __commonJS((exports, module) => {
  var paginationMethodsPlugin = function(octokit) {
    octokit.getFirstPage = require_get_first_page().bind(null, octokit);
    octokit.getLastPage = require_get_last_page().bind(null, octokit);
    octokit.getNextPage = require_get_next_page().bind(null, octokit);
    octokit.getPreviousPage = require_get_previous_page().bind(null, octokit);
    octokit.hasFirstPage = require_has_first_page();
    octokit.hasLastPage = require_has_last_page();
    octokit.hasNextPage = require_has_next_page();
    octokit.hasPreviousPage = require_has_previous_page();
  };
  module.exports = paginationMethodsPlugin;
});

// node_modules/@octokit/rest/index.js
var require_rest = __commonJS((exports, module) => {
  var DeprecatedOctokit = function(options) {
    const warn = options && options.log && options.log.warn ? options.log.warn : console.warn;
    warn('[@octokit/rest] `const Octokit = require("@octokit/rest")` is deprecated. Use `const { Octokit } = require("@octokit/rest")` instead');
    return new OctokitRest(options);
  };
  var { requestLog } = require_dist_node();
  var {
    restEndpointMethods
  } = require_dist_node3();
  var Core = require_core2();
  var CORE_PLUGINS = [
    require_authentication(),
    require_authentication_deprecated(),
    requestLog,
    require_pagination(),
    restEndpointMethods,
    require_validate4(),
    require_octokit_pagination_methods()
  ];
  var OctokitRest = Core.plugin(CORE_PLUGINS);
  var Octokit = Object.assign(DeprecatedOctokit, {
    Octokit: OctokitRest
  });
  Object.keys(OctokitRest).forEach((key) => {
    if (OctokitRest.hasOwnProperty(key)) {
      Octokit[key] = OctokitRest[key];
    }
  });
  module.exports = Octokit;
});

// node_modules/@actions/github/lib/context.js
var require_context = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", { value: true });
  var fs_1 = __require("fs");
  var os_1 = __require("os");

  class Context {
    constructor() {
      this.payload = {};
      if (process.env.GITHUB_EVENT_PATH) {
        if (fs_1.existsSync(process.env.GITHUB_EVENT_PATH)) {
          this.payload = JSON.parse(fs_1.readFileSync(process.env.GITHUB_EVENT_PATH, { encoding: "utf8" }));
        } else {
          process.stdout.write(`GITHUB_EVENT_PATH ${process.env.GITHUB_EVENT_PATH} does not exist${os_1.EOL}`);
        }
      }
      this.eventName = process.env.GITHUB_EVENT_NAME;
      this.sha = process.env.GITHUB_SHA;
      this.ref = process.env.GITHUB_REF;
      this.workflow = process.env.GITHUB_WORKFLOW;
      this.action = process.env.GITHUB_ACTION;
      this.actor = process.env.GITHUB_ACTOR;
    }
    get issue() {
      const payload = this.payload;
      return Object.assign(Object.assign({}, this.repo), { number: (payload.issue || payload.pullRequest || payload).number });
    }
    get repo() {
      if (process.env.GITHUB_REPOSITORY) {
        const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");
        return { owner, repo };
      }
      if (this.payload.repository) {
        return {
          owner: this.payload.repository.owner.login,
          repo: this.payload.repository.name
        };
      }
      throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'");
    }
  }
  exports.Context = Context;
});

// node_modules/@actions/github/lib/github.js
var require_github = __commonJS((exports) => {
  var __importDefault = exports && exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : { default: mod };
  };
  var __importStar = exports && exports.__importStar || function(mod) {
    if (mod && mod.__esModule)
      return mod;
    var result = {};
    if (mod != null) {
      for (var k in mod)
        if (Object.hasOwnProperty.call(mod, k))
          result[k] = mod[k];
    }
    result["default"] = mod;
    return result;
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  var graphql_1 = (init_graphql2(), __toCommonJS(exports_graphql));
  var rest_1 = __importDefault(require_rest());
  var Context = __importStar(require_context());
  rest_1.default.prototype = new rest_1.default;
  exports.context = new Context.Context;

  class GitHub extends rest_1.default {
    constructor(token, opts = {}) {
      super(Object.assign(Object.assign({}, opts), { auth: `token ${token}` }));
      this.graphql = graphql_1.defaults({
        headers: { authorization: `token ${token}` }
      });
    }
  }
  exports.GitHub = GitHub;
});

// node_modules/has-symbols/shams.js
var require_shams = __commonJS((exports, module) => {
  module.exports = function hasSymbols() {
    if (typeof Symbol !== "function" || typeof Object.getOwnPropertySymbols !== "function") {
      return false;
    }
    if (typeof Symbol.iterator === "symbol") {
      return true;
    }
    var obj = {};
    var sym = Symbol("test");
    var symObj = Object(sym);
    if (typeof sym === "string") {
      return false;
    }
    if (Object.prototype.toString.call(sym) !== "[object Symbol]") {
      return false;
    }
    if (Object.prototype.toString.call(symObj) !== "[object Symbol]") {
      return false;
    }
    var symVal = 42;
    obj[sym] = symVal;
    for (sym in obj) {
      return false;
    }
    if (typeof Object.keys === "function" && Object.keys(obj).length !== 0) {
      return false;
    }
    if (typeof Object.getOwnPropertyNames === "function" && Object.getOwnPropertyNames(obj).length !== 0) {
      return false;
    }
    var syms = Object.getOwnPropertySymbols(obj);
    if (syms.length !== 1 || syms[0] !== sym) {
      return false;
    }
    if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
      return false;
    }
    if (typeof Object.getOwnPropertyDescriptor === "function") {
      var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
      if (descriptor.value !== symVal || descriptor.enumerable !== true) {
        return false;
      }
    }
    return true;
  };
});

// node_modules/has-symbols/index.js
var require_has_symbols = __commonJS((exports, module) => {
  var origSymbol = typeof Symbol !== "undefined" && Symbol;
  var hasSymbolSham = require_shams();
  module.exports = function hasNativeSymbols() {
    if (typeof origSymbol !== "function") {
      return false;
    }
    if (typeof Symbol !== "function") {
      return false;
    }
    if (typeof origSymbol("foo") !== "symbol") {
      return false;
    }
    if (typeof Symbol("bar") !== "symbol") {
      return false;
    }
    return hasSymbolSham();
  };
});

// node_modules/has-proto/index.js
var require_has_proto = __commonJS((exports, module) => {
  var test = {
    foo: {}
  };
  var $Object = Object;
  module.exports = function hasProto() {
    return { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);
  };
});

// node_modules/function-bind/implementation.js
var require_implementation = __commonJS((exports, module) => {
  var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
  var slice = Array.prototype.slice;
  var toStr = Object.prototype.toString;
  var funcType = "[object Function]";
  module.exports = function bind(that) {
    var target = this;
    if (typeof target !== "function" || toStr.call(target) !== funcType) {
      throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);
    var bound;
    var binder = function() {
      if (this instanceof bound) {
        var result = target.apply(this, args.concat(slice.call(arguments)));
        if (Object(result) === result) {
          return result;
        }
        return this;
      } else {
        return target.apply(that, args.concat(slice.call(arguments)));
      }
    };
    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0;i < boundLength; i++) {
      boundArgs.push("$" + i);
    }
    bound = Function("binder", "return function (" + boundArgs.join(",") + "){ return binder.apply(this,arguments); }")(binder);
    if (target.prototype) {
      var Empty = function Empty() {
      };
      Empty.prototype = target.prototype;
      bound.prototype = new Empty;
      Empty.prototype = null;
    }
    return bound;
  };
});

// node_modules/function-bind/index.js
var require_function_bind = __commonJS((exports, module) => {
  var implementation = require_implementation();
  module.exports = Function.prototype.bind || implementation;
});

// node_modules/has/src/index.js
var require_src2 = __commonJS((exports, module) => {
  var bind = require_function_bind();
  module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);
});

// node_modules/get-intrinsic/index.js
var require_get_intrinsic = __commonJS((exports, module) => {
  var undefined2;
  var $SyntaxError = SyntaxError;
  var $Function = Function;
  var $TypeError = TypeError;
  var getEvalledConstructor = function(expressionSyntax) {
    try {
      return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
    } catch (e) {
    }
  };
  var $gOPD = Object.getOwnPropertyDescriptor;
  if ($gOPD) {
    try {
      $gOPD({}, "");
    } catch (e) {
      $gOPD = null;
    }
  }
  var throwTypeError = function() {
    throw new $TypeError;
  };
  var ThrowTypeError = $gOPD ? function() {
    try {
      arguments.callee;
      return throwTypeError;
    } catch (calleeThrows) {
      try {
        return $gOPD(arguments, "callee").get;
      } catch (gOPDthrows) {
        return throwTypeError;
      }
    }
  }() : throwTypeError;
  var hasSymbols = require_has_symbols()();
  var hasProto = require_has_proto()();
  var getProto = Object.getPrototypeOf || (hasProto ? function(x) {
    return x.__proto__;
  } : null);
  var needsEval = {};
  var TypedArray = typeof Uint8Array === "undefined" || !getProto ? undefined2 : getProto(Uint8Array);
  var INTRINSICS = {
    "%AggregateError%": typeof AggregateError === "undefined" ? undefined2 : AggregateError,
    "%Array%": Array,
    "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? undefined2 : ArrayBuffer,
    "%ArrayIteratorPrototype%": hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined2,
    "%AsyncFromSyncIteratorPrototype%": undefined2,
    "%AsyncFunction%": needsEval,
    "%AsyncGenerator%": needsEval,
    "%AsyncGeneratorFunction%": needsEval,
    "%AsyncIteratorPrototype%": needsEval,
    "%Atomics%": typeof Atomics === "undefined" ? undefined2 : Atomics,
    "%BigInt%": typeof BigInt === "undefined" ? undefined2 : BigInt,
    "%BigInt64Array%": typeof BigInt64Array === "undefined" ? undefined2 : BigInt64Array,
    "%BigUint64Array%": typeof BigUint64Array === "undefined" ? undefined2 : BigUint64Array,
    "%Boolean%": Boolean,
    "%DataView%": typeof DataView === "undefined" ? undefined2 : DataView,
    "%Date%": Date,
    "%decodeURI%": decodeURI,
    "%decodeURIComponent%": decodeURIComponent,
    "%encodeURI%": encodeURI,
    "%encodeURIComponent%": encodeURIComponent,
    "%Error%": Error,
    "%eval%": eval,
    "%EvalError%": EvalError,
    "%Float32Array%": typeof Float32Array === "undefined" ? undefined2 : Float32Array,
    "%Float64Array%": typeof Float64Array === "undefined" ? undefined2 : Float64Array,
    "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? undefined2 : FinalizationRegistry,
    "%Function%": $Function,
    "%GeneratorFunction%": needsEval,
    "%Int8Array%": typeof Int8Array === "undefined" ? undefined2 : Int8Array,
    "%Int16Array%": typeof Int16Array === "undefined" ? undefined2 : Int16Array,
    "%Int32Array%": typeof Int32Array === "undefined" ? undefined2 : Int32Array,
    "%isFinite%": isFinite,
    "%isNaN%": isNaN,
    "%IteratorPrototype%": hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined2,
    "%JSON%": typeof JSON === "object" ? JSON : undefined2,
    "%Map%": typeof Map === "undefined" ? undefined2 : Map,
    "%MapIteratorPrototype%": typeof Map === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto(new Map()[Symbol.iterator]()),
    "%Math%": Math,
    "%Number%": Number,
    "%Object%": Object,
    "%parseFloat%": parseFloat,
    "%parseInt%": parseInt,
    "%Promise%": typeof Promise === "undefined" ? undefined2 : Promise,
    "%Proxy%": typeof Proxy === "undefined" ? undefined2 : Proxy,
    "%RangeError%": RangeError,
    "%ReferenceError%": ReferenceError,
    "%Reflect%": typeof Reflect === "undefined" ? undefined2 : Reflect,
    "%RegExp%": RegExp,
    "%Set%": typeof Set === "undefined" ? undefined2 : Set,
    "%SetIteratorPrototype%": typeof Set === "undefined" || !hasSymbols || !getProto ? undefined2 : getProto(new Set()[Symbol.iterator]()),
    "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? undefined2 : SharedArrayBuffer,
    "%String%": String,
    "%StringIteratorPrototype%": hasSymbols && getProto ? getProto(""[Symbol.iterator]()) : undefined2,
    "%Symbol%": hasSymbols ? Symbol : undefined2,
    "%SyntaxError%": $SyntaxError,
    "%ThrowTypeError%": ThrowTypeError,
    "%TypedArray%": TypedArray,
    "%TypeError%": $TypeError,
    "%Uint8Array%": typeof Uint8Array === "undefined" ? undefined2 : Uint8Array,
    "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? undefined2 : Uint8ClampedArray,
    "%Uint16Array%": typeof Uint16Array === "undefined" ? undefined2 : Uint16Array,
    "%Uint32Array%": typeof Uint32Array === "undefined" ? undefined2 : Uint32Array,
    "%URIError%": URIError,
    "%WeakMap%": typeof WeakMap === "undefined" ? undefined2 : WeakMap,
    "%WeakRef%": typeof WeakRef === "undefined" ? undefined2 : WeakRef,
    "%WeakSet%": typeof WeakSet === "undefined" ? undefined2 : WeakSet
  };
  if (getProto) {
    try {
      null.error;
    } catch (e) {
      errorProto = getProto(getProto(e));
      INTRINSICS["%Error.prototype%"] = errorProto;
    }
  }
  var errorProto;
  var doEval = function doEval(name) {
    var value;
    if (name === "%AsyncFunction%") {
      value = getEvalledConstructor("async function () {}");
    } else if (name === "%GeneratorFunction%") {
      value = getEvalledConstructor("function* () {}");
    } else if (name === "%AsyncGeneratorFunction%") {
      value = getEvalledConstructor("async function* () {}");
    } else if (name === "%AsyncGenerator%") {
      var fn = doEval("%AsyncGeneratorFunction%");
      if (fn) {
        value = fn.prototype;
      }
    } else if (name === "%AsyncIteratorPrototype%") {
      var gen = doEval("%AsyncGenerator%");
      if (gen && getProto) {
        value = getProto(gen.prototype);
      }
    }
    INTRINSICS[name] = value;
    return value;
  };
  var LEGACY_ALIASES = {
    "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
    "%ArrayPrototype%": ["Array", "prototype"],
    "%ArrayProto_entries%": ["Array", "prototype", "entries"],
    "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
    "%ArrayProto_keys%": ["Array", "prototype", "keys"],
    "%ArrayProto_values%": ["Array", "prototype", "values"],
    "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
    "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
    "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
    "%BooleanPrototype%": ["Boolean", "prototype"],
    "%DataViewPrototype%": ["DataView", "prototype"],
    "%DatePrototype%": ["Date", "prototype"],
    "%ErrorPrototype%": ["Error", "prototype"],
    "%EvalErrorPrototype%": ["EvalError", "prototype"],
    "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
    "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
    "%FunctionPrototype%": ["Function", "prototype"],
    "%Generator%": ["GeneratorFunction", "prototype"],
    "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
    "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
    "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
    "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
    "%JSONParse%": ["JSON", "parse"],
    "%JSONStringify%": ["JSON", "stringify"],
    "%MapPrototype%": ["Map", "prototype"],
    "%NumberPrototype%": ["Number", "prototype"],
    "%ObjectPrototype%": ["Object", "prototype"],
    "%ObjProto_toString%": ["Object", "prototype", "toString"],
    "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
    "%PromisePrototype%": ["Promise", "prototype"],
    "%PromiseProto_then%": ["Promise", "prototype", "then"],
    "%Promise_all%": ["Promise", "all"],
    "%Promise_reject%": ["Promise", "reject"],
    "%Promise_resolve%": ["Promise", "resolve"],
    "%RangeErrorPrototype%": ["RangeError", "prototype"],
    "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
    "%RegExpPrototype%": ["RegExp", "prototype"],
    "%SetPrototype%": ["Set", "prototype"],
    "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
    "%StringPrototype%": ["String", "prototype"],
    "%SymbolPrototype%": ["Symbol", "prototype"],
    "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
    "%TypedArrayPrototype%": ["TypedArray", "prototype"],
    "%TypeErrorPrototype%": ["TypeError", "prototype"],
    "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
    "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
    "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
    "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
    "%URIErrorPrototype%": ["URIError", "prototype"],
    "%WeakMapPrototype%": ["WeakMap", "prototype"],
    "%WeakSetPrototype%": ["WeakSet", "prototype"]
  };
  var bind = require_function_bind();
  var hasOwn = require_src2();
  var $concat = bind.call(Function.call, Array.prototype.concat);
  var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
  var $replace = bind.call(Function.call, String.prototype.replace);
  var $strSlice = bind.call(Function.call, String.prototype.slice);
  var $exec = bind.call(Function.call, RegExp.prototype.exec);
  var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
  var reEscapeChar = /\\(\\)?/g;
  var stringToPath = function stringToPath(string) {
    var first = $strSlice(string, 0, 1);
    var last = $strSlice(string, -1);
    if (first === "%" && last !== "%") {
      throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");
    } else if (last === "%" && first !== "%") {
      throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");
    }
    var result = [];
    $replace(string, rePropName, function(match, number, quote, subString) {
      result[result.length] = quote ? $replace(subString, reEscapeChar, "$1") : number || match;
    });
    return result;
  };
  var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
    var intrinsicName = name;
    var alias;
    if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
      alias = LEGACY_ALIASES[intrinsicName];
      intrinsicName = "%" + alias[0] + "%";
    }
    if (hasOwn(INTRINSICS, intrinsicName)) {
      var value = INTRINSICS[intrinsicName];
      if (value === needsEval) {
        value = doEval(intrinsicName);
      }
      if (typeof value === "undefined" && !allowMissing) {
        throw new $TypeError("intrinsic " + name + " exists, but is not available. Please file an issue!");
      }
      return {
        alias,
        name: intrinsicName,
        value
      };
    }
    throw new $SyntaxError("intrinsic " + name + " does not exist!");
  };
  module.exports = function GetIntrinsic(name, allowMissing) {
    if (typeof name !== "string" || name.length === 0) {
      throw new $TypeError("intrinsic name must be a non-empty string");
    }
    if (arguments.length > 1 && typeof allowMissing !== "boolean") {
      throw new $TypeError('"allowMissing" argument must be a boolean');
    }
    if ($exec(/^%?[^%]*%?$/, name) === null) {
      throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
    }
    var parts = stringToPath(name);
    var intrinsicBaseName = parts.length > 0 ? parts[0] : "";
    var intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing);
    var intrinsicRealName = intrinsic.name;
    var value = intrinsic.value;
    var skipFurtherCaching = false;
    var alias = intrinsic.alias;
    if (alias) {
      intrinsicBaseName = alias[0];
      $spliceApply(parts, $concat([0, 1], alias));
    }
    for (var i = 1, isOwn = true;i < parts.length; i += 1) {
      var part = parts[i];
      var first = $strSlice(part, 0, 1);
      var last = $strSlice(part, -1);
      if ((first === '"' || first === "'" || first === "`" || (last === '"' || last === "'" || last === "`")) && first !== last) {
        throw new $SyntaxError("property names with quotes must have matching quotes");
      }
      if (part === "constructor" || !isOwn) {
        skipFurtherCaching = true;
      }
      intrinsicBaseName += "." + part;
      intrinsicRealName = "%" + intrinsicBaseName + "%";
      if (hasOwn(INTRINSICS, intrinsicRealName)) {
        value = INTRINSICS[intrinsicRealName];
      } else if (value != null) {
        if (!(part in value)) {
          if (!allowMissing) {
            throw new $TypeError("base intrinsic for " + name + " exists, but the property is not available.");
          }
          return;
        }
        if ($gOPD && i + 1 >= parts.length) {
          var desc = $gOPD(value, part);
          isOwn = !!desc;
          if (isOwn && ("get" in desc) && !("originalValue" in desc.get)) {
            value = desc.get;
          } else {
            value = value[part];
          }
        } else {
          isOwn = hasOwn(value, part);
          value = value[part];
        }
        if (isOwn && !skipFurtherCaching) {
          INTRINSICS[intrinsicRealName] = value;
        }
      }
    }
    return value;
  };
});

// node_modules/call-bind/index.js
var require_call_bind = __commonJS((exports, module) => {
  var bind = require_function_bind();
  var GetIntrinsic = require_get_intrinsic();
  var $apply = GetIntrinsic("%Function.prototype.apply%");
  var $call = GetIntrinsic("%Function.prototype.call%");
  var $reflectApply = GetIntrinsic("%Reflect.apply%", true) || bind.call($call, $apply);
  var $gOPD = GetIntrinsic("%Object.getOwnPropertyDescriptor%", true);
  var $defineProperty = GetIntrinsic("%Object.defineProperty%", true);
  var $max = GetIntrinsic("%Math.max%");
  if ($defineProperty) {
    try {
      $defineProperty({}, "a", { value: 1 });
    } catch (e) {
      $defineProperty = null;
    }
  }
  module.exports = function callBind(originalFunction) {
    var func = $reflectApply(bind, $call, arguments);
    if ($gOPD && $defineProperty) {
      var desc = $gOPD(func, "length");
      if (desc.configurable) {
        $defineProperty(func, "length", { value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) });
      }
    }
    return func;
  };
  var applyBind = function applyBind() {
    return $reflectApply(bind, $apply, arguments);
  };
  if ($defineProperty) {
    $defineProperty(module.exports, "apply", { value: applyBind });
  } else {
    module.exports.apply = applyBind;
  }
});

// node_modules/call-bind/callBound.js
var require_callBound = __commonJS((exports, module) => {
  var GetIntrinsic = require_get_intrinsic();
  var callBind = require_call_bind();
  var $indexOf = callBind(GetIntrinsic("String.prototype.indexOf"));
  module.exports = function callBoundIntrinsic(name, allowMissing) {
    var intrinsic = GetIntrinsic(name, !!allowMissing);
    if (typeof intrinsic === "function" && $indexOf(name, ".prototype.") > -1) {
      return callBind(intrinsic);
    }
    return intrinsic;
  };
});

// node_modules/object-inspect/util.inspect.js
var require_util_inspect = __commonJS((exports, module) => {
  module.exports = __require("util").inspect;
});

// node_modules/object-inspect/index.js
var require_object_inspect = __commonJS((exports, module) => {
  var addNumericSeparator = function(num, str) {
    if (num === Infinity || num === (-Infinity) || num !== num || num && num > -1000 && num < 1000 || $test.call(/e/, str)) {
      return str;
    }
    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
    if (typeof num === "number") {
      var int = num < 0 ? -$floor(-num) : $floor(num);
      if (int !== num) {
        var intStr = String(int);
        var dec = $slice.call(str, intStr.length + 1);
        return $replace.call(intStr, sepRegex, "$&_") + "." + $replace.call($replace.call(dec, /([0-9]{3})/g, "$&_"), /_$/, "");
      }
    }
    return $replace.call(str, sepRegex, "$&_");
  };
  var wrapQuotes = function(s, defaultStyle, opts) {
    var quoteChar = (opts.quoteStyle || defaultStyle) === "double" ? '"' : "'";
    return quoteChar + s + quoteChar;
  };
  var quote = function(s) {
    return $replace.call(String(s), /"/g, "&quot;");
  };
  var isArray = function(obj) {
    return toStr(obj) === "[object Array]" && (!toStringTag || !(typeof obj === "object" && (toStringTag in obj)));
  };
  var isDate = function(obj) {
    return toStr(obj) === "[object Date]" && (!toStringTag || !(typeof obj === "object" && (toStringTag in obj)));
  };
  var isRegExp = function(obj) {
    return toStr(obj) === "[object RegExp]" && (!toStringTag || !(typeof obj === "object" && (toStringTag in obj)));
  };
  var isError = function(obj) {
    return toStr(obj) === "[object Error]" && (!toStringTag || !(typeof obj === "object" && (toStringTag in obj)));
  };
  var isString = function(obj) {
    return toStr(obj) === "[object String]" && (!toStringTag || !(typeof obj === "object" && (toStringTag in obj)));
  };
  var isNumber = function(obj) {
    return toStr(obj) === "[object Number]" && (!toStringTag || !(typeof obj === "object" && (toStringTag in obj)));
  };
  var isBoolean = function(obj) {
    return toStr(obj) === "[object Boolean]" && (!toStringTag || !(typeof obj === "object" && (toStringTag in obj)));
  };
  var isSymbol = function(obj) {
    if (hasShammedSymbols) {
      return obj && typeof obj === "object" && obj instanceof Symbol;
    }
    if (typeof obj === "symbol") {
      return true;
    }
    if (!obj || typeof obj !== "object" || !symToString) {
      return false;
    }
    try {
      symToString.call(obj);
      return true;
    } catch (e) {
    }
    return false;
  };
  var isBigInt = function(obj) {
    if (!obj || typeof obj !== "object" || !bigIntValueOf) {
      return false;
    }
    try {
      bigIntValueOf.call(obj);
      return true;
    } catch (e) {
    }
    return false;
  };
  var has = function(obj, key) {
    return hasOwn.call(obj, key);
  };
  var toStr = function(obj) {
    return objectToString.call(obj);
  };
  var nameOf = function(f) {
    if (f.name) {
      return f.name;
    }
    var m = $match.call(functionToString.call(f), /^function\s*([\w$]+)/);
    if (m) {
      return m[1];
    }
    return null;
  };
  var indexOf = function(xs, x) {
    if (xs.indexOf) {
      return xs.indexOf(x);
    }
    for (var i = 0, l = xs.length;i < l; i++) {
      if (xs[i] === x) {
        return i;
      }
    }
    return -1;
  };
  var isMap = function(x) {
    if (!mapSize || !x || typeof x !== "object") {
      return false;
    }
    try {
      mapSize.call(x);
      try {
        setSize.call(x);
      } catch (s) {
        return true;
      }
      return x instanceof Map;
    } catch (e) {
    }
    return false;
  };
  var isWeakMap = function(x) {
    if (!weakMapHas || !x || typeof x !== "object") {
      return false;
    }
    try {
      weakMapHas.call(x, weakMapHas);
      try {
        weakSetHas.call(x, weakSetHas);
      } catch (s) {
        return true;
      }
      return x instanceof WeakMap;
    } catch (e) {
    }
    return false;
  };
  var isWeakRef = function(x) {
    if (!weakRefDeref || !x || typeof x !== "object") {
      return false;
    }
    try {
      weakRefDeref.call(x);
      return true;
    } catch (e) {
    }
    return false;
  };
  var isSet = function(x) {
    if (!setSize || !x || typeof x !== "object") {
      return false;
    }
    try {
      setSize.call(x);
      try {
        mapSize.call(x);
      } catch (m) {
        return true;
      }
      return x instanceof Set;
    } catch (e) {
    }
    return false;
  };
  var isWeakSet = function(x) {
    if (!weakSetHas || !x || typeof x !== "object") {
      return false;
    }
    try {
      weakSetHas.call(x, weakSetHas);
      try {
        weakMapHas.call(x, weakMapHas);
      } catch (s) {
        return true;
      }
      return x instanceof WeakSet;
    } catch (e) {
    }
    return false;
  };
  var isElement = function(x) {
    if (!x || typeof x !== "object") {
      return false;
    }
    if (typeof HTMLElement !== "undefined" && x instanceof HTMLElement) {
      return true;
    }
    return typeof x.nodeName === "string" && typeof x.getAttribute === "function";
  };
  var inspectString = function(str, opts) {
    if (str.length > opts.maxStringLength) {
      var remaining = str.length - opts.maxStringLength;
      var trailer = "... " + remaining + " more character" + (remaining > 1 ? "s" : "");
      return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;
    }
    var s = $replace.call($replace.call(str, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, lowbyte);
    return wrapQuotes(s, "single", opts);
  };
  var lowbyte = function(c) {
    var n = c.charCodeAt(0);
    var x = {
      8: "b",
      9: "t",
      10: "n",
      12: "f",
      13: "r"
    }[n];
    if (x) {
      return "\\" + x;
    }
    return "\\x" + (n < 16 ? "0" : "") + $toUpperCase.call(n.toString(16));
  };
  var markBoxed = function(str) {
    return "Object(" + str + ")";
  };
  var weakCollectionOf = function(type) {
    return type + " { ? }";
  };
  var collectionOf = function(type, size, entries, indent) {
    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ", ");
    return type + " (" + size + ") {" + joinedEntries + "}";
  };
  var singleLineValues = function(xs) {
    for (var i = 0;i < xs.length; i++) {
      if (indexOf(xs[i], "\n") >= 0) {
        return false;
      }
    }
    return true;
  };
  var getIndent = function(opts, depth) {
    var baseIndent;
    if (opts.indent === "\t") {
      baseIndent = "\t";
    } else if (typeof opts.indent === "number" && opts.indent > 0) {
      baseIndent = $join.call(Array(opts.indent + 1), " ");
    } else {
      return null;
    }
    return {
      base: baseIndent,
      prev: $join.call(Array(depth + 1), baseIndent)
    };
  };
  var indentedJoin = function(xs, indent) {
    if (xs.length === 0) {
      return "";
    }
    var lineJoiner = "\n" + indent.prev + indent.base;
    return lineJoiner + $join.call(xs, "," + lineJoiner) + "\n" + indent.prev;
  };
  var arrObjKeys = function(obj, inspect) {
    var isArr = isArray(obj);
    var xs = [];
    if (isArr) {
      xs.length = obj.length;
      for (var i = 0;i < obj.length; i++) {
        xs[i] = has(obj, i) ? inspect(obj[i], obj) : "";
      }
    }
    var syms = typeof gOPS === "function" ? gOPS(obj) : [];
    var symMap;
    if (hasShammedSymbols) {
      symMap = {};
      for (var k = 0;k < syms.length; k++) {
        symMap["$" + syms[k]] = syms[k];
      }
    }
    for (var key in obj) {
      if (!has(obj, key)) {
        continue;
      }
      if (isArr && String(Number(key)) === key && key < obj.length) {
        continue;
      }
      if (hasShammedSymbols && symMap["$" + key] instanceof Symbol) {
        continue;
      } else if ($test.call(/[^\w$]/, key)) {
        xs.push(inspect(key, obj) + ": " + inspect(obj[key], obj));
      } else {
        xs.push(key + ": " + inspect(obj[key], obj));
      }
    }
    if (typeof gOPS === "function") {
      for (var j = 0;j < syms.length; j++) {
        if (isEnumerable.call(obj, syms[j])) {
          xs.push("[" + inspect(syms[j]) + "]: " + inspect(obj[syms[j]], obj));
        }
      }
    }
    return xs;
  };
  var hasMap = typeof Map === "function" && Map.prototype;
  var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null;
  var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === "function" ? mapSizeDescriptor.get : null;
  var mapForEach = hasMap && Map.prototype.forEach;
  var hasSet = typeof Set === "function" && Set.prototype;
  var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null;
  var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === "function" ? setSizeDescriptor.get : null;
  var setForEach = hasSet && Set.prototype.forEach;
  var hasWeakMap = typeof WeakMap === "function" && WeakMap.prototype;
  var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
  var hasWeakSet = typeof WeakSet === "function" && WeakSet.prototype;
  var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
  var hasWeakRef = typeof WeakRef === "function" && WeakRef.prototype;
  var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
  var booleanValueOf = Boolean.prototype.valueOf;
  var objectToString = Object.prototype.toString;
  var functionToString = Function.prototype.toString;
  var $match = String.prototype.match;
  var $slice = String.prototype.slice;
  var $replace = String.prototype.replace;
  var $toUpperCase = String.prototype.toUpperCase;
  var $toLowerCase = String.prototype.toLowerCase;
  var $test = RegExp.prototype.test;
  var $concat = Array.prototype.concat;
  var $join = Array.prototype.join;
  var $arrSlice = Array.prototype.slice;
  var $floor = Math.floor;
  var bigIntValueOf = typeof BigInt === "function" ? BigInt.prototype.valueOf : null;
  var gOPS = Object.getOwnPropertySymbols;
  var symToString = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol.prototype.toString : null;
  var hasShammedSymbols = typeof Symbol === "function" && typeof Symbol.iterator === "object";
  var toStringTag = typeof Symbol === "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? "object" : "symbol") ? Symbol.toStringTag : null;
  var isEnumerable = Object.prototype.propertyIsEnumerable;
  var gPO = (typeof Reflect === "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(O) {
    return O.__proto__;
  } : null);
  var utilInspect = require_util_inspect();
  var inspectCustom = utilInspect.custom;
  var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;
  module.exports = function inspect_(obj, options, depth, seen) {
    var opts = options || {};
    if (has(opts, "quoteStyle") && (opts.quoteStyle !== "single" && opts.quoteStyle !== "double")) {
      throw new TypeError('option "quoteStyle" must be "single" or "double"');
    }
    if (has(opts, "maxStringLength") && (typeof opts.maxStringLength === "number" ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity : opts.maxStringLength !== null)) {
      throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
    }
    var customInspect = has(opts, "customInspect") ? opts.customInspect : true;
    if (typeof customInspect !== "boolean" && customInspect !== "symbol") {
      throw new TypeError('option "customInspect", if provided, must be `true`, `false`, or `\'symbol\'`');
    }
    if (has(opts, "indent") && opts.indent !== null && opts.indent !== "\t" && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)) {
      throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
    }
    if (has(opts, "numericSeparator") && typeof opts.numericSeparator !== "boolean") {
      throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
    }
    var numericSeparator = opts.numericSeparator;
    if (typeof obj === "undefined") {
      return "undefined";
    }
    if (obj === null) {
      return "null";
    }
    if (typeof obj === "boolean") {
      return obj ? "true" : "false";
    }
    if (typeof obj === "string") {
      return inspectString(obj, opts);
    }
    if (typeof obj === "number") {
      if (obj === 0) {
        return Infinity / obj > 0 ? "0" : "-0";
      }
      var str = String(obj);
      return numericSeparator ? addNumericSeparator(obj, str) : str;
    }
    if (typeof obj === "bigint") {
      var bigIntStr = String(obj) + "n";
      return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
    }
    var maxDepth = typeof opts.depth === "undefined" ? 5 : opts.depth;
    if (typeof depth === "undefined") {
      depth = 0;
    }
    if (depth >= maxDepth && maxDepth > 0 && typeof obj === "object") {
      return isArray(obj) ? "[Array]" : "[Object]";
    }
    var indent = getIndent(opts, depth);
    if (typeof seen === "undefined") {
      seen = [];
    } else if (indexOf(seen, obj) >= 0) {
      return "[Circular]";
    }
    function inspect(value, from, noIndent) {
      if (from) {
        seen = $arrSlice.call(seen);
        seen.push(from);
      }
      if (noIndent) {
        var newOpts = {
          depth: opts.depth
        };
        if (has(opts, "quoteStyle")) {
          newOpts.quoteStyle = opts.quoteStyle;
        }
        return inspect_(value, newOpts, depth + 1, seen);
      }
      return inspect_(value, opts, depth + 1, seen);
    }
    if (typeof obj === "function" && !isRegExp(obj)) {
      var name = nameOf(obj);
      var keys = arrObjKeys(obj, inspect);
      return "[Function" + (name ? ": " + name : " (anonymous)") + "]" + (keys.length > 0 ? " { " + $join.call(keys, ", ") + " }" : "");
    }
    if (isSymbol(obj)) {
      var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, "$1") : symToString.call(obj);
      return typeof obj === "object" && !hasShammedSymbols ? markBoxed(symString) : symString;
    }
    if (isElement(obj)) {
      var s = "<" + $toLowerCase.call(String(obj.nodeName));
      var attrs = obj.attributes || [];
      for (var i = 0;i < attrs.length; i++) {
        s += " " + attrs[i].name + "=" + wrapQuotes(quote(attrs[i].value), "double", opts);
      }
      s += ">";
      if (obj.childNodes && obj.childNodes.length) {
        s += "...";
      }
      s += "</" + $toLowerCase.call(String(obj.nodeName)) + ">";
      return s;
    }
    if (isArray(obj)) {
      if (obj.length === 0) {
        return "[]";
      }
      var xs = arrObjKeys(obj, inspect);
      if (indent && !singleLineValues(xs)) {
        return "[" + indentedJoin(xs, indent) + "]";
      }
      return "[ " + $join.call(xs, ", ") + " ]";
    }
    if (isError(obj)) {
      var parts = arrObjKeys(obj, inspect);
      if (!("cause" in Error.prototype) && ("cause" in obj) && !isEnumerable.call(obj, "cause")) {
        return "{ [" + String(obj) + "] " + $join.call($concat.call("[cause]: " + inspect(obj.cause), parts), ", ") + " }";
      }
      if (parts.length === 0) {
        return "[" + String(obj) + "]";
      }
      return "{ [" + String(obj) + "] " + $join.call(parts, ", ") + " }";
    }
    if (typeof obj === "object" && customInspect) {
      if (inspectSymbol && typeof obj[inspectSymbol] === "function" && utilInspect) {
        return utilInspect(obj, { depth: maxDepth - depth });
      } else if (customInspect !== "symbol" && typeof obj.inspect === "function") {
        return obj.inspect();
      }
    }
    if (isMap(obj)) {
      var mapParts = [];
      if (mapForEach) {
        mapForEach.call(obj, function(value, key) {
          mapParts.push(inspect(key, obj, true) + " => " + inspect(value, obj));
        });
      }
      return collectionOf("Map", mapSize.call(obj), mapParts, indent);
    }
    if (isSet(obj)) {
      var setParts = [];
      if (setForEach) {
        setForEach.call(obj, function(value) {
          setParts.push(inspect(value, obj));
        });
      }
      return collectionOf("Set", setSize.call(obj), setParts, indent);
    }
    if (isWeakMap(obj)) {
      return weakCollectionOf("WeakMap");
    }
    if (isWeakSet(obj)) {
      return weakCollectionOf("WeakSet");
    }
    if (isWeakRef(obj)) {
      return weakCollectionOf("WeakRef");
    }
    if (isNumber(obj)) {
      return markBoxed(inspect(Number(obj)));
    }
    if (isBigInt(obj)) {
      return markBoxed(inspect(bigIntValueOf.call(obj)));
    }
    if (isBoolean(obj)) {
      return markBoxed(booleanValueOf.call(obj));
    }
    if (isString(obj)) {
      return markBoxed(inspect(String(obj)));
    }
    if (!isDate(obj) && !isRegExp(obj)) {
      var ys = arrObjKeys(obj, inspect);
      var isPlainObject3 = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
      var protoTag = obj instanceof Object ? "" : "null prototype";
      var stringTag = !isPlainObject3 && toStringTag && Object(obj) === obj && (toStringTag in obj) ? $slice.call(toStr(obj), 8, -1) : protoTag ? "Object" : "";
      var constructorTag = isPlainObject3 || typeof obj.constructor !== "function" ? "" : obj.constructor.name ? obj.constructor.name + " " : "";
      var tag = constructorTag + (stringTag || protoTag ? "[" + $join.call($concat.call([], stringTag || [], protoTag || []), ": ") + "] " : "");
      if (ys.length === 0) {
        return tag + "{}";
      }
      if (indent) {
        return tag + "{" + indentedJoin(ys, indent) + "}";
      }
      return tag + "{ " + $join.call(ys, ", ") + " }";
    }
    return String(obj);
  };
  var hasOwn = Object.prototype.hasOwnProperty || function(key) {
    return key in this;
  };
});

// node_modules/side-channel/index.js
var require_side_channel = __commonJS((exports, module) => {
  var GetIntrinsic = require_get_intrinsic();
  var callBound = require_callBound();
  var inspect = require_object_inspect();
  var $TypeError = GetIntrinsic("%TypeError%");
  var $WeakMap = GetIntrinsic("%WeakMap%", true);
  var $Map = GetIntrinsic("%Map%", true);
  var $weakMapGet = callBound("WeakMap.prototype.get", true);
  var $weakMapSet = callBound("WeakMap.prototype.set", true);
  var $weakMapHas = callBound("WeakMap.prototype.has", true);
  var $mapGet = callBound("Map.prototype.get", true);
  var $mapSet = callBound("Map.prototype.set", true);
  var $mapHas = callBound("Map.prototype.has", true);
  var listGetNode = function(list, key) {
    for (var prev = list, curr;(curr = prev.next) !== null; prev = curr) {
      if (curr.key === key) {
        prev.next = curr.next;
        curr.next = list.next;
        list.next = curr;
        return curr;
      }
    }
  };
  var listGet = function(objects, key) {
    var node = listGetNode(objects, key);
    return node && node.value;
  };
  var listSet = function(objects, key, value) {
    var node = listGetNode(objects, key);
    if (node) {
      node.value = value;
    } else {
      objects.next = {
        key,
        next: objects.next,
        value
      };
    }
  };
  var listHas = function(objects, key) {
    return !!listGetNode(objects, key);
  };
  module.exports = function getSideChannel() {
    var $wm;
    var $m;
    var $o;
    var channel = {
      assert: function(key) {
        if (!channel.has(key)) {
          throw new $TypeError("Side channel does not contain " + inspect(key));
        }
      },
      get: function(key) {
        if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
          if ($wm) {
            return $weakMapGet($wm, key);
          }
        } else if ($Map) {
          if ($m) {
            return $mapGet($m, key);
          }
        } else {
          if ($o) {
            return listGet($o, key);
          }
        }
      },
      has: function(key) {
        if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
          if ($wm) {
            return $weakMapHas($wm, key);
          }
        } else if ($Map) {
          if ($m) {
            return $mapHas($m, key);
          }
        } else {
          if ($o) {
            return listHas($o, key);
          }
        }
        return false;
      },
      set: function(key, value) {
        if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
          if (!$wm) {
            $wm = new $WeakMap;
          }
          $weakMapSet($wm, key, value);
        } else if ($Map) {
          if (!$m) {
            $m = new $Map;
          }
          $mapSet($m, key, value);
        } else {
          if (!$o) {
            $o = { key: {}, next: null };
          }
          listSet($o, key, value);
        }
      }
    };
    return channel;
  };
});

// node_modules/qs/lib/formats.js
var require_formats = __commonJS((exports, module) => {
  var replace = String.prototype.replace;
  var percentTwenties = /%20/g;
  var Format = {
    RFC1738: "RFC1738",
    RFC3986: "RFC3986"
  };
  module.exports = {
    default: Format.RFC3986,
    formatters: {
      RFC1738: function(value) {
        return replace.call(value, percentTwenties, "+");
      },
      RFC3986: function(value) {
        return String(value);
      }
    },
    RFC1738: Format.RFC1738,
    RFC3986: Format.RFC3986
  };
});

// node_modules/qs/lib/utils.js
var require_utils2 = __commonJS((exports, module) => {
  var formats = require_formats();
  var has = Object.prototype.hasOwnProperty;
  var isArray = Array.isArray;
  var hexTable = function() {
    var array = [];
    for (var i = 0;i < 256; ++i) {
      array.push("%" + ((i < 16 ? "0" : "") + i.toString(16)).toUpperCase());
    }
    return array;
  }();
  var compactQueue = function compactQueue(queue) {
    while (queue.length > 1) {
      var item = queue.pop();
      var obj = item.obj[item.prop];
      if (isArray(obj)) {
        var compacted = [];
        for (var j = 0;j < obj.length; ++j) {
          if (typeof obj[j] !== "undefined") {
            compacted.push(obj[j]);
          }
        }
        item.obj[item.prop] = compacted;
      }
    }
  };
  var arrayToObject = function arrayToObject(source, options) {
    var obj = options && options.plainObjects ? Object.create(null) : {};
    for (var i = 0;i < source.length; ++i) {
      if (typeof source[i] !== "undefined") {
        obj[i] = source[i];
      }
    }
    return obj;
  };
  var merge4 = function merge(target, source, options) {
    if (!source) {
      return target;
    }
    if (typeof source !== "object") {
      if (isArray(target)) {
        target.push(source);
      } else if (target && typeof target === "object") {
        if (options && (options.plainObjects || options.allowPrototypes) || !has.call(Object.prototype, source)) {
          target[source] = true;
        }
      } else {
        return [target, source];
      }
      return target;
    }
    if (!target || typeof target !== "object") {
      return [target].concat(source);
    }
    var mergeTarget = target;
    if (isArray(target) && !isArray(source)) {
      mergeTarget = arrayToObject(target, options);
    }
    if (isArray(target) && isArray(source)) {
      source.forEach(function(item, i) {
        if (has.call(target, i)) {
          var targetItem = target[i];
          if (targetItem && typeof targetItem === "object" && item && typeof item === "object") {
            target[i] = merge(targetItem, item, options);
          } else {
            target.push(item);
          }
        } else {
          target[i] = item;
        }
      });
      return target;
    }
    return Object.keys(source).reduce(function(acc, key) {
      var value = source[key];
      if (has.call(acc, key)) {
        acc[key] = merge(acc[key], value, options);
      } else {
        acc[key] = value;
      }
      return acc;
    }, mergeTarget);
  };
  var assign = function assignSingleSource(target, source) {
    return Object.keys(source).reduce(function(acc, key) {
      acc[key] = source[key];
      return acc;
    }, target);
  };
  var decode = function(str, decoder, charset) {
    var strWithoutPlus = str.replace(/\+/g, " ");
    if (charset === "iso-8859-1") {
      return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
    }
    try {
      return decodeURIComponent(strWithoutPlus);
    } catch (e) {
      return strWithoutPlus;
    }
  };
  var encode = function encode(str, defaultEncoder, charset, kind, format) {
    if (str.length === 0) {
      return str;
    }
    var string = str;
    if (typeof str === "symbol") {
      string = Symbol.prototype.toString.call(str);
    } else if (typeof str !== "string") {
      string = String(str);
    }
    if (charset === "iso-8859-1") {
      return escape(string).replace(/%u[0-9a-f]{4}/gi, function($0) {
        return "%26%23" + parseInt($0.slice(2), 16) + "%3B";
      });
    }
    var out = "";
    for (var i = 0;i < string.length; ++i) {
      var c = string.charCodeAt(i);
      if (c === 45 || c === 46 || c === 95 || c === 126 || c >= 48 && c <= 57 || c >= 65 && c <= 90 || c >= 97 && c <= 122 || format === formats.RFC1738 && (c === 40 || c === 41)) {
        out += string.charAt(i);
        continue;
      }
      if (c < 128) {
        out = out + hexTable[c];
        continue;
      }
      if (c < 2048) {
        out = out + (hexTable[192 | c >> 6] + hexTable[128 | c & 63]);
        continue;
      }
      if (c < 55296 || c >= 57344) {
        out = out + (hexTable[224 | c >> 12] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63]);
        continue;
      }
      i += 1;
      c = 65536 + ((c & 1023) << 10 | string.charCodeAt(i) & 1023);
      out += hexTable[240 | c >> 18] + hexTable[128 | c >> 12 & 63] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63];
    }
    return out;
  };
  var compact = function compact(value) {
    var queue = [{ obj: { o: value }, prop: "o" }];
    var refs = [];
    for (var i = 0;i < queue.length; ++i) {
      var item = queue[i];
      var obj = item.obj[item.prop];
      var keys = Object.keys(obj);
      for (var j = 0;j < keys.length; ++j) {
        var key = keys[j];
        var val = obj[key];
        if (typeof val === "object" && val !== null && refs.indexOf(val) === -1) {
          queue.push({ obj, prop: key });
          refs.push(val);
        }
      }
    }
    compactQueue(queue);
    return value;
  };
  var isRegExp = function isRegExp(obj) {
    return Object.prototype.toString.call(obj) === "[object RegExp]";
  };
  var isBuffer = function isBuffer(obj) {
    if (!obj || typeof obj !== "object") {
      return false;
    }
    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
  };
  var combine = function combine(a, b) {
    return [].concat(a, b);
  };
  var maybeMap = function maybeMap(val, fn) {
    if (isArray(val)) {
      var mapped = [];
      for (var i = 0;i < val.length; i += 1) {
        mapped.push(fn(val[i]));
      }
      return mapped;
    }
    return fn(val);
  };
  module.exports = {
    arrayToObject,
    assign,
    combine,
    compact,
    decode,
    encode,
    isBuffer,
    isRegExp,
    maybeMap,
    merge: merge4
  };
});

// node_modules/qs/lib/stringify.js
var require_stringify2 = __commonJS((exports, module) => {
  var getSideChannel = require_side_channel();
  var utils = require_utils2();
  var formats = require_formats();
  var has = Object.prototype.hasOwnProperty;
  var arrayPrefixGenerators = {
    brackets: function brackets(prefix) {
      return prefix + "[]";
    },
    comma: "comma",
    indices: function indices(prefix, key) {
      return prefix + "[" + key + "]";
    },
    repeat: function repeat(prefix) {
      return prefix;
    }
  };
  var isArray = Array.isArray;
  var push = Array.prototype.push;
  var pushToArray = function(arr, valueOrArray) {
    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);
  };
  var toISO = Date.prototype.toISOString;
  var defaultFormat = formats["default"];
  var defaults2 = {
    addQueryPrefix: false,
    allowDots: false,
    charset: "utf-8",
    charsetSentinel: false,
    delimiter: "&",
    encode: true,
    encoder: utils.encode,
    encodeValuesOnly: false,
    format: defaultFormat,
    formatter: formats.formatters[defaultFormat],
    indices: false,
    serializeDate: function serializeDate(date) {
      return toISO.call(date);
    },
    skipNulls: false,
    strictNullHandling: false
  };
  var isNonNullishPrimitive = function isNonNullishPrimitive(v) {
    return typeof v === "string" || typeof v === "number" || typeof v === "boolean" || typeof v === "symbol" || typeof v === "bigint";
  };
  var sentinel = {};
  var stringify = function stringify(object, prefix, generateArrayPrefix, commaRoundTrip, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {
    var obj = object;
    var tmpSc = sideChannel;
    var step = 0;
    var findFlag = false;
    while ((tmpSc = tmpSc.get(sentinel)) !== undefined && !findFlag) {
      var pos = tmpSc.get(object);
      step += 1;
      if (typeof pos !== "undefined") {
        if (pos === step) {
          throw new RangeError("Cyclic object value");
        } else {
          findFlag = true;
        }
      }
      if (typeof tmpSc.get(sentinel) === "undefined") {
        step = 0;
      }
    }
    if (typeof filter === "function") {
      obj = filter(prefix, obj);
    } else if (obj instanceof Date) {
      obj = serializeDate(obj);
    } else if (generateArrayPrefix === "comma" && isArray(obj)) {
      obj = utils.maybeMap(obj, function(value2) {
        if (value2 instanceof Date) {
          return serializeDate(value2);
        }
        return value2;
      });
    }
    if (obj === null) {
      if (strictNullHandling) {
        return encoder && !encodeValuesOnly ? encoder(prefix, defaults2.encoder, charset, "key", format) : prefix;
      }
      obj = "";
    }
    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
      if (encoder) {
        var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults2.encoder, charset, "key", format);
        return [formatter(keyValue) + "=" + formatter(encoder(obj, defaults2.encoder, charset, "value", format))];
      }
      return [formatter(prefix) + "=" + formatter(String(obj))];
    }
    var values = [];
    if (typeof obj === "undefined") {
      return values;
    }
    var objKeys;
    if (generateArrayPrefix === "comma" && isArray(obj)) {
      if (encodeValuesOnly && encoder) {
        obj = utils.maybeMap(obj, encoder);
      }
      objKeys = [{ value: obj.length > 0 ? obj.join(",") || null : undefined }];
    } else if (isArray(filter)) {
      objKeys = filter;
    } else {
      var keys = Object.keys(obj);
      objKeys = sort ? keys.sort(sort) : keys;
    }
    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + "[]" : prefix;
    for (var j = 0;j < objKeys.length; ++j) {
      var key = objKeys[j];
      var value = typeof key === "object" && typeof key.value !== "undefined" ? key.value : obj[key];
      if (skipNulls && value === null) {
        continue;
      }
      var keyPrefix = isArray(obj) ? typeof generateArrayPrefix === "function" ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix : adjustedPrefix + (allowDots ? "." + key : "[" + key + "]");
      sideChannel.set(object, step);
      var valueSideChannel = getSideChannel();
      valueSideChannel.set(sentinel, sideChannel);
      pushToArray(values, stringify(value, keyPrefix, generateArrayPrefix, commaRoundTrip, strictNullHandling, skipNulls, generateArrayPrefix === "comma" && encodeValuesOnly && isArray(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));
    }
    return values;
  };
  var normalizeStringifyOptions = function normalizeStringifyOptions(opts) {
    if (!opts) {
      return defaults2;
    }
    if (opts.encoder !== null && typeof opts.encoder !== "undefined" && typeof opts.encoder !== "function") {
      throw new TypeError("Encoder has to be a function.");
    }
    var charset = opts.charset || defaults2.charset;
    if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
      throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
    }
    var format = formats["default"];
    if (typeof opts.format !== "undefined") {
      if (!has.call(formats.formatters, opts.format)) {
        throw new TypeError("Unknown format option provided.");
      }
      format = opts.format;
    }
    var formatter = formats.formatters[format];
    var filter = defaults2.filter;
    if (typeof opts.filter === "function" || isArray(opts.filter)) {
      filter = opts.filter;
    }
    return {
      addQueryPrefix: typeof opts.addQueryPrefix === "boolean" ? opts.addQueryPrefix : defaults2.addQueryPrefix,
      allowDots: typeof opts.allowDots === "undefined" ? defaults2.allowDots : !!opts.allowDots,
      charset,
      charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults2.charsetSentinel,
      delimiter: typeof opts.delimiter === "undefined" ? defaults2.delimiter : opts.delimiter,
      encode: typeof opts.encode === "boolean" ? opts.encode : defaults2.encode,
      encoder: typeof opts.encoder === "function" ? opts.encoder : defaults2.encoder,
      encodeValuesOnly: typeof opts.encodeValuesOnly === "boolean" ? opts.encodeValuesOnly : defaults2.encodeValuesOnly,
      filter,
      format,
      formatter,
      serializeDate: typeof opts.serializeDate === "function" ? opts.serializeDate : defaults2.serializeDate,
      skipNulls: typeof opts.skipNulls === "boolean" ? opts.skipNulls : defaults2.skipNulls,
      sort: typeof opts.sort === "function" ? opts.sort : null,
      strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults2.strictNullHandling
    };
  };
  module.exports = function(object, opts) {
    var obj = object;
    var options = normalizeStringifyOptions(opts);
    var objKeys;
    var filter;
    if (typeof options.filter === "function") {
      filter = options.filter;
      obj = filter("", obj);
    } else if (isArray(options.filter)) {
      filter = options.filter;
      objKeys = filter;
    }
    var keys = [];
    if (typeof obj !== "object" || obj === null) {
      return "";
    }
    var arrayFormat;
    if (opts && (opts.arrayFormat in arrayPrefixGenerators)) {
      arrayFormat = opts.arrayFormat;
    } else if (opts && ("indices" in opts)) {
      arrayFormat = opts.indices ? "indices" : "repeat";
    } else {
      arrayFormat = "indices";
    }
    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
    if (opts && ("commaRoundTrip" in opts) && typeof opts.commaRoundTrip !== "boolean") {
      throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
    }
    var commaRoundTrip = generateArrayPrefix === "comma" && opts && opts.commaRoundTrip;
    if (!objKeys) {
      objKeys = Object.keys(obj);
    }
    if (options.sort) {
      objKeys.sort(options.sort);
    }
    var sideChannel = getSideChannel();
    for (var i = 0;i < objKeys.length; ++i) {
      var key = objKeys[i];
      if (options.skipNulls && obj[key] === null) {
        continue;
      }
      pushToArray(keys, stringify(obj[key], key, generateArrayPrefix, commaRoundTrip, options.strictNullHandling, options.skipNulls, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));
    }
    var joined = keys.join(options.delimiter);
    var prefix = options.addQueryPrefix === true ? "?" : "";
    if (options.charsetSentinel) {
      if (options.charset === "iso-8859-1") {
        prefix += "utf8=%26%2310003%3B&";
      } else {
        prefix += "utf8=%E2%9C%93&";
      }
    }
    return joined.length > 0 ? prefix + joined : "";
  };
});

// node_modules/qs/lib/parse.js
var require_parse3 = __commonJS((exports, module) => {
  var utils = require_utils2();
  var has = Object.prototype.hasOwnProperty;
  var isArray = Array.isArray;
  var defaults2 = {
    allowDots: false,
    allowPrototypes: false,
    allowSparse: false,
    arrayLimit: 20,
    charset: "utf-8",
    charsetSentinel: false,
    comma: false,
    decoder: utils.decode,
    delimiter: "&",
    depth: 5,
    ignoreQueryPrefix: false,
    interpretNumericEntities: false,
    parameterLimit: 1000,
    parseArrays: true,
    plainObjects: false,
    strictNullHandling: false
  };
  var interpretNumericEntities = function(str) {
    return str.replace(/&#(\d+);/g, function($0, numberStr) {
      return String.fromCharCode(parseInt(numberStr, 10));
    });
  };
  var parseArrayValue = function(val, options) {
    if (val && typeof val === "string" && options.comma && val.indexOf(",") > -1) {
      return val.split(",");
    }
    return val;
  };
  var isoSentinel = "utf8=%26%2310003%3B";
  var charsetSentinel = "utf8=%E2%9C%93";
  var parseValues = function parseQueryStringValues(str, options) {
    var obj = { __proto__: null };
    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, "") : str;
    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
    var parts = cleanStr.split(options.delimiter, limit);
    var skipIndex = -1;
    var i;
    var charset = options.charset;
    if (options.charsetSentinel) {
      for (i = 0;i < parts.length; ++i) {
        if (parts[i].indexOf("utf8=") === 0) {
          if (parts[i] === charsetSentinel) {
            charset = "utf-8";
          } else if (parts[i] === isoSentinel) {
            charset = "iso-8859-1";
          }
          skipIndex = i;
          i = parts.length;
        }
      }
    }
    for (i = 0;i < parts.length; ++i) {
      if (i === skipIndex) {
        continue;
      }
      var part = parts[i];
      var bracketEqualsPos = part.indexOf("]=");
      var pos = bracketEqualsPos === -1 ? part.indexOf("=") : bracketEqualsPos + 1;
      var key, val;
      if (pos === -1) {
        key = options.decoder(part, defaults2.decoder, charset, "key");
        val = options.strictNullHandling ? null : "";
      } else {
        key = options.decoder(part.slice(0, pos), defaults2.decoder, charset, "key");
        val = utils.maybeMap(parseArrayValue(part.slice(pos + 1), options), function(encodedVal) {
          return options.decoder(encodedVal, defaults2.decoder, charset, "value");
        });
      }
      if (val && options.interpretNumericEntities && charset === "iso-8859-1") {
        val = interpretNumericEntities(val);
      }
      if (part.indexOf("[]=") > -1) {
        val = isArray(val) ? [val] : val;
      }
      if (has.call(obj, key)) {
        obj[key] = utils.combine(obj[key], val);
      } else {
        obj[key] = val;
      }
    }
    return obj;
  };
  var parseObject = function(chain, val, options, valuesParsed) {
    var leaf = valuesParsed ? val : parseArrayValue(val, options);
    for (var i = chain.length - 1;i >= 0; --i) {
      var obj;
      var root = chain[i];
      if (root === "[]" && options.parseArrays) {
        obj = [].concat(leaf);
      } else {
        obj = options.plainObjects ? Object.create(null) : {};
        var cleanRoot = root.charAt(0) === "[" && root.charAt(root.length - 1) === "]" ? root.slice(1, -1) : root;
        var index = parseInt(cleanRoot, 10);
        if (!options.parseArrays && cleanRoot === "") {
          obj = { 0: leaf };
        } else if (!isNaN(index) && root !== cleanRoot && String(index) === cleanRoot && index >= 0 && (options.parseArrays && index <= options.arrayLimit)) {
          obj = [];
          obj[index] = leaf;
        } else if (cleanRoot !== "__proto__") {
          obj[cleanRoot] = leaf;
        }
      }
      leaf = obj;
    }
    return leaf;
  };
  var parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {
    if (!givenKey) {
      return;
    }
    var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, "[$1]") : givenKey;
    var brackets = /(\[[^[\]]*])/;
    var child = /(\[[^[\]]*])/g;
    var segment = options.depth > 0 && brackets.exec(key);
    var parent = segment ? key.slice(0, segment.index) : key;
    var keys = [];
    if (parent) {
      if (!options.plainObjects && has.call(Object.prototype, parent)) {
        if (!options.allowPrototypes) {
          return;
        }
      }
      keys.push(parent);
    }
    var i = 0;
    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {
      i += 1;
      if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
        if (!options.allowPrototypes) {
          return;
        }
      }
      keys.push(segment[1]);
    }
    if (segment) {
      keys.push("[" + key.slice(segment.index) + "]");
    }
    return parseObject(keys, val, options, valuesParsed);
  };
  var normalizeParseOptions = function normalizeParseOptions(opts) {
    if (!opts) {
      return defaults2;
    }
    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== "function") {
      throw new TypeError("Decoder has to be a function.");
    }
    if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
      throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
    }
    var charset = typeof opts.charset === "undefined" ? defaults2.charset : opts.charset;
    return {
      allowDots: typeof opts.allowDots === "undefined" ? defaults2.allowDots : !!opts.allowDots,
      allowPrototypes: typeof opts.allowPrototypes === "boolean" ? opts.allowPrototypes : defaults2.allowPrototypes,
      allowSparse: typeof opts.allowSparse === "boolean" ? opts.allowSparse : defaults2.allowSparse,
      arrayLimit: typeof opts.arrayLimit === "number" ? opts.arrayLimit : defaults2.arrayLimit,
      charset,
      charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults2.charsetSentinel,
      comma: typeof opts.comma === "boolean" ? opts.comma : defaults2.comma,
      decoder: typeof opts.decoder === "function" ? opts.decoder : defaults2.decoder,
      delimiter: typeof opts.delimiter === "string" || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults2.delimiter,
      depth: typeof opts.depth === "number" || opts.depth === false ? +opts.depth : defaults2.depth,
      ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
      interpretNumericEntities: typeof opts.interpretNumericEntities === "boolean" ? opts.interpretNumericEntities : defaults2.interpretNumericEntities,
      parameterLimit: typeof opts.parameterLimit === "number" ? opts.parameterLimit : defaults2.parameterLimit,
      parseArrays: opts.parseArrays !== false,
      plainObjects: typeof opts.plainObjects === "boolean" ? opts.plainObjects : defaults2.plainObjects,
      strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults2.strictNullHandling
    };
  };
  module.exports = function(str, opts) {
    var options = normalizeParseOptions(opts);
    if (str === "" || str === null || typeof str === "undefined") {
      return options.plainObjects ? Object.create(null) : {};
    }
    var tempObj = typeof str === "string" ? parseValues(str, options) : str;
    var obj = options.plainObjects ? Object.create(null) : {};
    var keys = Object.keys(tempObj);
    for (var i = 0;i < keys.length; ++i) {
      var key = keys[i];
      var newObj = parseKeys(key, tempObj[key], options, typeof str === "string");
      obj = utils.merge(obj, newObj, options);
    }
    if (options.allowSparse === true) {
      return obj;
    }
    return utils.compact(obj);
  };
});

// node_modules/qs/lib/index.js
var require_lib2 = __commonJS((exports, module) => {
  var stringify = require_stringify2();
  var parse4 = require_parse3();
  var formats = require_formats();
  module.exports = {
    formats,
    parse: parse4,
    stringify
  };
});

// node_modules/mime/Mime.js
var require_Mime = __commonJS((exports, module) => {
  var Mime = function() {
    this._types = Object.create(null);
    this._extensions = Object.create(null);
    for (let i = 0;i < arguments.length; i++) {
      this.define(arguments[i]);
    }
    this.define = this.define.bind(this);
    this.getType = this.getType.bind(this);
    this.getExtension = this.getExtension.bind(this);
  };
  Mime.prototype.define = function(typeMap, force) {
    for (let type in typeMap) {
      let extensions = typeMap[type].map(function(t) {
        return t.toLowerCase();
      });
      type = type.toLowerCase();
      for (let i = 0;i < extensions.length; i++) {
        const ext = extensions[i];
        if (ext[0] === "*") {
          continue;
        }
        if (!force && (ext in this._types)) {
          throw new Error('Attempt to change mapping for "' + ext + '" extension from "' + this._types[ext] + '" to "' + type + '". Pass `force=true` to allow this, otherwise remove "' + ext + '" from the list of extensions for "' + type + '".');
        }
        this._types[ext] = type;
      }
      if (force || !this._extensions[type]) {
        const ext = extensions[0];
        this._extensions[type] = ext[0] !== "*" ? ext : ext.substr(1);
      }
    }
  };
  Mime.prototype.getType = function(path) {
    path = String(path);
    let last = path.replace(/^.*[/\\]/, "").toLowerCase();
    let ext = last.replace(/^.*\./, "").toLowerCase();
    let hasPath = last.length < path.length;
    let hasDot = ext.length < last.length - 1;
    return (hasDot || !hasPath) && this._types[ext] || null;
  };
  Mime.prototype.getExtension = function(type) {
    type = /^\s*([^;\s]*)/.test(type) && RegExp.$1;
    return type && this._extensions[type.toLowerCase()] || null;
  };
  module.exports = Mime;
});

// node_modules/mime/types/standard.js
var require_standard = __commonJS((exports, module) => {
  module.exports = { "application/andrew-inset": ["ez"], "application/applixware": ["aw"], "application/atom+xml": ["atom"], "application/atomcat+xml": ["atomcat"], "application/atomdeleted+xml": ["atomdeleted"], "application/atomsvc+xml": ["atomsvc"], "application/atsc-dwd+xml": ["dwd"], "application/atsc-held+xml": ["held"], "application/atsc-rsat+xml": ["rsat"], "application/bdoc": ["bdoc"], "application/calendar+xml": ["xcs"], "application/ccxml+xml": ["ccxml"], "application/cdfx+xml": ["cdfx"], "application/cdmi-capability": ["cdmia"], "application/cdmi-container": ["cdmic"], "application/cdmi-domain": ["cdmid"], "application/cdmi-object": ["cdmio"], "application/cdmi-queue": ["cdmiq"], "application/cu-seeme": ["cu"], "application/dash+xml": ["mpd"], "application/davmount+xml": ["davmount"], "application/docbook+xml": ["dbk"], "application/dssc+der": ["dssc"], "application/dssc+xml": ["xdssc"], "application/ecmascript": ["es", "ecma"], "application/emma+xml": ["emma"], "application/emotionml+xml": ["emotionml"], "application/epub+zip": ["epub"], "application/exi": ["exi"], "application/express": ["exp"], "application/fdt+xml": ["fdt"], "application/font-tdpfr": ["pfr"], "application/geo+json": ["geojson"], "application/gml+xml": ["gml"], "application/gpx+xml": ["gpx"], "application/gxf": ["gxf"], "application/gzip": ["gz"], "application/hjson": ["hjson"], "application/hyperstudio": ["stk"], "application/inkml+xml": ["ink", "inkml"], "application/ipfix": ["ipfix"], "application/its+xml": ["its"], "application/java-archive": ["jar", "war", "ear"], "application/java-serialized-object": ["ser"], "application/java-vm": ["class"], "application/javascript": ["js", "mjs"], "application/json": ["json", "map"], "application/json5": ["json5"], "application/jsonml+json": ["jsonml"], "application/ld+json": ["jsonld"], "application/lgr+xml": ["lgr"], "application/lost+xml": ["lostxml"], "application/mac-binhex40": ["hqx"], "application/mac-compactpro": ["cpt"], "application/mads+xml": ["mads"], "application/manifest+json": ["webmanifest"], "application/marc": ["mrc"], "application/marcxml+xml": ["mrcx"], "application/mathematica": ["ma", "nb", "mb"], "application/mathml+xml": ["mathml"], "application/mbox": ["mbox"], "application/mediaservercontrol+xml": ["mscml"], "application/metalink+xml": ["metalink"], "application/metalink4+xml": ["meta4"], "application/mets+xml": ["mets"], "application/mmt-aei+xml": ["maei"], "application/mmt-usd+xml": ["musd"], "application/mods+xml": ["mods"], "application/mp21": ["m21", "mp21"], "application/mp4": ["mp4s", "m4p"], "application/msword": ["doc", "dot"], "application/mxf": ["mxf"], "application/n-quads": ["nq"], "application/n-triples": ["nt"], "application/node": ["cjs"], "application/octet-stream": ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"], "application/oda": ["oda"], "application/oebps-package+xml": ["opf"], "application/ogg": ["ogx"], "application/omdoc+xml": ["omdoc"], "application/onenote": ["onetoc", "onetoc2", "onetmp", "onepkg"], "application/oxps": ["oxps"], "application/p2p-overlay+xml": ["relo"], "application/patch-ops-error+xml": ["xer"], "application/pdf": ["pdf"], "application/pgp-encrypted": ["pgp"], "application/pgp-signature": ["asc", "sig"], "application/pics-rules": ["prf"], "application/pkcs10": ["p10"], "application/pkcs7-mime": ["p7m", "p7c"], "application/pkcs7-signature": ["p7s"], "application/pkcs8": ["p8"], "application/pkix-attr-cert": ["ac"], "application/pkix-cert": ["cer"], "application/pkix-crl": ["crl"], "application/pkix-pkipath": ["pkipath"], "application/pkixcmp": ["pki"], "application/pls+xml": ["pls"], "application/postscript": ["ai", "eps", "ps"], "application/provenance+xml": ["provx"], "application/pskc+xml": ["pskcxml"], "application/raml+yaml": ["raml"], "application/rdf+xml": ["rdf", "owl"], "application/reginfo+xml": ["rif"], "application/relax-ng-compact-syntax": ["rnc"], "application/resource-lists+xml": ["rl"], "application/resource-lists-diff+xml": ["rld"], "application/rls-services+xml": ["rs"], "application/route-apd+xml": ["rapd"], "application/route-s-tsid+xml": ["sls"], "application/route-usd+xml": ["rusd"], "application/rpki-ghostbusters": ["gbr"], "application/rpki-manifest": ["mft"], "application/rpki-roa": ["roa"], "application/rsd+xml": ["rsd"], "application/rss+xml": ["rss"], "application/rtf": ["rtf"], "application/sbml+xml": ["sbml"], "application/scvp-cv-request": ["scq"], "application/scvp-cv-response": ["scs"], "application/scvp-vp-request": ["spq"], "application/scvp-vp-response": ["spp"], "application/sdp": ["sdp"], "application/senml+xml": ["senmlx"], "application/sensml+xml": ["sensmlx"], "application/set-payment-initiation": ["setpay"], "application/set-registration-initiation": ["setreg"], "application/shf+xml": ["shf"], "application/sieve": ["siv", "sieve"], "application/smil+xml": ["smi", "smil"], "application/sparql-query": ["rq"], "application/sparql-results+xml": ["srx"], "application/srgs": ["gram"], "application/srgs+xml": ["grxml"], "application/sru+xml": ["sru"], "application/ssdl+xml": ["ssdl"], "application/ssml+xml": ["ssml"], "application/swid+xml": ["swidtag"], "application/tei+xml": ["tei", "teicorpus"], "application/thraud+xml": ["tfi"], "application/timestamped-data": ["tsd"], "application/toml": ["toml"], "application/trig": ["trig"], "application/ttml+xml": ["ttml"], "application/ubjson": ["ubj"], "application/urc-ressheet+xml": ["rsheet"], "application/urc-targetdesc+xml": ["td"], "application/voicexml+xml": ["vxml"], "application/wasm": ["wasm"], "application/widget": ["wgt"], "application/winhlp": ["hlp"], "application/wsdl+xml": ["wsdl"], "application/wspolicy+xml": ["wspolicy"], "application/xaml+xml": ["xaml"], "application/xcap-att+xml": ["xav"], "application/xcap-caps+xml": ["xca"], "application/xcap-diff+xml": ["xdf"], "application/xcap-el+xml": ["xel"], "application/xcap-ns+xml": ["xns"], "application/xenc+xml": ["xenc"], "application/xhtml+xml": ["xhtml", "xht"], "application/xliff+xml": ["xlf"], "application/xml": ["xml", "xsl", "xsd", "rng"], "application/xml-dtd": ["dtd"], "application/xop+xml": ["xop"], "application/xproc+xml": ["xpl"], "application/xslt+xml": ["*xsl", "xslt"], "application/xspf+xml": ["xspf"], "application/xv+xml": ["mxml", "xhvml", "xvml", "xvm"], "application/yang": ["yang"], "application/yin+xml": ["yin"], "application/zip": ["zip"], "audio/3gpp": ["*3gpp"], "audio/adpcm": ["adp"], "audio/amr": ["amr"], "audio/basic": ["au", "snd"], "audio/midi": ["mid", "midi", "kar", "rmi"], "audio/mobile-xmf": ["mxmf"], "audio/mp3": ["*mp3"], "audio/mp4": ["m4a", "mp4a"], "audio/mpeg": ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"], "audio/ogg": ["oga", "ogg", "spx", "opus"], "audio/s3m": ["s3m"], "audio/silk": ["sil"], "audio/wav": ["wav"], "audio/wave": ["*wav"], "audio/webm": ["weba"], "audio/xm": ["xm"], "font/collection": ["ttc"], "font/otf": ["otf"], "font/ttf": ["ttf"], "font/woff": ["woff"], "font/woff2": ["woff2"], "image/aces": ["exr"], "image/apng": ["apng"], "image/avif": ["avif"], "image/bmp": ["bmp"], "image/cgm": ["cgm"], "image/dicom-rle": ["drle"], "image/emf": ["emf"], "image/fits": ["fits"], "image/g3fax": ["g3"], "image/gif": ["gif"], "image/heic": ["heic"], "image/heic-sequence": ["heics"], "image/heif": ["heif"], "image/heif-sequence": ["heifs"], "image/hej2k": ["hej2"], "image/hsj2": ["hsj2"], "image/ief": ["ief"], "image/jls": ["jls"], "image/jp2": ["jp2", "jpg2"], "image/jpeg": ["jpeg", "jpg", "jpe"], "image/jph": ["jph"], "image/jphc": ["jhc"], "image/jpm": ["jpm"], "image/jpx": ["jpx", "jpf"], "image/jxr": ["jxr"], "image/jxra": ["jxra"], "image/jxrs": ["jxrs"], "image/jxs": ["jxs"], "image/jxsc": ["jxsc"], "image/jxsi": ["jxsi"], "image/jxss": ["jxss"], "image/ktx": ["ktx"], "image/ktx2": ["ktx2"], "image/png": ["png"], "image/sgi": ["sgi"], "image/svg+xml": ["svg", "svgz"], "image/t38": ["t38"], "image/tiff": ["tif", "tiff"], "image/tiff-fx": ["tfx"], "image/webp": ["webp"], "image/wmf": ["wmf"], "message/disposition-notification": ["disposition-notification"], "message/global": ["u8msg"], "message/global-delivery-status": ["u8dsn"], "message/global-disposition-notification": ["u8mdn"], "message/global-headers": ["u8hdr"], "message/rfc822": ["eml", "mime"], "model/3mf": ["3mf"], "model/gltf+json": ["gltf"], "model/gltf-binary": ["glb"], "model/iges": ["igs", "iges"], "model/mesh": ["msh", "mesh", "silo"], "model/mtl": ["mtl"], "model/obj": ["obj"], "model/step+xml": ["stpx"], "model/step+zip": ["stpz"], "model/step-xml+zip": ["stpxz"], "model/stl": ["stl"], "model/vrml": ["wrl", "vrml"], "model/x3d+binary": ["*x3db", "x3dbz"], "model/x3d+fastinfoset": ["x3db"], "model/x3d+vrml": ["*x3dv", "x3dvz"], "model/x3d+xml": ["x3d", "x3dz"], "model/x3d-vrml": ["x3dv"], "text/cache-manifest": ["appcache", "manifest"], "text/calendar": ["ics", "ifb"], "text/coffeescript": ["coffee", "litcoffee"], "text/css": ["css"], "text/csv": ["csv"], "text/html": ["html", "htm", "shtml"], "text/jade": ["jade"], "text/jsx": ["jsx"], "text/less": ["less"], "text/markdown": ["markdown", "md"], "text/mathml": ["mml"], "text/mdx": ["mdx"], "text/n3": ["n3"], "text/plain": ["txt", "text", "conf", "def", "list", "log", "in", "ini"], "text/richtext": ["rtx"], "text/rtf": ["*rtf"], "text/sgml": ["sgml", "sgm"], "text/shex": ["shex"], "text/slim": ["slim", "slm"], "text/spdx": ["spdx"], "text/stylus": ["stylus", "styl"], "text/tab-separated-values": ["tsv"], "text/troff": ["t", "tr", "roff", "man", "me", "ms"], "text/turtle": ["ttl"], "text/uri-list": ["uri", "uris", "urls"], "text/vcard": ["vcard"], "text/vtt": ["vtt"], "text/xml": ["*xml"], "text/yaml": ["yaml", "yml"], "video/3gpp": ["3gp", "3gpp"], "video/3gpp2": ["3g2"], "video/h261": ["h261"], "video/h263": ["h263"], "video/h264": ["h264"], "video/iso.segment": ["m4s"], "video/jpeg": ["jpgv"], "video/jpm": ["*jpm", "jpgm"], "video/mj2": ["mj2", "mjp2"], "video/mp2t": ["ts"], "video/mp4": ["mp4", "mp4v", "mpg4"], "video/mpeg": ["mpeg", "mpg", "mpe", "m1v", "m2v"], "video/ogg": ["ogv"], "video/quicktime": ["qt", "mov"], "video/webm": ["webm"] };
});

// node_modules/mime/types/other.js
var require_other = __commonJS((exports, module) => {
  module.exports = { "application/prs.cww": ["cww"], "application/vnd.1000minds.decision-model+xml": ["1km"], "application/vnd.3gpp.pic-bw-large": ["plb"], "application/vnd.3gpp.pic-bw-small": ["psb"], "application/vnd.3gpp.pic-bw-var": ["pvb"], "application/vnd.3gpp2.tcap": ["tcap"], "application/vnd.3m.post-it-notes": ["pwn"], "application/vnd.accpac.simply.aso": ["aso"], "application/vnd.accpac.simply.imp": ["imp"], "application/vnd.acucobol": ["acu"], "application/vnd.acucorp": ["atc", "acutc"], "application/vnd.adobe.air-application-installer-package+zip": ["air"], "application/vnd.adobe.formscentral.fcdt": ["fcdt"], "application/vnd.adobe.fxp": ["fxp", "fxpl"], "application/vnd.adobe.xdp+xml": ["xdp"], "application/vnd.adobe.xfdf": ["xfdf"], "application/vnd.ahead.space": ["ahead"], "application/vnd.airzip.filesecure.azf": ["azf"], "application/vnd.airzip.filesecure.azs": ["azs"], "application/vnd.amazon.ebook": ["azw"], "application/vnd.americandynamics.acc": ["acc"], "application/vnd.amiga.ami": ["ami"], "application/vnd.android.package-archive": ["apk"], "application/vnd.anser-web-certificate-issue-initiation": ["cii"], "application/vnd.anser-web-funds-transfer-initiation": ["fti"], "application/vnd.antix.game-component": ["atx"], "application/vnd.apple.installer+xml": ["mpkg"], "application/vnd.apple.keynote": ["key"], "application/vnd.apple.mpegurl": ["m3u8"], "application/vnd.apple.numbers": ["numbers"], "application/vnd.apple.pages": ["pages"], "application/vnd.apple.pkpass": ["pkpass"], "application/vnd.aristanetworks.swi": ["swi"], "application/vnd.astraea-software.iota": ["iota"], "application/vnd.audiograph": ["aep"], "application/vnd.balsamiq.bmml+xml": ["bmml"], "application/vnd.blueice.multipass": ["mpm"], "application/vnd.bmi": ["bmi"], "application/vnd.businessobjects": ["rep"], "application/vnd.chemdraw+xml": ["cdxml"], "application/vnd.chipnuts.karaoke-mmd": ["mmd"], "application/vnd.cinderella": ["cdy"], "application/vnd.citationstyles.style+xml": ["csl"], "application/vnd.claymore": ["cla"], "application/vnd.cloanto.rp9": ["rp9"], "application/vnd.clonk.c4group": ["c4g", "c4d", "c4f", "c4p", "c4u"], "application/vnd.cluetrust.cartomobile-config": ["c11amc"], "application/vnd.cluetrust.cartomobile-config-pkg": ["c11amz"], "application/vnd.commonspace": ["csp"], "application/vnd.contact.cmsg": ["cdbcmsg"], "application/vnd.cosmocaller": ["cmc"], "application/vnd.crick.clicker": ["clkx"], "application/vnd.crick.clicker.keyboard": ["clkk"], "application/vnd.crick.clicker.palette": ["clkp"], "application/vnd.crick.clicker.template": ["clkt"], "application/vnd.crick.clicker.wordbank": ["clkw"], "application/vnd.criticaltools.wbs+xml": ["wbs"], "application/vnd.ctc-posml": ["pml"], "application/vnd.cups-ppd": ["ppd"], "application/vnd.curl.car": ["car"], "application/vnd.curl.pcurl": ["pcurl"], "application/vnd.dart": ["dart"], "application/vnd.data-vision.rdz": ["rdz"], "application/vnd.dbf": ["dbf"], "application/vnd.dece.data": ["uvf", "uvvf", "uvd", "uvvd"], "application/vnd.dece.ttml+xml": ["uvt", "uvvt"], "application/vnd.dece.unspecified": ["uvx", "uvvx"], "application/vnd.dece.zip": ["uvz", "uvvz"], "application/vnd.denovo.fcselayout-link": ["fe_launch"], "application/vnd.dna": ["dna"], "application/vnd.dolby.mlp": ["mlp"], "application/vnd.dpgraph": ["dpg"], "application/vnd.dreamfactory": ["dfac"], "application/vnd.ds-keypoint": ["kpxx"], "application/vnd.dvb.ait": ["ait"], "application/vnd.dvb.service": ["svc"], "application/vnd.dynageo": ["geo"], "application/vnd.ecowin.chart": ["mag"], "application/vnd.enliven": ["nml"], "application/vnd.epson.esf": ["esf"], "application/vnd.epson.msf": ["msf"], "application/vnd.epson.quickanime": ["qam"], "application/vnd.epson.salt": ["slt"], "application/vnd.epson.ssf": ["ssf"], "application/vnd.eszigno3+xml": ["es3", "et3"], "application/vnd.ezpix-album": ["ez2"], "application/vnd.ezpix-package": ["ez3"], "application/vnd.fdf": ["fdf"], "application/vnd.fdsn.mseed": ["mseed"], "application/vnd.fdsn.seed": ["seed", "dataless"], "application/vnd.flographit": ["gph"], "application/vnd.fluxtime.clip": ["ftc"], "application/vnd.framemaker": ["fm", "frame", "maker", "book"], "application/vnd.frogans.fnc": ["fnc"], "application/vnd.frogans.ltf": ["ltf"], "application/vnd.fsc.weblaunch": ["fsc"], "application/vnd.fujitsu.oasys": ["oas"], "application/vnd.fujitsu.oasys2": ["oa2"], "application/vnd.fujitsu.oasys3": ["oa3"], "application/vnd.fujitsu.oasysgp": ["fg5"], "application/vnd.fujitsu.oasysprs": ["bh2"], "application/vnd.fujixerox.ddd": ["ddd"], "application/vnd.fujixerox.docuworks": ["xdw"], "application/vnd.fujixerox.docuworks.binder": ["xbd"], "application/vnd.fuzzysheet": ["fzs"], "application/vnd.genomatix.tuxedo": ["txd"], "application/vnd.geogebra.file": ["ggb"], "application/vnd.geogebra.tool": ["ggt"], "application/vnd.geometry-explorer": ["gex", "gre"], "application/vnd.geonext": ["gxt"], "application/vnd.geoplan": ["g2w"], "application/vnd.geospace": ["g3w"], "application/vnd.gmx": ["gmx"], "application/vnd.google-apps.document": ["gdoc"], "application/vnd.google-apps.presentation": ["gslides"], "application/vnd.google-apps.spreadsheet": ["gsheet"], "application/vnd.google-earth.kml+xml": ["kml"], "application/vnd.google-earth.kmz": ["kmz"], "application/vnd.grafeq": ["gqf", "gqs"], "application/vnd.groove-account": ["gac"], "application/vnd.groove-help": ["ghf"], "application/vnd.groove-identity-message": ["gim"], "application/vnd.groove-injector": ["grv"], "application/vnd.groove-tool-message": ["gtm"], "application/vnd.groove-tool-template": ["tpl"], "application/vnd.groove-vcard": ["vcg"], "application/vnd.hal+xml": ["hal"], "application/vnd.handheld-entertainment+xml": ["zmm"], "application/vnd.hbci": ["hbci"], "application/vnd.hhe.lesson-player": ["les"], "application/vnd.hp-hpgl": ["hpgl"], "application/vnd.hp-hpid": ["hpid"], "application/vnd.hp-hps": ["hps"], "application/vnd.hp-jlyt": ["jlt"], "application/vnd.hp-pcl": ["pcl"], "application/vnd.hp-pclxl": ["pclxl"], "application/vnd.hydrostatix.sof-data": ["sfd-hdstx"], "application/vnd.ibm.minipay": ["mpy"], "application/vnd.ibm.modcap": ["afp", "listafp", "list3820"], "application/vnd.ibm.rights-management": ["irm"], "application/vnd.ibm.secure-container": ["sc"], "application/vnd.iccprofile": ["icc", "icm"], "application/vnd.igloader": ["igl"], "application/vnd.immervision-ivp": ["ivp"], "application/vnd.immervision-ivu": ["ivu"], "application/vnd.insors.igm": ["igm"], "application/vnd.intercon.formnet": ["xpw", "xpx"], "application/vnd.intergeo": ["i2g"], "application/vnd.intu.qbo": ["qbo"], "application/vnd.intu.qfx": ["qfx"], "application/vnd.ipunplugged.rcprofile": ["rcprofile"], "application/vnd.irepository.package+xml": ["irp"], "application/vnd.is-xpr": ["xpr"], "application/vnd.isac.fcs": ["fcs"], "application/vnd.jam": ["jam"], "application/vnd.jcp.javame.midlet-rms": ["rms"], "application/vnd.jisp": ["jisp"], "application/vnd.joost.joda-archive": ["joda"], "application/vnd.kahootz": ["ktz", "ktr"], "application/vnd.kde.karbon": ["karbon"], "application/vnd.kde.kchart": ["chrt"], "application/vnd.kde.kformula": ["kfo"], "application/vnd.kde.kivio": ["flw"], "application/vnd.kde.kontour": ["kon"], "application/vnd.kde.kpresenter": ["kpr", "kpt"], "application/vnd.kde.kspread": ["ksp"], "application/vnd.kde.kword": ["kwd", "kwt"], "application/vnd.kenameaapp": ["htke"], "application/vnd.kidspiration": ["kia"], "application/vnd.kinar": ["kne", "knp"], "application/vnd.koan": ["skp", "skd", "skt", "skm"], "application/vnd.kodak-descriptor": ["sse"], "application/vnd.las.las+xml": ["lasxml"], "application/vnd.llamagraphics.life-balance.desktop": ["lbd"], "application/vnd.llamagraphics.life-balance.exchange+xml": ["lbe"], "application/vnd.lotus-1-2-3": ["123"], "application/vnd.lotus-approach": ["apr"], "application/vnd.lotus-freelance": ["pre"], "application/vnd.lotus-notes": ["nsf"], "application/vnd.lotus-organizer": ["org"], "application/vnd.lotus-screencam": ["scm"], "application/vnd.lotus-wordpro": ["lwp"], "application/vnd.macports.portpkg": ["portpkg"], "application/vnd.mapbox-vector-tile": ["mvt"], "application/vnd.mcd": ["mcd"], "application/vnd.medcalcdata": ["mc1"], "application/vnd.mediastation.cdkey": ["cdkey"], "application/vnd.mfer": ["mwf"], "application/vnd.mfmp": ["mfm"], "application/vnd.micrografx.flo": ["flo"], "application/vnd.micrografx.igx": ["igx"], "application/vnd.mif": ["mif"], "application/vnd.mobius.daf": ["daf"], "application/vnd.mobius.dis": ["dis"], "application/vnd.mobius.mbk": ["mbk"], "application/vnd.mobius.mqy": ["mqy"], "application/vnd.mobius.msl": ["msl"], "application/vnd.mobius.plc": ["plc"], "application/vnd.mobius.txf": ["txf"], "application/vnd.mophun.application": ["mpn"], "application/vnd.mophun.certificate": ["mpc"], "application/vnd.mozilla.xul+xml": ["xul"], "application/vnd.ms-artgalry": ["cil"], "application/vnd.ms-cab-compressed": ["cab"], "application/vnd.ms-excel": ["xls", "xlm", "xla", "xlc", "xlt", "xlw"], "application/vnd.ms-excel.addin.macroenabled.12": ["xlam"], "application/vnd.ms-excel.sheet.binary.macroenabled.12": ["xlsb"], "application/vnd.ms-excel.sheet.macroenabled.12": ["xlsm"], "application/vnd.ms-excel.template.macroenabled.12": ["xltm"], "application/vnd.ms-fontobject": ["eot"], "application/vnd.ms-htmlhelp": ["chm"], "application/vnd.ms-ims": ["ims"], "application/vnd.ms-lrm": ["lrm"], "application/vnd.ms-officetheme": ["thmx"], "application/vnd.ms-outlook": ["msg"], "application/vnd.ms-pki.seccat": ["cat"], "application/vnd.ms-pki.stl": ["*stl"], "application/vnd.ms-powerpoint": ["ppt", "pps", "pot"], "application/vnd.ms-powerpoint.addin.macroenabled.12": ["ppam"], "application/vnd.ms-powerpoint.presentation.macroenabled.12": ["pptm"], "application/vnd.ms-powerpoint.slide.macroenabled.12": ["sldm"], "application/vnd.ms-powerpoint.slideshow.macroenabled.12": ["ppsm"], "application/vnd.ms-powerpoint.template.macroenabled.12": ["potm"], "application/vnd.ms-project": ["mpp", "mpt"], "application/vnd.ms-word.document.macroenabled.12": ["docm"], "application/vnd.ms-word.template.macroenabled.12": ["dotm"], "application/vnd.ms-works": ["wps", "wks", "wcm", "wdb"], "application/vnd.ms-wpl": ["wpl"], "application/vnd.ms-xpsdocument": ["xps"], "application/vnd.mseq": ["mseq"], "application/vnd.musician": ["mus"], "application/vnd.muvee.style": ["msty"], "application/vnd.mynfc": ["taglet"], "application/vnd.neurolanguage.nlu": ["nlu"], "application/vnd.nitf": ["ntf", "nitf"], "application/vnd.noblenet-directory": ["nnd"], "application/vnd.noblenet-sealer": ["nns"], "application/vnd.noblenet-web": ["nnw"], "application/vnd.nokia.n-gage.ac+xml": ["*ac"], "application/vnd.nokia.n-gage.data": ["ngdat"], "application/vnd.nokia.n-gage.symbian.install": ["n-gage"], "application/vnd.nokia.radio-preset": ["rpst"], "application/vnd.nokia.radio-presets": ["rpss"], "application/vnd.novadigm.edm": ["edm"], "application/vnd.novadigm.edx": ["edx"], "application/vnd.novadigm.ext": ["ext"], "application/vnd.oasis.opendocument.chart": ["odc"], "application/vnd.oasis.opendocument.chart-template": ["otc"], "application/vnd.oasis.opendocument.database": ["odb"], "application/vnd.oasis.opendocument.formula": ["odf"], "application/vnd.oasis.opendocument.formula-template": ["odft"], "application/vnd.oasis.opendocument.graphics": ["odg"], "application/vnd.oasis.opendocument.graphics-template": ["otg"], "application/vnd.oasis.opendocument.image": ["odi"], "application/vnd.oasis.opendocument.image-template": ["oti"], "application/vnd.oasis.opendocument.presentation": ["odp"], "application/vnd.oasis.opendocument.presentation-template": ["otp"], "application/vnd.oasis.opendocument.spreadsheet": ["ods"], "application/vnd.oasis.opendocument.spreadsheet-template": ["ots"], "application/vnd.oasis.opendocument.text": ["odt"], "application/vnd.oasis.opendocument.text-master": ["odm"], "application/vnd.oasis.opendocument.text-template": ["ott"], "application/vnd.oasis.opendocument.text-web": ["oth"], "application/vnd.olpc-sugar": ["xo"], "application/vnd.oma.dd2+xml": ["dd2"], "application/vnd.openblox.game+xml": ["obgx"], "application/vnd.openofficeorg.extension": ["oxt"], "application/vnd.openstreetmap.data+xml": ["osm"], "application/vnd.openxmlformats-officedocument.presentationml.presentation": ["pptx"], "application/vnd.openxmlformats-officedocument.presentationml.slide": ["sldx"], "application/vnd.openxmlformats-officedocument.presentationml.slideshow": ["ppsx"], "application/vnd.openxmlformats-officedocument.presentationml.template": ["potx"], "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": ["xlsx"], "application/vnd.openxmlformats-officedocument.spreadsheetml.template": ["xltx"], "application/vnd.openxmlformats-officedocument.wordprocessingml.document": ["docx"], "application/vnd.openxmlformats-officedocument.wordprocessingml.template": ["dotx"], "application/vnd.osgeo.mapguide.package": ["mgp"], "application/vnd.osgi.dp": ["dp"], "application/vnd.osgi.subsystem": ["esa"], "application/vnd.palm": ["pdb", "pqa", "oprc"], "application/vnd.pawaafile": ["paw"], "application/vnd.pg.format": ["str"], "application/vnd.pg.osasli": ["ei6"], "application/vnd.picsel": ["efif"], "application/vnd.pmi.widget": ["wg"], "application/vnd.pocketlearn": ["plf"], "application/vnd.powerbuilder6": ["pbd"], "application/vnd.previewsystems.box": ["box"], "application/vnd.proteus.magazine": ["mgz"], "application/vnd.publishare-delta-tree": ["qps"], "application/vnd.pvi.ptid1": ["ptid"], "application/vnd.quark.quarkxpress": ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"], "application/vnd.rar": ["rar"], "application/vnd.realvnc.bed": ["bed"], "application/vnd.recordare.musicxml": ["mxl"], "application/vnd.recordare.musicxml+xml": ["musicxml"], "application/vnd.rig.cryptonote": ["cryptonote"], "application/vnd.rim.cod": ["cod"], "application/vnd.rn-realmedia": ["rm"], "application/vnd.rn-realmedia-vbr": ["rmvb"], "application/vnd.route66.link66+xml": ["link66"], "application/vnd.sailingtracker.track": ["st"], "application/vnd.seemail": ["see"], "application/vnd.sema": ["sema"], "application/vnd.semd": ["semd"], "application/vnd.semf": ["semf"], "application/vnd.shana.informed.formdata": ["ifm"], "application/vnd.shana.informed.formtemplate": ["itp"], "application/vnd.shana.informed.interchange": ["iif"], "application/vnd.shana.informed.package": ["ipk"], "application/vnd.simtech-mindmapper": ["twd", "twds"], "application/vnd.smaf": ["mmf"], "application/vnd.smart.teacher": ["teacher"], "application/vnd.software602.filler.form+xml": ["fo"], "application/vnd.solent.sdkm+xml": ["sdkm", "sdkd"], "application/vnd.spotfire.dxp": ["dxp"], "application/vnd.spotfire.sfs": ["sfs"], "application/vnd.stardivision.calc": ["sdc"], "application/vnd.stardivision.draw": ["sda"], "application/vnd.stardivision.impress": ["sdd"], "application/vnd.stardivision.math": ["smf"], "application/vnd.stardivision.writer": ["sdw", "vor"], "application/vnd.stardivision.writer-global": ["sgl"], "application/vnd.stepmania.package": ["smzip"], "application/vnd.stepmania.stepchart": ["sm"], "application/vnd.sun.wadl+xml": ["wadl"], "application/vnd.sun.xml.calc": ["sxc"], "application/vnd.sun.xml.calc.template": ["stc"], "application/vnd.sun.xml.draw": ["sxd"], "application/vnd.sun.xml.draw.template": ["std"], "application/vnd.sun.xml.impress": ["sxi"], "application/vnd.sun.xml.impress.template": ["sti"], "application/vnd.sun.xml.math": ["sxm"], "application/vnd.sun.xml.writer": ["sxw"], "application/vnd.sun.xml.writer.global": ["sxg"], "application/vnd.sun.xml.writer.template": ["stw"], "application/vnd.sus-calendar": ["sus", "susp"], "application/vnd.svd": ["svd"], "application/vnd.symbian.install": ["sis", "sisx"], "application/vnd.syncml+xml": ["xsm"], "application/vnd.syncml.dm+wbxml": ["bdm"], "application/vnd.syncml.dm+xml": ["xdm"], "application/vnd.syncml.dmddf+xml": ["ddf"], "application/vnd.tao.intent-module-archive": ["tao"], "application/vnd.tcpdump.pcap": ["pcap", "cap", "dmp"], "application/vnd.tmobile-livetv": ["tmo"], "application/vnd.trid.tpt": ["tpt"], "application/vnd.triscape.mxs": ["mxs"], "application/vnd.trueapp": ["tra"], "application/vnd.ufdl": ["ufd", "ufdl"], "application/vnd.uiq.theme": ["utz"], "application/vnd.umajin": ["umj"], "application/vnd.unity": ["unityweb"], "application/vnd.uoml+xml": ["uoml"], "application/vnd.vcx": ["vcx"], "application/vnd.visio": ["vsd", "vst", "vss", "vsw"], "application/vnd.visionary": ["vis"], "application/vnd.vsf": ["vsf"], "application/vnd.wap.wbxml": ["wbxml"], "application/vnd.wap.wmlc": ["wmlc"], "application/vnd.wap.wmlscriptc": ["wmlsc"], "application/vnd.webturbo": ["wtb"], "application/vnd.wolfram.player": ["nbp"], "application/vnd.wordperfect": ["wpd"], "application/vnd.wqd": ["wqd"], "application/vnd.wt.stf": ["stf"], "application/vnd.xara": ["xar"], "application/vnd.xfdl": ["xfdl"], "application/vnd.yamaha.hv-dic": ["hvd"], "application/vnd.yamaha.hv-script": ["hvs"], "application/vnd.yamaha.hv-voice": ["hvp"], "application/vnd.yamaha.openscoreformat": ["osf"], "application/vnd.yamaha.openscoreformat.osfpvg+xml": ["osfpvg"], "application/vnd.yamaha.smaf-audio": ["saf"], "application/vnd.yamaha.smaf-phrase": ["spf"], "application/vnd.yellowriver-custom-menu": ["cmp"], "application/vnd.zul": ["zir", "zirz"], "application/vnd.zzazz.deck+xml": ["zaz"], "application/x-7z-compressed": ["7z"], "application/x-abiword": ["abw"], "application/x-ace-compressed": ["ace"], "application/x-apple-diskimage": ["*dmg"], "application/x-arj": ["arj"], "application/x-authorware-bin": ["aab", "x32", "u32", "vox"], "application/x-authorware-map": ["aam"], "application/x-authorware-seg": ["aas"], "application/x-bcpio": ["bcpio"], "application/x-bdoc": ["*bdoc"], "application/x-bittorrent": ["torrent"], "application/x-blorb": ["blb", "blorb"], "application/x-bzip": ["bz"], "application/x-bzip2": ["bz2", "boz"], "application/x-cbr": ["cbr", "cba", "cbt", "cbz", "cb7"], "application/x-cdlink": ["vcd"], "application/x-cfs-compressed": ["cfs"], "application/x-chat": ["chat"], "application/x-chess-pgn": ["pgn"], "application/x-chrome-extension": ["crx"], "application/x-cocoa": ["cco"], "application/x-conference": ["nsc"], "application/x-cpio": ["cpio"], "application/x-csh": ["csh"], "application/x-debian-package": ["*deb", "udeb"], "application/x-dgc-compressed": ["dgc"], "application/x-director": ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"], "application/x-doom": ["wad"], "application/x-dtbncx+xml": ["ncx"], "application/x-dtbook+xml": ["dtb"], "application/x-dtbresource+xml": ["res"], "application/x-dvi": ["dvi"], "application/x-envoy": ["evy"], "application/x-eva": ["eva"], "application/x-font-bdf": ["bdf"], "application/x-font-ghostscript": ["gsf"], "application/x-font-linux-psf": ["psf"], "application/x-font-pcf": ["pcf"], "application/x-font-snf": ["snf"], "application/x-font-type1": ["pfa", "pfb", "pfm", "afm"], "application/x-freearc": ["arc"], "application/x-futuresplash": ["spl"], "application/x-gca-compressed": ["gca"], "application/x-glulx": ["ulx"], "application/x-gnumeric": ["gnumeric"], "application/x-gramps-xml": ["gramps"], "application/x-gtar": ["gtar"], "application/x-hdf": ["hdf"], "application/x-httpd-php": ["php"], "application/x-install-instructions": ["install"], "application/x-iso9660-image": ["*iso"], "application/x-iwork-keynote-sffkey": ["*key"], "application/x-iwork-numbers-sffnumbers": ["*numbers"], "application/x-iwork-pages-sffpages": ["*pages"], "application/x-java-archive-diff": ["jardiff"], "application/x-java-jnlp-file": ["jnlp"], "application/x-keepass2": ["kdbx"], "application/x-latex": ["latex"], "application/x-lua-bytecode": ["luac"], "application/x-lzh-compressed": ["lzh", "lha"], "application/x-makeself": ["run"], "application/x-mie": ["mie"], "application/x-mobipocket-ebook": ["prc", "mobi"], "application/x-ms-application": ["application"], "application/x-ms-shortcut": ["lnk"], "application/x-ms-wmd": ["wmd"], "application/x-ms-wmz": ["wmz"], "application/x-ms-xbap": ["xbap"], "application/x-msaccess": ["mdb"], "application/x-msbinder": ["obd"], "application/x-mscardfile": ["crd"], "application/x-msclip": ["clp"], "application/x-msdos-program": ["*exe"], "application/x-msdownload": ["*exe", "*dll", "com", "bat", "*msi"], "application/x-msmediaview": ["mvb", "m13", "m14"], "application/x-msmetafile": ["*wmf", "*wmz", "*emf", "emz"], "application/x-msmoney": ["mny"], "application/x-mspublisher": ["pub"], "application/x-msschedule": ["scd"], "application/x-msterminal": ["trm"], "application/x-mswrite": ["wri"], "application/x-netcdf": ["nc", "cdf"], "application/x-ns-proxy-autoconfig": ["pac"], "application/x-nzb": ["nzb"], "application/x-perl": ["pl", "pm"], "application/x-pilot": ["*prc", "*pdb"], "application/x-pkcs12": ["p12", "pfx"], "application/x-pkcs7-certificates": ["p7b", "spc"], "application/x-pkcs7-certreqresp": ["p7r"], "application/x-rar-compressed": ["*rar"], "application/x-redhat-package-manager": ["rpm"], "application/x-research-info-systems": ["ris"], "application/x-sea": ["sea"], "application/x-sh": ["sh"], "application/x-shar": ["shar"], "application/x-shockwave-flash": ["swf"], "application/x-silverlight-app": ["xap"], "application/x-sql": ["sql"], "application/x-stuffit": ["sit"], "application/x-stuffitx": ["sitx"], "application/x-subrip": ["srt"], "application/x-sv4cpio": ["sv4cpio"], "application/x-sv4crc": ["sv4crc"], "application/x-t3vm-image": ["t3"], "application/x-tads": ["gam"], "application/x-tar": ["tar"], "application/x-tcl": ["tcl", "tk"], "application/x-tex": ["tex"], "application/x-tex-tfm": ["tfm"], "application/x-texinfo": ["texinfo", "texi"], "application/x-tgif": ["*obj"], "application/x-ustar": ["ustar"], "application/x-virtualbox-hdd": ["hdd"], "application/x-virtualbox-ova": ["ova"], "application/x-virtualbox-ovf": ["ovf"], "application/x-virtualbox-vbox": ["vbox"], "application/x-virtualbox-vbox-extpack": ["vbox-extpack"], "application/x-virtualbox-vdi": ["vdi"], "application/x-virtualbox-vhd": ["vhd"], "application/x-virtualbox-vmdk": ["vmdk"], "application/x-wais-source": ["src"], "application/x-web-app-manifest+json": ["webapp"], "application/x-x509-ca-cert": ["der", "crt", "pem"], "application/x-xfig": ["fig"], "application/x-xliff+xml": ["*xlf"], "application/x-xpinstall": ["xpi"], "application/x-xz": ["xz"], "application/x-zmachine": ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"], "audio/vnd.dece.audio": ["uva", "uvva"], "audio/vnd.digital-winds": ["eol"], "audio/vnd.dra": ["dra"], "audio/vnd.dts": ["dts"], "audio/vnd.dts.hd": ["dtshd"], "audio/vnd.lucent.voice": ["lvp"], "audio/vnd.ms-playready.media.pya": ["pya"], "audio/vnd.nuera.ecelp4800": ["ecelp4800"], "audio/vnd.nuera.ecelp7470": ["ecelp7470"], "audio/vnd.nuera.ecelp9600": ["ecelp9600"], "audio/vnd.rip": ["rip"], "audio/x-aac": ["aac"], "audio/x-aiff": ["aif", "aiff", "aifc"], "audio/x-caf": ["caf"], "audio/x-flac": ["flac"], "audio/x-m4a": ["*m4a"], "audio/x-matroska": ["mka"], "audio/x-mpegurl": ["m3u"], "audio/x-ms-wax": ["wax"], "audio/x-ms-wma": ["wma"], "audio/x-pn-realaudio": ["ram", "ra"], "audio/x-pn-realaudio-plugin": ["rmp"], "audio/x-realaudio": ["*ra"], "audio/x-wav": ["*wav"], "chemical/x-cdx": ["cdx"], "chemical/x-cif": ["cif"], "chemical/x-cmdf": ["cmdf"], "chemical/x-cml": ["cml"], "chemical/x-csml": ["csml"], "chemical/x-xyz": ["xyz"], "image/prs.btif": ["btif"], "image/prs.pti": ["pti"], "image/vnd.adobe.photoshop": ["psd"], "image/vnd.airzip.accelerator.azv": ["azv"], "image/vnd.dece.graphic": ["uvi", "uvvi", "uvg", "uvvg"], "image/vnd.djvu": ["djvu", "djv"], "image/vnd.dvb.subtitle": ["*sub"], "image/vnd.dwg": ["dwg"], "image/vnd.dxf": ["dxf"], "image/vnd.fastbidsheet": ["fbs"], "image/vnd.fpx": ["fpx"], "image/vnd.fst": ["fst"], "image/vnd.fujixerox.edmics-mmr": ["mmr"], "image/vnd.fujixerox.edmics-rlc": ["rlc"], "image/vnd.microsoft.icon": ["ico"], "image/vnd.ms-dds": ["dds"], "image/vnd.ms-modi": ["mdi"], "image/vnd.ms-photo": ["wdp"], "image/vnd.net-fpx": ["npx"], "image/vnd.pco.b16": ["b16"], "image/vnd.tencent.tap": ["tap"], "image/vnd.valve.source.texture": ["vtf"], "image/vnd.wap.wbmp": ["wbmp"], "image/vnd.xiff": ["xif"], "image/vnd.zbrush.pcx": ["pcx"], "image/x-3ds": ["3ds"], "image/x-cmu-raster": ["ras"], "image/x-cmx": ["cmx"], "image/x-freehand": ["fh", "fhc", "fh4", "fh5", "fh7"], "image/x-icon": ["*ico"], "image/x-jng": ["jng"], "image/x-mrsid-image": ["sid"], "image/x-ms-bmp": ["*bmp"], "image/x-pcx": ["*pcx"], "image/x-pict": ["pic", "pct"], "image/x-portable-anymap": ["pnm"], "image/x-portable-bitmap": ["pbm"], "image/x-portable-graymap": ["pgm"], "image/x-portable-pixmap": ["ppm"], "image/x-rgb": ["rgb"], "image/x-tga": ["tga"], "image/x-xbitmap": ["xbm"], "image/x-xpixmap": ["xpm"], "image/x-xwindowdump": ["xwd"], "message/vnd.wfa.wsc": ["wsc"], "model/vnd.collada+xml": ["dae"], "model/vnd.dwf": ["dwf"], "model/vnd.gdl": ["gdl"], "model/vnd.gtw": ["gtw"], "model/vnd.mts": ["mts"], "model/vnd.opengex": ["ogex"], "model/vnd.parasolid.transmit.binary": ["x_b"], "model/vnd.parasolid.transmit.text": ["x_t"], "model/vnd.sap.vds": ["vds"], "model/vnd.usdz+zip": ["usdz"], "model/vnd.valve.source.compiled-map": ["bsp"], "model/vnd.vtu": ["vtu"], "text/prs.lines.tag": ["dsc"], "text/vnd.curl": ["curl"], "text/vnd.curl.dcurl": ["dcurl"], "text/vnd.curl.mcurl": ["mcurl"], "text/vnd.curl.scurl": ["scurl"], "text/vnd.dvb.subtitle": ["sub"], "text/vnd.fly": ["fly"], "text/vnd.fmi.flexstor": ["flx"], "text/vnd.graphviz": ["gv"], "text/vnd.in3d.3dml": ["3dml"], "text/vnd.in3d.spot": ["spot"], "text/vnd.sun.j2me.app-descriptor": ["jad"], "text/vnd.wap.wml": ["wml"], "text/vnd.wap.wmlscript": ["wmls"], "text/x-asm": ["s", "asm"], "text/x-c": ["c", "cc", "cxx", "cpp", "h", "hh", "dic"], "text/x-component": ["htc"], "text/x-fortran": ["f", "for", "f77", "f90"], "text/x-handlebars-template": ["hbs"], "text/x-java-source": ["java"], "text/x-lua": ["lua"], "text/x-markdown": ["mkd"], "text/x-nfo": ["nfo"], "text/x-opml": ["opml"], "text/x-org": ["*org"], "text/x-pascal": ["p", "pas"], "text/x-processing": ["pde"], "text/x-sass": ["sass"], "text/x-scss": ["scss"], "text/x-setext": ["etx"], "text/x-sfv": ["sfv"], "text/x-suse-ymp": ["ymp"], "text/x-uuencode": ["uu"], "text/x-vcalendar": ["vcs"], "text/x-vcard": ["vcf"], "video/vnd.dece.hd": ["uvh", "uvvh"], "video/vnd.dece.mobile": ["uvm", "uvvm"], "video/vnd.dece.pd": ["uvp", "uvvp"], "video/vnd.dece.sd": ["uvs", "uvvs"], "video/vnd.dece.video": ["uvv", "uvvv"], "video/vnd.dvb.file": ["dvb"], "video/vnd.fvt": ["fvt"], "video/vnd.mpegurl": ["mxu", "m4u"], "video/vnd.ms-playready.media.pyv": ["pyv"], "video/vnd.uvvu.mp4": ["uvu", "uvvu"], "video/vnd.vivo": ["viv"], "video/x-f4v": ["f4v"], "video/x-fli": ["fli"], "video/x-flv": ["flv"], "video/x-m4v": ["m4v"], "video/x-matroska": ["mkv", "mk3d", "mks"], "video/x-mng": ["mng"], "video/x-ms-asf": ["asf", "asx"], "video/x-ms-vob": ["vob"], "video/x-ms-wm": ["wm"], "video/x-ms-wmv": ["wmv"], "video/x-ms-wmx": ["wmx"], "video/x-ms-wvx": ["wvx"], "video/x-msvideo": ["avi"], "video/x-sgi-movie": ["movie"], "video/x-smv": ["smv"], "x-conference/x-cooltalk": ["ice"] };
});

// node_modules/mime/index.js
var require_mime = __commonJS((exports, module) => {
  var Mime = require_Mime();
  module.exports = new Mime(require_standard(), require_other());
});

// node_modules/methods/index.js
var require_methods = __commonJS((exports, module) => {
  var getCurrentNodeMethods = function() {
    return http.METHODS && http.METHODS.map(function lowerCaseMethod(method) {
      return method.toLowerCase();
    });
  };
  var getBasicNodeMethods = function() {
    return [
      "get",
      "post",
      "put",
      "head",
      "delete",
      "options",
      "trace",
      "copy",
      "lock",
      "mkcol",
      "move",
      "purge",
      "propfind",
      "proppatch",
      "unlock",
      "report",
      "mkactivity",
      "checkout",
      "merge",
      "m-search",
      "notify",
      "subscribe",
      "unsubscribe",
      "patch",
      "search",
      "connect"
    ];
  };
  /*!
   * methods
   * Copyright(c) 2013-2014 TJ Holowaychuk
   * Copyright(c) 2015-2016 Douglas Christopher Wilson
   * MIT Licensed
   */
  var http = __require("http");
  module.exports = getCurrentNodeMethods() || getBasicNodeMethods();
});

// node_modules/delayed-stream/lib/delayed_stream.js
var require_delayed_stream = __commonJS((exports, module) => {
  var DelayedStream = function() {
    this.source = null;
    this.dataSize = 0;
    this.maxDataSize = 1024 * 1024;
    this.pauseStream = true;
    this._maxDataSizeExceeded = false;
    this._released = false;
    this._bufferedEvents = [];
  };
  var Stream = __require("stream").Stream;
  var util = __require("util");
  module.exports = DelayedStream;
  util.inherits(DelayedStream, Stream);
  DelayedStream.create = function(source, options) {
    var delayedStream = new this;
    options = options || {};
    for (var option in options) {
      delayedStream[option] = options[option];
    }
    delayedStream.source = source;
    var realEmit = source.emit;
    source.emit = function() {
      delayedStream._handleEmit(arguments);
      return realEmit.apply(source, arguments);
    };
    source.on("error", function() {
    });
    if (delayedStream.pauseStream) {
      source.pause();
    }
    return delayedStream;
  };
  Object.defineProperty(DelayedStream.prototype, "readable", {
    configurable: true,
    enumerable: true,
    get: function() {
      return this.source.readable;
    }
  });
  DelayedStream.prototype.setEncoding = function() {
    return this.source.setEncoding.apply(this.source, arguments);
  };
  DelayedStream.prototype.resume = function() {
    if (!this._released) {
      this.release();
    }
    this.source.resume();
  };
  DelayedStream.prototype.pause = function() {
    this.source.pause();
  };
  DelayedStream.prototype.release = function() {
    this._released = true;
    this._bufferedEvents.forEach(function(args) {
      this.emit.apply(this, args);
    }.bind(this));
    this._bufferedEvents = [];
  };
  DelayedStream.prototype.pipe = function() {
    var r = Stream.prototype.pipe.apply(this, arguments);
    this.resume();
    return r;
  };
  DelayedStream.prototype._handleEmit = function(args) {
    if (this._released) {
      this.emit.apply(this, args);
      return;
    }
    if (args[0] === "data") {
      this.dataSize += args[1].length;
      this._checkIfMaxDataSizeExceeded();
    }
    this._bufferedEvents.push(args);
  };
  DelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {
    if (this._maxDataSizeExceeded) {
      return;
    }
    if (this.dataSize <= this.maxDataSize) {
      return;
    }
    this._maxDataSizeExceeded = true;
    var message = "DelayedStream#maxDataSize of " + this.maxDataSize + " bytes exceeded.";
    this.emit("error", new Error(message));
  };
});

// node_modules/combined-stream/lib/combined_stream.js
var require_combined_stream = __commonJS((exports, module) => {
  var CombinedStream = function() {
    this.writable = false;
    this.readable = true;
    this.dataSize = 0;
    this.maxDataSize = 2 * 1024 * 1024;
    this.pauseStreams = true;
    this._released = false;
    this._streams = [];
    this._currentStream = null;
    this._insideLoop = false;
    this._pendingNext = false;
  };
  var util = __require("util");
  var Stream = __require("stream").Stream;
  var DelayedStream = require_delayed_stream();
  module.exports = CombinedStream;
  util.inherits(CombinedStream, Stream);
  CombinedStream.create = function(options) {
    var combinedStream = new this;
    options = options || {};
    for (var option in options) {
      combinedStream[option] = options[option];
    }
    return combinedStream;
  };
  CombinedStream.isStreamLike = function(stream) {
    return typeof stream !== "function" && typeof stream !== "string" && typeof stream !== "boolean" && typeof stream !== "number" && !Buffer.isBuffer(stream);
  };
  CombinedStream.prototype.append = function(stream) {
    var isStreamLike = CombinedStream.isStreamLike(stream);
    if (isStreamLike) {
      if (!(stream instanceof DelayedStream)) {
        var newStream = DelayedStream.create(stream, {
          maxDataSize: Infinity,
          pauseStream: this.pauseStreams
        });
        stream.on("data", this._checkDataSize.bind(this));
        stream = newStream;
      }
      this._handleErrors(stream);
      if (this.pauseStreams) {
        stream.pause();
      }
    }
    this._streams.push(stream);
    return this;
  };
  CombinedStream.prototype.pipe = function(dest, options) {
    Stream.prototype.pipe.call(this, dest, options);
    this.resume();
    return dest;
  };
  CombinedStream.prototype._getNext = function() {
    this._currentStream = null;
    if (this._insideLoop) {
      this._pendingNext = true;
      return;
    }
    this._insideLoop = true;
    try {
      do {
        this._pendingNext = false;
        this._realGetNext();
      } while (this._pendingNext);
    } finally {
      this._insideLoop = false;
    }
  };
  CombinedStream.prototype._realGetNext = function() {
    var stream = this._streams.shift();
    if (typeof stream == "undefined") {
      this.end();
      return;
    }
    if (typeof stream !== "function") {
      this._pipeNext(stream);
      return;
    }
    var getStream = stream;
    getStream(function(stream2) {
      var isStreamLike = CombinedStream.isStreamLike(stream2);
      if (isStreamLike) {
        stream2.on("data", this._checkDataSize.bind(this));
        this._handleErrors(stream2);
      }
      this._pipeNext(stream2);
    }.bind(this));
  };
  CombinedStream.prototype._pipeNext = function(stream) {
    this._currentStream = stream;
    var isStreamLike = CombinedStream.isStreamLike(stream);
    if (isStreamLike) {
      stream.on("end", this._getNext.bind(this));
      stream.pipe(this, { end: false });
      return;
    }
    var value = stream;
    this.write(value);
    this._getNext();
  };
  CombinedStream.prototype._handleErrors = function(stream) {
    var self2 = this;
    stream.on("error", function(err) {
      self2._emitError(err);
    });
  };
  CombinedStream.prototype.write = function(data) {
    this.emit("data", data);
  };
  CombinedStream.prototype.pause = function() {
    if (!this.pauseStreams) {
      return;
    }
    if (this.pauseStreams && this._currentStream && typeof this._currentStream.pause == "function")
      this._currentStream.pause();
    this.emit("pause");
  };
  CombinedStream.prototype.resume = function() {
    if (!this._released) {
      this._released = true;
      this.writable = true;
      this._getNext();
    }
    if (this.pauseStreams && this._currentStream && typeof this._currentStream.resume == "function")
      this._currentStream.resume();
    this.emit("resume");
  };
  CombinedStream.prototype.end = function() {
    this._reset();
    this.emit("end");
  };
  CombinedStream.prototype.destroy = function() {
    this._reset();
    this.emit("close");
  };
  CombinedStream.prototype._reset = function() {
    this.writable = false;
    this._streams = [];
    this._currentStream = null;
  };
  CombinedStream.prototype._checkDataSize = function() {
    this._updateDataSize();
    if (this.dataSize <= this.maxDataSize) {
      return;
    }
    var message = "DelayedStream#maxDataSize of " + this.maxDataSize + " bytes exceeded.";
    this._emitError(new Error(message));
  };
  CombinedStream.prototype._updateDataSize = function() {
    this.dataSize = 0;
    var self2 = this;
    this._streams.forEach(function(stream) {
      if (!stream.dataSize) {
        return;
      }
      self2.dataSize += stream.dataSize;
    });
    if (this._currentStream && this._currentStream.dataSize) {
      this.dataSize += this._currentStream.dataSize;
    }
  };
  CombinedStream.prototype._emitError = function(err) {
    this._reset();
    this.emit("error", err);
  };
});

// node_modules/mime-db/db.json
var require_db = __commonJS((exports, module) => {
  module.exports = {
    "application/1d-interleaved-parityfec": {
      source: "iana"
    },
    "application/3gpdash-qoe-report+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/3gpp-ims+xml": {
      source: "iana",
      compressible: true
    },
    "application/3gpphal+json": {
      source: "iana",
      compressible: true
    },
    "application/3gpphalforms+json": {
      source: "iana",
      compressible: true
    },
    "application/a2l": {
      source: "iana"
    },
    "application/ace+cbor": {
      source: "iana"
    },
    "application/activemessage": {
      source: "iana"
    },
    "application/activity+json": {
      source: "iana",
      compressible: true
    },
    "application/alto-costmap+json": {
      source: "iana",
      compressible: true
    },
    "application/alto-costmapfilter+json": {
      source: "iana",
      compressible: true
    },
    "application/alto-directory+json": {
      source: "iana",
      compressible: true
    },
    "application/alto-endpointcost+json": {
      source: "iana",
      compressible: true
    },
    "application/alto-endpointcostparams+json": {
      source: "iana",
      compressible: true
    },
    "application/alto-endpointprop+json": {
      source: "iana",
      compressible: true
    },
    "application/alto-endpointpropparams+json": {
      source: "iana",
      compressible: true
    },
    "application/alto-error+json": {
      source: "iana",
      compressible: true
    },
    "application/alto-networkmap+json": {
      source: "iana",
      compressible: true
    },
    "application/alto-networkmapfilter+json": {
      source: "iana",
      compressible: true
    },
    "application/alto-updatestreamcontrol+json": {
      source: "iana",
      compressible: true
    },
    "application/alto-updatestreamparams+json": {
      source: "iana",
      compressible: true
    },
    "application/aml": {
      source: "iana"
    },
    "application/andrew-inset": {
      source: "iana",
      extensions: ["ez"]
    },
    "application/applefile": {
      source: "iana"
    },
    "application/applixware": {
      source: "apache",
      extensions: ["aw"]
    },
    "application/at+jwt": {
      source: "iana"
    },
    "application/atf": {
      source: "iana"
    },
    "application/atfx": {
      source: "iana"
    },
    "application/atom+xml": {
      source: "iana",
      compressible: true,
      extensions: ["atom"]
    },
    "application/atomcat+xml": {
      source: "iana",
      compressible: true,
      extensions: ["atomcat"]
    },
    "application/atomdeleted+xml": {
      source: "iana",
      compressible: true,
      extensions: ["atomdeleted"]
    },
    "application/atomicmail": {
      source: "iana"
    },
    "application/atomsvc+xml": {
      source: "iana",
      compressible: true,
      extensions: ["atomsvc"]
    },
    "application/atsc-dwd+xml": {
      source: "iana",
      compressible: true,
      extensions: ["dwd"]
    },
    "application/atsc-dynamic-event-message": {
      source: "iana"
    },
    "application/atsc-held+xml": {
      source: "iana",
      compressible: true,
      extensions: ["held"]
    },
    "application/atsc-rdt+json": {
      source: "iana",
      compressible: true
    },
    "application/atsc-rsat+xml": {
      source: "iana",
      compressible: true,
      extensions: ["rsat"]
    },
    "application/atxml": {
      source: "iana"
    },
    "application/auth-policy+xml": {
      source: "iana",
      compressible: true
    },
    "application/bacnet-xdd+zip": {
      source: "iana",
      compressible: false
    },
    "application/batch-smtp": {
      source: "iana"
    },
    "application/bdoc": {
      compressible: false,
      extensions: ["bdoc"]
    },
    "application/beep+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/calendar+json": {
      source: "iana",
      compressible: true
    },
    "application/calendar+xml": {
      source: "iana",
      compressible: true,
      extensions: ["xcs"]
    },
    "application/call-completion": {
      source: "iana"
    },
    "application/cals-1840": {
      source: "iana"
    },
    "application/captive+json": {
      source: "iana",
      compressible: true
    },
    "application/cbor": {
      source: "iana"
    },
    "application/cbor-seq": {
      source: "iana"
    },
    "application/cccex": {
      source: "iana"
    },
    "application/ccmp+xml": {
      source: "iana",
      compressible: true
    },
    "application/ccxml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["ccxml"]
    },
    "application/cdfx+xml": {
      source: "iana",
      compressible: true,
      extensions: ["cdfx"]
    },
    "application/cdmi-capability": {
      source: "iana",
      extensions: ["cdmia"]
    },
    "application/cdmi-container": {
      source: "iana",
      extensions: ["cdmic"]
    },
    "application/cdmi-domain": {
      source: "iana",
      extensions: ["cdmid"]
    },
    "application/cdmi-object": {
      source: "iana",
      extensions: ["cdmio"]
    },
    "application/cdmi-queue": {
      source: "iana",
      extensions: ["cdmiq"]
    },
    "application/cdni": {
      source: "iana"
    },
    "application/cea": {
      source: "iana"
    },
    "application/cea-2018+xml": {
      source: "iana",
      compressible: true
    },
    "application/cellml+xml": {
      source: "iana",
      compressible: true
    },
    "application/cfw": {
      source: "iana"
    },
    "application/city+json": {
      source: "iana",
      compressible: true
    },
    "application/clr": {
      source: "iana"
    },
    "application/clue+xml": {
      source: "iana",
      compressible: true
    },
    "application/clue_info+xml": {
      source: "iana",
      compressible: true
    },
    "application/cms": {
      source: "iana"
    },
    "application/cnrp+xml": {
      source: "iana",
      compressible: true
    },
    "application/coap-group+json": {
      source: "iana",
      compressible: true
    },
    "application/coap-payload": {
      source: "iana"
    },
    "application/commonground": {
      source: "iana"
    },
    "application/conference-info+xml": {
      source: "iana",
      compressible: true
    },
    "application/cose": {
      source: "iana"
    },
    "application/cose-key": {
      source: "iana"
    },
    "application/cose-key-set": {
      source: "iana"
    },
    "application/cpl+xml": {
      source: "iana",
      compressible: true,
      extensions: ["cpl"]
    },
    "application/csrattrs": {
      source: "iana"
    },
    "application/csta+xml": {
      source: "iana",
      compressible: true
    },
    "application/cstadata+xml": {
      source: "iana",
      compressible: true
    },
    "application/csvm+json": {
      source: "iana",
      compressible: true
    },
    "application/cu-seeme": {
      source: "apache",
      extensions: ["cu"]
    },
    "application/cwt": {
      source: "iana"
    },
    "application/cybercash": {
      source: "iana"
    },
    "application/dart": {
      compressible: true
    },
    "application/dash+xml": {
      source: "iana",
      compressible: true,
      extensions: ["mpd"]
    },
    "application/dash-patch+xml": {
      source: "iana",
      compressible: true,
      extensions: ["mpp"]
    },
    "application/dashdelta": {
      source: "iana"
    },
    "application/davmount+xml": {
      source: "iana",
      compressible: true,
      extensions: ["davmount"]
    },
    "application/dca-rft": {
      source: "iana"
    },
    "application/dcd": {
      source: "iana"
    },
    "application/dec-dx": {
      source: "iana"
    },
    "application/dialog-info+xml": {
      source: "iana",
      compressible: true
    },
    "application/dicom": {
      source: "iana"
    },
    "application/dicom+json": {
      source: "iana",
      compressible: true
    },
    "application/dicom+xml": {
      source: "iana",
      compressible: true
    },
    "application/dii": {
      source: "iana"
    },
    "application/dit": {
      source: "iana"
    },
    "application/dns": {
      source: "iana"
    },
    "application/dns+json": {
      source: "iana",
      compressible: true
    },
    "application/dns-message": {
      source: "iana"
    },
    "application/docbook+xml": {
      source: "apache",
      compressible: true,
      extensions: ["dbk"]
    },
    "application/dots+cbor": {
      source: "iana"
    },
    "application/dskpp+xml": {
      source: "iana",
      compressible: true
    },
    "application/dssc+der": {
      source: "iana",
      extensions: ["dssc"]
    },
    "application/dssc+xml": {
      source: "iana",
      compressible: true,
      extensions: ["xdssc"]
    },
    "application/dvcs": {
      source: "iana"
    },
    "application/ecmascript": {
      source: "iana",
      compressible: true,
      extensions: ["es", "ecma"]
    },
    "application/edi-consent": {
      source: "iana"
    },
    "application/edi-x12": {
      source: "iana",
      compressible: false
    },
    "application/edifact": {
      source: "iana",
      compressible: false
    },
    "application/efi": {
      source: "iana"
    },
    "application/elm+json": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/elm+xml": {
      source: "iana",
      compressible: true
    },
    "application/emergencycalldata.cap+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/emergencycalldata.comment+xml": {
      source: "iana",
      compressible: true
    },
    "application/emergencycalldata.control+xml": {
      source: "iana",
      compressible: true
    },
    "application/emergencycalldata.deviceinfo+xml": {
      source: "iana",
      compressible: true
    },
    "application/emergencycalldata.ecall.msd": {
      source: "iana"
    },
    "application/emergencycalldata.providerinfo+xml": {
      source: "iana",
      compressible: true
    },
    "application/emergencycalldata.serviceinfo+xml": {
      source: "iana",
      compressible: true
    },
    "application/emergencycalldata.subscriberinfo+xml": {
      source: "iana",
      compressible: true
    },
    "application/emergencycalldata.veds+xml": {
      source: "iana",
      compressible: true
    },
    "application/emma+xml": {
      source: "iana",
      compressible: true,
      extensions: ["emma"]
    },
    "application/emotionml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["emotionml"]
    },
    "application/encaprtp": {
      source: "iana"
    },
    "application/epp+xml": {
      source: "iana",
      compressible: true
    },
    "application/epub+zip": {
      source: "iana",
      compressible: false,
      extensions: ["epub"]
    },
    "application/eshop": {
      source: "iana"
    },
    "application/exi": {
      source: "iana",
      extensions: ["exi"]
    },
    "application/expect-ct-report+json": {
      source: "iana",
      compressible: true
    },
    "application/express": {
      source: "iana",
      extensions: ["exp"]
    },
    "application/fastinfoset": {
      source: "iana"
    },
    "application/fastsoap": {
      source: "iana"
    },
    "application/fdt+xml": {
      source: "iana",
      compressible: true,
      extensions: ["fdt"]
    },
    "application/fhir+json": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/fhir+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/fido.trusted-apps+json": {
      compressible: true
    },
    "application/fits": {
      source: "iana"
    },
    "application/flexfec": {
      source: "iana"
    },
    "application/font-sfnt": {
      source: "iana"
    },
    "application/font-tdpfr": {
      source: "iana",
      extensions: ["pfr"]
    },
    "application/font-woff": {
      source: "iana",
      compressible: false
    },
    "application/framework-attributes+xml": {
      source: "iana",
      compressible: true
    },
    "application/geo+json": {
      source: "iana",
      compressible: true,
      extensions: ["geojson"]
    },
    "application/geo+json-seq": {
      source: "iana"
    },
    "application/geopackage+sqlite3": {
      source: "iana"
    },
    "application/geoxacml+xml": {
      source: "iana",
      compressible: true
    },
    "application/gltf-buffer": {
      source: "iana"
    },
    "application/gml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["gml"]
    },
    "application/gpx+xml": {
      source: "apache",
      compressible: true,
      extensions: ["gpx"]
    },
    "application/gxf": {
      source: "apache",
      extensions: ["gxf"]
    },
    "application/gzip": {
      source: "iana",
      compressible: false,
      extensions: ["gz"]
    },
    "application/h224": {
      source: "iana"
    },
    "application/held+xml": {
      source: "iana",
      compressible: true
    },
    "application/hjson": {
      extensions: ["hjson"]
    },
    "application/http": {
      source: "iana"
    },
    "application/hyperstudio": {
      source: "iana",
      extensions: ["stk"]
    },
    "application/ibe-key-request+xml": {
      source: "iana",
      compressible: true
    },
    "application/ibe-pkg-reply+xml": {
      source: "iana",
      compressible: true
    },
    "application/ibe-pp-data": {
      source: "iana"
    },
    "application/iges": {
      source: "iana"
    },
    "application/im-iscomposing+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/index": {
      source: "iana"
    },
    "application/index.cmd": {
      source: "iana"
    },
    "application/index.obj": {
      source: "iana"
    },
    "application/index.response": {
      source: "iana"
    },
    "application/index.vnd": {
      source: "iana"
    },
    "application/inkml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["ink", "inkml"]
    },
    "application/iotp": {
      source: "iana"
    },
    "application/ipfix": {
      source: "iana",
      extensions: ["ipfix"]
    },
    "application/ipp": {
      source: "iana"
    },
    "application/isup": {
      source: "iana"
    },
    "application/its+xml": {
      source: "iana",
      compressible: true,
      extensions: ["its"]
    },
    "application/java-archive": {
      source: "apache",
      compressible: false,
      extensions: ["jar", "war", "ear"]
    },
    "application/java-serialized-object": {
      source: "apache",
      compressible: false,
      extensions: ["ser"]
    },
    "application/java-vm": {
      source: "apache",
      compressible: false,
      extensions: ["class"]
    },
    "application/javascript": {
      source: "iana",
      charset: "UTF-8",
      compressible: true,
      extensions: ["js", "mjs"]
    },
    "application/jf2feed+json": {
      source: "iana",
      compressible: true
    },
    "application/jose": {
      source: "iana"
    },
    "application/jose+json": {
      source: "iana",
      compressible: true
    },
    "application/jrd+json": {
      source: "iana",
      compressible: true
    },
    "application/jscalendar+json": {
      source: "iana",
      compressible: true
    },
    "application/json": {
      source: "iana",
      charset: "UTF-8",
      compressible: true,
      extensions: ["json", "map"]
    },
    "application/json-patch+json": {
      source: "iana",
      compressible: true
    },
    "application/json-seq": {
      source: "iana"
    },
    "application/json5": {
      extensions: ["json5"]
    },
    "application/jsonml+json": {
      source: "apache",
      compressible: true,
      extensions: ["jsonml"]
    },
    "application/jwk+json": {
      source: "iana",
      compressible: true
    },
    "application/jwk-set+json": {
      source: "iana",
      compressible: true
    },
    "application/jwt": {
      source: "iana"
    },
    "application/kpml-request+xml": {
      source: "iana",
      compressible: true
    },
    "application/kpml-response+xml": {
      source: "iana",
      compressible: true
    },
    "application/ld+json": {
      source: "iana",
      compressible: true,
      extensions: ["jsonld"]
    },
    "application/lgr+xml": {
      source: "iana",
      compressible: true,
      extensions: ["lgr"]
    },
    "application/link-format": {
      source: "iana"
    },
    "application/load-control+xml": {
      source: "iana",
      compressible: true
    },
    "application/lost+xml": {
      source: "iana",
      compressible: true,
      extensions: ["lostxml"]
    },
    "application/lostsync+xml": {
      source: "iana",
      compressible: true
    },
    "application/lpf+zip": {
      source: "iana",
      compressible: false
    },
    "application/lxf": {
      source: "iana"
    },
    "application/mac-binhex40": {
      source: "iana",
      extensions: ["hqx"]
    },
    "application/mac-compactpro": {
      source: "apache",
      extensions: ["cpt"]
    },
    "application/macwriteii": {
      source: "iana"
    },
    "application/mads+xml": {
      source: "iana",
      compressible: true,
      extensions: ["mads"]
    },
    "application/manifest+json": {
      source: "iana",
      charset: "UTF-8",
      compressible: true,
      extensions: ["webmanifest"]
    },
    "application/marc": {
      source: "iana",
      extensions: ["mrc"]
    },
    "application/marcxml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["mrcx"]
    },
    "application/mathematica": {
      source: "iana",
      extensions: ["ma", "nb", "mb"]
    },
    "application/mathml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["mathml"]
    },
    "application/mathml-content+xml": {
      source: "iana",
      compressible: true
    },
    "application/mathml-presentation+xml": {
      source: "iana",
      compressible: true
    },
    "application/mbms-associated-procedure-description+xml": {
      source: "iana",
      compressible: true
    },
    "application/mbms-deregister+xml": {
      source: "iana",
      compressible: true
    },
    "application/mbms-envelope+xml": {
      source: "iana",
      compressible: true
    },
    "application/mbms-msk+xml": {
      source: "iana",
      compressible: true
    },
    "application/mbms-msk-response+xml": {
      source: "iana",
      compressible: true
    },
    "application/mbms-protection-description+xml": {
      source: "iana",
      compressible: true
    },
    "application/mbms-reception-report+xml": {
      source: "iana",
      compressible: true
    },
    "application/mbms-register+xml": {
      source: "iana",
      compressible: true
    },
    "application/mbms-register-response+xml": {
      source: "iana",
      compressible: true
    },
    "application/mbms-schedule+xml": {
      source: "iana",
      compressible: true
    },
    "application/mbms-user-service-description+xml": {
      source: "iana",
      compressible: true
    },
    "application/mbox": {
      source: "iana",
      extensions: ["mbox"]
    },
    "application/media-policy-dataset+xml": {
      source: "iana",
      compressible: true,
      extensions: ["mpf"]
    },
    "application/media_control+xml": {
      source: "iana",
      compressible: true
    },
    "application/mediaservercontrol+xml": {
      source: "iana",
      compressible: true,
      extensions: ["mscml"]
    },
    "application/merge-patch+json": {
      source: "iana",
      compressible: true
    },
    "application/metalink+xml": {
      source: "apache",
      compressible: true,
      extensions: ["metalink"]
    },
    "application/metalink4+xml": {
      source: "iana",
      compressible: true,
      extensions: ["meta4"]
    },
    "application/mets+xml": {
      source: "iana",
      compressible: true,
      extensions: ["mets"]
    },
    "application/mf4": {
      source: "iana"
    },
    "application/mikey": {
      source: "iana"
    },
    "application/mipc": {
      source: "iana"
    },
    "application/missing-blocks+cbor-seq": {
      source: "iana"
    },
    "application/mmt-aei+xml": {
      source: "iana",
      compressible: true,
      extensions: ["maei"]
    },
    "application/mmt-usd+xml": {
      source: "iana",
      compressible: true,
      extensions: ["musd"]
    },
    "application/mods+xml": {
      source: "iana",
      compressible: true,
      extensions: ["mods"]
    },
    "application/moss-keys": {
      source: "iana"
    },
    "application/moss-signature": {
      source: "iana"
    },
    "application/mosskey-data": {
      source: "iana"
    },
    "application/mosskey-request": {
      source: "iana"
    },
    "application/mp21": {
      source: "iana",
      extensions: ["m21", "mp21"]
    },
    "application/mp4": {
      source: "iana",
      extensions: ["mp4s", "m4p"]
    },
    "application/mpeg4-generic": {
      source: "iana"
    },
    "application/mpeg4-iod": {
      source: "iana"
    },
    "application/mpeg4-iod-xmt": {
      source: "iana"
    },
    "application/mrb-consumer+xml": {
      source: "iana",
      compressible: true
    },
    "application/mrb-publish+xml": {
      source: "iana",
      compressible: true
    },
    "application/msc-ivr+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/msc-mixer+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/msword": {
      source: "iana",
      compressible: false,
      extensions: ["doc", "dot"]
    },
    "application/mud+json": {
      source: "iana",
      compressible: true
    },
    "application/multipart-core": {
      source: "iana"
    },
    "application/mxf": {
      source: "iana",
      extensions: ["mxf"]
    },
    "application/n-quads": {
      source: "iana",
      extensions: ["nq"]
    },
    "application/n-triples": {
      source: "iana",
      extensions: ["nt"]
    },
    "application/nasdata": {
      source: "iana"
    },
    "application/news-checkgroups": {
      source: "iana",
      charset: "US-ASCII"
    },
    "application/news-groupinfo": {
      source: "iana",
      charset: "US-ASCII"
    },
    "application/news-transmission": {
      source: "iana"
    },
    "application/nlsml+xml": {
      source: "iana",
      compressible: true
    },
    "application/node": {
      source: "iana",
      extensions: ["cjs"]
    },
    "application/nss": {
      source: "iana"
    },
    "application/oauth-authz-req+jwt": {
      source: "iana"
    },
    "application/oblivious-dns-message": {
      source: "iana"
    },
    "application/ocsp-request": {
      source: "iana"
    },
    "application/ocsp-response": {
      source: "iana"
    },
    "application/octet-stream": {
      source: "iana",
      compressible: false,
      extensions: ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"]
    },
    "application/oda": {
      source: "iana",
      extensions: ["oda"]
    },
    "application/odm+xml": {
      source: "iana",
      compressible: true
    },
    "application/odx": {
      source: "iana"
    },
    "application/oebps-package+xml": {
      source: "iana",
      compressible: true,
      extensions: ["opf"]
    },
    "application/ogg": {
      source: "iana",
      compressible: false,
      extensions: ["ogx"]
    },
    "application/omdoc+xml": {
      source: "apache",
      compressible: true,
      extensions: ["omdoc"]
    },
    "application/onenote": {
      source: "apache",
      extensions: ["onetoc", "onetoc2", "onetmp", "onepkg"]
    },
    "application/opc-nodeset+xml": {
      source: "iana",
      compressible: true
    },
    "application/oscore": {
      source: "iana"
    },
    "application/oxps": {
      source: "iana",
      extensions: ["oxps"]
    },
    "application/p21": {
      source: "iana"
    },
    "application/p21+zip": {
      source: "iana",
      compressible: false
    },
    "application/p2p-overlay+xml": {
      source: "iana",
      compressible: true,
      extensions: ["relo"]
    },
    "application/parityfec": {
      source: "iana"
    },
    "application/passport": {
      source: "iana"
    },
    "application/patch-ops-error+xml": {
      source: "iana",
      compressible: true,
      extensions: ["xer"]
    },
    "application/pdf": {
      source: "iana",
      compressible: false,
      extensions: ["pdf"]
    },
    "application/pdx": {
      source: "iana"
    },
    "application/pem-certificate-chain": {
      source: "iana"
    },
    "application/pgp-encrypted": {
      source: "iana",
      compressible: false,
      extensions: ["pgp"]
    },
    "application/pgp-keys": {
      source: "iana",
      extensions: ["asc"]
    },
    "application/pgp-signature": {
      source: "iana",
      extensions: ["asc", "sig"]
    },
    "application/pics-rules": {
      source: "apache",
      extensions: ["prf"]
    },
    "application/pidf+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/pidf-diff+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/pkcs10": {
      source: "iana",
      extensions: ["p10"]
    },
    "application/pkcs12": {
      source: "iana"
    },
    "application/pkcs7-mime": {
      source: "iana",
      extensions: ["p7m", "p7c"]
    },
    "application/pkcs7-signature": {
      source: "iana",
      extensions: ["p7s"]
    },
    "application/pkcs8": {
      source: "iana",
      extensions: ["p8"]
    },
    "application/pkcs8-encrypted": {
      source: "iana"
    },
    "application/pkix-attr-cert": {
      source: "iana",
      extensions: ["ac"]
    },
    "application/pkix-cert": {
      source: "iana",
      extensions: ["cer"]
    },
    "application/pkix-crl": {
      source: "iana",
      extensions: ["crl"]
    },
    "application/pkix-pkipath": {
      source: "iana",
      extensions: ["pkipath"]
    },
    "application/pkixcmp": {
      source: "iana",
      extensions: ["pki"]
    },
    "application/pls+xml": {
      source: "iana",
      compressible: true,
      extensions: ["pls"]
    },
    "application/poc-settings+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/postscript": {
      source: "iana",
      compressible: true,
      extensions: ["ai", "eps", "ps"]
    },
    "application/ppsp-tracker+json": {
      source: "iana",
      compressible: true
    },
    "application/problem+json": {
      source: "iana",
      compressible: true
    },
    "application/problem+xml": {
      source: "iana",
      compressible: true
    },
    "application/provenance+xml": {
      source: "iana",
      compressible: true,
      extensions: ["provx"]
    },
    "application/prs.alvestrand.titrax-sheet": {
      source: "iana"
    },
    "application/prs.cww": {
      source: "iana",
      extensions: ["cww"]
    },
    "application/prs.cyn": {
      source: "iana",
      charset: "7-BIT"
    },
    "application/prs.hpub+zip": {
      source: "iana",
      compressible: false
    },
    "application/prs.nprend": {
      source: "iana"
    },
    "application/prs.plucker": {
      source: "iana"
    },
    "application/prs.rdf-xml-crypt": {
      source: "iana"
    },
    "application/prs.xsf+xml": {
      source: "iana",
      compressible: true
    },
    "application/pskc+xml": {
      source: "iana",
      compressible: true,
      extensions: ["pskcxml"]
    },
    "application/pvd+json": {
      source: "iana",
      compressible: true
    },
    "application/qsig": {
      source: "iana"
    },
    "application/raml+yaml": {
      compressible: true,
      extensions: ["raml"]
    },
    "application/raptorfec": {
      source: "iana"
    },
    "application/rdap+json": {
      source: "iana",
      compressible: true
    },
    "application/rdf+xml": {
      source: "iana",
      compressible: true,
      extensions: ["rdf", "owl"]
    },
    "application/reginfo+xml": {
      source: "iana",
      compressible: true,
      extensions: ["rif"]
    },
    "application/relax-ng-compact-syntax": {
      source: "iana",
      extensions: ["rnc"]
    },
    "application/remote-printing": {
      source: "iana"
    },
    "application/reputon+json": {
      source: "iana",
      compressible: true
    },
    "application/resource-lists+xml": {
      source: "iana",
      compressible: true,
      extensions: ["rl"]
    },
    "application/resource-lists-diff+xml": {
      source: "iana",
      compressible: true,
      extensions: ["rld"]
    },
    "application/rfc+xml": {
      source: "iana",
      compressible: true
    },
    "application/riscos": {
      source: "iana"
    },
    "application/rlmi+xml": {
      source: "iana",
      compressible: true
    },
    "application/rls-services+xml": {
      source: "iana",
      compressible: true,
      extensions: ["rs"]
    },
    "application/route-apd+xml": {
      source: "iana",
      compressible: true,
      extensions: ["rapd"]
    },
    "application/route-s-tsid+xml": {
      source: "iana",
      compressible: true,
      extensions: ["sls"]
    },
    "application/route-usd+xml": {
      source: "iana",
      compressible: true,
      extensions: ["rusd"]
    },
    "application/rpki-ghostbusters": {
      source: "iana",
      extensions: ["gbr"]
    },
    "application/rpki-manifest": {
      source: "iana",
      extensions: ["mft"]
    },
    "application/rpki-publication": {
      source: "iana"
    },
    "application/rpki-roa": {
      source: "iana",
      extensions: ["roa"]
    },
    "application/rpki-updown": {
      source: "iana"
    },
    "application/rsd+xml": {
      source: "apache",
      compressible: true,
      extensions: ["rsd"]
    },
    "application/rss+xml": {
      source: "apache",
      compressible: true,
      extensions: ["rss"]
    },
    "application/rtf": {
      source: "iana",
      compressible: true,
      extensions: ["rtf"]
    },
    "application/rtploopback": {
      source: "iana"
    },
    "application/rtx": {
      source: "iana"
    },
    "application/samlassertion+xml": {
      source: "iana",
      compressible: true
    },
    "application/samlmetadata+xml": {
      source: "iana",
      compressible: true
    },
    "application/sarif+json": {
      source: "iana",
      compressible: true
    },
    "application/sarif-external-properties+json": {
      source: "iana",
      compressible: true
    },
    "application/sbe": {
      source: "iana"
    },
    "application/sbml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["sbml"]
    },
    "application/scaip+xml": {
      source: "iana",
      compressible: true
    },
    "application/scim+json": {
      source: "iana",
      compressible: true
    },
    "application/scvp-cv-request": {
      source: "iana",
      extensions: ["scq"]
    },
    "application/scvp-cv-response": {
      source: "iana",
      extensions: ["scs"]
    },
    "application/scvp-vp-request": {
      source: "iana",
      extensions: ["spq"]
    },
    "application/scvp-vp-response": {
      source: "iana",
      extensions: ["spp"]
    },
    "application/sdp": {
      source: "iana",
      extensions: ["sdp"]
    },
    "application/secevent+jwt": {
      source: "iana"
    },
    "application/senml+cbor": {
      source: "iana"
    },
    "application/senml+json": {
      source: "iana",
      compressible: true
    },
    "application/senml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["senmlx"]
    },
    "application/senml-etch+cbor": {
      source: "iana"
    },
    "application/senml-etch+json": {
      source: "iana",
      compressible: true
    },
    "application/senml-exi": {
      source: "iana"
    },
    "application/sensml+cbor": {
      source: "iana"
    },
    "application/sensml+json": {
      source: "iana",
      compressible: true
    },
    "application/sensml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["sensmlx"]
    },
    "application/sensml-exi": {
      source: "iana"
    },
    "application/sep+xml": {
      source: "iana",
      compressible: true
    },
    "application/sep-exi": {
      source: "iana"
    },
    "application/session-info": {
      source: "iana"
    },
    "application/set-payment": {
      source: "iana"
    },
    "application/set-payment-initiation": {
      source: "iana",
      extensions: ["setpay"]
    },
    "application/set-registration": {
      source: "iana"
    },
    "application/set-registration-initiation": {
      source: "iana",
      extensions: ["setreg"]
    },
    "application/sgml": {
      source: "iana"
    },
    "application/sgml-open-catalog": {
      source: "iana"
    },
    "application/shf+xml": {
      source: "iana",
      compressible: true,
      extensions: ["shf"]
    },
    "application/sieve": {
      source: "iana",
      extensions: ["siv", "sieve"]
    },
    "application/simple-filter+xml": {
      source: "iana",
      compressible: true
    },
    "application/simple-message-summary": {
      source: "iana"
    },
    "application/simplesymbolcontainer": {
      source: "iana"
    },
    "application/sipc": {
      source: "iana"
    },
    "application/slate": {
      source: "iana"
    },
    "application/smil": {
      source: "iana"
    },
    "application/smil+xml": {
      source: "iana",
      compressible: true,
      extensions: ["smi", "smil"]
    },
    "application/smpte336m": {
      source: "iana"
    },
    "application/soap+fastinfoset": {
      source: "iana"
    },
    "application/soap+xml": {
      source: "iana",
      compressible: true
    },
    "application/sparql-query": {
      source: "iana",
      extensions: ["rq"]
    },
    "application/sparql-results+xml": {
      source: "iana",
      compressible: true,
      extensions: ["srx"]
    },
    "application/spdx+json": {
      source: "iana",
      compressible: true
    },
    "application/spirits-event+xml": {
      source: "iana",
      compressible: true
    },
    "application/sql": {
      source: "iana"
    },
    "application/srgs": {
      source: "iana",
      extensions: ["gram"]
    },
    "application/srgs+xml": {
      source: "iana",
      compressible: true,
      extensions: ["grxml"]
    },
    "application/sru+xml": {
      source: "iana",
      compressible: true,
      extensions: ["sru"]
    },
    "application/ssdl+xml": {
      source: "apache",
      compressible: true,
      extensions: ["ssdl"]
    },
    "application/ssml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["ssml"]
    },
    "application/stix+json": {
      source: "iana",
      compressible: true
    },
    "application/swid+xml": {
      source: "iana",
      compressible: true,
      extensions: ["swidtag"]
    },
    "application/tamp-apex-update": {
      source: "iana"
    },
    "application/tamp-apex-update-confirm": {
      source: "iana"
    },
    "application/tamp-community-update": {
      source: "iana"
    },
    "application/tamp-community-update-confirm": {
      source: "iana"
    },
    "application/tamp-error": {
      source: "iana"
    },
    "application/tamp-sequence-adjust": {
      source: "iana"
    },
    "application/tamp-sequence-adjust-confirm": {
      source: "iana"
    },
    "application/tamp-status-query": {
      source: "iana"
    },
    "application/tamp-status-response": {
      source: "iana"
    },
    "application/tamp-update": {
      source: "iana"
    },
    "application/tamp-update-confirm": {
      source: "iana"
    },
    "application/tar": {
      compressible: true
    },
    "application/taxii+json": {
      source: "iana",
      compressible: true
    },
    "application/td+json": {
      source: "iana",
      compressible: true
    },
    "application/tei+xml": {
      source: "iana",
      compressible: true,
      extensions: ["tei", "teicorpus"]
    },
    "application/tetra_isi": {
      source: "iana"
    },
    "application/thraud+xml": {
      source: "iana",
      compressible: true,
      extensions: ["tfi"]
    },
    "application/timestamp-query": {
      source: "iana"
    },
    "application/timestamp-reply": {
      source: "iana"
    },
    "application/timestamped-data": {
      source: "iana",
      extensions: ["tsd"]
    },
    "application/tlsrpt+gzip": {
      source: "iana"
    },
    "application/tlsrpt+json": {
      source: "iana",
      compressible: true
    },
    "application/tnauthlist": {
      source: "iana"
    },
    "application/token-introspection+jwt": {
      source: "iana"
    },
    "application/toml": {
      compressible: true,
      extensions: ["toml"]
    },
    "application/trickle-ice-sdpfrag": {
      source: "iana"
    },
    "application/trig": {
      source: "iana",
      extensions: ["trig"]
    },
    "application/ttml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["ttml"]
    },
    "application/tve-trigger": {
      source: "iana"
    },
    "application/tzif": {
      source: "iana"
    },
    "application/tzif-leap": {
      source: "iana"
    },
    "application/ubjson": {
      compressible: false,
      extensions: ["ubj"]
    },
    "application/ulpfec": {
      source: "iana"
    },
    "application/urc-grpsheet+xml": {
      source: "iana",
      compressible: true
    },
    "application/urc-ressheet+xml": {
      source: "iana",
      compressible: true,
      extensions: ["rsheet"]
    },
    "application/urc-targetdesc+xml": {
      source: "iana",
      compressible: true,
      extensions: ["td"]
    },
    "application/urc-uisocketdesc+xml": {
      source: "iana",
      compressible: true
    },
    "application/vcard+json": {
      source: "iana",
      compressible: true
    },
    "application/vcard+xml": {
      source: "iana",
      compressible: true
    },
    "application/vemmi": {
      source: "iana"
    },
    "application/vividence.scriptfile": {
      source: "apache"
    },
    "application/vnd.1000minds.decision-model+xml": {
      source: "iana",
      compressible: true,
      extensions: ["1km"]
    },
    "application/vnd.3gpp-prose+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp-prose-pc3ch+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp-v2x-local-service-information": {
      source: "iana"
    },
    "application/vnd.3gpp.5gnas": {
      source: "iana"
    },
    "application/vnd.3gpp.access-transfer-events+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.bsf+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.gmop+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.gtpc": {
      source: "iana"
    },
    "application/vnd.3gpp.interworking-data": {
      source: "iana"
    },
    "application/vnd.3gpp.lpp": {
      source: "iana"
    },
    "application/vnd.3gpp.mc-signalling-ear": {
      source: "iana"
    },
    "application/vnd.3gpp.mcdata-affiliation-command+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcdata-info+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcdata-payload": {
      source: "iana"
    },
    "application/vnd.3gpp.mcdata-service-config+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcdata-signalling": {
      source: "iana"
    },
    "application/vnd.3gpp.mcdata-ue-config+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcdata-user-profile+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcptt-affiliation-command+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcptt-floor-request+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcptt-info+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcptt-location-info+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcptt-mbms-usage-info+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcptt-service-config+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcptt-signed+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcptt-ue-config+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcptt-ue-init-config+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcptt-user-profile+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcvideo-affiliation-command+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcvideo-affiliation-info+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcvideo-info+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcvideo-location-info+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcvideo-mbms-usage-info+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcvideo-service-config+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcvideo-transmission-request+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcvideo-ue-config+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mcvideo-user-profile+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.mid-call+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.ngap": {
      source: "iana"
    },
    "application/vnd.3gpp.pfcp": {
      source: "iana"
    },
    "application/vnd.3gpp.pic-bw-large": {
      source: "iana",
      extensions: ["plb"]
    },
    "application/vnd.3gpp.pic-bw-small": {
      source: "iana",
      extensions: ["psb"]
    },
    "application/vnd.3gpp.pic-bw-var": {
      source: "iana",
      extensions: ["pvb"]
    },
    "application/vnd.3gpp.s1ap": {
      source: "iana"
    },
    "application/vnd.3gpp.sms": {
      source: "iana"
    },
    "application/vnd.3gpp.sms+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.srvcc-ext+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.srvcc-info+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.state-and-event-info+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp.ussd+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp2.bcmcsinfo+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.3gpp2.sms": {
      source: "iana"
    },
    "application/vnd.3gpp2.tcap": {
      source: "iana",
      extensions: ["tcap"]
    },
    "application/vnd.3lightssoftware.imagescal": {
      source: "iana"
    },
    "application/vnd.3m.post-it-notes": {
      source: "iana",
      extensions: ["pwn"]
    },
    "application/vnd.accpac.simply.aso": {
      source: "iana",
      extensions: ["aso"]
    },
    "application/vnd.accpac.simply.imp": {
      source: "iana",
      extensions: ["imp"]
    },
    "application/vnd.acucobol": {
      source: "iana",
      extensions: ["acu"]
    },
    "application/vnd.acucorp": {
      source: "iana",
      extensions: ["atc", "acutc"]
    },
    "application/vnd.adobe.air-application-installer-package+zip": {
      source: "apache",
      compressible: false,
      extensions: ["air"]
    },
    "application/vnd.adobe.flash.movie": {
      source: "iana"
    },
    "application/vnd.adobe.formscentral.fcdt": {
      source: "iana",
      extensions: ["fcdt"]
    },
    "application/vnd.adobe.fxp": {
      source: "iana",
      extensions: ["fxp", "fxpl"]
    },
    "application/vnd.adobe.partial-upload": {
      source: "iana"
    },
    "application/vnd.adobe.xdp+xml": {
      source: "iana",
      compressible: true,
      extensions: ["xdp"]
    },
    "application/vnd.adobe.xfdf": {
      source: "iana",
      extensions: ["xfdf"]
    },
    "application/vnd.aether.imp": {
      source: "iana"
    },
    "application/vnd.afpc.afplinedata": {
      source: "iana"
    },
    "application/vnd.afpc.afplinedata-pagedef": {
      source: "iana"
    },
    "application/vnd.afpc.cmoca-cmresource": {
      source: "iana"
    },
    "application/vnd.afpc.foca-charset": {
      source: "iana"
    },
    "application/vnd.afpc.foca-codedfont": {
      source: "iana"
    },
    "application/vnd.afpc.foca-codepage": {
      source: "iana"
    },
    "application/vnd.afpc.modca": {
      source: "iana"
    },
    "application/vnd.afpc.modca-cmtable": {
      source: "iana"
    },
    "application/vnd.afpc.modca-formdef": {
      source: "iana"
    },
    "application/vnd.afpc.modca-mediummap": {
      source: "iana"
    },
    "application/vnd.afpc.modca-objectcontainer": {
      source: "iana"
    },
    "application/vnd.afpc.modca-overlay": {
      source: "iana"
    },
    "application/vnd.afpc.modca-pagesegment": {
      source: "iana"
    },
    "application/vnd.age": {
      source: "iana",
      extensions: ["age"]
    },
    "application/vnd.ah-barcode": {
      source: "iana"
    },
    "application/vnd.ahead.space": {
      source: "iana",
      extensions: ["ahead"]
    },
    "application/vnd.airzip.filesecure.azf": {
      source: "iana",
      extensions: ["azf"]
    },
    "application/vnd.airzip.filesecure.azs": {
      source: "iana",
      extensions: ["azs"]
    },
    "application/vnd.amadeus+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.amazon.ebook": {
      source: "apache",
      extensions: ["azw"]
    },
    "application/vnd.amazon.mobi8-ebook": {
      source: "iana"
    },
    "application/vnd.americandynamics.acc": {
      source: "iana",
      extensions: ["acc"]
    },
    "application/vnd.amiga.ami": {
      source: "iana",
      extensions: ["ami"]
    },
    "application/vnd.amundsen.maze+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.android.ota": {
      source: "iana"
    },
    "application/vnd.android.package-archive": {
      source: "apache",
      compressible: false,
      extensions: ["apk"]
    },
    "application/vnd.anki": {
      source: "iana"
    },
    "application/vnd.anser-web-certificate-issue-initiation": {
      source: "iana",
      extensions: ["cii"]
    },
    "application/vnd.anser-web-funds-transfer-initiation": {
      source: "apache",
      extensions: ["fti"]
    },
    "application/vnd.antix.game-component": {
      source: "iana",
      extensions: ["atx"]
    },
    "application/vnd.apache.arrow.file": {
      source: "iana"
    },
    "application/vnd.apache.arrow.stream": {
      source: "iana"
    },
    "application/vnd.apache.thrift.binary": {
      source: "iana"
    },
    "application/vnd.apache.thrift.compact": {
      source: "iana"
    },
    "application/vnd.apache.thrift.json": {
      source: "iana"
    },
    "application/vnd.api+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.aplextor.warrp+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.apothekende.reservation+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.apple.installer+xml": {
      source: "iana",
      compressible: true,
      extensions: ["mpkg"]
    },
    "application/vnd.apple.keynote": {
      source: "iana",
      extensions: ["key"]
    },
    "application/vnd.apple.mpegurl": {
      source: "iana",
      extensions: ["m3u8"]
    },
    "application/vnd.apple.numbers": {
      source: "iana",
      extensions: ["numbers"]
    },
    "application/vnd.apple.pages": {
      source: "iana",
      extensions: ["pages"]
    },
    "application/vnd.apple.pkpass": {
      compressible: false,
      extensions: ["pkpass"]
    },
    "application/vnd.arastra.swi": {
      source: "iana"
    },
    "application/vnd.aristanetworks.swi": {
      source: "iana",
      extensions: ["swi"]
    },
    "application/vnd.artisan+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.artsquare": {
      source: "iana"
    },
    "application/vnd.astraea-software.iota": {
      source: "iana",
      extensions: ["iota"]
    },
    "application/vnd.audiograph": {
      source: "iana",
      extensions: ["aep"]
    },
    "application/vnd.autopackage": {
      source: "iana"
    },
    "application/vnd.avalon+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.avistar+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.balsamiq.bmml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["bmml"]
    },
    "application/vnd.balsamiq.bmpr": {
      source: "iana"
    },
    "application/vnd.banana-accounting": {
      source: "iana"
    },
    "application/vnd.bbf.usp.error": {
      source: "iana"
    },
    "application/vnd.bbf.usp.msg": {
      source: "iana"
    },
    "application/vnd.bbf.usp.msg+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.bekitzur-stech+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.bint.med-content": {
      source: "iana"
    },
    "application/vnd.biopax.rdf+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.blink-idb-value-wrapper": {
      source: "iana"
    },
    "application/vnd.blueice.multipass": {
      source: "iana",
      extensions: ["mpm"]
    },
    "application/vnd.bluetooth.ep.oob": {
      source: "iana"
    },
    "application/vnd.bluetooth.le.oob": {
      source: "iana"
    },
    "application/vnd.bmi": {
      source: "iana",
      extensions: ["bmi"]
    },
    "application/vnd.bpf": {
      source: "iana"
    },
    "application/vnd.bpf3": {
      source: "iana"
    },
    "application/vnd.businessobjects": {
      source: "iana",
      extensions: ["rep"]
    },
    "application/vnd.byu.uapi+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.cab-jscript": {
      source: "iana"
    },
    "application/vnd.canon-cpdl": {
      source: "iana"
    },
    "application/vnd.canon-lips": {
      source: "iana"
    },
    "application/vnd.capasystems-pg+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.cendio.thinlinc.clientconf": {
      source: "iana"
    },
    "application/vnd.century-systems.tcp_stream": {
      source: "iana"
    },
    "application/vnd.chemdraw+xml": {
      source: "iana",
      compressible: true,
      extensions: ["cdxml"]
    },
    "application/vnd.chess-pgn": {
      source: "iana"
    },
    "application/vnd.chipnuts.karaoke-mmd": {
      source: "iana",
      extensions: ["mmd"]
    },
    "application/vnd.ciedi": {
      source: "iana"
    },
    "application/vnd.cinderella": {
      source: "iana",
      extensions: ["cdy"]
    },
    "application/vnd.cirpack.isdn-ext": {
      source: "iana"
    },
    "application/vnd.citationstyles.style+xml": {
      source: "iana",
      compressible: true,
      extensions: ["csl"]
    },
    "application/vnd.claymore": {
      source: "iana",
      extensions: ["cla"]
    },
    "application/vnd.cloanto.rp9": {
      source: "iana",
      extensions: ["rp9"]
    },
    "application/vnd.clonk.c4group": {
      source: "iana",
      extensions: ["c4g", "c4d", "c4f", "c4p", "c4u"]
    },
    "application/vnd.cluetrust.cartomobile-config": {
      source: "iana",
      extensions: ["c11amc"]
    },
    "application/vnd.cluetrust.cartomobile-config-pkg": {
      source: "iana",
      extensions: ["c11amz"]
    },
    "application/vnd.coffeescript": {
      source: "iana"
    },
    "application/vnd.collabio.xodocuments.document": {
      source: "iana"
    },
    "application/vnd.collabio.xodocuments.document-template": {
      source: "iana"
    },
    "application/vnd.collabio.xodocuments.presentation": {
      source: "iana"
    },
    "application/vnd.collabio.xodocuments.presentation-template": {
      source: "iana"
    },
    "application/vnd.collabio.xodocuments.spreadsheet": {
      source: "iana"
    },
    "application/vnd.collabio.xodocuments.spreadsheet-template": {
      source: "iana"
    },
    "application/vnd.collection+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.collection.doc+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.collection.next+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.comicbook+zip": {
      source: "iana",
      compressible: false
    },
    "application/vnd.comicbook-rar": {
      source: "iana"
    },
    "application/vnd.commerce-battelle": {
      source: "iana"
    },
    "application/vnd.commonspace": {
      source: "iana",
      extensions: ["csp"]
    },
    "application/vnd.contact.cmsg": {
      source: "iana",
      extensions: ["cdbcmsg"]
    },
    "application/vnd.coreos.ignition+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.cosmocaller": {
      source: "iana",
      extensions: ["cmc"]
    },
    "application/vnd.crick.clicker": {
      source: "iana",
      extensions: ["clkx"]
    },
    "application/vnd.crick.clicker.keyboard": {
      source: "iana",
      extensions: ["clkk"]
    },
    "application/vnd.crick.clicker.palette": {
      source: "iana",
      extensions: ["clkp"]
    },
    "application/vnd.crick.clicker.template": {
      source: "iana",
      extensions: ["clkt"]
    },
    "application/vnd.crick.clicker.wordbank": {
      source: "iana",
      extensions: ["clkw"]
    },
    "application/vnd.criticaltools.wbs+xml": {
      source: "iana",
      compressible: true,
      extensions: ["wbs"]
    },
    "application/vnd.cryptii.pipe+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.crypto-shade-file": {
      source: "iana"
    },
    "application/vnd.cryptomator.encrypted": {
      source: "iana"
    },
    "application/vnd.cryptomator.vault": {
      source: "iana"
    },
    "application/vnd.ctc-posml": {
      source: "iana",
      extensions: ["pml"]
    },
    "application/vnd.ctct.ws+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.cups-pdf": {
      source: "iana"
    },
    "application/vnd.cups-postscript": {
      source: "iana"
    },
    "application/vnd.cups-ppd": {
      source: "iana",
      extensions: ["ppd"]
    },
    "application/vnd.cups-raster": {
      source: "iana"
    },
    "application/vnd.cups-raw": {
      source: "iana"
    },
    "application/vnd.curl": {
      source: "iana"
    },
    "application/vnd.curl.car": {
      source: "apache",
      extensions: ["car"]
    },
    "application/vnd.curl.pcurl": {
      source: "apache",
      extensions: ["pcurl"]
    },
    "application/vnd.cyan.dean.root+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.cybank": {
      source: "iana"
    },
    "application/vnd.cyclonedx+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.cyclonedx+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.d2l.coursepackage1p0+zip": {
      source: "iana",
      compressible: false
    },
    "application/vnd.d3m-dataset": {
      source: "iana"
    },
    "application/vnd.d3m-problem": {
      source: "iana"
    },
    "application/vnd.dart": {
      source: "iana",
      compressible: true,
      extensions: ["dart"]
    },
    "application/vnd.data-vision.rdz": {
      source: "iana",
      extensions: ["rdz"]
    },
    "application/vnd.datapackage+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.dataresource+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.dbf": {
      source: "iana",
      extensions: ["dbf"]
    },
    "application/vnd.debian.binary-package": {
      source: "iana"
    },
    "application/vnd.dece.data": {
      source: "iana",
      extensions: ["uvf", "uvvf", "uvd", "uvvd"]
    },
    "application/vnd.dece.ttml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["uvt", "uvvt"]
    },
    "application/vnd.dece.unspecified": {
      source: "iana",
      extensions: ["uvx", "uvvx"]
    },
    "application/vnd.dece.zip": {
      source: "iana",
      extensions: ["uvz", "uvvz"]
    },
    "application/vnd.denovo.fcselayout-link": {
      source: "iana",
      extensions: ["fe_launch"]
    },
    "application/vnd.desmume.movie": {
      source: "iana"
    },
    "application/vnd.dir-bi.plate-dl-nosuffix": {
      source: "iana"
    },
    "application/vnd.dm.delegation+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.dna": {
      source: "iana",
      extensions: ["dna"]
    },
    "application/vnd.document+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.dolby.mlp": {
      source: "apache",
      extensions: ["mlp"]
    },
    "application/vnd.dolby.mobile.1": {
      source: "iana"
    },
    "application/vnd.dolby.mobile.2": {
      source: "iana"
    },
    "application/vnd.doremir.scorecloud-binary-document": {
      source: "iana"
    },
    "application/vnd.dpgraph": {
      source: "iana",
      extensions: ["dpg"]
    },
    "application/vnd.dreamfactory": {
      source: "iana",
      extensions: ["dfac"]
    },
    "application/vnd.drive+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.ds-keypoint": {
      source: "apache",
      extensions: ["kpxx"]
    },
    "application/vnd.dtg.local": {
      source: "iana"
    },
    "application/vnd.dtg.local.flash": {
      source: "iana"
    },
    "application/vnd.dtg.local.html": {
      source: "iana"
    },
    "application/vnd.dvb.ait": {
      source: "iana",
      extensions: ["ait"]
    },
    "application/vnd.dvb.dvbisl+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.dvb.dvbj": {
      source: "iana"
    },
    "application/vnd.dvb.esgcontainer": {
      source: "iana"
    },
    "application/vnd.dvb.ipdcdftnotifaccess": {
      source: "iana"
    },
    "application/vnd.dvb.ipdcesgaccess": {
      source: "iana"
    },
    "application/vnd.dvb.ipdcesgaccess2": {
      source: "iana"
    },
    "application/vnd.dvb.ipdcesgpdd": {
      source: "iana"
    },
    "application/vnd.dvb.ipdcroaming": {
      source: "iana"
    },
    "application/vnd.dvb.iptv.alfec-base": {
      source: "iana"
    },
    "application/vnd.dvb.iptv.alfec-enhancement": {
      source: "iana"
    },
    "application/vnd.dvb.notif-aggregate-root+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.dvb.notif-container+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.dvb.notif-generic+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.dvb.notif-ia-msglist+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.dvb.notif-ia-registration-request+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.dvb.notif-ia-registration-response+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.dvb.notif-init+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.dvb.pfr": {
      source: "iana"
    },
    "application/vnd.dvb.service": {
      source: "iana",
      extensions: ["svc"]
    },
    "application/vnd.dxr": {
      source: "iana"
    },
    "application/vnd.dynageo": {
      source: "iana",
      extensions: ["geo"]
    },
    "application/vnd.dzr": {
      source: "iana"
    },
    "application/vnd.easykaraoke.cdgdownload": {
      source: "iana"
    },
    "application/vnd.ecdis-update": {
      source: "iana"
    },
    "application/vnd.ecip.rlp": {
      source: "iana"
    },
    "application/vnd.eclipse.ditto+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.ecowin.chart": {
      source: "iana",
      extensions: ["mag"]
    },
    "application/vnd.ecowin.filerequest": {
      source: "iana"
    },
    "application/vnd.ecowin.fileupdate": {
      source: "iana"
    },
    "application/vnd.ecowin.series": {
      source: "iana"
    },
    "application/vnd.ecowin.seriesrequest": {
      source: "iana"
    },
    "application/vnd.ecowin.seriesupdate": {
      source: "iana"
    },
    "application/vnd.efi.img": {
      source: "iana"
    },
    "application/vnd.efi.iso": {
      source: "iana"
    },
    "application/vnd.emclient.accessrequest+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.enliven": {
      source: "iana",
      extensions: ["nml"]
    },
    "application/vnd.enphase.envoy": {
      source: "iana"
    },
    "application/vnd.eprints.data+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.epson.esf": {
      source: "iana",
      extensions: ["esf"]
    },
    "application/vnd.epson.msf": {
      source: "iana",
      extensions: ["msf"]
    },
    "application/vnd.epson.quickanime": {
      source: "iana",
      extensions: ["qam"]
    },
    "application/vnd.epson.salt": {
      source: "iana",
      extensions: ["slt"]
    },
    "application/vnd.epson.ssf": {
      source: "iana",
      extensions: ["ssf"]
    },
    "application/vnd.ericsson.quickcall": {
      source: "iana"
    },
    "application/vnd.espass-espass+zip": {
      source: "iana",
      compressible: false
    },
    "application/vnd.eszigno3+xml": {
      source: "iana",
      compressible: true,
      extensions: ["es3", "et3"]
    },
    "application/vnd.etsi.aoc+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.asic-e+zip": {
      source: "iana",
      compressible: false
    },
    "application/vnd.etsi.asic-s+zip": {
      source: "iana",
      compressible: false
    },
    "application/vnd.etsi.cug+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.iptvcommand+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.iptvdiscovery+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.iptvprofile+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.iptvsad-bc+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.iptvsad-cod+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.iptvsad-npvr+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.iptvservice+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.iptvsync+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.iptvueprofile+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.mcid+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.mheg5": {
      source: "iana"
    },
    "application/vnd.etsi.overload-control-policy-dataset+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.pstn+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.sci+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.simservs+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.timestamp-token": {
      source: "iana"
    },
    "application/vnd.etsi.tsl+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.etsi.tsl.der": {
      source: "iana"
    },
    "application/vnd.eu.kasparian.car+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.eudora.data": {
      source: "iana"
    },
    "application/vnd.evolv.ecig.profile": {
      source: "iana"
    },
    "application/vnd.evolv.ecig.settings": {
      source: "iana"
    },
    "application/vnd.evolv.ecig.theme": {
      source: "iana"
    },
    "application/vnd.exstream-empower+zip": {
      source: "iana",
      compressible: false
    },
    "application/vnd.exstream-package": {
      source: "iana"
    },
    "application/vnd.ezpix-album": {
      source: "iana",
      extensions: ["ez2"]
    },
    "application/vnd.ezpix-package": {
      source: "iana",
      extensions: ["ez3"]
    },
    "application/vnd.f-secure.mobile": {
      source: "iana"
    },
    "application/vnd.familysearch.gedcom+zip": {
      source: "iana",
      compressible: false
    },
    "application/vnd.fastcopy-disk-image": {
      source: "iana"
    },
    "application/vnd.fdf": {
      source: "iana",
      extensions: ["fdf"]
    },
    "application/vnd.fdsn.mseed": {
      source: "iana",
      extensions: ["mseed"]
    },
    "application/vnd.fdsn.seed": {
      source: "iana",
      extensions: ["seed", "dataless"]
    },
    "application/vnd.ffsns": {
      source: "iana"
    },
    "application/vnd.ficlab.flb+zip": {
      source: "iana",
      compressible: false
    },
    "application/vnd.filmit.zfc": {
      source: "iana"
    },
    "application/vnd.fints": {
      source: "iana"
    },
    "application/vnd.firemonkeys.cloudcell": {
      source: "iana"
    },
    "application/vnd.flographit": {
      source: "iana",
      extensions: ["gph"]
    },
    "application/vnd.fluxtime.clip": {
      source: "iana",
      extensions: ["ftc"]
    },
    "application/vnd.font-fontforge-sfd": {
      source: "iana"
    },
    "application/vnd.framemaker": {
      source: "iana",
      extensions: ["fm", "frame", "maker", "book"]
    },
    "application/vnd.frogans.fnc": {
      source: "iana",
      extensions: ["fnc"]
    },
    "application/vnd.frogans.ltf": {
      source: "iana",
      extensions: ["ltf"]
    },
    "application/vnd.fsc.weblaunch": {
      source: "iana",
      extensions: ["fsc"]
    },
    "application/vnd.fujifilm.fb.docuworks": {
      source: "iana"
    },
    "application/vnd.fujifilm.fb.docuworks.binder": {
      source: "iana"
    },
    "application/vnd.fujifilm.fb.docuworks.container": {
      source: "iana"
    },
    "application/vnd.fujifilm.fb.jfi+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.fujitsu.oasys": {
      source: "iana",
      extensions: ["oas"]
    },
    "application/vnd.fujitsu.oasys2": {
      source: "iana",
      extensions: ["oa2"]
    },
    "application/vnd.fujitsu.oasys3": {
      source: "iana",
      extensions: ["oa3"]
    },
    "application/vnd.fujitsu.oasysgp": {
      source: "iana",
      extensions: ["fg5"]
    },
    "application/vnd.fujitsu.oasysprs": {
      source: "iana",
      extensions: ["bh2"]
    },
    "application/vnd.fujixerox.art-ex": {
      source: "iana"
    },
    "application/vnd.fujixerox.art4": {
      source: "iana"
    },
    "application/vnd.fujixerox.ddd": {
      source: "iana",
      extensions: ["ddd"]
    },
    "application/vnd.fujixerox.docuworks": {
      source: "iana",
      extensions: ["xdw"]
    },
    "application/vnd.fujixerox.docuworks.binder": {
      source: "iana",
      extensions: ["xbd"]
    },
    "application/vnd.fujixerox.docuworks.container": {
      source: "iana"
    },
    "application/vnd.fujixerox.hbpl": {
      source: "iana"
    },
    "application/vnd.fut-misnet": {
      source: "iana"
    },
    "application/vnd.futoin+cbor": {
      source: "iana"
    },
    "application/vnd.futoin+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.fuzzysheet": {
      source: "iana",
      extensions: ["fzs"]
    },
    "application/vnd.genomatix.tuxedo": {
      source: "iana",
      extensions: ["txd"]
    },
    "application/vnd.gentics.grd+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.geo+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.geocube+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.geogebra.file": {
      source: "iana",
      extensions: ["ggb"]
    },
    "application/vnd.geogebra.slides": {
      source: "iana"
    },
    "application/vnd.geogebra.tool": {
      source: "iana",
      extensions: ["ggt"]
    },
    "application/vnd.geometry-explorer": {
      source: "iana",
      extensions: ["gex", "gre"]
    },
    "application/vnd.geonext": {
      source: "iana",
      extensions: ["gxt"]
    },
    "application/vnd.geoplan": {
      source: "iana",
      extensions: ["g2w"]
    },
    "application/vnd.geospace": {
      source: "iana",
      extensions: ["g3w"]
    },
    "application/vnd.gerber": {
      source: "iana"
    },
    "application/vnd.globalplatform.card-content-mgt": {
      source: "iana"
    },
    "application/vnd.globalplatform.card-content-mgt-response": {
      source: "iana"
    },
    "application/vnd.gmx": {
      source: "iana",
      extensions: ["gmx"]
    },
    "application/vnd.google-apps.document": {
      compressible: false,
      extensions: ["gdoc"]
    },
    "application/vnd.google-apps.presentation": {
      compressible: false,
      extensions: ["gslides"]
    },
    "application/vnd.google-apps.spreadsheet": {
      compressible: false,
      extensions: ["gsheet"]
    },
    "application/vnd.google-earth.kml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["kml"]
    },
    "application/vnd.google-earth.kmz": {
      source: "iana",
      compressible: false,
      extensions: ["kmz"]
    },
    "application/vnd.gov.sk.e-form+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.gov.sk.e-form+zip": {
      source: "iana",
      compressible: false
    },
    "application/vnd.gov.sk.xmldatacontainer+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.grafeq": {
      source: "iana",
      extensions: ["gqf", "gqs"]
    },
    "application/vnd.gridmp": {
      source: "iana"
    },
    "application/vnd.groove-account": {
      source: "iana",
      extensions: ["gac"]
    },
    "application/vnd.groove-help": {
      source: "iana",
      extensions: ["ghf"]
    },
    "application/vnd.groove-identity-message": {
      source: "iana",
      extensions: ["gim"]
    },
    "application/vnd.groove-injector": {
      source: "iana",
      extensions: ["grv"]
    },
    "application/vnd.groove-tool-message": {
      source: "iana",
      extensions: ["gtm"]
    },
    "application/vnd.groove-tool-template": {
      source: "iana",
      extensions: ["tpl"]
    },
    "application/vnd.groove-vcard": {
      source: "iana",
      extensions: ["vcg"]
    },
    "application/vnd.hal+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.hal+xml": {
      source: "iana",
      compressible: true,
      extensions: ["hal"]
    },
    "application/vnd.handheld-entertainment+xml": {
      source: "iana",
      compressible: true,
      extensions: ["zmm"]
    },
    "application/vnd.hbci": {
      source: "iana",
      extensions: ["hbci"]
    },
    "application/vnd.hc+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.hcl-bireports": {
      source: "iana"
    },
    "application/vnd.hdt": {
      source: "iana"
    },
    "application/vnd.heroku+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.hhe.lesson-player": {
      source: "iana",
      extensions: ["les"]
    },
    "application/vnd.hl7cda+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/vnd.hl7v2+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/vnd.hp-hpgl": {
      source: "iana",
      extensions: ["hpgl"]
    },
    "application/vnd.hp-hpid": {
      source: "iana",
      extensions: ["hpid"]
    },
    "application/vnd.hp-hps": {
      source: "iana",
      extensions: ["hps"]
    },
    "application/vnd.hp-jlyt": {
      source: "iana",
      extensions: ["jlt"]
    },
    "application/vnd.hp-pcl": {
      source: "iana",
      extensions: ["pcl"]
    },
    "application/vnd.hp-pclxl": {
      source: "iana",
      extensions: ["pclxl"]
    },
    "application/vnd.httphone": {
      source: "iana"
    },
    "application/vnd.hydrostatix.sof-data": {
      source: "iana",
      extensions: ["sfd-hdstx"]
    },
    "application/vnd.hyper+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.hyper-item+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.hyperdrive+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.hzn-3d-crossword": {
      source: "iana"
    },
    "application/vnd.ibm.afplinedata": {
      source: "iana"
    },
    "application/vnd.ibm.electronic-media": {
      source: "iana"
    },
    "application/vnd.ibm.minipay": {
      source: "iana",
      extensions: ["mpy"]
    },
    "application/vnd.ibm.modcap": {
      source: "iana",
      extensions: ["afp", "listafp", "list3820"]
    },
    "application/vnd.ibm.rights-management": {
      source: "iana",
      extensions: ["irm"]
    },
    "application/vnd.ibm.secure-container": {
      source: "iana",
      extensions: ["sc"]
    },
    "application/vnd.iccprofile": {
      source: "iana",
      extensions: ["icc", "icm"]
    },
    "application/vnd.ieee.1905": {
      source: "iana"
    },
    "application/vnd.igloader": {
      source: "iana",
      extensions: ["igl"]
    },
    "application/vnd.imagemeter.folder+zip": {
      source: "iana",
      compressible: false
    },
    "application/vnd.imagemeter.image+zip": {
      source: "iana",
      compressible: false
    },
    "application/vnd.immervision-ivp": {
      source: "iana",
      extensions: ["ivp"]
    },
    "application/vnd.immervision-ivu": {
      source: "iana",
      extensions: ["ivu"]
    },
    "application/vnd.ims.imsccv1p1": {
      source: "iana"
    },
    "application/vnd.ims.imsccv1p2": {
      source: "iana"
    },
    "application/vnd.ims.imsccv1p3": {
      source: "iana"
    },
    "application/vnd.ims.lis.v2.result+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.ims.lti.v2.toolconsumerprofile+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.ims.lti.v2.toolproxy+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.ims.lti.v2.toolproxy.id+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.ims.lti.v2.toolsettings+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.ims.lti.v2.toolsettings.simple+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.informedcontrol.rms+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.informix-visionary": {
      source: "iana"
    },
    "application/vnd.infotech.project": {
      source: "iana"
    },
    "application/vnd.infotech.project+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.innopath.wamp.notification": {
      source: "iana"
    },
    "application/vnd.insors.igm": {
      source: "iana",
      extensions: ["igm"]
    },
    "application/vnd.intercon.formnet": {
      source: "iana",
      extensions: ["xpw", "xpx"]
    },
    "application/vnd.intergeo": {
      source: "iana",
      extensions: ["i2g"]
    },
    "application/vnd.intertrust.digibox": {
      source: "iana"
    },
    "application/vnd.intertrust.nncp": {
      source: "iana"
    },
    "application/vnd.intu.qbo": {
      source: "iana",
      extensions: ["qbo"]
    },
    "application/vnd.intu.qfx": {
      source: "iana",
      extensions: ["qfx"]
    },
    "application/vnd.iptc.g2.catalogitem+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.iptc.g2.conceptitem+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.iptc.g2.knowledgeitem+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.iptc.g2.newsitem+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.iptc.g2.newsmessage+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.iptc.g2.packageitem+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.iptc.g2.planningitem+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.ipunplugged.rcprofile": {
      source: "iana",
      extensions: ["rcprofile"]
    },
    "application/vnd.irepository.package+xml": {
      source: "iana",
      compressible: true,
      extensions: ["irp"]
    },
    "application/vnd.is-xpr": {
      source: "iana",
      extensions: ["xpr"]
    },
    "application/vnd.isac.fcs": {
      source: "iana",
      extensions: ["fcs"]
    },
    "application/vnd.iso11783-10+zip": {
      source: "iana",
      compressible: false
    },
    "application/vnd.jam": {
      source: "iana",
      extensions: ["jam"]
    },
    "application/vnd.japannet-directory-service": {
      source: "iana"
    },
    "application/vnd.japannet-jpnstore-wakeup": {
      source: "iana"
    },
    "application/vnd.japannet-payment-wakeup": {
      source: "iana"
    },
    "application/vnd.japannet-registration": {
      source: "iana"
    },
    "application/vnd.japannet-registration-wakeup": {
      source: "iana"
    },
    "application/vnd.japannet-setstore-wakeup": {
      source: "iana"
    },
    "application/vnd.japannet-verification": {
      source: "iana"
    },
    "application/vnd.japannet-verification-wakeup": {
      source: "iana"
    },
    "application/vnd.jcp.javame.midlet-rms": {
      source: "iana",
      extensions: ["rms"]
    },
    "application/vnd.jisp": {
      source: "iana",
      extensions: ["jisp"]
    },
    "application/vnd.joost.joda-archive": {
      source: "iana",
      extensions: ["joda"]
    },
    "application/vnd.jsk.isdn-ngn": {
      source: "iana"
    },
    "application/vnd.kahootz": {
      source: "iana",
      extensions: ["ktz", "ktr"]
    },
    "application/vnd.kde.karbon": {
      source: "iana",
      extensions: ["karbon"]
    },
    "application/vnd.kde.kchart": {
      source: "iana",
      extensions: ["chrt"]
    },
    "application/vnd.kde.kformula": {
      source: "iana",
      extensions: ["kfo"]
    },
    "application/vnd.kde.kivio": {
      source: "iana",
      extensions: ["flw"]
    },
    "application/vnd.kde.kontour": {
      source: "iana",
      extensions: ["kon"]
    },
    "application/vnd.kde.kpresenter": {
      source: "iana",
      extensions: ["kpr", "kpt"]
    },
    "application/vnd.kde.kspread": {
      source: "iana",
      extensions: ["ksp"]
    },
    "application/vnd.kde.kword": {
      source: "iana",
      extensions: ["kwd", "kwt"]
    },
    "application/vnd.kenameaapp": {
      source: "iana",
      extensions: ["htke"]
    },
    "application/vnd.kidspiration": {
      source: "iana",
      extensions: ["kia"]
    },
    "application/vnd.kinar": {
      source: "iana",
      extensions: ["kne", "knp"]
    },
    "application/vnd.koan": {
      source: "iana",
      extensions: ["skp", "skd", "skt", "skm"]
    },
    "application/vnd.kodak-descriptor": {
      source: "iana",
      extensions: ["sse"]
    },
    "application/vnd.las": {
      source: "iana"
    },
    "application/vnd.las.las+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.las.las+xml": {
      source: "iana",
      compressible: true,
      extensions: ["lasxml"]
    },
    "application/vnd.laszip": {
      source: "iana"
    },
    "application/vnd.leap+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.liberty-request+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.llamagraphics.life-balance.desktop": {
      source: "iana",
      extensions: ["lbd"]
    },
    "application/vnd.llamagraphics.life-balance.exchange+xml": {
      source: "iana",
      compressible: true,
      extensions: ["lbe"]
    },
    "application/vnd.logipipe.circuit+zip": {
      source: "iana",
      compressible: false
    },
    "application/vnd.loom": {
      source: "iana"
    },
    "application/vnd.lotus-1-2-3": {
      source: "iana",
      extensions: ["123"]
    },
    "application/vnd.lotus-approach": {
      source: "iana",
      extensions: ["apr"]
    },
    "application/vnd.lotus-freelance": {
      source: "iana",
      extensions: ["pre"]
    },
    "application/vnd.lotus-notes": {
      source: "iana",
      extensions: ["nsf"]
    },
    "application/vnd.lotus-organizer": {
      source: "iana",
      extensions: ["org"]
    },
    "application/vnd.lotus-screencam": {
      source: "iana",
      extensions: ["scm"]
    },
    "application/vnd.lotus-wordpro": {
      source: "iana",
      extensions: ["lwp"]
    },
    "application/vnd.macports.portpkg": {
      source: "iana",
      extensions: ["portpkg"]
    },
    "application/vnd.mapbox-vector-tile": {
      source: "iana",
      extensions: ["mvt"]
    },
    "application/vnd.marlin.drm.actiontoken+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.marlin.drm.conftoken+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.marlin.drm.license+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.marlin.drm.mdcf": {
      source: "iana"
    },
    "application/vnd.mason+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.maxar.archive.3tz+zip": {
      source: "iana",
      compressible: false
    },
    "application/vnd.maxmind.maxmind-db": {
      source: "iana"
    },
    "application/vnd.mcd": {
      source: "iana",
      extensions: ["mcd"]
    },
    "application/vnd.medcalcdata": {
      source: "iana",
      extensions: ["mc1"]
    },
    "application/vnd.mediastation.cdkey": {
      source: "iana",
      extensions: ["cdkey"]
    },
    "application/vnd.meridian-slingshot": {
      source: "iana"
    },
    "application/vnd.mfer": {
      source: "iana",
      extensions: ["mwf"]
    },
    "application/vnd.mfmp": {
      source: "iana",
      extensions: ["mfm"]
    },
    "application/vnd.micro+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.micrografx.flo": {
      source: "iana",
      extensions: ["flo"]
    },
    "application/vnd.micrografx.igx": {
      source: "iana",
      extensions: ["igx"]
    },
    "application/vnd.microsoft.portable-executable": {
      source: "iana"
    },
    "application/vnd.microsoft.windows.thumbnail-cache": {
      source: "iana"
    },
    "application/vnd.miele+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.mif": {
      source: "iana",
      extensions: ["mif"]
    },
    "application/vnd.minisoft-hp3000-save": {
      source: "iana"
    },
    "application/vnd.mitsubishi.misty-guard.trustweb": {
      source: "iana"
    },
    "application/vnd.mobius.daf": {
      source: "iana",
      extensions: ["daf"]
    },
    "application/vnd.mobius.dis": {
      source: "iana",
      extensions: ["dis"]
    },
    "application/vnd.mobius.mbk": {
      source: "iana",
      extensions: ["mbk"]
    },
    "application/vnd.mobius.mqy": {
      source: "iana",
      extensions: ["mqy"]
    },
    "application/vnd.mobius.msl": {
      source: "iana",
      extensions: ["msl"]
    },
    "application/vnd.mobius.plc": {
      source: "iana",
      extensions: ["plc"]
    },
    "application/vnd.mobius.txf": {
      source: "iana",
      extensions: ["txf"]
    },
    "application/vnd.mophun.application": {
      source: "iana",
      extensions: ["mpn"]
    },
    "application/vnd.mophun.certificate": {
      source: "iana",
      extensions: ["mpc"]
    },
    "application/vnd.motorola.flexsuite": {
      source: "iana"
    },
    "application/vnd.motorola.flexsuite.adsi": {
      source: "iana"
    },
    "application/vnd.motorola.flexsuite.fis": {
      source: "iana"
    },
    "application/vnd.motorola.flexsuite.gotap": {
      source: "iana"
    },
    "application/vnd.motorola.flexsuite.kmr": {
      source: "iana"
    },
    "application/vnd.motorola.flexsuite.ttc": {
      source: "iana"
    },
    "application/vnd.motorola.flexsuite.wem": {
      source: "iana"
    },
    "application/vnd.motorola.iprm": {
      source: "iana"
    },
    "application/vnd.mozilla.xul+xml": {
      source: "iana",
      compressible: true,
      extensions: ["xul"]
    },
    "application/vnd.ms-3mfdocument": {
      source: "iana"
    },
    "application/vnd.ms-artgalry": {
      source: "iana",
      extensions: ["cil"]
    },
    "application/vnd.ms-asf": {
      source: "iana"
    },
    "application/vnd.ms-cab-compressed": {
      source: "iana",
      extensions: ["cab"]
    },
    "application/vnd.ms-color.iccprofile": {
      source: "apache"
    },
    "application/vnd.ms-excel": {
      source: "iana",
      compressible: false,
      extensions: ["xls", "xlm", "xla", "xlc", "xlt", "xlw"]
    },
    "application/vnd.ms-excel.addin.macroenabled.12": {
      source: "iana",
      extensions: ["xlam"]
    },
    "application/vnd.ms-excel.sheet.binary.macroenabled.12": {
      source: "iana",
      extensions: ["xlsb"]
    },
    "application/vnd.ms-excel.sheet.macroenabled.12": {
      source: "iana",
      extensions: ["xlsm"]
    },
    "application/vnd.ms-excel.template.macroenabled.12": {
      source: "iana",
      extensions: ["xltm"]
    },
    "application/vnd.ms-fontobject": {
      source: "iana",
      compressible: true,
      extensions: ["eot"]
    },
    "application/vnd.ms-htmlhelp": {
      source: "iana",
      extensions: ["chm"]
    },
    "application/vnd.ms-ims": {
      source: "iana",
      extensions: ["ims"]
    },
    "application/vnd.ms-lrm": {
      source: "iana",
      extensions: ["lrm"]
    },
    "application/vnd.ms-office.activex+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.ms-officetheme": {
      source: "iana",
      extensions: ["thmx"]
    },
    "application/vnd.ms-opentype": {
      source: "apache",
      compressible: true
    },
    "application/vnd.ms-outlook": {
      compressible: false,
      extensions: ["msg"]
    },
    "application/vnd.ms-package.obfuscated-opentype": {
      source: "apache"
    },
    "application/vnd.ms-pki.seccat": {
      source: "apache",
      extensions: ["cat"]
    },
    "application/vnd.ms-pki.stl": {
      source: "apache",
      extensions: ["stl"]
    },
    "application/vnd.ms-playready.initiator+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.ms-powerpoint": {
      source: "iana",
      compressible: false,
      extensions: ["ppt", "pps", "pot"]
    },
    "application/vnd.ms-powerpoint.addin.macroenabled.12": {
      source: "iana",
      extensions: ["ppam"]
    },
    "application/vnd.ms-powerpoint.presentation.macroenabled.12": {
      source: "iana",
      extensions: ["pptm"]
    },
    "application/vnd.ms-powerpoint.slide.macroenabled.12": {
      source: "iana",
      extensions: ["sldm"]
    },
    "application/vnd.ms-powerpoint.slideshow.macroenabled.12": {
      source: "iana",
      extensions: ["ppsm"]
    },
    "application/vnd.ms-powerpoint.template.macroenabled.12": {
      source: "iana",
      extensions: ["potm"]
    },
    "application/vnd.ms-printdevicecapabilities+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.ms-printing.printticket+xml": {
      source: "apache",
      compressible: true
    },
    "application/vnd.ms-printschematicket+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.ms-project": {
      source: "iana",
      extensions: ["mpp", "mpt"]
    },
    "application/vnd.ms-tnef": {
      source: "iana"
    },
    "application/vnd.ms-windows.devicepairing": {
      source: "iana"
    },
    "application/vnd.ms-windows.nwprinting.oob": {
      source: "iana"
    },
    "application/vnd.ms-windows.printerpairing": {
      source: "iana"
    },
    "application/vnd.ms-windows.wsd.oob": {
      source: "iana"
    },
    "application/vnd.ms-wmdrm.lic-chlg-req": {
      source: "iana"
    },
    "application/vnd.ms-wmdrm.lic-resp": {
      source: "iana"
    },
    "application/vnd.ms-wmdrm.meter-chlg-req": {
      source: "iana"
    },
    "application/vnd.ms-wmdrm.meter-resp": {
      source: "iana"
    },
    "application/vnd.ms-word.document.macroenabled.12": {
      source: "iana",
      extensions: ["docm"]
    },
    "application/vnd.ms-word.template.macroenabled.12": {
      source: "iana",
      extensions: ["dotm"]
    },
    "application/vnd.ms-works": {
      source: "iana",
      extensions: ["wps", "wks", "wcm", "wdb"]
    },
    "application/vnd.ms-wpl": {
      source: "iana",
      extensions: ["wpl"]
    },
    "application/vnd.ms-xpsdocument": {
      source: "iana",
      compressible: false,
      extensions: ["xps"]
    },
    "application/vnd.msa-disk-image": {
      source: "iana"
    },
    "application/vnd.mseq": {
      source: "iana",
      extensions: ["mseq"]
    },
    "application/vnd.msign": {
      source: "iana"
    },
    "application/vnd.multiad.creator": {
      source: "iana"
    },
    "application/vnd.multiad.creator.cif": {
      source: "iana"
    },
    "application/vnd.music-niff": {
      source: "iana"
    },
    "application/vnd.musician": {
      source: "iana",
      extensions: ["mus"]
    },
    "application/vnd.muvee.style": {
      source: "iana",
      extensions: ["msty"]
    },
    "application/vnd.mynfc": {
      source: "iana",
      extensions: ["taglet"]
    },
    "application/vnd.nacamar.ybrid+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.ncd.control": {
      source: "iana"
    },
    "application/vnd.ncd.reference": {
      source: "iana"
    },
    "application/vnd.nearst.inv+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.nebumind.line": {
      source: "iana"
    },
    "application/vnd.nervana": {
      source: "iana"
    },
    "application/vnd.netfpx": {
      source: "iana"
    },
    "application/vnd.neurolanguage.nlu": {
      source: "iana",
      extensions: ["nlu"]
    },
    "application/vnd.nimn": {
      source: "iana"
    },
    "application/vnd.nintendo.nitro.rom": {
      source: "iana"
    },
    "application/vnd.nintendo.snes.rom": {
      source: "iana"
    },
    "application/vnd.nitf": {
      source: "iana",
      extensions: ["ntf", "nitf"]
    },
    "application/vnd.noblenet-directory": {
      source: "iana",
      extensions: ["nnd"]
    },
    "application/vnd.noblenet-sealer": {
      source: "iana",
      extensions: ["nns"]
    },
    "application/vnd.noblenet-web": {
      source: "iana",
      extensions: ["nnw"]
    },
    "application/vnd.nokia.catalogs": {
      source: "iana"
    },
    "application/vnd.nokia.conml+wbxml": {
      source: "iana"
    },
    "application/vnd.nokia.conml+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.nokia.iptv.config+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.nokia.isds-radio-presets": {
      source: "iana"
    },
    "application/vnd.nokia.landmark+wbxml": {
      source: "iana"
    },
    "application/vnd.nokia.landmark+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.nokia.landmarkcollection+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.nokia.n-gage.ac+xml": {
      source: "iana",
      compressible: true,
      extensions: ["ac"]
    },
    "application/vnd.nokia.n-gage.data": {
      source: "iana",
      extensions: ["ngdat"]
    },
    "application/vnd.nokia.n-gage.symbian.install": {
      source: "iana",
      extensions: ["n-gage"]
    },
    "application/vnd.nokia.ncd": {
      source: "iana"
    },
    "application/vnd.nokia.pcd+wbxml": {
      source: "iana"
    },
    "application/vnd.nokia.pcd+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.nokia.radio-preset": {
      source: "iana",
      extensions: ["rpst"]
    },
    "application/vnd.nokia.radio-presets": {
      source: "iana",
      extensions: ["rpss"]
    },
    "application/vnd.novadigm.edm": {
      source: "iana",
      extensions: ["edm"]
    },
    "application/vnd.novadigm.edx": {
      source: "iana",
      extensions: ["edx"]
    },
    "application/vnd.novadigm.ext": {
      source: "iana",
      extensions: ["ext"]
    },
    "application/vnd.ntt-local.content-share": {
      source: "iana"
    },
    "application/vnd.ntt-local.file-transfer": {
      source: "iana"
    },
    "application/vnd.ntt-local.ogw_remote-access": {
      source: "iana"
    },
    "application/vnd.ntt-local.sip-ta_remote": {
      source: "iana"
    },
    "application/vnd.ntt-local.sip-ta_tcp_stream": {
      source: "iana"
    },
    "application/vnd.oasis.opendocument.chart": {
      source: "iana",
      extensions: ["odc"]
    },
    "application/vnd.oasis.opendocument.chart-template": {
      source: "iana",
      extensions: ["otc"]
    },
    "application/vnd.oasis.opendocument.database": {
      source: "iana",
      extensions: ["odb"]
    },
    "application/vnd.oasis.opendocument.formula": {
      source: "iana",
      extensions: ["odf"]
    },
    "application/vnd.oasis.opendocument.formula-template": {
      source: "iana",
      extensions: ["odft"]
    },
    "application/vnd.oasis.opendocument.graphics": {
      source: "iana",
      compressible: false,
      extensions: ["odg"]
    },
    "application/vnd.oasis.opendocument.graphics-template": {
      source: "iana",
      extensions: ["otg"]
    },
    "application/vnd.oasis.opendocument.image": {
      source: "iana",
      extensions: ["odi"]
    },
    "application/vnd.oasis.opendocument.image-template": {
      source: "iana",
      extensions: ["oti"]
    },
    "application/vnd.oasis.opendocument.presentation": {
      source: "iana",
      compressible: false,
      extensions: ["odp"]
    },
    "application/vnd.oasis.opendocument.presentation-template": {
      source: "iana",
      extensions: ["otp"]
    },
    "application/vnd.oasis.opendocument.spreadsheet": {
      source: "iana",
      compressible: false,
      extensions: ["ods"]
    },
    "application/vnd.oasis.opendocument.spreadsheet-template": {
      source: "iana",
      extensions: ["ots"]
    },
    "application/vnd.oasis.opendocument.text": {
      source: "iana",
      compressible: false,
      extensions: ["odt"]
    },
    "application/vnd.oasis.opendocument.text-master": {
      source: "iana",
      extensions: ["odm"]
    },
    "application/vnd.oasis.opendocument.text-template": {
      source: "iana",
      extensions: ["ott"]
    },
    "application/vnd.oasis.opendocument.text-web": {
      source: "iana",
      extensions: ["oth"]
    },
    "application/vnd.obn": {
      source: "iana"
    },
    "application/vnd.ocf+cbor": {
      source: "iana"
    },
    "application/vnd.oci.image.manifest.v1+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oftn.l10n+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oipf.contentaccessdownload+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oipf.contentaccessstreaming+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oipf.cspg-hexbinary": {
      source: "iana"
    },
    "application/vnd.oipf.dae.svg+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oipf.dae.xhtml+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oipf.mippvcontrolmessage+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oipf.pae.gem": {
      source: "iana"
    },
    "application/vnd.oipf.spdiscovery+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oipf.spdlist+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oipf.ueprofile+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oipf.userprofile+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.olpc-sugar": {
      source: "iana",
      extensions: ["xo"]
    },
    "application/vnd.oma-scws-config": {
      source: "iana"
    },
    "application/vnd.oma-scws-http-request": {
      source: "iana"
    },
    "application/vnd.oma-scws-http-response": {
      source: "iana"
    },
    "application/vnd.oma.bcast.associated-procedure-parameter+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.bcast.drm-trigger+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.bcast.imd+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.bcast.ltkm": {
      source: "iana"
    },
    "application/vnd.oma.bcast.notification+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.bcast.provisioningtrigger": {
      source: "iana"
    },
    "application/vnd.oma.bcast.sgboot": {
      source: "iana"
    },
    "application/vnd.oma.bcast.sgdd+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.bcast.sgdu": {
      source: "iana"
    },
    "application/vnd.oma.bcast.simple-symbol-container": {
      source: "iana"
    },
    "application/vnd.oma.bcast.smartcard-trigger+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.bcast.sprov+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.bcast.stkm": {
      source: "iana"
    },
    "application/vnd.oma.cab-address-book+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.cab-feature-handler+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.cab-pcc+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.cab-subs-invite+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.cab-user-prefs+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.dcd": {
      source: "iana"
    },
    "application/vnd.oma.dcdc": {
      source: "iana"
    },
    "application/vnd.oma.dd2+xml": {
      source: "iana",
      compressible: true,
      extensions: ["dd2"]
    },
    "application/vnd.oma.drm.risd+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.group-usage-list+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.lwm2m+cbor": {
      source: "iana"
    },
    "application/vnd.oma.lwm2m+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.lwm2m+tlv": {
      source: "iana"
    },
    "application/vnd.oma.pal+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.poc.detailed-progress-report+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.poc.final-report+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.poc.groups+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.poc.invocation-descriptor+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.poc.optimized-progress-report+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.push": {
      source: "iana"
    },
    "application/vnd.oma.scidm.messages+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oma.xcap-directory+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.omads-email+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/vnd.omads-file+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/vnd.omads-folder+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/vnd.omaloc-supl-init": {
      source: "iana"
    },
    "application/vnd.onepager": {
      source: "iana"
    },
    "application/vnd.onepagertamp": {
      source: "iana"
    },
    "application/vnd.onepagertamx": {
      source: "iana"
    },
    "application/vnd.onepagertat": {
      source: "iana"
    },
    "application/vnd.onepagertatp": {
      source: "iana"
    },
    "application/vnd.onepagertatx": {
      source: "iana"
    },
    "application/vnd.openblox.game+xml": {
      source: "iana",
      compressible: true,
      extensions: ["obgx"]
    },
    "application/vnd.openblox.game-binary": {
      source: "iana"
    },
    "application/vnd.openeye.oeb": {
      source: "iana"
    },
    "application/vnd.openofficeorg.extension": {
      source: "apache",
      extensions: ["oxt"]
    },
    "application/vnd.openstreetmap.data+xml": {
      source: "iana",
      compressible: true,
      extensions: ["osm"]
    },
    "application/vnd.opentimestamps.ots": {
      source: "iana"
    },
    "application/vnd.openxmlformats-officedocument.custom-properties+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.customxmlproperties+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.drawing+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.drawingml.chart+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.extended-properties+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.comments+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.presentation": {
      source: "iana",
      compressible: false,
      extensions: ["pptx"]
    },
    "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.presprops+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.slide": {
      source: "iana",
      extensions: ["sldx"]
    },
    "application/vnd.openxmlformats-officedocument.presentationml.slide+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.slideshow": {
      source: "iana",
      extensions: ["ppsx"]
    },
    "application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.tags+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.template": {
      source: "iana",
      extensions: ["potx"]
    },
    "application/vnd.openxmlformats-officedocument.presentationml.template.main+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
      source: "iana",
      compressible: false,
      extensions: ["xlsx"]
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.template": {
      source: "iana",
      extensions: ["xltx"]
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.theme+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.themeoverride+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.vmldrawing": {
      source: "iana"
    },
    "application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
      source: "iana",
      compressible: false,
      extensions: ["docx"]
    },
    "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
      source: "iana",
      extensions: ["dotx"]
    },
    "application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-package.core-properties+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.openxmlformats-package.relationships+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oracle.resource+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.orange.indata": {
      source: "iana"
    },
    "application/vnd.osa.netdeploy": {
      source: "iana"
    },
    "application/vnd.osgeo.mapguide.package": {
      source: "iana",
      extensions: ["mgp"]
    },
    "application/vnd.osgi.bundle": {
      source: "iana"
    },
    "application/vnd.osgi.dp": {
      source: "iana",
      extensions: ["dp"]
    },
    "application/vnd.osgi.subsystem": {
      source: "iana",
      extensions: ["esa"]
    },
    "application/vnd.otps.ct-kip+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.oxli.countgraph": {
      source: "iana"
    },
    "application/vnd.pagerduty+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.palm": {
      source: "iana",
      extensions: ["pdb", "pqa", "oprc"]
    },
    "application/vnd.panoply": {
      source: "iana"
    },
    "application/vnd.paos.xml": {
      source: "iana"
    },
    "application/vnd.patentdive": {
      source: "iana"
    },
    "application/vnd.patientecommsdoc": {
      source: "iana"
    },
    "application/vnd.pawaafile": {
      source: "iana",
      extensions: ["paw"]
    },
    "application/vnd.pcos": {
      source: "iana"
    },
    "application/vnd.pg.format": {
      source: "iana",
      extensions: ["str"]
    },
    "application/vnd.pg.osasli": {
      source: "iana",
      extensions: ["ei6"]
    },
    "application/vnd.piaccess.application-licence": {
      source: "iana"
    },
    "application/vnd.picsel": {
      source: "iana",
      extensions: ["efif"]
    },
    "application/vnd.pmi.widget": {
      source: "iana",
      extensions: ["wg"]
    },
    "application/vnd.poc.group-advertisement+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.pocketlearn": {
      source: "iana",
      extensions: ["plf"]
    },
    "application/vnd.powerbuilder6": {
      source: "iana",
      extensions: ["pbd"]
    },
    "application/vnd.powerbuilder6-s": {
      source: "iana"
    },
    "application/vnd.powerbuilder7": {
      source: "iana"
    },
    "application/vnd.powerbuilder7-s": {
      source: "iana"
    },
    "application/vnd.powerbuilder75": {
      source: "iana"
    },
    "application/vnd.powerbuilder75-s": {
      source: "iana"
    },
    "application/vnd.preminet": {
      source: "iana"
    },
    "application/vnd.previewsystems.box": {
      source: "iana",
      extensions: ["box"]
    },
    "application/vnd.proteus.magazine": {
      source: "iana",
      extensions: ["mgz"]
    },
    "application/vnd.psfs": {
      source: "iana"
    },
    "application/vnd.publishare-delta-tree": {
      source: "iana",
      extensions: ["qps"]
    },
    "application/vnd.pvi.ptid1": {
      source: "iana",
      extensions: ["ptid"]
    },
    "application/vnd.pwg-multiplexed": {
      source: "iana"
    },
    "application/vnd.pwg-xhtml-print+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.qualcomm.brew-app-res": {
      source: "iana"
    },
    "application/vnd.quarantainenet": {
      source: "iana"
    },
    "application/vnd.quark.quarkxpress": {
      source: "iana",
      extensions: ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"]
    },
    "application/vnd.quobject-quoxdocument": {
      source: "iana"
    },
    "application/vnd.radisys.moml+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.radisys.msml+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.radisys.msml-audit+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.radisys.msml-audit-conf+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.radisys.msml-audit-conn+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.radisys.msml-audit-dialog+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.radisys.msml-audit-stream+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.radisys.msml-conf+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.radisys.msml-dialog+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.radisys.msml-dialog-base+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.radisys.msml-dialog-fax-detect+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.radisys.msml-dialog-fax-sendrecv+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.radisys.msml-dialog-group+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.radisys.msml-dialog-speech+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.radisys.msml-dialog-transform+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.rainstor.data": {
      source: "iana"
    },
    "application/vnd.rapid": {
      source: "iana"
    },
    "application/vnd.rar": {
      source: "iana",
      extensions: ["rar"]
    },
    "application/vnd.realvnc.bed": {
      source: "iana",
      extensions: ["bed"]
    },
    "application/vnd.recordare.musicxml": {
      source: "iana",
      extensions: ["mxl"]
    },
    "application/vnd.recordare.musicxml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["musicxml"]
    },
    "application/vnd.renlearn.rlprint": {
      source: "iana"
    },
    "application/vnd.resilient.logic": {
      source: "iana"
    },
    "application/vnd.restful+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.rig.cryptonote": {
      source: "iana",
      extensions: ["cryptonote"]
    },
    "application/vnd.rim.cod": {
      source: "apache",
      extensions: ["cod"]
    },
    "application/vnd.rn-realmedia": {
      source: "apache",
      extensions: ["rm"]
    },
    "application/vnd.rn-realmedia-vbr": {
      source: "apache",
      extensions: ["rmvb"]
    },
    "application/vnd.route66.link66+xml": {
      source: "iana",
      compressible: true,
      extensions: ["link66"]
    },
    "application/vnd.rs-274x": {
      source: "iana"
    },
    "application/vnd.ruckus.download": {
      source: "iana"
    },
    "application/vnd.s3sms": {
      source: "iana"
    },
    "application/vnd.sailingtracker.track": {
      source: "iana",
      extensions: ["st"]
    },
    "application/vnd.sar": {
      source: "iana"
    },
    "application/vnd.sbm.cid": {
      source: "iana"
    },
    "application/vnd.sbm.mid2": {
      source: "iana"
    },
    "application/vnd.scribus": {
      source: "iana"
    },
    "application/vnd.sealed.3df": {
      source: "iana"
    },
    "application/vnd.sealed.csf": {
      source: "iana"
    },
    "application/vnd.sealed.doc": {
      source: "iana"
    },
    "application/vnd.sealed.eml": {
      source: "iana"
    },
    "application/vnd.sealed.mht": {
      source: "iana"
    },
    "application/vnd.sealed.net": {
      source: "iana"
    },
    "application/vnd.sealed.ppt": {
      source: "iana"
    },
    "application/vnd.sealed.tiff": {
      source: "iana"
    },
    "application/vnd.sealed.xls": {
      source: "iana"
    },
    "application/vnd.sealedmedia.softseal.html": {
      source: "iana"
    },
    "application/vnd.sealedmedia.softseal.pdf": {
      source: "iana"
    },
    "application/vnd.seemail": {
      source: "iana",
      extensions: ["see"]
    },
    "application/vnd.seis+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.sema": {
      source: "iana",
      extensions: ["sema"]
    },
    "application/vnd.semd": {
      source: "iana",
      extensions: ["semd"]
    },
    "application/vnd.semf": {
      source: "iana",
      extensions: ["semf"]
    },
    "application/vnd.shade-save-file": {
      source: "iana"
    },
    "application/vnd.shana.informed.formdata": {
      source: "iana",
      extensions: ["ifm"]
    },
    "application/vnd.shana.informed.formtemplate": {
      source: "iana",
      extensions: ["itp"]
    },
    "application/vnd.shana.informed.interchange": {
      source: "iana",
      extensions: ["iif"]
    },
    "application/vnd.shana.informed.package": {
      source: "iana",
      extensions: ["ipk"]
    },
    "application/vnd.shootproof+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.shopkick+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.shp": {
      source: "iana"
    },
    "application/vnd.shx": {
      source: "iana"
    },
    "application/vnd.sigrok.session": {
      source: "iana"
    },
    "application/vnd.simtech-mindmapper": {
      source: "iana",
      extensions: ["twd", "twds"]
    },
    "application/vnd.siren+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.smaf": {
      source: "iana",
      extensions: ["mmf"]
    },
    "application/vnd.smart.notebook": {
      source: "iana"
    },
    "application/vnd.smart.teacher": {
      source: "iana",
      extensions: ["teacher"]
    },
    "application/vnd.snesdev-page-table": {
      source: "iana"
    },
    "application/vnd.software602.filler.form+xml": {
      source: "iana",
      compressible: true,
      extensions: ["fo"]
    },
    "application/vnd.software602.filler.form-xml-zip": {
      source: "iana"
    },
    "application/vnd.solent.sdkm+xml": {
      source: "iana",
      compressible: true,
      extensions: ["sdkm", "sdkd"]
    },
    "application/vnd.spotfire.dxp": {
      source: "iana",
      extensions: ["dxp"]
    },
    "application/vnd.spotfire.sfs": {
      source: "iana",
      extensions: ["sfs"]
    },
    "application/vnd.sqlite3": {
      source: "iana"
    },
    "application/vnd.sss-cod": {
      source: "iana"
    },
    "application/vnd.sss-dtf": {
      source: "iana"
    },
    "application/vnd.sss-ntf": {
      source: "iana"
    },
    "application/vnd.stardivision.calc": {
      source: "apache",
      extensions: ["sdc"]
    },
    "application/vnd.stardivision.draw": {
      source: "apache",
      extensions: ["sda"]
    },
    "application/vnd.stardivision.impress": {
      source: "apache",
      extensions: ["sdd"]
    },
    "application/vnd.stardivision.math": {
      source: "apache",
      extensions: ["smf"]
    },
    "application/vnd.stardivision.writer": {
      source: "apache",
      extensions: ["sdw", "vor"]
    },
    "application/vnd.stardivision.writer-global": {
      source: "apache",
      extensions: ["sgl"]
    },
    "application/vnd.stepmania.package": {
      source: "iana",
      extensions: ["smzip"]
    },
    "application/vnd.stepmania.stepchart": {
      source: "iana",
      extensions: ["sm"]
    },
    "application/vnd.street-stream": {
      source: "iana"
    },
    "application/vnd.sun.wadl+xml": {
      source: "iana",
      compressible: true,
      extensions: ["wadl"]
    },
    "application/vnd.sun.xml.calc": {
      source: "apache",
      extensions: ["sxc"]
    },
    "application/vnd.sun.xml.calc.template": {
      source: "apache",
      extensions: ["stc"]
    },
    "application/vnd.sun.xml.draw": {
      source: "apache",
      extensions: ["sxd"]
    },
    "application/vnd.sun.xml.draw.template": {
      source: "apache",
      extensions: ["std"]
    },
    "application/vnd.sun.xml.impress": {
      source: "apache",
      extensions: ["sxi"]
    },
    "application/vnd.sun.xml.impress.template": {
      source: "apache",
      extensions: ["sti"]
    },
    "application/vnd.sun.xml.math": {
      source: "apache",
      extensions: ["sxm"]
    },
    "application/vnd.sun.xml.writer": {
      source: "apache",
      extensions: ["sxw"]
    },
    "application/vnd.sun.xml.writer.global": {
      source: "apache",
      extensions: ["sxg"]
    },
    "application/vnd.sun.xml.writer.template": {
      source: "apache",
      extensions: ["stw"]
    },
    "application/vnd.sus-calendar": {
      source: "iana",
      extensions: ["sus", "susp"]
    },
    "application/vnd.svd": {
      source: "iana",
      extensions: ["svd"]
    },
    "application/vnd.swiftview-ics": {
      source: "iana"
    },
    "application/vnd.sycle+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.syft+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.symbian.install": {
      source: "apache",
      extensions: ["sis", "sisx"]
    },
    "application/vnd.syncml+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true,
      extensions: ["xsm"]
    },
    "application/vnd.syncml.dm+wbxml": {
      source: "iana",
      charset: "UTF-8",
      extensions: ["bdm"]
    },
    "application/vnd.syncml.dm+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true,
      extensions: ["xdm"]
    },
    "application/vnd.syncml.dm.notification": {
      source: "iana"
    },
    "application/vnd.syncml.dmddf+wbxml": {
      source: "iana"
    },
    "application/vnd.syncml.dmddf+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true,
      extensions: ["ddf"]
    },
    "application/vnd.syncml.dmtnds+wbxml": {
      source: "iana"
    },
    "application/vnd.syncml.dmtnds+xml": {
      source: "iana",
      charset: "UTF-8",
      compressible: true
    },
    "application/vnd.syncml.ds.notification": {
      source: "iana"
    },
    "application/vnd.tableschema+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.tao.intent-module-archive": {
      source: "iana",
      extensions: ["tao"]
    },
    "application/vnd.tcpdump.pcap": {
      source: "iana",
      extensions: ["pcap", "cap", "dmp"]
    },
    "application/vnd.think-cell.ppttc+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.tmd.mediaflex.api+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.tml": {
      source: "iana"
    },
    "application/vnd.tmobile-livetv": {
      source: "iana",
      extensions: ["tmo"]
    },
    "application/vnd.tri.onesource": {
      source: "iana"
    },
    "application/vnd.trid.tpt": {
      source: "iana",
      extensions: ["tpt"]
    },
    "application/vnd.triscape.mxs": {
      source: "iana",
      extensions: ["mxs"]
    },
    "application/vnd.trueapp": {
      source: "iana",
      extensions: ["tra"]
    },
    "application/vnd.truedoc": {
      source: "iana"
    },
    "application/vnd.ubisoft.webplayer": {
      source: "iana"
    },
    "application/vnd.ufdl": {
      source: "iana",
      extensions: ["ufd", "ufdl"]
    },
    "application/vnd.uiq.theme": {
      source: "iana",
      extensions: ["utz"]
    },
    "application/vnd.umajin": {
      source: "iana",
      extensions: ["umj"]
    },
    "application/vnd.unity": {
      source: "iana",
      extensions: ["unityweb"]
    },
    "application/vnd.uoml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["uoml"]
    },
    "application/vnd.uplanet.alert": {
      source: "iana"
    },
    "application/vnd.uplanet.alert-wbxml": {
      source: "iana"
    },
    "application/vnd.uplanet.bearer-choice": {
      source: "iana"
    },
    "application/vnd.uplanet.bearer-choice-wbxml": {
      source: "iana"
    },
    "application/vnd.uplanet.cacheop": {
      source: "iana"
    },
    "application/vnd.uplanet.cacheop-wbxml": {
      source: "iana"
    },
    "application/vnd.uplanet.channel": {
      source: "iana"
    },
    "application/vnd.uplanet.channel-wbxml": {
      source: "iana"
    },
    "application/vnd.uplanet.list": {
      source: "iana"
    },
    "application/vnd.uplanet.list-wbxml": {
      source: "iana"
    },
    "application/vnd.uplanet.listcmd": {
      source: "iana"
    },
    "application/vnd.uplanet.listcmd-wbxml": {
      source: "iana"
    },
    "application/vnd.uplanet.signal": {
      source: "iana"
    },
    "application/vnd.uri-map": {
      source: "iana"
    },
    "application/vnd.valve.source.material": {
      source: "iana"
    },
    "application/vnd.vcx": {
      source: "iana",
      extensions: ["vcx"]
    },
    "application/vnd.vd-study": {
      source: "iana"
    },
    "application/vnd.vectorworks": {
      source: "iana"
    },
    "application/vnd.vel+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.verimatrix.vcas": {
      source: "iana"
    },
    "application/vnd.veritone.aion+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.veryant.thin": {
      source: "iana"
    },
    "application/vnd.ves.encrypted": {
      source: "iana"
    },
    "application/vnd.vidsoft.vidconference": {
      source: "iana"
    },
    "application/vnd.visio": {
      source: "iana",
      extensions: ["vsd", "vst", "vss", "vsw"]
    },
    "application/vnd.visionary": {
      source: "iana",
      extensions: ["vis"]
    },
    "application/vnd.vividence.scriptfile": {
      source: "iana"
    },
    "application/vnd.vsf": {
      source: "iana",
      extensions: ["vsf"]
    },
    "application/vnd.wap.sic": {
      source: "iana"
    },
    "application/vnd.wap.slc": {
      source: "iana"
    },
    "application/vnd.wap.wbxml": {
      source: "iana",
      charset: "UTF-8",
      extensions: ["wbxml"]
    },
    "application/vnd.wap.wmlc": {
      source: "iana",
      extensions: ["wmlc"]
    },
    "application/vnd.wap.wmlscriptc": {
      source: "iana",
      extensions: ["wmlsc"]
    },
    "application/vnd.webturbo": {
      source: "iana",
      extensions: ["wtb"]
    },
    "application/vnd.wfa.dpp": {
      source: "iana"
    },
    "application/vnd.wfa.p2p": {
      source: "iana"
    },
    "application/vnd.wfa.wsc": {
      source: "iana"
    },
    "application/vnd.windows.devicepairing": {
      source: "iana"
    },
    "application/vnd.wmc": {
      source: "iana"
    },
    "application/vnd.wmf.bootstrap": {
      source: "iana"
    },
    "application/vnd.wolfram.mathematica": {
      source: "iana"
    },
    "application/vnd.wolfram.mathematica.package": {
      source: "iana"
    },
    "application/vnd.wolfram.player": {
      source: "iana",
      extensions: ["nbp"]
    },
    "application/vnd.wordperfect": {
      source: "iana",
      extensions: ["wpd"]
    },
    "application/vnd.wqd": {
      source: "iana",
      extensions: ["wqd"]
    },
    "application/vnd.wrq-hp3000-labelled": {
      source: "iana"
    },
    "application/vnd.wt.stf": {
      source: "iana",
      extensions: ["stf"]
    },
    "application/vnd.wv.csp+wbxml": {
      source: "iana"
    },
    "application/vnd.wv.csp+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.wv.ssp+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.xacml+json": {
      source: "iana",
      compressible: true
    },
    "application/vnd.xara": {
      source: "iana",
      extensions: ["xar"]
    },
    "application/vnd.xfdl": {
      source: "iana",
      extensions: ["xfdl"]
    },
    "application/vnd.xfdl.webform": {
      source: "iana"
    },
    "application/vnd.xmi+xml": {
      source: "iana",
      compressible: true
    },
    "application/vnd.xmpie.cpkg": {
      source: "iana"
    },
    "application/vnd.xmpie.dpkg": {
      source: "iana"
    },
    "application/vnd.xmpie.plan": {
      source: "iana"
    },
    "application/vnd.xmpie.ppkg": {
      source: "iana"
    },
    "application/vnd.xmpie.xlim": {
      source: "iana"
    },
    "application/vnd.yamaha.hv-dic": {
      source: "iana",
      extensions: ["hvd"]
    },
    "application/vnd.yamaha.hv-script": {
      source: "iana",
      extensions: ["hvs"]
    },
    "application/vnd.yamaha.hv-voice": {
      source: "iana",
      extensions: ["hvp"]
    },
    "application/vnd.yamaha.openscoreformat": {
      source: "iana",
      extensions: ["osf"]
    },
    "application/vnd.yamaha.openscoreformat.osfpvg+xml": {
      source: "iana",
      compressible: true,
      extensions: ["osfpvg"]
    },
    "application/vnd.yamaha.remote-setup": {
      source: "iana"
    },
    "application/vnd.yamaha.smaf-audio": {
      source: "iana",
      extensions: ["saf"]
    },
    "application/vnd.yamaha.smaf-phrase": {
      source: "iana",
      extensions: ["spf"]
    },
    "application/vnd.yamaha.through-ngn": {
      source: "iana"
    },
    "application/vnd.yamaha.tunnel-udpencap": {
      source: "iana"
    },
    "application/vnd.yaoweme": {
      source: "iana"
    },
    "application/vnd.yellowriver-custom-menu": {
      source: "iana",
      extensions: ["cmp"]
    },
    "application/vnd.youtube.yt": {
      source: "iana"
    },
    "application/vnd.zul": {
      source: "iana",
      extensions: ["zir", "zirz"]
    },
    "application/vnd.zzazz.deck+xml": {
      source: "iana",
      compressible: true,
      extensions: ["zaz"]
    },
    "application/voicexml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["vxml"]
    },
    "application/voucher-cms+json": {
      source: "iana",
      compressible: true
    },
    "application/vq-rtcpxr": {
      source: "iana"
    },
    "application/wasm": {
      source: "iana",
      compressible: true,
      extensions: ["wasm"]
    },
    "application/watcherinfo+xml": {
      source: "iana",
      compressible: true,
      extensions: ["wif"]
    },
    "application/webpush-options+json": {
      source: "iana",
      compressible: true
    },
    "application/whoispp-query": {
      source: "iana"
    },
    "application/whoispp-response": {
      source: "iana"
    },
    "application/widget": {
      source: "iana",
      extensions: ["wgt"]
    },
    "application/winhlp": {
      source: "apache",
      extensions: ["hlp"]
    },
    "application/wita": {
      source: "iana"
    },
    "application/wordperfect5.1": {
      source: "iana"
    },
    "application/wsdl+xml": {
      source: "iana",
      compressible: true,
      extensions: ["wsdl"]
    },
    "application/wspolicy+xml": {
      source: "iana",
      compressible: true,
      extensions: ["wspolicy"]
    },
    "application/x-7z-compressed": {
      source: "apache",
      compressible: false,
      extensions: ["7z"]
    },
    "application/x-abiword": {
      source: "apache",
      extensions: ["abw"]
    },
    "application/x-ace-compressed": {
      source: "apache",
      extensions: ["ace"]
    },
    "application/x-amf": {
      source: "apache"
    },
    "application/x-apple-diskimage": {
      source: "apache",
      extensions: ["dmg"]
    },
    "application/x-arj": {
      compressible: false,
      extensions: ["arj"]
    },
    "application/x-authorware-bin": {
      source: "apache",
      extensions: ["aab", "x32", "u32", "vox"]
    },
    "application/x-authorware-map": {
      source: "apache",
      extensions: ["aam"]
    },
    "application/x-authorware-seg": {
      source: "apache",
      extensions: ["aas"]
    },
    "application/x-bcpio": {
      source: "apache",
      extensions: ["bcpio"]
    },
    "application/x-bdoc": {
      compressible: false,
      extensions: ["bdoc"]
    },
    "application/x-bittorrent": {
      source: "apache",
      extensions: ["torrent"]
    },
    "application/x-blorb": {
      source: "apache",
      extensions: ["blb", "blorb"]
    },
    "application/x-bzip": {
      source: "apache",
      compressible: false,
      extensions: ["bz"]
    },
    "application/x-bzip2": {
      source: "apache",
      compressible: false,
      extensions: ["bz2", "boz"]
    },
    "application/x-cbr": {
      source: "apache",
      extensions: ["cbr", "cba", "cbt", "cbz", "cb7"]
    },
    "application/x-cdlink": {
      source: "apache",
      extensions: ["vcd"]
    },
    "application/x-cfs-compressed": {
      source: "apache",
      extensions: ["cfs"]
    },
    "application/x-chat": {
      source: "apache",
      extensions: ["chat"]
    },
    "application/x-chess-pgn": {
      source: "apache",
      extensions: ["pgn"]
    },
    "application/x-chrome-extension": {
      extensions: ["crx"]
    },
    "application/x-cocoa": {
      source: "nginx",
      extensions: ["cco"]
    },
    "application/x-compress": {
      source: "apache"
    },
    "application/x-conference": {
      source: "apache",
      extensions: ["nsc"]
    },
    "application/x-cpio": {
      source: "apache",
      extensions: ["cpio"]
    },
    "application/x-csh": {
      source: "apache",
      extensions: ["csh"]
    },
    "application/x-deb": {
      compressible: false
    },
    "application/x-debian-package": {
      source: "apache",
      extensions: ["deb", "udeb"]
    },
    "application/x-dgc-compressed": {
      source: "apache",
      extensions: ["dgc"]
    },
    "application/x-director": {
      source: "apache",
      extensions: ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"]
    },
    "application/x-doom": {
      source: "apache",
      extensions: ["wad"]
    },
    "application/x-dtbncx+xml": {
      source: "apache",
      compressible: true,
      extensions: ["ncx"]
    },
    "application/x-dtbook+xml": {
      source: "apache",
      compressible: true,
      extensions: ["dtb"]
    },
    "application/x-dtbresource+xml": {
      source: "apache",
      compressible: true,
      extensions: ["res"]
    },
    "application/x-dvi": {
      source: "apache",
      compressible: false,
      extensions: ["dvi"]
    },
    "application/x-envoy": {
      source: "apache",
      extensions: ["evy"]
    },
    "application/x-eva": {
      source: "apache",
      extensions: ["eva"]
    },
    "application/x-font-bdf": {
      source: "apache",
      extensions: ["bdf"]
    },
    "application/x-font-dos": {
      source: "apache"
    },
    "application/x-font-framemaker": {
      source: "apache"
    },
    "application/x-font-ghostscript": {
      source: "apache",
      extensions: ["gsf"]
    },
    "application/x-font-libgrx": {
      source: "apache"
    },
    "application/x-font-linux-psf": {
      source: "apache",
      extensions: ["psf"]
    },
    "application/x-font-pcf": {
      source: "apache",
      extensions: ["pcf"]
    },
    "application/x-font-snf": {
      source: "apache",
      extensions: ["snf"]
    },
    "application/x-font-speedo": {
      source: "apache"
    },
    "application/x-font-sunos-news": {
      source: "apache"
    },
    "application/x-font-type1": {
      source: "apache",
      extensions: ["pfa", "pfb", "pfm", "afm"]
    },
    "application/x-font-vfont": {
      source: "apache"
    },
    "application/x-freearc": {
      source: "apache",
      extensions: ["arc"]
    },
    "application/x-futuresplash": {
      source: "apache",
      extensions: ["spl"]
    },
    "application/x-gca-compressed": {
      source: "apache",
      extensions: ["gca"]
    },
    "application/x-glulx": {
      source: "apache",
      extensions: ["ulx"]
    },
    "application/x-gnumeric": {
      source: "apache",
      extensions: ["gnumeric"]
    },
    "application/x-gramps-xml": {
      source: "apache",
      extensions: ["gramps"]
    },
    "application/x-gtar": {
      source: "apache",
      extensions: ["gtar"]
    },
    "application/x-gzip": {
      source: "apache"
    },
    "application/x-hdf": {
      source: "apache",
      extensions: ["hdf"]
    },
    "application/x-httpd-php": {
      compressible: true,
      extensions: ["php"]
    },
    "application/x-install-instructions": {
      source: "apache",
      extensions: ["install"]
    },
    "application/x-iso9660-image": {
      source: "apache",
      extensions: ["iso"]
    },
    "application/x-iwork-keynote-sffkey": {
      extensions: ["key"]
    },
    "application/x-iwork-numbers-sffnumbers": {
      extensions: ["numbers"]
    },
    "application/x-iwork-pages-sffpages": {
      extensions: ["pages"]
    },
    "application/x-java-archive-diff": {
      source: "nginx",
      extensions: ["jardiff"]
    },
    "application/x-java-jnlp-file": {
      source: "apache",
      compressible: false,
      extensions: ["jnlp"]
    },
    "application/x-javascript": {
      compressible: true
    },
    "application/x-keepass2": {
      extensions: ["kdbx"]
    },
    "application/x-latex": {
      source: "apache",
      compressible: false,
      extensions: ["latex"]
    },
    "application/x-lua-bytecode": {
      extensions: ["luac"]
    },
    "application/x-lzh-compressed": {
      source: "apache",
      extensions: ["lzh", "lha"]
    },
    "application/x-makeself": {
      source: "nginx",
      extensions: ["run"]
    },
    "application/x-mie": {
      source: "apache",
      extensions: ["mie"]
    },
    "application/x-mobipocket-ebook": {
      source: "apache",
      extensions: ["prc", "mobi"]
    },
    "application/x-mpegurl": {
      compressible: false
    },
    "application/x-ms-application": {
      source: "apache",
      extensions: ["application"]
    },
    "application/x-ms-shortcut": {
      source: "apache",
      extensions: ["lnk"]
    },
    "application/x-ms-wmd": {
      source: "apache",
      extensions: ["wmd"]
    },
    "application/x-ms-wmz": {
      source: "apache",
      extensions: ["wmz"]
    },
    "application/x-ms-xbap": {
      source: "apache",
      extensions: ["xbap"]
    },
    "application/x-msaccess": {
      source: "apache",
      extensions: ["mdb"]
    },
    "application/x-msbinder": {
      source: "apache",
      extensions: ["obd"]
    },
    "application/x-mscardfile": {
      source: "apache",
      extensions: ["crd"]
    },
    "application/x-msclip": {
      source: "apache",
      extensions: ["clp"]
    },
    "application/x-msdos-program": {
      extensions: ["exe"]
    },
    "application/x-msdownload": {
      source: "apache",
      extensions: ["exe", "dll", "com", "bat", "msi"]
    },
    "application/x-msmediaview": {
      source: "apache",
      extensions: ["mvb", "m13", "m14"]
    },
    "application/x-msmetafile": {
      source: "apache",
      extensions: ["wmf", "wmz", "emf", "emz"]
    },
    "application/x-msmoney": {
      source: "apache",
      extensions: ["mny"]
    },
    "application/x-mspublisher": {
      source: "apache",
      extensions: ["pub"]
    },
    "application/x-msschedule": {
      source: "apache",
      extensions: ["scd"]
    },
    "application/x-msterminal": {
      source: "apache",
      extensions: ["trm"]
    },
    "application/x-mswrite": {
      source: "apache",
      extensions: ["wri"]
    },
    "application/x-netcdf": {
      source: "apache",
      extensions: ["nc", "cdf"]
    },
    "application/x-ns-proxy-autoconfig": {
      compressible: true,
      extensions: ["pac"]
    },
    "application/x-nzb": {
      source: "apache",
      extensions: ["nzb"]
    },
    "application/x-perl": {
      source: "nginx",
      extensions: ["pl", "pm"]
    },
    "application/x-pilot": {
      source: "nginx",
      extensions: ["prc", "pdb"]
    },
    "application/x-pkcs12": {
      source: "apache",
      compressible: false,
      extensions: ["p12", "pfx"]
    },
    "application/x-pkcs7-certificates": {
      source: "apache",
      extensions: ["p7b", "spc"]
    },
    "application/x-pkcs7-certreqresp": {
      source: "apache",
      extensions: ["p7r"]
    },
    "application/x-pki-message": {
      source: "iana"
    },
    "application/x-rar-compressed": {
      source: "apache",
      compressible: false,
      extensions: ["rar"]
    },
    "application/x-redhat-package-manager": {
      source: "nginx",
      extensions: ["rpm"]
    },
    "application/x-research-info-systems": {
      source: "apache",
      extensions: ["ris"]
    },
    "application/x-sea": {
      source: "nginx",
      extensions: ["sea"]
    },
    "application/x-sh": {
      source: "apache",
      compressible: true,
      extensions: ["sh"]
    },
    "application/x-shar": {
      source: "apache",
      extensions: ["shar"]
    },
    "application/x-shockwave-flash": {
      source: "apache",
      compressible: false,
      extensions: ["swf"]
    },
    "application/x-silverlight-app": {
      source: "apache",
      extensions: ["xap"]
    },
    "application/x-sql": {
      source: "apache",
      extensions: ["sql"]
    },
    "application/x-stuffit": {
      source: "apache",
      compressible: false,
      extensions: ["sit"]
    },
    "application/x-stuffitx": {
      source: "apache",
      extensions: ["sitx"]
    },
    "application/x-subrip": {
      source: "apache",
      extensions: ["srt"]
    },
    "application/x-sv4cpio": {
      source: "apache",
      extensions: ["sv4cpio"]
    },
    "application/x-sv4crc": {
      source: "apache",
      extensions: ["sv4crc"]
    },
    "application/x-t3vm-image": {
      source: "apache",
      extensions: ["t3"]
    },
    "application/x-tads": {
      source: "apache",
      extensions: ["gam"]
    },
    "application/x-tar": {
      source: "apache",
      compressible: true,
      extensions: ["tar"]
    },
    "application/x-tcl": {
      source: "apache",
      extensions: ["tcl", "tk"]
    },
    "application/x-tex": {
      source: "apache",
      extensions: ["tex"]
    },
    "application/x-tex-tfm": {
      source: "apache",
      extensions: ["tfm"]
    },
    "application/x-texinfo": {
      source: "apache",
      extensions: ["texinfo", "texi"]
    },
    "application/x-tgif": {
      source: "apache",
      extensions: ["obj"]
    },
    "application/x-ustar": {
      source: "apache",
      extensions: ["ustar"]
    },
    "application/x-virtualbox-hdd": {
      compressible: true,
      extensions: ["hdd"]
    },
    "application/x-virtualbox-ova": {
      compressible: true,
      extensions: ["ova"]
    },
    "application/x-virtualbox-ovf": {
      compressible: true,
      extensions: ["ovf"]
    },
    "application/x-virtualbox-vbox": {
      compressible: true,
      extensions: ["vbox"]
    },
    "application/x-virtualbox-vbox-extpack": {
      compressible: false,
      extensions: ["vbox-extpack"]
    },
    "application/x-virtualbox-vdi": {
      compressible: true,
      extensions: ["vdi"]
    },
    "application/x-virtualbox-vhd": {
      compressible: true,
      extensions: ["vhd"]
    },
    "application/x-virtualbox-vmdk": {
      compressible: true,
      extensions: ["vmdk"]
    },
    "application/x-wais-source": {
      source: "apache",
      extensions: ["src"]
    },
    "application/x-web-app-manifest+json": {
      compressible: true,
      extensions: ["webapp"]
    },
    "application/x-www-form-urlencoded": {
      source: "iana",
      compressible: true
    },
    "application/x-x509-ca-cert": {
      source: "iana",
      extensions: ["der", "crt", "pem"]
    },
    "application/x-x509-ca-ra-cert": {
      source: "iana"
    },
    "application/x-x509-next-ca-cert": {
      source: "iana"
    },
    "application/x-xfig": {
      source: "apache",
      extensions: ["fig"]
    },
    "application/x-xliff+xml": {
      source: "apache",
      compressible: true,
      extensions: ["xlf"]
    },
    "application/x-xpinstall": {
      source: "apache",
      compressible: false,
      extensions: ["xpi"]
    },
    "application/x-xz": {
      source: "apache",
      extensions: ["xz"]
    },
    "application/x-zmachine": {
      source: "apache",
      extensions: ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"]
    },
    "application/x400-bp": {
      source: "iana"
    },
    "application/xacml+xml": {
      source: "iana",
      compressible: true
    },
    "application/xaml+xml": {
      source: "apache",
      compressible: true,
      extensions: ["xaml"]
    },
    "application/xcap-att+xml": {
      source: "iana",
      compressible: true,
      extensions: ["xav"]
    },
    "application/xcap-caps+xml": {
      source: "iana",
      compressible: true,
      extensions: ["xca"]
    },
    "application/xcap-diff+xml": {
      source: "iana",
      compressible: true,
      extensions: ["xdf"]
    },
    "application/xcap-el+xml": {
      source: "iana",
      compressible: true,
      extensions: ["xel"]
    },
    "application/xcap-error+xml": {
      source: "iana",
      compressible: true
    },
    "application/xcap-ns+xml": {
      source: "iana",
      compressible: true,
      extensions: ["xns"]
    },
    "application/xcon-conference-info+xml": {
      source: "iana",
      compressible: true
    },
    "application/xcon-conference-info-diff+xml": {
      source: "iana",
      compressible: true
    },
    "application/xenc+xml": {
      source: "iana",
      compressible: true,
      extensions: ["xenc"]
    },
    "application/xhtml+xml": {
      source: "iana",
      compressible: true,
      extensions: ["xhtml", "xht"]
    },
    "application/xhtml-voice+xml": {
      source: "apache",
      compressible: true
    },
    "application/xliff+xml": {
      source: "iana",
      compressible: true,
      extensions: ["xlf"]
    },
    "application/xml": {
      source: "iana",
      compressible: true,
      extensions: ["xml", "xsl", "xsd", "rng"]
    },
    "application/xml-dtd": {
      source: "iana",
      compressible: true,
      extensions: ["dtd"]
    },
    "application/xml-external-parsed-entity": {
      source: "iana"
    },
    "application/xml-patch+xml": {
      source: "iana",
      compressible: true
    },
    "application/xmpp+xml": {
      source: "iana",
      compressible: true
    },
    "application/xop+xml": {
      source: "iana",
      compressible: true,
      extensions: ["xop"]
    },
    "application/xproc+xml": {
      source: "apache",
      compressible: true,
      extensions: ["xpl"]
    },
    "application/xslt+xml": {
      source: "iana",
      compressible: true,
      extensions: ["xsl", "xslt"]
    },
    "application/xspf+xml": {
      source: "apache",
      compressible: true,
      extensions: ["xspf"]
    },
    "application/xv+xml": {
      source: "iana",
      compressible: true,
      extensions: ["mxml", "xhvml", "xvml", "xvm"]
    },
    "application/yang": {
      source: "iana",
      extensions: ["yang"]
    },
    "application/yang-data+json": {
      source: "iana",
      compressible: true
    },
    "application/yang-data+xml": {
      source: "iana",
      compressible: true
    },
    "application/yang-patch+json": {
      source: "iana",
      compressible: true
    },
    "application/yang-patch+xml": {
      source: "iana",
      compressible: true
    },
    "application/yin+xml": {
      source: "iana",
      compressible: true,
      extensions: ["yin"]
    },
    "application/zip": {
      source: "iana",
      compressible: false,
      extensions: ["zip"]
    },
    "application/zlib": {
      source: "iana"
    },
    "application/zstd": {
      source: "iana"
    },
    "audio/1d-interleaved-parityfec": {
      source: "iana"
    },
    "audio/32kadpcm": {
      source: "iana"
    },
    "audio/3gpp": {
      source: "iana",
      compressible: false,
      extensions: ["3gpp"]
    },
    "audio/3gpp2": {
      source: "iana"
    },
    "audio/aac": {
      source: "iana"
    },
    "audio/ac3": {
      source: "iana"
    },
    "audio/adpcm": {
      source: "apache",
      extensions: ["adp"]
    },
    "audio/amr": {
      source: "iana",
      extensions: ["amr"]
    },
    "audio/amr-wb": {
      source: "iana"
    },
    "audio/amr-wb+": {
      source: "iana"
    },
    "audio/aptx": {
      source: "iana"
    },
    "audio/asc": {
      source: "iana"
    },
    "audio/atrac-advanced-lossless": {
      source: "iana"
    },
    "audio/atrac-x": {
      source: "iana"
    },
    "audio/atrac3": {
      source: "iana"
    },
    "audio/basic": {
      source: "iana",
      compressible: false,
      extensions: ["au", "snd"]
    },
    "audio/bv16": {
      source: "iana"
    },
    "audio/bv32": {
      source: "iana"
    },
    "audio/clearmode": {
      source: "iana"
    },
    "audio/cn": {
      source: "iana"
    },
    "audio/dat12": {
      source: "iana"
    },
    "audio/dls": {
      source: "iana"
    },
    "audio/dsr-es201108": {
      source: "iana"
    },
    "audio/dsr-es202050": {
      source: "iana"
    },
    "audio/dsr-es202211": {
      source: "iana"
    },
    "audio/dsr-es202212": {
      source: "iana"
    },
    "audio/dv": {
      source: "iana"
    },
    "audio/dvi4": {
      source: "iana"
    },
    "audio/eac3": {
      source: "iana"
    },
    "audio/encaprtp": {
      source: "iana"
    },
    "audio/evrc": {
      source: "iana"
    },
    "audio/evrc-qcp": {
      source: "iana"
    },
    "audio/evrc0": {
      source: "iana"
    },
    "audio/evrc1": {
      source: "iana"
    },
    "audio/evrcb": {
      source: "iana"
    },
    "audio/evrcb0": {
      source: "iana"
    },
    "audio/evrcb1": {
      source: "iana"
    },
    "audio/evrcnw": {
      source: "iana"
    },
    "audio/evrcnw0": {
      source: "iana"
    },
    "audio/evrcnw1": {
      source: "iana"
    },
    "audio/evrcwb": {
      source: "iana"
    },
    "audio/evrcwb0": {
      source: "iana"
    },
    "audio/evrcwb1": {
      source: "iana"
    },
    "audio/evs": {
      source: "iana"
    },
    "audio/flexfec": {
      source: "iana"
    },
    "audio/fwdred": {
      source: "iana"
    },
    "audio/g711-0": {
      source: "iana"
    },
    "audio/g719": {
      source: "iana"
    },
    "audio/g722": {
      source: "iana"
    },
    "audio/g7221": {
      source: "iana"
    },
    "audio/g723": {
      source: "iana"
    },
    "audio/g726-16": {
      source: "iana"
    },
    "audio/g726-24": {
      source: "iana"
    },
    "audio/g726-32": {
      source: "iana"
    },
    "audio/g726-40": {
      source: "iana"
    },
    "audio/g728": {
      source: "iana"
    },
    "audio/g729": {
      source: "iana"
    },
    "audio/g7291": {
      source: "iana"
    },
    "audio/g729d": {
      source: "iana"
    },
    "audio/g729e": {
      source: "iana"
    },
    "audio/gsm": {
      source: "iana"
    },
    "audio/gsm-efr": {
      source: "iana"
    },
    "audio/gsm-hr-08": {
      source: "iana"
    },
    "audio/ilbc": {
      source: "iana"
    },
    "audio/ip-mr_v2.5": {
      source: "iana"
    },
    "audio/isac": {
      source: "apache"
    },
    "audio/l16": {
      source: "iana"
    },
    "audio/l20": {
      source: "iana"
    },
    "audio/l24": {
      source: "iana",
      compressible: false
    },
    "audio/l8": {
      source: "iana"
    },
    "audio/lpc": {
      source: "iana"
    },
    "audio/melp": {
      source: "iana"
    },
    "audio/melp1200": {
      source: "iana"
    },
    "audio/melp2400": {
      source: "iana"
    },
    "audio/melp600": {
      source: "iana"
    },
    "audio/mhas": {
      source: "iana"
    },
    "audio/midi": {
      source: "apache",
      extensions: ["mid", "midi", "kar", "rmi"]
    },
    "audio/mobile-xmf": {
      source: "iana",
      extensions: ["mxmf"]
    },
    "audio/mp3": {
      compressible: false,
      extensions: ["mp3"]
    },
    "audio/mp4": {
      source: "iana",
      compressible: false,
      extensions: ["m4a", "mp4a"]
    },
    "audio/mp4a-latm": {
      source: "iana"
    },
    "audio/mpa": {
      source: "iana"
    },
    "audio/mpa-robust": {
      source: "iana"
    },
    "audio/mpeg": {
      source: "iana",
      compressible: false,
      extensions: ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"]
    },
    "audio/mpeg4-generic": {
      source: "iana"
    },
    "audio/musepack": {
      source: "apache"
    },
    "audio/ogg": {
      source: "iana",
      compressible: false,
      extensions: ["oga", "ogg", "spx", "opus"]
    },
    "audio/opus": {
      source: "iana"
    },
    "audio/parityfec": {
      source: "iana"
    },
    "audio/pcma": {
      source: "iana"
    },
    "audio/pcma-wb": {
      source: "iana"
    },
    "audio/pcmu": {
      source: "iana"
    },
    "audio/pcmu-wb": {
      source: "iana"
    },
    "audio/prs.sid": {
      source: "iana"
    },
    "audio/qcelp": {
      source: "iana"
    },
    "audio/raptorfec": {
      source: "iana"
    },
    "audio/red": {
      source: "iana"
    },
    "audio/rtp-enc-aescm128": {
      source: "iana"
    },
    "audio/rtp-midi": {
      source: "iana"
    },
    "audio/rtploopback": {
      source: "iana"
    },
    "audio/rtx": {
      source: "iana"
    },
    "audio/s3m": {
      source: "apache",
      extensions: ["s3m"]
    },
    "audio/scip": {
      source: "iana"
    },
    "audio/silk": {
      source: "apache",
      extensions: ["sil"]
    },
    "audio/smv": {
      source: "iana"
    },
    "audio/smv-qcp": {
      source: "iana"
    },
    "audio/smv0": {
      source: "iana"
    },
    "audio/sofa": {
      source: "iana"
    },
    "audio/sp-midi": {
      source: "iana"
    },
    "audio/speex": {
      source: "iana"
    },
    "audio/t140c": {
      source: "iana"
    },
    "audio/t38": {
      source: "iana"
    },
    "audio/telephone-event": {
      source: "iana"
    },
    "audio/tetra_acelp": {
      source: "iana"
    },
    "audio/tetra_acelp_bb": {
      source: "iana"
    },
    "audio/tone": {
      source: "iana"
    },
    "audio/tsvcis": {
      source: "iana"
    },
    "audio/uemclip": {
      source: "iana"
    },
    "audio/ulpfec": {
      source: "iana"
    },
    "audio/usac": {
      source: "iana"
    },
    "audio/vdvi": {
      source: "iana"
    },
    "audio/vmr-wb": {
      source: "iana"
    },
    "audio/vnd.3gpp.iufp": {
      source: "iana"
    },
    "audio/vnd.4sb": {
      source: "iana"
    },
    "audio/vnd.audiokoz": {
      source: "iana"
    },
    "audio/vnd.celp": {
      source: "iana"
    },
    "audio/vnd.cisco.nse": {
      source: "iana"
    },
    "audio/vnd.cmles.radio-events": {
      source: "iana"
    },
    "audio/vnd.cns.anp1": {
      source: "iana"
    },
    "audio/vnd.cns.inf1": {
      source: "iana"
    },
    "audio/vnd.dece.audio": {
      source: "iana",
      extensions: ["uva", "uvva"]
    },
    "audio/vnd.digital-winds": {
      source: "iana",
      extensions: ["eol"]
    },
    "audio/vnd.dlna.adts": {
      source: "iana"
    },
    "audio/vnd.dolby.heaac.1": {
      source: "iana"
    },
    "audio/vnd.dolby.heaac.2": {
      source: "iana"
    },
    "audio/vnd.dolby.mlp": {
      source: "iana"
    },
    "audio/vnd.dolby.mps": {
      source: "iana"
    },
    "audio/vnd.dolby.pl2": {
      source: "iana"
    },
    "audio/vnd.dolby.pl2x": {
      source: "iana"
    },
    "audio/vnd.dolby.pl2z": {
      source: "iana"
    },
    "audio/vnd.dolby.pulse.1": {
      source: "iana"
    },
    "audio/vnd.dra": {
      source: "iana",
      extensions: ["dra"]
    },
    "audio/vnd.dts": {
      source: "iana",
      extensions: ["dts"]
    },
    "audio/vnd.dts.hd": {
      source: "iana",
      extensions: ["dtshd"]
    },
    "audio/vnd.dts.uhd": {
      source: "iana"
    },
    "audio/vnd.dvb.file": {
      source: "iana"
    },
    "audio/vnd.everad.plj": {
      source: "iana"
    },
    "audio/vnd.hns.audio": {
      source: "iana"
    },
    "audio/vnd.lucent.voice": {
      source: "iana",
      extensions: ["lvp"]
    },
    "audio/vnd.ms-playready.media.pya": {
      source: "iana",
      extensions: ["pya"]
    },
    "audio/vnd.nokia.mobile-xmf": {
      source: "iana"
    },
    "audio/vnd.nortel.vbk": {
      source: "iana"
    },
    "audio/vnd.nuera.ecelp4800": {
      source: "iana",
      extensions: ["ecelp4800"]
    },
    "audio/vnd.nuera.ecelp7470": {
      source: "iana",
      extensions: ["ecelp7470"]
    },
    "audio/vnd.nuera.ecelp9600": {
      source: "iana",
      extensions: ["ecelp9600"]
    },
    "audio/vnd.octel.sbc": {
      source: "iana"
    },
    "audio/vnd.presonus.multitrack": {
      source: "iana"
    },
    "audio/vnd.qcelp": {
      source: "iana"
    },
    "audio/vnd.rhetorex.32kadpcm": {
      source: "iana"
    },
    "audio/vnd.rip": {
      source: "iana",
      extensions: ["rip"]
    },
    "audio/vnd.rn-realaudio": {
      compressible: false
    },
    "audio/vnd.sealedmedia.softseal.mpeg": {
      source: "iana"
    },
    "audio/vnd.vmx.cvsd": {
      source: "iana"
    },
    "audio/vnd.wave": {
      compressible: false
    },
    "audio/vorbis": {
      source: "iana",
      compressible: false
    },
    "audio/vorbis-config": {
      source: "iana"
    },
    "audio/wav": {
      compressible: false,
      extensions: ["wav"]
    },
    "audio/wave": {
      compressible: false,
      extensions: ["wav"]
    },
    "audio/webm": {
      source: "apache",
      compressible: false,
      extensions: ["weba"]
    },
    "audio/x-aac": {
      source: "apache",
      compressible: false,
      extensions: ["aac"]
    },
    "audio/x-aiff": {
      source: "apache",
      extensions: ["aif", "aiff", "aifc"]
    },
    "audio/x-caf": {
      source: "apache",
      compressible: false,
      extensions: ["caf"]
    },
    "audio/x-flac": {
      source: "apache",
      extensions: ["flac"]
    },
    "audio/x-m4a": {
      source: "nginx",
      extensions: ["m4a"]
    },
    "audio/x-matroska": {
      source: "apache",
      extensions: ["mka"]
    },
    "audio/x-mpegurl": {
      source: "apache",
      extensions: ["m3u"]
    },
    "audio/x-ms-wax": {
      source: "apache",
      extensions: ["wax"]
    },
    "audio/x-ms-wma": {
      source: "apache",
      extensions: ["wma"]
    },
    "audio/x-pn-realaudio": {
      source: "apache",
      extensions: ["ram", "ra"]
    },
    "audio/x-pn-realaudio-plugin": {
      source: "apache",
      extensions: ["rmp"]
    },
    "audio/x-realaudio": {
      source: "nginx",
      extensions: ["ra"]
    },
    "audio/x-tta": {
      source: "apache"
    },
    "audio/x-wav": {
      source: "apache",
      extensions: ["wav"]
    },
    "audio/xm": {
      source: "apache",
      extensions: ["xm"]
    },
    "chemical/x-cdx": {
      source: "apache",
      extensions: ["cdx"]
    },
    "chemical/x-cif": {
      source: "apache",
      extensions: ["cif"]
    },
    "chemical/x-cmdf": {
      source: "apache",
      extensions: ["cmdf"]
    },
    "chemical/x-cml": {
      source: "apache",
      extensions: ["cml"]
    },
    "chemical/x-csml": {
      source: "apache",
      extensions: ["csml"]
    },
    "chemical/x-pdb": {
      source: "apache"
    },
    "chemical/x-xyz": {
      source: "apache",
      extensions: ["xyz"]
    },
    "font/collection": {
      source: "iana",
      extensions: ["ttc"]
    },
    "font/otf": {
      source: "iana",
      compressible: true,
      extensions: ["otf"]
    },
    "font/sfnt": {
      source: "iana"
    },
    "font/ttf": {
      source: "iana",
      compressible: true,
      extensions: ["ttf"]
    },
    "font/woff": {
      source: "iana",
      extensions: ["woff"]
    },
    "font/woff2": {
      source: "iana",
      extensions: ["woff2"]
    },
    "image/aces": {
      source: "iana",
      extensions: ["exr"]
    },
    "image/apng": {
      compressible: false,
      extensions: ["apng"]
    },
    "image/avci": {
      source: "iana",
      extensions: ["avci"]
    },
    "image/avcs": {
      source: "iana",
      extensions: ["avcs"]
    },
    "image/avif": {
      source: "iana",
      compressible: false,
      extensions: ["avif"]
    },
    "image/bmp": {
      source: "iana",
      compressible: true,
      extensions: ["bmp"]
    },
    "image/cgm": {
      source: "iana",
      extensions: ["cgm"]
    },
    "image/dicom-rle": {
      source: "iana",
      extensions: ["drle"]
    },
    "image/emf": {
      source: "iana",
      extensions: ["emf"]
    },
    "image/fits": {
      source: "iana",
      extensions: ["fits"]
    },
    "image/g3fax": {
      source: "iana",
      extensions: ["g3"]
    },
    "image/gif": {
      source: "iana",
      compressible: false,
      extensions: ["gif"]
    },
    "image/heic": {
      source: "iana",
      extensions: ["heic"]
    },
    "image/heic-sequence": {
      source: "iana",
      extensions: ["heics"]
    },
    "image/heif": {
      source: "iana",
      extensions: ["heif"]
    },
    "image/heif-sequence": {
      source: "iana",
      extensions: ["heifs"]
    },
    "image/hej2k": {
      source: "iana",
      extensions: ["hej2"]
    },
    "image/hsj2": {
      source: "iana",
      extensions: ["hsj2"]
    },
    "image/ief": {
      source: "iana",
      extensions: ["ief"]
    },
    "image/jls": {
      source: "iana",
      extensions: ["jls"]
    },
    "image/jp2": {
      source: "iana",
      compressible: false,
      extensions: ["jp2", "jpg2"]
    },
    "image/jpeg": {
      source: "iana",
      compressible: false,
      extensions: ["jpeg", "jpg", "jpe"]
    },
    "image/jph": {
      source: "iana",
      extensions: ["jph"]
    },
    "image/jphc": {
      source: "iana",
      extensions: ["jhc"]
    },
    "image/jpm": {
      source: "iana",
      compressible: false,
      extensions: ["jpm"]
    },
    "image/jpx": {
      source: "iana",
      compressible: false,
      extensions: ["jpx", "jpf"]
    },
    "image/jxr": {
      source: "iana",
      extensions: ["jxr"]
    },
    "image/jxra": {
      source: "iana",
      extensions: ["jxra"]
    },
    "image/jxrs": {
      source: "iana",
      extensions: ["jxrs"]
    },
    "image/jxs": {
      source: "iana",
      extensions: ["jxs"]
    },
    "image/jxsc": {
      source: "iana",
      extensions: ["jxsc"]
    },
    "image/jxsi": {
      source: "iana",
      extensions: ["jxsi"]
    },
    "image/jxss": {
      source: "iana",
      extensions: ["jxss"]
    },
    "image/ktx": {
      source: "iana",
      extensions: ["ktx"]
    },
    "image/ktx2": {
      source: "iana",
      extensions: ["ktx2"]
    },
    "image/naplps": {
      source: "iana"
    },
    "image/pjpeg": {
      compressible: false
    },
    "image/png": {
      source: "iana",
      compressible: false,
      extensions: ["png"]
    },
    "image/prs.btif": {
      source: "iana",
      extensions: ["btif"]
    },
    "image/prs.pti": {
      source: "iana",
      extensions: ["pti"]
    },
    "image/pwg-raster": {
      source: "iana"
    },
    "image/sgi": {
      source: "apache",
      extensions: ["sgi"]
    },
    "image/svg+xml": {
      source: "iana",
      compressible: true,
      extensions: ["svg", "svgz"]
    },
    "image/t38": {
      source: "iana",
      extensions: ["t38"]
    },
    "image/tiff": {
      source: "iana",
      compressible: false,
      extensions: ["tif", "tiff"]
    },
    "image/tiff-fx": {
      source: "iana",
      extensions: ["tfx"]
    },
    "image/vnd.adobe.photoshop": {
      source: "iana",
      compressible: true,
      extensions: ["psd"]
    },
    "image/vnd.airzip.accelerator.azv": {
      source: "iana",
      extensions: ["azv"]
    },
    "image/vnd.cns.inf2": {
      source: "iana"
    },
    "image/vnd.dece.graphic": {
      source: "iana",
      extensions: ["uvi", "uvvi", "uvg", "uvvg"]
    },
    "image/vnd.djvu": {
      source: "iana",
      extensions: ["djvu", "djv"]
    },
    "image/vnd.dvb.subtitle": {
      source: "iana",
      extensions: ["sub"]
    },
    "image/vnd.dwg": {
      source: "iana",
      extensions: ["dwg"]
    },
    "image/vnd.dxf": {
      source: "iana",
      extensions: ["dxf"]
    },
    "image/vnd.fastbidsheet": {
      source: "iana",
      extensions: ["fbs"]
    },
    "image/vnd.fpx": {
      source: "iana",
      extensions: ["fpx"]
    },
    "image/vnd.fst": {
      source: "iana",
      extensions: ["fst"]
    },
    "image/vnd.fujixerox.edmics-mmr": {
      source: "iana",
      extensions: ["mmr"]
    },
    "image/vnd.fujixerox.edmics-rlc": {
      source: "iana",
      extensions: ["rlc"]
    },
    "image/vnd.globalgraphics.pgb": {
      source: "iana"
    },
    "image/vnd.microsoft.icon": {
      source: "iana",
      compressible: true,
      extensions: ["ico"]
    },
    "image/vnd.mix": {
      source: "iana"
    },
    "image/vnd.mozilla.apng": {
      source: "iana"
    },
    "image/vnd.ms-dds": {
      compressible: true,
      extensions: ["dds"]
    },
    "image/vnd.ms-modi": {
      source: "iana",
      extensions: ["mdi"]
    },
    "image/vnd.ms-photo": {
      source: "apache",
      extensions: ["wdp"]
    },
    "image/vnd.net-fpx": {
      source: "iana",
      extensions: ["npx"]
    },
    "image/vnd.pco.b16": {
      source: "iana",
      extensions: ["b16"]
    },
    "image/vnd.radiance": {
      source: "iana"
    },
    "image/vnd.sealed.png": {
      source: "iana"
    },
    "image/vnd.sealedmedia.softseal.gif": {
      source: "iana"
    },
    "image/vnd.sealedmedia.softseal.jpg": {
      source: "iana"
    },
    "image/vnd.svf": {
      source: "iana"
    },
    "image/vnd.tencent.tap": {
      source: "iana",
      extensions: ["tap"]
    },
    "image/vnd.valve.source.texture": {
      source: "iana",
      extensions: ["vtf"]
    },
    "image/vnd.wap.wbmp": {
      source: "iana",
      extensions: ["wbmp"]
    },
    "image/vnd.xiff": {
      source: "iana",
      extensions: ["xif"]
    },
    "image/vnd.zbrush.pcx": {
      source: "iana",
      extensions: ["pcx"]
    },
    "image/webp": {
      source: "apache",
      extensions: ["webp"]
    },
    "image/wmf": {
      source: "iana",
      extensions: ["wmf"]
    },
    "image/x-3ds": {
      source: "apache",
      extensions: ["3ds"]
    },
    "image/x-cmu-raster": {
      source: "apache",
      extensions: ["ras"]
    },
    "image/x-cmx": {
      source: "apache",
      extensions: ["cmx"]
    },
    "image/x-freehand": {
      source: "apache",
      extensions: ["fh", "fhc", "fh4", "fh5", "fh7"]
    },
    "image/x-icon": {
      source: "apache",
      compressible: true,
      extensions: ["ico"]
    },
    "image/x-jng": {
      source: "nginx",
      extensions: ["jng"]
    },
    "image/x-mrsid-image": {
      source: "apache",
      extensions: ["sid"]
    },
    "image/x-ms-bmp": {
      source: "nginx",
      compressible: true,
      extensions: ["bmp"]
    },
    "image/x-pcx": {
      source: "apache",
      extensions: ["pcx"]
    },
    "image/x-pict": {
      source: "apache",
      extensions: ["pic", "pct"]
    },
    "image/x-portable-anymap": {
      source: "apache",
      extensions: ["pnm"]
    },
    "image/x-portable-bitmap": {
      source: "apache",
      extensions: ["pbm"]
    },
    "image/x-portable-graymap": {
      source: "apache",
      extensions: ["pgm"]
    },
    "image/x-portable-pixmap": {
      source: "apache",
      extensions: ["ppm"]
    },
    "image/x-rgb": {
      source: "apache",
      extensions: ["rgb"]
    },
    "image/x-tga": {
      source: "apache",
      extensions: ["tga"]
    },
    "image/x-xbitmap": {
      source: "apache",
      extensions: ["xbm"]
    },
    "image/x-xcf": {
      compressible: false
    },
    "image/x-xpixmap": {
      source: "apache",
      extensions: ["xpm"]
    },
    "image/x-xwindowdump": {
      source: "apache",
      extensions: ["xwd"]
    },
    "message/cpim": {
      source: "iana"
    },
    "message/delivery-status": {
      source: "iana"
    },
    "message/disposition-notification": {
      source: "iana",
      extensions: [
        "disposition-notification"
      ]
    },
    "message/external-body": {
      source: "iana"
    },
    "message/feedback-report": {
      source: "iana"
    },
    "message/global": {
      source: "iana",
      extensions: ["u8msg"]
    },
    "message/global-delivery-status": {
      source: "iana",
      extensions: ["u8dsn"]
    },
    "message/global-disposition-notification": {
      source: "iana",
      extensions: ["u8mdn"]
    },
    "message/global-headers": {
      source: "iana",
      extensions: ["u8hdr"]
    },
    "message/http": {
      source: "iana",
      compressible: false
    },
    "message/imdn+xml": {
      source: "iana",
      compressible: true
    },
    "message/news": {
      source: "iana"
    },
    "message/partial": {
      source: "iana",
      compressible: false
    },
    "message/rfc822": {
      source: "iana",
      compressible: true,
      extensions: ["eml", "mime"]
    },
    "message/s-http": {
      source: "iana"
    },
    "message/sip": {
      source: "iana"
    },
    "message/sipfrag": {
      source: "iana"
    },
    "message/tracking-status": {
      source: "iana"
    },
    "message/vnd.si.simp": {
      source: "iana"
    },
    "message/vnd.wfa.wsc": {
      source: "iana",
      extensions: ["wsc"]
    },
    "model/3mf": {
      source: "iana",
      extensions: ["3mf"]
    },
    "model/e57": {
      source: "iana"
    },
    "model/gltf+json": {
      source: "iana",
      compressible: true,
      extensions: ["gltf"]
    },
    "model/gltf-binary": {
      source: "iana",
      compressible: true,
      extensions: ["glb"]
    },
    "model/iges": {
      source: "iana",
      compressible: false,
      extensions: ["igs", "iges"]
    },
    "model/mesh": {
      source: "iana",
      compressible: false,
      extensions: ["msh", "mesh", "silo"]
    },
    "model/mtl": {
      source: "iana",
      extensions: ["mtl"]
    },
    "model/obj": {
      source: "iana",
      extensions: ["obj"]
    },
    "model/step": {
      source: "iana"
    },
    "model/step+xml": {
      source: "iana",
      compressible: true,
      extensions: ["stpx"]
    },
    "model/step+zip": {
      source: "iana",
      compressible: false,
      extensions: ["stpz"]
    },
    "model/step-xml+zip": {
      source: "iana",
      compressible: false,
      extensions: ["stpxz"]
    },
    "model/stl": {
      source: "iana",
      extensions: ["stl"]
    },
    "model/vnd.collada+xml": {
      source: "iana",
      compressible: true,
      extensions: ["dae"]
    },
    "model/vnd.dwf": {
      source: "iana",
      extensions: ["dwf"]
    },
    "model/vnd.flatland.3dml": {
      source: "iana"
    },
    "model/vnd.gdl": {
      source: "iana",
      extensions: ["gdl"]
    },
    "model/vnd.gs-gdl": {
      source: "apache"
    },
    "model/vnd.gs.gdl": {
      source: "iana"
    },
    "model/vnd.gtw": {
      source: "iana",
      extensions: ["gtw"]
    },
    "model/vnd.moml+xml": {
      source: "iana",
      compressible: true
    },
    "model/vnd.mts": {
      source: "iana",
      extensions: ["mts"]
    },
    "model/vnd.opengex": {
      source: "iana",
      extensions: ["ogex"]
    },
    "model/vnd.parasolid.transmit.binary": {
      source: "iana",
      extensions: ["x_b"]
    },
    "model/vnd.parasolid.transmit.text": {
      source: "iana",
      extensions: ["x_t"]
    },
    "model/vnd.pytha.pyox": {
      source: "iana"
    },
    "model/vnd.rosette.annotated-data-model": {
      source: "iana"
    },
    "model/vnd.sap.vds": {
      source: "iana",
      extensions: ["vds"]
    },
    "model/vnd.usdz+zip": {
      source: "iana",
      compressible: false,
      extensions: ["usdz"]
    },
    "model/vnd.valve.source.compiled-map": {
      source: "iana",
      extensions: ["bsp"]
    },
    "model/vnd.vtu": {
      source: "iana",
      extensions: ["vtu"]
    },
    "model/vrml": {
      source: "iana",
      compressible: false,
      extensions: ["wrl", "vrml"]
    },
    "model/x3d+binary": {
      source: "apache",
      compressible: false,
      extensions: ["x3db", "x3dbz"]
    },
    "model/x3d+fastinfoset": {
      source: "iana",
      extensions: ["x3db"]
    },
    "model/x3d+vrml": {
      source: "apache",
      compressible: false,
      extensions: ["x3dv", "x3dvz"]
    },
    "model/x3d+xml": {
      source: "iana",
      compressible: true,
      extensions: ["x3d", "x3dz"]
    },
    "model/x3d-vrml": {
      source: "iana",
      extensions: ["x3dv"]
    },
    "multipart/alternative": {
      source: "iana",
      compressible: false
    },
    "multipart/appledouble": {
      source: "iana"
    },
    "multipart/byteranges": {
      source: "iana"
    },
    "multipart/digest": {
      source: "iana"
    },
    "multipart/encrypted": {
      source: "iana",
      compressible: false
    },
    "multipart/form-data": {
      source: "iana",
      compressible: false
    },
    "multipart/header-set": {
      source: "iana"
    },
    "multipart/mixed": {
      source: "iana"
    },
    "multipart/multilingual": {
      source: "iana"
    },
    "multipart/parallel": {
      source: "iana"
    },
    "multipart/related": {
      source: "iana",
      compressible: false
    },
    "multipart/report": {
      source: "iana"
    },
    "multipart/signed": {
      source: "iana",
      compressible: false
    },
    "multipart/vnd.bint.med-plus": {
      source: "iana"
    },
    "multipart/voice-message": {
      source: "iana"
    },
    "multipart/x-mixed-replace": {
      source: "iana"
    },
    "text/1d-interleaved-parityfec": {
      source: "iana"
    },
    "text/cache-manifest": {
      source: "iana",
      compressible: true,
      extensions: ["appcache", "manifest"]
    },
    "text/calendar": {
      source: "iana",
      extensions: ["ics", "ifb"]
    },
    "text/calender": {
      compressible: true
    },
    "text/cmd": {
      compressible: true
    },
    "text/coffeescript": {
      extensions: ["coffee", "litcoffee"]
    },
    "text/cql": {
      source: "iana"
    },
    "text/cql-expression": {
      source: "iana"
    },
    "text/cql-identifier": {
      source: "iana"
    },
    "text/css": {
      source: "iana",
      charset: "UTF-8",
      compressible: true,
      extensions: ["css"]
    },
    "text/csv": {
      source: "iana",
      compressible: true,
      extensions: ["csv"]
    },
    "text/csv-schema": {
      source: "iana"
    },
    "text/directory": {
      source: "iana"
    },
    "text/dns": {
      source: "iana"
    },
    "text/ecmascript": {
      source: "iana"
    },
    "text/encaprtp": {
      source: "iana"
    },
    "text/enriched": {
      source: "iana"
    },
    "text/fhirpath": {
      source: "iana"
    },
    "text/flexfec": {
      source: "iana"
    },
    "text/fwdred": {
      source: "iana"
    },
    "text/gff3": {
      source: "iana"
    },
    "text/grammar-ref-list": {
      source: "iana"
    },
    "text/html": {
      source: "iana",
      compressible: true,
      extensions: ["html", "htm", "shtml"]
    },
    "text/jade": {
      extensions: ["jade"]
    },
    "text/javascript": {
      source: "iana",
      compressible: true
    },
    "text/jcr-cnd": {
      source: "iana"
    },
    "text/jsx": {
      compressible: true,
      extensions: ["jsx"]
    },
    "text/less": {
      compressible: true,
      extensions: ["less"]
    },
    "text/markdown": {
      source: "iana",
      compressible: true,
      extensions: ["markdown", "md"]
    },
    "text/mathml": {
      source: "nginx",
      extensions: ["mml"]
    },
    "text/mdx": {
      compressible: true,
      extensions: ["mdx"]
    },
    "text/mizar": {
      source: "iana"
    },
    "text/n3": {
      source: "iana",
      charset: "UTF-8",
      compressible: true,
      extensions: ["n3"]
    },
    "text/parameters": {
      source: "iana",
      charset: "UTF-8"
    },
    "text/parityfec": {
      source: "iana"
    },
    "text/plain": {
      source: "iana",
      compressible: true,
      extensions: ["txt", "text", "conf", "def", "list", "log", "in", "ini"]
    },
    "text/provenance-notation": {
      source: "iana",
      charset: "UTF-8"
    },
    "text/prs.fallenstein.rst": {
      source: "iana"
    },
    "text/prs.lines.tag": {
      source: "iana",
      extensions: ["dsc"]
    },
    "text/prs.prop.logic": {
      source: "iana"
    },
    "text/raptorfec": {
      source: "iana"
    },
    "text/red": {
      source: "iana"
    },
    "text/rfc822-headers": {
      source: "iana"
    },
    "text/richtext": {
      source: "iana",
      compressible: true,
      extensions: ["rtx"]
    },
    "text/rtf": {
      source: "iana",
      compressible: true,
      extensions: ["rtf"]
    },
    "text/rtp-enc-aescm128": {
      source: "iana"
    },
    "text/rtploopback": {
      source: "iana"
    },
    "text/rtx": {
      source: "iana"
    },
    "text/sgml": {
      source: "iana",
      extensions: ["sgml", "sgm"]
    },
    "text/shaclc": {
      source: "iana"
    },
    "text/shex": {
      source: "iana",
      extensions: ["shex"]
    },
    "text/slim": {
      extensions: ["slim", "slm"]
    },
    "text/spdx": {
      source: "iana",
      extensions: ["spdx"]
    },
    "text/strings": {
      source: "iana"
    },
    "text/stylus": {
      extensions: ["stylus", "styl"]
    },
    "text/t140": {
      source: "iana"
    },
    "text/tab-separated-values": {
      source: "iana",
      compressible: true,
      extensions: ["tsv"]
    },
    "text/troff": {
      source: "iana",
      extensions: ["t", "tr", "roff", "man", "me", "ms"]
    },
    "text/turtle": {
      source: "iana",
      charset: "UTF-8",
      extensions: ["ttl"]
    },
    "text/ulpfec": {
      source: "iana"
    },
    "text/uri-list": {
      source: "iana",
      compressible: true,
      extensions: ["uri", "uris", "urls"]
    },
    "text/vcard": {
      source: "iana",
      compressible: true,
      extensions: ["vcard"]
    },
    "text/vnd.a": {
      source: "iana"
    },
    "text/vnd.abc": {
      source: "iana"
    },
    "text/vnd.ascii-art": {
      source: "iana"
    },
    "text/vnd.curl": {
      source: "iana",
      extensions: ["curl"]
    },
    "text/vnd.curl.dcurl": {
      source: "apache",
      extensions: ["dcurl"]
    },
    "text/vnd.curl.mcurl": {
      source: "apache",
      extensions: ["mcurl"]
    },
    "text/vnd.curl.scurl": {
      source: "apache",
      extensions: ["scurl"]
    },
    "text/vnd.debian.copyright": {
      source: "iana",
      charset: "UTF-8"
    },
    "text/vnd.dmclientscript": {
      source: "iana"
    },
    "text/vnd.dvb.subtitle": {
      source: "iana",
      extensions: ["sub"]
    },
    "text/vnd.esmertec.theme-descriptor": {
      source: "iana",
      charset: "UTF-8"
    },
    "text/vnd.familysearch.gedcom": {
      source: "iana",
      extensions: ["ged"]
    },
    "text/vnd.ficlab.flt": {
      source: "iana"
    },
    "text/vnd.fly": {
      source: "iana",
      extensions: ["fly"]
    },
    "text/vnd.fmi.flexstor": {
      source: "iana",
      extensions: ["flx"]
    },
    "text/vnd.gml": {
      source: "iana"
    },
    "text/vnd.graphviz": {
      source: "iana",
      extensions: ["gv"]
    },
    "text/vnd.hans": {
      source: "iana"
    },
    "text/vnd.hgl": {
      source: "iana"
    },
    "text/vnd.in3d.3dml": {
      source: "iana",
      extensions: ["3dml"]
    },
    "text/vnd.in3d.spot": {
      source: "iana",
      extensions: ["spot"]
    },
    "text/vnd.iptc.newsml": {
      source: "iana"
    },
    "text/vnd.iptc.nitf": {
      source: "iana"
    },
    "text/vnd.latex-z": {
      source: "iana"
    },
    "text/vnd.motorola.reflex": {
      source: "iana"
    },
    "text/vnd.ms-mediapackage": {
      source: "iana"
    },
    "text/vnd.net2phone.commcenter.command": {
      source: "iana"
    },
    "text/vnd.radisys.msml-basic-layout": {
      source: "iana"
    },
    "text/vnd.senx.warpscript": {
      source: "iana"
    },
    "text/vnd.si.uricatalogue": {
      source: "iana"
    },
    "text/vnd.sosi": {
      source: "iana"
    },
    "text/vnd.sun.j2me.app-descriptor": {
      source: "iana",
      charset: "UTF-8",
      extensions: ["jad"]
    },
    "text/vnd.trolltech.linguist": {
      source: "iana",
      charset: "UTF-8"
    },
    "text/vnd.wap.si": {
      source: "iana"
    },
    "text/vnd.wap.sl": {
      source: "iana"
    },
    "text/vnd.wap.wml": {
      source: "iana",
      extensions: ["wml"]
    },
    "text/vnd.wap.wmlscript": {
      source: "iana",
      extensions: ["wmls"]
    },
    "text/vtt": {
      source: "iana",
      charset: "UTF-8",
      compressible: true,
      extensions: ["vtt"]
    },
    "text/x-asm": {
      source: "apache",
      extensions: ["s", "asm"]
    },
    "text/x-c": {
      source: "apache",
      extensions: ["c", "cc", "cxx", "cpp", "h", "hh", "dic"]
    },
    "text/x-component": {
      source: "nginx",
      extensions: ["htc"]
    },
    "text/x-fortran": {
      source: "apache",
      extensions: ["f", "for", "f77", "f90"]
    },
    "text/x-gwt-rpc": {
      compressible: true
    },
    "text/x-handlebars-template": {
      extensions: ["hbs"]
    },
    "text/x-java-source": {
      source: "apache",
      extensions: ["java"]
    },
    "text/x-jquery-tmpl": {
      compressible: true
    },
    "text/x-lua": {
      extensions: ["lua"]
    },
    "text/x-markdown": {
      compressible: true,
      extensions: ["mkd"]
    },
    "text/x-nfo": {
      source: "apache",
      extensions: ["nfo"]
    },
    "text/x-opml": {
      source: "apache",
      extensions: ["opml"]
    },
    "text/x-org": {
      compressible: true,
      extensions: ["org"]
    },
    "text/x-pascal": {
      source: "apache",
      extensions: ["p", "pas"]
    },
    "text/x-processing": {
      compressible: true,
      extensions: ["pde"]
    },
    "text/x-sass": {
      extensions: ["sass"]
    },
    "text/x-scss": {
      extensions: ["scss"]
    },
    "text/x-setext": {
      source: "apache",
      extensions: ["etx"]
    },
    "text/x-sfv": {
      source: "apache",
      extensions: ["sfv"]
    },
    "text/x-suse-ymp": {
      compressible: true,
      extensions: ["ymp"]
    },
    "text/x-uuencode": {
      source: "apache",
      extensions: ["uu"]
    },
    "text/x-vcalendar": {
      source: "apache",
      extensions: ["vcs"]
    },
    "text/x-vcard": {
      source: "apache",
      extensions: ["vcf"]
    },
    "text/xml": {
      source: "iana",
      compressible: true,
      extensions: ["xml"]
    },
    "text/xml-external-parsed-entity": {
      source: "iana"
    },
    "text/yaml": {
      compressible: true,
      extensions: ["yaml", "yml"]
    },
    "video/1d-interleaved-parityfec": {
      source: "iana"
    },
    "video/3gpp": {
      source: "iana",
      extensions: ["3gp", "3gpp"]
    },
    "video/3gpp-tt": {
      source: "iana"
    },
    "video/3gpp2": {
      source: "iana",
      extensions: ["3g2"]
    },
    "video/av1": {
      source: "iana"
    },
    "video/bmpeg": {
      source: "iana"
    },
    "video/bt656": {
      source: "iana"
    },
    "video/celb": {
      source: "iana"
    },
    "video/dv": {
      source: "iana"
    },
    "video/encaprtp": {
      source: "iana"
    },
    "video/ffv1": {
      source: "iana"
    },
    "video/flexfec": {
      source: "iana"
    },
    "video/h261": {
      source: "iana",
      extensions: ["h261"]
    },
    "video/h263": {
      source: "iana",
      extensions: ["h263"]
    },
    "video/h263-1998": {
      source: "iana"
    },
    "video/h263-2000": {
      source: "iana"
    },
    "video/h264": {
      source: "iana",
      extensions: ["h264"]
    },
    "video/h264-rcdo": {
      source: "iana"
    },
    "video/h264-svc": {
      source: "iana"
    },
    "video/h265": {
      source: "iana"
    },
    "video/iso.segment": {
      source: "iana",
      extensions: ["m4s"]
    },
    "video/jpeg": {
      source: "iana",
      extensions: ["jpgv"]
    },
    "video/jpeg2000": {
      source: "iana"
    },
    "video/jpm": {
      source: "apache",
      extensions: ["jpm", "jpgm"]
    },
    "video/jxsv": {
      source: "iana"
    },
    "video/mj2": {
      source: "iana",
      extensions: ["mj2", "mjp2"]
    },
    "video/mp1s": {
      source: "iana"
    },
    "video/mp2p": {
      source: "iana"
    },
    "video/mp2t": {
      source: "iana",
      extensions: ["ts"]
    },
    "video/mp4": {
      source: "iana",
      compressible: false,
      extensions: ["mp4", "mp4v", "mpg4"]
    },
    "video/mp4v-es": {
      source: "iana"
    },
    "video/mpeg": {
      source: "iana",
      compressible: false,
      extensions: ["mpeg", "mpg", "mpe", "m1v", "m2v"]
    },
    "video/mpeg4-generic": {
      source: "iana"
    },
    "video/mpv": {
      source: "iana"
    },
    "video/nv": {
      source: "iana"
    },
    "video/ogg": {
      source: "iana",
      compressible: false,
      extensions: ["ogv"]
    },
    "video/parityfec": {
      source: "iana"
    },
    "video/pointer": {
      source: "iana"
    },
    "video/quicktime": {
      source: "iana",
      compressible: false,
      extensions: ["qt", "mov"]
    },
    "video/raptorfec": {
      source: "iana"
    },
    "video/raw": {
      source: "iana"
    },
    "video/rtp-enc-aescm128": {
      source: "iana"
    },
    "video/rtploopback": {
      source: "iana"
    },
    "video/rtx": {
      source: "iana"
    },
    "video/scip": {
      source: "iana"
    },
    "video/smpte291": {
      source: "iana"
    },
    "video/smpte292m": {
      source: "iana"
    },
    "video/ulpfec": {
      source: "iana"
    },
    "video/vc1": {
      source: "iana"
    },
    "video/vc2": {
      source: "iana"
    },
    "video/vnd.cctv": {
      source: "iana"
    },
    "video/vnd.dece.hd": {
      source: "iana",
      extensions: ["uvh", "uvvh"]
    },
    "video/vnd.dece.mobile": {
      source: "iana",
      extensions: ["uvm", "uvvm"]
    },
    "video/vnd.dece.mp4": {
      source: "iana"
    },
    "video/vnd.dece.pd": {
      source: "iana",
      extensions: ["uvp", "uvvp"]
    },
    "video/vnd.dece.sd": {
      source: "iana",
      extensions: ["uvs", "uvvs"]
    },
    "video/vnd.dece.video": {
      source: "iana",
      extensions: ["uvv", "uvvv"]
    },
    "video/vnd.directv.mpeg": {
      source: "iana"
    },
    "video/vnd.directv.mpeg-tts": {
      source: "iana"
    },
    "video/vnd.dlna.mpeg-tts": {
      source: "iana"
    },
    "video/vnd.dvb.file": {
      source: "iana",
      extensions: ["dvb"]
    },
    "video/vnd.fvt": {
      source: "iana",
      extensions: ["fvt"]
    },
    "video/vnd.hns.video": {
      source: "iana"
    },
    "video/vnd.iptvforum.1dparityfec-1010": {
      source: "iana"
    },
    "video/vnd.iptvforum.1dparityfec-2005": {
      source: "iana"
    },
    "video/vnd.iptvforum.2dparityfec-1010": {
      source: "iana"
    },
    "video/vnd.iptvforum.2dparityfec-2005": {
      source: "iana"
    },
    "video/vnd.iptvforum.ttsavc": {
      source: "iana"
    },
    "video/vnd.iptvforum.ttsmpeg2": {
      source: "iana"
    },
    "video/vnd.motorola.video": {
      source: "iana"
    },
    "video/vnd.motorola.videop": {
      source: "iana"
    },
    "video/vnd.mpegurl": {
      source: "iana",
      extensions: ["mxu", "m4u"]
    },
    "video/vnd.ms-playready.media.pyv": {
      source: "iana",
      extensions: ["pyv"]
    },
    "video/vnd.nokia.interleaved-multimedia": {
      source: "iana"
    },
    "video/vnd.nokia.mp4vr": {
      source: "iana"
    },
    "video/vnd.nokia.videovoip": {
      source: "iana"
    },
    "video/vnd.objectvideo": {
      source: "iana"
    },
    "video/vnd.radgamettools.bink": {
      source: "iana"
    },
    "video/vnd.radgamettools.smacker": {
      source: "iana"
    },
    "video/vnd.sealed.mpeg1": {
      source: "iana"
    },
    "video/vnd.sealed.mpeg4": {
      source: "iana"
    },
    "video/vnd.sealed.swf": {
      source: "iana"
    },
    "video/vnd.sealedmedia.softseal.mov": {
      source: "iana"
    },
    "video/vnd.uvvu.mp4": {
      source: "iana",
      extensions: ["uvu", "uvvu"]
    },
    "video/vnd.vivo": {
      source: "iana",
      extensions: ["viv"]
    },
    "video/vnd.youtube.yt": {
      source: "iana"
    },
    "video/vp8": {
      source: "iana"
    },
    "video/vp9": {
      source: "iana"
    },
    "video/webm": {
      source: "apache",
      compressible: false,
      extensions: ["webm"]
    },
    "video/x-f4v": {
      source: "apache",
      extensions: ["f4v"]
    },
    "video/x-fli": {
      source: "apache",
      extensions: ["fli"]
    },
    "video/x-flv": {
      source: "apache",
      compressible: false,
      extensions: ["flv"]
    },
    "video/x-m4v": {
      source: "apache",
      extensions: ["m4v"]
    },
    "video/x-matroska": {
      source: "apache",
      compressible: false,
      extensions: ["mkv", "mk3d", "mks"]
    },
    "video/x-mng": {
      source: "apache",
      extensions: ["mng"]
    },
    "video/x-ms-asf": {
      source: "apache",
      extensions: ["asf", "asx"]
    },
    "video/x-ms-vob": {
      source: "apache",
      extensions: ["vob"]
    },
    "video/x-ms-wm": {
      source: "apache",
      extensions: ["wm"]
    },
    "video/x-ms-wmv": {
      source: "apache",
      compressible: false,
      extensions: ["wmv"]
    },
    "video/x-ms-wmx": {
      source: "apache",
      extensions: ["wmx"]
    },
    "video/x-ms-wvx": {
      source: "apache",
      extensions: ["wvx"]
    },
    "video/x-msvideo": {
      source: "apache",
      extensions: ["avi"]
    },
    "video/x-sgi-movie": {
      source: "apache",
      extensions: ["movie"]
    },
    "video/x-smv": {
      source: "apache",
      extensions: ["smv"]
    },
    "x-conference/x-cooltalk": {
      source: "apache",
      extensions: ["ice"]
    },
    "x-shader/x-fragment": {
      compressible: true
    },
    "x-shader/x-vertex": {
      compressible: true
    }
  };
});

// node_modules/mime-db/index.js
var require_mime_db = __commonJS((exports, module) => {
  /*!
   * mime-db
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015-2022 Douglas Christopher Wilson
   * MIT Licensed
   */
  module.exports = require_db();
});

// node_modules/mime-types/index.js
var require_mime_types = __commonJS((exports) => {
  var charset = function(type) {
    if (!type || typeof type !== "string") {
      return false;
    }
    var match = EXTRACT_TYPE_REGEXP.exec(type);
    var mime = match && db[match[1].toLowerCase()];
    if (mime && mime.charset) {
      return mime.charset;
    }
    if (match && TEXT_TYPE_REGEXP.test(match[1])) {
      return "UTF-8";
    }
    return false;
  };
  var contentType = function(str) {
    if (!str || typeof str !== "string") {
      return false;
    }
    var mime = str.indexOf("/") === -1 ? exports.lookup(str) : str;
    if (!mime) {
      return false;
    }
    if (mime.indexOf("charset") === -1) {
      var charset2 = exports.charset(mime);
      if (charset2)
        mime += "; charset=" + charset2.toLowerCase();
    }
    return mime;
  };
  var extension = function(type) {
    if (!type || typeof type !== "string") {
      return false;
    }
    var match = EXTRACT_TYPE_REGEXP.exec(type);
    var exts = match && exports.extensions[match[1].toLowerCase()];
    if (!exts || !exts.length) {
      return false;
    }
    return exts[0];
  };
  var lookup = function(path) {
    if (!path || typeof path !== "string") {
      return false;
    }
    var extension2 = extname("x." + path).toLowerCase().substr(1);
    if (!extension2) {
      return false;
    }
    return exports.types[extension2] || false;
  };
  var populateMaps = function(extensions, types) {
    var preference = ["nginx", "apache", undefined, "iana"];
    Object.keys(db).forEach(function forEachMimeType(type) {
      var mime = db[type];
      var exts = mime.extensions;
      if (!exts || !exts.length) {
        return;
      }
      extensions[type] = exts;
      for (var i = 0;i < exts.length; i++) {
        var extension2 = exts[i];
        if (types[extension2]) {
          var from = preference.indexOf(db[types[extension2]].source);
          var to = preference.indexOf(mime.source);
          if (types[extension2] !== "application/octet-stream" && (from > to || from === to && types[extension2].substr(0, 12) === "application/")) {
            continue;
          }
        }
        types[extension2] = type;
      }
    });
  };
  /*!
   * mime-types
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   */
  var db = require_mime_db();
  var extname = __require("path").extname;
  var EXTRACT_TYPE_REGEXP = /^\s*([^;\s]*)(?:;|\s|$)/;
  var TEXT_TYPE_REGEXP = /^text\//i;
  exports.charset = charset;
  exports.charsets = { lookup: charset };
  exports.contentType = contentType;
  exports.extension = extension;
  exports.extensions = Object.create(null);
  exports.lookup = lookup;
  exports.types = Object.create(null);
  populateMaps(exports.extensions, exports.types);
});

// node_modules/asynckit/lib/defer.js
var require_defer = __commonJS((exports, module) => {
  var defer = function(fn) {
    var nextTick = typeof setImmediate == "function" ? setImmediate : typeof process == "object" && typeof process.nextTick == "function" ? process.nextTick : null;
    if (nextTick) {
      nextTick(fn);
    } else {
      setTimeout(fn, 0);
    }
  };
  module.exports = defer;
});

// node_modules/asynckit/lib/async.js
var require_async = __commonJS((exports, module) => {
  var async = function(callback) {
    var isAsync = false;
    defer(function() {
      isAsync = true;
    });
    return function async_callback(err, result) {
      if (isAsync) {
        callback(err, result);
      } else {
        defer(function nextTick_callback() {
          callback(err, result);
        });
      }
    };
  };
  var defer = require_defer();
  module.exports = async;
});

// node_modules/asynckit/lib/abort.js
var require_abort = __commonJS((exports, module) => {
  var abort = function(state) {
    Object.keys(state.jobs).forEach(clean.bind(state));
    state.jobs = {};
  };
  var clean = function(key) {
    if (typeof this.jobs[key] == "function") {
      this.jobs[key]();
    }
  };
  module.exports = abort;
});

// node_modules/asynckit/lib/iterate.js
var require_iterate = __commonJS((exports, module) => {
  var iterate = function(list, iterator, state, callback) {
    var key = state["keyedList"] ? state["keyedList"][state.index] : state.index;
    state.jobs[key] = runJob(iterator, key, list[key], function(error2, output) {
      if (!(key in state.jobs)) {
        return;
      }
      delete state.jobs[key];
      if (error2) {
        abort(state);
      } else {
        state.results[key] = output;
      }
      callback(error2, state.results);
    });
  };
  var runJob = function(iterator, key, item, callback) {
    var aborter;
    if (iterator.length == 2) {
      aborter = iterator(item, async(callback));
    } else {
      aborter = iterator(item, key, async(callback));
    }
    return aborter;
  };
  var async = require_async();
  var abort = require_abort();
  module.exports = iterate;
});

// node_modules/asynckit/lib/state.js
var require_state = __commonJS((exports, module) => {
  var state = function(list, sortMethod) {
    var isNamedList = !Array.isArray(list), initState = {
      index: 0,
      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,
      jobs: {},
      results: isNamedList ? {} : [],
      size: isNamedList ? Object.keys(list).length : list.length
    };
    if (sortMethod) {
      initState.keyedList.sort(isNamedList ? sortMethod : function(a, b) {
        return sortMethod(list[a], list[b]);
      });
    }
    return initState;
  };
  module.exports = state;
});

// node_modules/asynckit/lib/terminator.js
var require_terminator = __commonJS((exports, module) => {
  var terminator = function(callback) {
    if (!Object.keys(this.jobs).length) {
      return;
    }
    this.index = this.size;
    abort(this);
    async(callback)(null, this.results);
  };
  var abort = require_abort();
  var async = require_async();
  module.exports = terminator;
});

// node_modules/asynckit/parallel.js
var require_parallel = __commonJS((exports, module) => {
  var parallel = function(list, iterator, callback) {
    var state = initState(list);
    while (state.index < (state["keyedList"] || list).length) {
      iterate(list, iterator, state, function(error2, result) {
        if (error2) {
          callback(error2, result);
          return;
        }
        if (Object.keys(state.jobs).length === 0) {
          callback(null, state.results);
          return;
        }
      });
      state.index++;
    }
    return terminator.bind(state, callback);
  };
  var iterate = require_iterate();
  var initState = require_state();
  var terminator = require_terminator();
  module.exports = parallel;
});

// node_modules/asynckit/serialOrdered.js
var require_serialOrdered = __commonJS((exports, module) => {
  var serialOrdered = function(list, iterator, sortMethod, callback) {
    var state = initState(list, sortMethod);
    iterate(list, iterator, state, function iteratorHandler(error2, result) {
      if (error2) {
        callback(error2, result);
        return;
      }
      state.index++;
      if (state.index < (state["keyedList"] || list).length) {
        iterate(list, iterator, state, iteratorHandler);
        return;
      }
      callback(null, state.results);
    });
    return terminator.bind(state, callback);
  };
  var ascending = function(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  };
  var descending = function(a, b) {
    return -1 * ascending(a, b);
  };
  var iterate = require_iterate();
  var initState = require_state();
  var terminator = require_terminator();
  module.exports = serialOrdered;
  module.exports.ascending = ascending;
  module.exports.descending = descending;
});

// node_modules/asynckit/serial.js
var require_serial = __commonJS((exports, module) => {
  var serial = function(list, iterator, callback) {
    return serialOrdered(list, iterator, null, callback);
  };
  var serialOrdered = require_serialOrdered();
  module.exports = serial;
});

// node_modules/asynckit/index.js
var require_asynckit = __commonJS((exports, module) => {
  module.exports = {
    parallel: require_parallel(),
    serial: require_serial(),
    serialOrdered: require_serialOrdered()
  };
});

// node_modules/form-data/lib/populate.js
var require_populate = __commonJS((exports, module) => {
  module.exports = function(dst, src) {
    Object.keys(src).forEach(function(prop) {
      dst[prop] = dst[prop] || src[prop];
    });
    return dst;
  };
});

// node_modules/form-data/lib/form_data.js
var require_form_data = __commonJS((exports, module) => {
  var FormData = function(options) {
    if (!(this instanceof FormData)) {
      return new FormData(options);
    }
    this._overheadLength = 0;
    this._valueLength = 0;
    this._valuesToMeasure = [];
    CombinedStream.call(this);
    options = options || {};
    for (var option in options) {
      this[option] = options[option];
    }
  };
  var CombinedStream = require_combined_stream();
  var util = __require("util");
  var path = __require("path");
  var http = __require("http");
  var https = __require("https");
  var parseUrl2 = __require("url").parse;
  var fs = __require("fs");
  var mime = require_mime_types();
  var asynckit = require_asynckit();
  var populate = require_populate();
  module.exports = FormData;
  util.inherits(FormData, CombinedStream);
  FormData.LINE_BREAK = "\r\n";
  FormData.DEFAULT_CONTENT_TYPE = "application/octet-stream";
  FormData.prototype.append = function(field, value, options) {
    options = options || {};
    if (typeof options == "string") {
      options = { filename: options };
    }
    var append = CombinedStream.prototype.append.bind(this);
    if (typeof value == "number") {
      value = "" + value;
    }
    if (util.isArray(value)) {
      this._error(new Error("Arrays are not supported."));
      return;
    }
    var header = this._multiPartHeader(field, value, options);
    var footer = this._multiPartFooter();
    append(header);
    append(value);
    append(footer);
    this._trackLength(header, value, options);
  };
  FormData.prototype._trackLength = function(header, value, options) {
    var valueLength = 0;
    if (options.knownLength != null) {
      valueLength += +options.knownLength;
    } else if (Buffer.isBuffer(value)) {
      valueLength = value.length;
    } else if (typeof value === "string") {
      valueLength = Buffer.byteLength(value);
    }
    this._valueLength += valueLength;
    this._overheadLength += Buffer.byteLength(header) + FormData.LINE_BREAK.length;
    if (!value || !value.path && !(value.readable && value.hasOwnProperty("httpVersion"))) {
      return;
    }
    if (!options.knownLength) {
      this._valuesToMeasure.push(value);
    }
  };
  FormData.prototype._lengthRetriever = function(value, callback) {
    if (value.hasOwnProperty("fd")) {
      if (value.end != null && value.end != Infinity && value.start != null) {
        callback(null, value.end + 1 - (value.start ? value.start : 0));
      } else {
        fs.stat(value.path, function(err, stat) {
          var fileSize;
          if (err) {
            callback(err);
            return;
          }
          fileSize = stat.size - (value.start ? value.start : 0);
          callback(null, fileSize);
        });
      }
    } else if (value.hasOwnProperty("httpVersion")) {
      callback(null, +value.headers["content-length"]);
    } else if (value.hasOwnProperty("httpModule")) {
      value.on("response", function(response) {
        value.pause();
        callback(null, +response.headers["content-length"]);
      });
      value.resume();
    } else {
      callback("Unknown stream");
    }
  };
  FormData.prototype._multiPartHeader = function(field, value, options) {
    if (typeof options.header == "string") {
      return options.header;
    }
    var contentDisposition = this._getContentDisposition(value, options);
    var contentType = this._getContentType(value, options);
    var contents = "";
    var headers = {
      "Content-Disposition": ["form-data", 'name="' + field + '"'].concat(contentDisposition || []),
      "Content-Type": [].concat(contentType || [])
    };
    if (typeof options.header == "object") {
      populate(headers, options.header);
    }
    var header;
    for (var prop in headers) {
      if (!headers.hasOwnProperty(prop))
        continue;
      header = headers[prop];
      if (header == null) {
        continue;
      }
      if (!Array.isArray(header)) {
        header = [header];
      }
      if (header.length) {
        contents += prop + ": " + header.join("; ") + FormData.LINE_BREAK;
      }
    }
    return "--" + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;
  };
  FormData.prototype._getContentDisposition = function(value, options) {
    var filename, contentDisposition;
    if (typeof options.filepath === "string") {
      filename = path.normalize(options.filepath).replace(/\\/g, "/");
    } else if (options.filename || value.name || value.path) {
      filename = path.basename(options.filename || value.name || value.path);
    } else if (value.readable && value.hasOwnProperty("httpVersion")) {
      filename = path.basename(value.client._httpMessage.path || "");
    }
    if (filename) {
      contentDisposition = 'filename="' + filename + '"';
    }
    return contentDisposition;
  };
  FormData.prototype._getContentType = function(value, options) {
    var contentType = options.contentType;
    if (!contentType && value.name) {
      contentType = mime.lookup(value.name);
    }
    if (!contentType && value.path) {
      contentType = mime.lookup(value.path);
    }
    if (!contentType && value.readable && value.hasOwnProperty("httpVersion")) {
      contentType = value.headers["content-type"];
    }
    if (!contentType && (options.filepath || options.filename)) {
      contentType = mime.lookup(options.filepath || options.filename);
    }
    if (!contentType && typeof value == "object") {
      contentType = FormData.DEFAULT_CONTENT_TYPE;
    }
    return contentType;
  };
  FormData.prototype._multiPartFooter = function() {
    return function(next) {
      var footer = FormData.LINE_BREAK;
      var lastPart = this._streams.length === 0;
      if (lastPart) {
        footer += this._lastBoundary();
      }
      next(footer);
    }.bind(this);
  };
  FormData.prototype._lastBoundary = function() {
    return "--" + this.getBoundary() + "--" + FormData.LINE_BREAK;
  };
  FormData.prototype.getHeaders = function(userHeaders) {
    var header;
    var formHeaders = {
      "content-type": "multipart/form-data; boundary=" + this.getBoundary()
    };
    for (header in userHeaders) {
      if (userHeaders.hasOwnProperty(header)) {
        formHeaders[header.toLowerCase()] = userHeaders[header];
      }
    }
    return formHeaders;
  };
  FormData.prototype.setBoundary = function(boundary) {
    this._boundary = boundary;
  };
  FormData.prototype.getBoundary = function() {
    if (!this._boundary) {
      this._generateBoundary();
    }
    return this._boundary;
  };
  FormData.prototype.getBuffer = function() {
    var dataBuffer = new Buffer.alloc(0);
    var boundary = this.getBoundary();
    for (var i = 0, len = this._streams.length;i < len; i++) {
      if (typeof this._streams[i] !== "function") {
        if (Buffer.isBuffer(this._streams[i])) {
          dataBuffer = Buffer.concat([dataBuffer, this._streams[i]]);
        } else {
          dataBuffer = Buffer.concat([dataBuffer, Buffer.from(this._streams[i])]);
        }
        if (typeof this._streams[i] !== "string" || this._streams[i].substring(2, boundary.length + 2) !== boundary) {
          dataBuffer = Buffer.concat([dataBuffer, Buffer.from(FormData.LINE_BREAK)]);
        }
      }
    }
    return Buffer.concat([dataBuffer, Buffer.from(this._lastBoundary())]);
  };
  FormData.prototype._generateBoundary = function() {
    var boundary = "--------------------------";
    for (var i = 0;i < 24; i++) {
      boundary += Math.floor(Math.random() * 10).toString(16);
    }
    this._boundary = boundary;
  };
  FormData.prototype.getLengthSync = function() {
    var knownLength = this._overheadLength + this._valueLength;
    if (this._streams.length) {
      knownLength += this._lastBoundary().length;
    }
    if (!this.hasKnownLength()) {
      this._error(new Error("Cannot calculate proper length in synchronous way."));
    }
    return knownLength;
  };
  FormData.prototype.hasKnownLength = function() {
    var hasKnownLength = true;
    if (this._valuesToMeasure.length) {
      hasKnownLength = false;
    }
    return hasKnownLength;
  };
  FormData.prototype.getLength = function(cb) {
    var knownLength = this._overheadLength + this._valueLength;
    if (this._streams.length) {
      knownLength += this._lastBoundary().length;
    }
    if (!this._valuesToMeasure.length) {
      process.nextTick(cb.bind(this, null, knownLength));
      return;
    }
    asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {
      if (err) {
        cb(err);
        return;
      }
      values.forEach(function(length) {
        knownLength += length;
      });
      cb(null, knownLength);
    });
  };
  FormData.prototype.submit = function(params, cb) {
    var request3, options, defaults2 = { method: "post" };
    if (typeof params == "string") {
      params = parseUrl2(params);
      options = populate({
        port: params.port,
        path: params.pathname,
        host: params.hostname,
        protocol: params.protocol
      }, defaults2);
    } else {
      options = populate(params, defaults2);
      if (!options.port) {
        options.port = options.protocol == "https:" ? 443 : 80;
      }
    }
    options.headers = this.getHeaders(params.headers);
    if (options.protocol == "https:") {
      request3 = https.request(options);
    } else {
      request3 = http.request(options);
    }
    this.getLength(function(err, length) {
      if (err) {
        this._error(err);
        return;
      }
      request3.setHeader("Content-Length", length);
      this.pipe(request3);
      if (cb) {
        var onResponse;
        var callback = function(error2, responce) {
          request3.removeListener("error", callback);
          request3.removeListener("response", onResponse);
          return cb.call(this, error2, responce);
        };
        onResponse = callback.bind(this, null);
        request3.on("error", callback);
        request3.on("response", onResponse);
      }
    }.bind(this));
    return request3;
  };
  FormData.prototype._error = function(err) {
    if (!this.error) {
      this.error = err;
      this.pause();
      this.emit("error", err);
    }
  };
  FormData.prototype.toString = function() {
    return "[object FormData]";
  };
});

// node_modules/formidable/lib/file.js
var require_file = __commonJS((exports, module) => {
  var File2 = function(properties) {
    EventEmitter.call(this);
    this.size = 0;
    this.path = null;
    this.name = null;
    this.type = null;
    this.hash = null;
    this.lastModifiedDate = null;
    this._writeStream = null;
    for (var key in properties) {
      this[key] = properties[key];
    }
    if (typeof this.hash === "string") {
      this.hash = crypto.createHash(properties.hash);
    } else {
      this.hash = null;
    }
  };
  if (global.GENTLY)
    require = GENTLY.hijack(require);
  var util = __require("util");
  var fs = __require("fs");
  var EventEmitter = __require("events").EventEmitter;
  var crypto = __require("crypto");
  module.exports = File2;
  util.inherits(File2, EventEmitter);
  File2.prototype.open = function() {
    this._writeStream = new fs.WriteStream(this.path);
  };
  File2.prototype.toJSON = function() {
    var json = {
      size: this.size,
      path: this.path,
      name: this.name,
      type: this.type,
      mtime: this.lastModifiedDate,
      length: this.length,
      filename: this.filename,
      mime: this.mime
    };
    if (this.hash && this.hash != "") {
      json.hash = this.hash;
    }
    return json;
  };
  File2.prototype.write = function(buffer, cb) {
    var self2 = this;
    if (self2.hash) {
      self2.hash.update(buffer);
    }
    if (this._writeStream.closed) {
      return cb();
    }
    this._writeStream.write(buffer, function() {
      self2.lastModifiedDate = new Date;
      self2.size += buffer.length;
      self2.emit("progress", self2.size);
      cb();
    });
  };
  File2.prototype.end = function(cb) {
    var self2 = this;
    if (self2.hash) {
      self2.hash = self2.hash.digest("hex");
    }
    this._writeStream.end(function() {
      self2.emit("end");
      cb();
    });
  };
});

// node_modules/formidable/lib/multipart_parser.js
var require_multipart_parser = __commonJS((exports) => {
  var MultipartParser = function() {
    this.boundary = null;
    this.boundaryChars = null;
    this.lookbehind = null;
    this.state = S.PARSER_UNINITIALIZED;
    this.index = null;
    this.flags = 0;
  };
  var Buffer2 = __require("buffer").Buffer;
  var s = 0;
  var S = {
    PARSER_UNINITIALIZED: s++,
    START: s++,
    START_BOUNDARY: s++,
    HEADER_FIELD_START: s++,
    HEADER_FIELD: s++,
    HEADER_VALUE_START: s++,
    HEADER_VALUE: s++,
    HEADER_VALUE_ALMOST_DONE: s++,
    HEADERS_ALMOST_DONE: s++,
    PART_DATA_START: s++,
    PART_DATA: s++,
    PART_END: s++,
    END: s++
  };
  var f = 1;
  var F = {
    PART_BOUNDARY: f,
    LAST_BOUNDARY: f *= 2
  };
  var LF = 10;
  var CR = 13;
  var SPACE = 32;
  var HYPHEN = 45;
  var COLON = 58;
  var A = 97;
  var Z = 122;
  var lower = function(c) {
    return c | 32;
  };
  for (s in S) {
    exports[s] = S[s];
  }
  exports.MultipartParser = MultipartParser;
  MultipartParser.stateToString = function(stateNumber) {
    for (var state in S) {
      var number = S[state];
      if (number === stateNumber)
        return state;
    }
  };
  MultipartParser.prototype.initWithBoundary = function(str) {
    this.boundary = new Buffer2(str.length + 4);
    this.boundary.write("\r\n--", 0);
    this.boundary.write(str, 4);
    this.lookbehind = new Buffer2(this.boundary.length + 8);
    this.state = S.START;
    this.boundaryChars = {};
    for (var i = 0;i < this.boundary.length; i++) {
      this.boundaryChars[this.boundary[i]] = true;
    }
  };
  MultipartParser.prototype.write = function(buffer) {
    var self2 = this, i = 0, len = buffer.length, prevIndex = this.index, index = this.index, state = this.state, flags = this.flags, lookbehind = this.lookbehind, boundary = this.boundary, boundaryChars = this.boundaryChars, boundaryLength = this.boundary.length, boundaryEnd = boundaryLength - 1, bufferLength = buffer.length, c, cl, mark = function(name) {
      self2[name + "Mark"] = i;
    }, clear = function(name) {
      delete self2[name + "Mark"];
    }, callback = function(name, buffer2, start, end) {
      if (start !== undefined && start === end) {
        return;
      }
      var callbackSymbol = "on" + name.substr(0, 1).toUpperCase() + name.substr(1);
      if (callbackSymbol in self2) {
        self2[callbackSymbol](buffer2, start, end);
      }
    }, dataCallback = function(name, clear2) {
      var markSymbol = name + "Mark";
      if (!(markSymbol in self2)) {
        return;
      }
      if (!clear2) {
        callback(name, buffer, self2[markSymbol], buffer.length);
        self2[markSymbol] = 0;
      } else {
        callback(name, buffer, self2[markSymbol], i);
        delete self2[markSymbol];
      }
    };
    for (i = 0;i < len; i++) {
      c = buffer[i];
      switch (state) {
        case S.PARSER_UNINITIALIZED:
          return i;
        case S.START:
          index = 0;
          state = S.START_BOUNDARY;
        case S.START_BOUNDARY:
          if (index == boundary.length - 2) {
            if (c == HYPHEN) {
              flags |= F.LAST_BOUNDARY;
            } else if (c != CR) {
              return i;
            }
            index++;
            break;
          } else if (index - 1 == boundary.length - 2) {
            if (flags & F.LAST_BOUNDARY && c == HYPHEN) {
              callback("end");
              state = S.END;
              flags = 0;
            } else if (!(flags & F.LAST_BOUNDARY) && c == LF) {
              index = 0;
              callback("partBegin");
              state = S.HEADER_FIELD_START;
            } else {
              return i;
            }
            break;
          }
          if (c != boundary[index + 2]) {
            index = -2;
          }
          if (c == boundary[index + 2]) {
            index++;
          }
          break;
        case S.HEADER_FIELD_START:
          state = S.HEADER_FIELD;
          mark("headerField");
          index = 0;
        case S.HEADER_FIELD:
          if (c == CR) {
            clear("headerField");
            state = S.HEADERS_ALMOST_DONE;
            break;
          }
          index++;
          if (c == HYPHEN) {
            break;
          }
          if (c == COLON) {
            if (index == 1) {
              return i;
            }
            dataCallback("headerField", true);
            state = S.HEADER_VALUE_START;
            break;
          }
          cl = lower(c);
          if (cl < A || cl > Z) {
            return i;
          }
          break;
        case S.HEADER_VALUE_START:
          if (c == SPACE) {
            break;
          }
          mark("headerValue");
          state = S.HEADER_VALUE;
        case S.HEADER_VALUE:
          if (c == CR) {
            dataCallback("headerValue", true);
            callback("headerEnd");
            state = S.HEADER_VALUE_ALMOST_DONE;
          }
          break;
        case S.HEADER_VALUE_ALMOST_DONE:
          if (c != LF) {
            return i;
          }
          state = S.HEADER_FIELD_START;
          break;
        case S.HEADERS_ALMOST_DONE:
          if (c != LF) {
            return i;
          }
          callback("headersEnd");
          state = S.PART_DATA_START;
          break;
        case S.PART_DATA_START:
          state = S.PART_DATA;
          mark("partData");
        case S.PART_DATA:
          prevIndex = index;
          if (index === 0) {
            i += boundaryEnd;
            while (i < bufferLength && !(buffer[i] in boundaryChars)) {
              i += boundaryLength;
            }
            i -= boundaryEnd;
            c = buffer[i];
          }
          if (index < boundary.length) {
            if (boundary[index] == c) {
              if (index === 0) {
                dataCallback("partData", true);
              }
              index++;
            } else {
              index = 0;
            }
          } else if (index == boundary.length) {
            index++;
            if (c == CR) {
              flags |= F.PART_BOUNDARY;
            } else if (c == HYPHEN) {
              flags |= F.LAST_BOUNDARY;
            } else {
              index = 0;
            }
          } else if (index - 1 == boundary.length) {
            if (flags & F.PART_BOUNDARY) {
              index = 0;
              if (c == LF) {
                flags &= ~F.PART_BOUNDARY;
                callback("partEnd");
                callback("partBegin");
                state = S.HEADER_FIELD_START;
                break;
              }
            } else if (flags & F.LAST_BOUNDARY) {
              if (c == HYPHEN) {
                callback("partEnd");
                callback("end");
                state = S.END;
                flags = 0;
              } else {
                index = 0;
              }
            } else {
              index = 0;
            }
          }
          if (index > 0) {
            lookbehind[index - 1] = c;
          } else if (prevIndex > 0) {
            callback("partData", lookbehind, 0, prevIndex);
            prevIndex = 0;
            mark("partData");
            i--;
          }
          break;
        case S.END:
          break;
        default:
          return i;
      }
    }
    dataCallback("headerField");
    dataCallback("headerValue");
    dataCallback("partData");
    this.index = index;
    this.state = state;
    this.flags = flags;
    return len;
  };
  MultipartParser.prototype.end = function() {
    var callback = function(self2, name) {
      var callbackSymbol = "on" + name.substr(0, 1).toUpperCase() + name.substr(1);
      if (callbackSymbol in self2) {
        self2[callbackSymbol]();
      }
    };
    if (this.state == S.HEADER_FIELD_START && this.index === 0 || this.state == S.PART_DATA && this.index == this.boundary.length) {
      callback(this, "partEnd");
      callback(this, "end");
    } else if (this.state != S.END) {
      return new Error("MultipartParser.end(): stream ended unexpectedly: " + this.explain());
    }
  };
  MultipartParser.prototype.explain = function() {
    return "state = " + MultipartParser.stateToString(this.state);
  };
});

// node_modules/formidable/lib/querystring_parser.js
var require_querystring_parser = __commonJS((exports) => {
  var QuerystringParser = function(maxKeys) {
    this.maxKeys = maxKeys;
    this.buffer = "";
  };
  if (global.GENTLY)
    require = GENTLY.hijack(require);
  var querystring = __require("querystring");
  exports.QuerystringParser = QuerystringParser;
  QuerystringParser.prototype.write = function(buffer) {
    this.buffer += buffer.toString("ascii");
    return buffer.length;
  };
  QuerystringParser.prototype.end = function() {
    var fields = querystring.parse(this.buffer, "&", "=", { maxKeys: this.maxKeys });
    for (var field in fields) {
      this.onField(field, fields[field]);
    }
    this.buffer = "";
    this.onEnd();
  };
});

// node_modules/formidable/lib/octet_parser.js
var require_octet_parser = __commonJS((exports) => {
  var OctetParser = function(options) {
    if (!(this instanceof OctetParser))
      return new OctetParser(options);
    EventEmitter.call(this);
  };
  var EventEmitter = __require("events").EventEmitter;
  var util = __require("util");
  util.inherits(OctetParser, EventEmitter);
  exports.OctetParser = OctetParser;
  OctetParser.prototype.write = function(buffer) {
    this.emit("data", buffer);
    return buffer.length;
  };
  OctetParser.prototype.end = function() {
    this.emit("end");
  };
});

// node_modules/formidable/lib/json_parser.js
var require_json_parser = __commonJS((exports) => {
  var JSONParser = function(parent) {
    this.parent = parent;
    this.chunks = [];
    this.bytesWritten = 0;
  };
  if (global.GENTLY)
    require = GENTLY.hijack(require);
  var Buffer2 = __require("buffer").Buffer;
  exports.JSONParser = JSONParser;
  JSONParser.prototype.write = function(buffer) {
    this.bytesWritten += buffer.length;
    this.chunks.push(buffer);
    return buffer.length;
  };
  JSONParser.prototype.end = function() {
    try {
      var fields = JSON.parse(Buffer2.concat(this.chunks));
      for (var field in fields) {
        this.onField(field, fields[field]);
      }
    } catch (e) {
      this.parent.emit("error", e);
    }
    this.data = null;
    this.onEnd();
  };
});

// node_modules/formidable/lib/incoming_form.js
var require_incoming_form = __commonJS((exports) => {
  var IncomingForm = function(opts) {
    if (!(this instanceof IncomingForm))
      return new IncomingForm(opts);
    EventEmitter.call(this);
    opts = opts || {};
    this.error = null;
    this.ended = false;
    this.maxFields = opts.maxFields || 1000;
    this.maxFieldsSize = opts.maxFieldsSize || 20 * 1024 * 1024;
    this.maxFileSize = opts.maxFileSize || 200 * 1024 * 1024;
    this.keepExtensions = opts.keepExtensions || false;
    this.uploadDir = opts.uploadDir || os.tmpdir && os.tmpdir() || os.tmpDir();
    this.encoding = opts.encoding || "utf-8";
    this.headers = null;
    this.type = null;
    this.hash = opts.hash || false;
    this.multiples = opts.multiples || false;
    this.bytesReceived = null;
    this.bytesExpected = null;
    this._parser = null;
    this._flushing = 0;
    this._fieldsSize = 0;
    this._fileSize = 0;
    this.openedFiles = [];
    return this;
  };
  var dummyParser = function(self2) {
    return {
      end: function() {
        self2.ended = true;
        self2._maybeEnd();
        return null;
      }
    };
  };
  if (global.GENTLY)
    require = GENTLY.hijack(require);
  var crypto = __require("crypto");
  var fs = __require("fs");
  var util = __require("util");
  var path = __require("path");
  var File2 = require_file();
  var MultipartParser = require_multipart_parser().MultipartParser;
  var QuerystringParser = require_querystring_parser().QuerystringParser;
  var OctetParser = require_octet_parser().OctetParser;
  var JSONParser = require_json_parser().JSONParser;
  var StringDecoder = __require("string_decoder").StringDecoder;
  var EventEmitter = __require("events").EventEmitter;
  var Stream = __require("stream").Stream;
  var os = __require("os");
  util.inherits(IncomingForm, EventEmitter);
  exports.IncomingForm = IncomingForm;
  IncomingForm.prototype.parse = function(req, cb) {
    this.pause = function() {
      try {
        req.pause();
      } catch (err) {
        if (!this.ended) {
          this._error(err);
        }
        return false;
      }
      return true;
    };
    this.resume = function() {
      try {
        req.resume();
      } catch (err) {
        if (!this.ended) {
          this._error(err);
        }
        return false;
      }
      return true;
    };
    if (cb) {
      var fields = {}, files = {};
      this.on("field", function(name, value) {
        fields[name] = value;
      }).on("file", function(name, file) {
        if (this.multiples) {
          if (files[name]) {
            if (!Array.isArray(files[name])) {
              files[name] = [files[name]];
            }
            files[name].push(file);
          } else {
            files[name] = file;
          }
        } else {
          files[name] = file;
        }
      }).on("error", function(err) {
        cb(err, fields, files);
      }).on("end", function() {
        cb(null, fields, files);
      });
    }
    this.writeHeaders(req.headers);
    var self2 = this;
    req.on("error", function(err) {
      self2._error(err);
    }).on("aborted", function() {
      self2.emit("aborted");
      self2._error(new Error("Request aborted"));
    }).on("data", function(buffer) {
      self2.write(buffer);
    }).on("end", function() {
      if (self2.error) {
        return;
      }
      var err = self2._parser.end();
      if (err) {
        self2._error(err);
      }
    });
    return this;
  };
  IncomingForm.prototype.writeHeaders = function(headers) {
    this.headers = headers;
    this._parseContentLength();
    this._parseContentType();
  };
  IncomingForm.prototype.write = function(buffer) {
    if (this.error) {
      return;
    }
    if (!this._parser) {
      this._error(new Error("uninitialized parser"));
      return;
    }
    if (typeof this._parser.write !== "function") {
      this._error(new Error("did not expect data"));
      return;
    }
    this.bytesReceived += buffer.length;
    this.emit("progress", this.bytesReceived, this.bytesExpected);
    var bytesParsed = this._parser.write(buffer);
    if (bytesParsed !== buffer.length) {
      this._error(new Error("parser error, " + bytesParsed + " of " + buffer.length + " bytes parsed"));
    }
    return bytesParsed;
  };
  IncomingForm.prototype.pause = function() {
    return false;
  };
  IncomingForm.prototype.resume = function() {
    return false;
  };
  IncomingForm.prototype.onPart = function(part) {
    this.handlePart(part);
  };
  IncomingForm.prototype.handlePart = function(part) {
    var self2 = this;
    if (part.filename === undefined) {
      var value = "", decoder = new StringDecoder(this.encoding);
      part.on("data", function(buffer) {
        self2._fieldsSize += buffer.length;
        if (self2._fieldsSize > self2.maxFieldsSize) {
          self2._error(new Error("maxFieldsSize exceeded, received " + self2._fieldsSize + " bytes of field data"));
          return;
        }
        value += decoder.write(buffer);
      });
      part.on("end", function() {
        self2.emit("field", part.name, value);
      });
      return;
    }
    this._flushing++;
    var file = new File2({
      path: this._uploadPath(part.filename),
      name: part.filename,
      type: part.mime,
      hash: self2.hash
    });
    this.emit("fileBegin", part.name, file);
    file.open();
    this.openedFiles.push(file);
    part.on("data", function(buffer) {
      self2._fileSize += buffer.length;
      if (self2._fileSize > self2.maxFileSize) {
        self2._error(new Error("maxFileSize exceeded, received " + self2._fileSize + " bytes of file data"));
        return;
      }
      if (buffer.length == 0) {
        return;
      }
      self2.pause();
      file.write(buffer, function() {
        self2.resume();
      });
    });
    part.on("end", function() {
      file.end(function() {
        self2._flushing--;
        self2.emit("file", part.name, file);
        self2._maybeEnd();
      });
    });
  };
  IncomingForm.prototype._parseContentType = function() {
    if (this.bytesExpected === 0) {
      this._parser = dummyParser(this);
      return;
    }
    if (!this.headers["content-type"]) {
      this._error(new Error("bad content-type header, no content-type"));
      return;
    }
    if (this.headers["content-type"].match(/octet-stream/i)) {
      this._initOctetStream();
      return;
    }
    if (this.headers["content-type"].match(/urlencoded/i)) {
      this._initUrlencoded();
      return;
    }
    if (this.headers["content-type"].match(/multipart/i)) {
      var m = this.headers["content-type"].match(/boundary=(?:"([^"]+)"|([^;]+))/i);
      if (m) {
        this._initMultipart(m[1] || m[2]);
      } else {
        this._error(new Error("bad content-type header, no multipart boundary"));
      }
      return;
    }
    if (this.headers["content-type"].match(/json/i)) {
      this._initJSONencoded();
      return;
    }
    this._error(new Error("bad content-type header, unknown content-type: " + this.headers["content-type"]));
  };
  IncomingForm.prototype._error = function(err) {
    if (this.error || this.ended) {
      return;
    }
    this.error = err;
    this.emit("error", err);
    if (Array.isArray(this.openedFiles)) {
      this.openedFiles.forEach(function(file) {
        file._writeStream.on("error", function() {
        }).destroy();
        setTimeout(fs.unlink, 0, file.path, function(error2) {
        });
      });
    }
  };
  IncomingForm.prototype._parseContentLength = function() {
    this.bytesReceived = 0;
    if (this.headers["content-length"]) {
      this.bytesExpected = parseInt(this.headers["content-length"], 10);
    } else if (this.headers["transfer-encoding"] === undefined) {
      this.bytesExpected = 0;
    }
    if (this.bytesExpected !== null) {
      this.emit("progress", this.bytesReceived, this.bytesExpected);
    }
  };
  IncomingForm.prototype._newParser = function() {
    return new MultipartParser;
  };
  IncomingForm.prototype._initMultipart = function(boundary) {
    this.type = "multipart";
    var parser = new MultipartParser, self2 = this, headerField, headerValue, part;
    parser.initWithBoundary(boundary);
    parser.onPartBegin = function() {
      part = new Stream;
      part.readable = true;
      part.headers = {};
      part.name = null;
      part.filename = null;
      part.mime = null;
      part.transferEncoding = "binary";
      part.transferBuffer = "";
      headerField = "";
      headerValue = "";
    };
    parser.onHeaderField = function(b, start, end) {
      headerField += b.toString(self2.encoding, start, end);
    };
    parser.onHeaderValue = function(b, start, end) {
      headerValue += b.toString(self2.encoding, start, end);
    };
    parser.onHeaderEnd = function() {
      headerField = headerField.toLowerCase();
      part.headers[headerField] = headerValue;
      var m = headerValue.match(/\bname=("([^"]*)"|([^\(\)<>@,;:\\"\/\[\]\?=\{\}\s\t/]+))/i);
      if (headerField == "content-disposition") {
        if (m) {
          part.name = m[2] || m[3] || "";
        }
        part.filename = self2._fileName(headerValue);
      } else if (headerField == "content-type") {
        part.mime = headerValue;
      } else if (headerField == "content-transfer-encoding") {
        part.transferEncoding = headerValue.toLowerCase();
      }
      headerField = "";
      headerValue = "";
    };
    parser.onHeadersEnd = function() {
      switch (part.transferEncoding) {
        case "binary":
        case "7bit":
        case "8bit":
          parser.onPartData = function(b, start, end) {
            part.emit("data", b.slice(start, end));
          };
          parser.onPartEnd = function() {
            part.emit("end");
          };
          break;
        case "base64":
          parser.onPartData = function(b, start, end) {
            part.transferBuffer += b.slice(start, end).toString("ascii");
            var offset = parseInt(part.transferBuffer.length / 4, 10) * 4;
            part.emit("data", new Buffer(part.transferBuffer.substring(0, offset), "base64"));
            part.transferBuffer = part.transferBuffer.substring(offset);
          };
          parser.onPartEnd = function() {
            part.emit("data", new Buffer(part.transferBuffer, "base64"));
            part.emit("end");
          };
          break;
        default:
          return self2._error(new Error("unknown transfer-encoding"));
      }
      self2.onPart(part);
    };
    parser.onEnd = function() {
      self2.ended = true;
      self2._maybeEnd();
    };
    this._parser = parser;
  };
  IncomingForm.prototype._fileName = function(headerValue) {
    var m = headerValue.match(/\bfilename=("(.*?)"|([^\(\)<>@,;:\\"\/\[\]\?=\{\}\s\t/]+))($|;\s)/i);
    if (!m)
      return;
    var match = m[2] || m[3] || "";
    var filename = match.substr(match.lastIndexOf("\\") + 1);
    filename = filename.replace(/%22/g, '"');
    filename = filename.replace(/&#([\d]{4});/g, function(m2, code) {
      return String.fromCharCode(code);
    });
    return filename;
  };
  IncomingForm.prototype._initUrlencoded = function() {
    this.type = "urlencoded";
    var parser = new QuerystringParser(this.maxFields), self2 = this;
    parser.onField = function(key, val) {
      self2.emit("field", key, val);
    };
    parser.onEnd = function() {
      self2.ended = true;
      self2._maybeEnd();
    };
    this._parser = parser;
  };
  IncomingForm.prototype._initOctetStream = function() {
    this.type = "octet-stream";
    var filename = this.headers["x-file-name"];
    var mime = this.headers["content-type"];
    var file = new File2({
      path: this._uploadPath(filename),
      name: filename,
      type: mime
    });
    this.emit("fileBegin", filename, file);
    file.open();
    this.openedFiles.push(file);
    this._flushing++;
    var self2 = this;
    self2._parser = new OctetParser;
    var outstandingWrites = 0;
    self2._parser.on("data", function(buffer) {
      self2.pause();
      outstandingWrites++;
      file.write(buffer, function() {
        outstandingWrites--;
        self2.resume();
        if (self2.ended) {
          self2._parser.emit("doneWritingFile");
        }
      });
    });
    self2._parser.on("end", function() {
      self2._flushing--;
      self2.ended = true;
      var done = function() {
        file.end(function() {
          self2.emit("file", "file", file);
          self2._maybeEnd();
        });
      };
      if (outstandingWrites === 0) {
        done();
      } else {
        self2._parser.once("doneWritingFile", done);
      }
    });
  };
  IncomingForm.prototype._initJSONencoded = function() {
    this.type = "json";
    var parser = new JSONParser(this), self2 = this;
    parser.onField = function(key, val) {
      self2.emit("field", key, val);
    };
    parser.onEnd = function() {
      self2.ended = true;
      self2._maybeEnd();
    };
    this._parser = parser;
  };
  IncomingForm.prototype._uploadPath = function(filename) {
    var buf = crypto.randomBytes(16);
    var name = "upload_" + buf.toString("hex");
    if (this.keepExtensions) {
      var ext = path.extname(filename);
      ext = ext.replace(/(\.[a-z0-9]+).*/i, "$1");
      name += ext;
    }
    return path.join(this.uploadDir, name);
  };
  IncomingForm.prototype._maybeEnd = function() {
    if (!this.ended || this._flushing || this.error) {
      return;
    }
    this.emit("end");
  };
});

// node_modules/formidable/lib/index.js
var require_lib3 = __commonJS((exports, module) => {
  var IncomingForm = require_incoming_form().IncomingForm;
  IncomingForm.IncomingForm = IncomingForm;
  module.exports = IncomingForm;
});

// node_modules/ms/index.js
var require_ms = __commonJS((exports, module) => {
  var parse4 = function(str) {
    str = String(str);
    if (str.length > 100) {
      return;
    }
    var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);
    if (!match) {
      return;
    }
    var n = parseFloat(match[1]);
    var type = (match[2] || "ms").toLowerCase();
    switch (type) {
      case "years":
      case "year":
      case "yrs":
      case "yr":
      case "y":
        return n * y;
      case "weeks":
      case "week":
      case "w":
        return n * w;
      case "days":
      case "day":
      case "d":
        return n * d;
      case "hours":
      case "hour":
      case "hrs":
      case "hr":
      case "h":
        return n * h;
      case "minutes":
      case "minute":
      case "mins":
      case "min":
      case "m":
        return n * m;
      case "seconds":
      case "second":
      case "secs":
      case "sec":
      case "s":
        return n * s;
      case "milliseconds":
      case "millisecond":
      case "msecs":
      case "msec":
      case "ms":
        return n;
      default:
        return;
    }
  };
  var fmtShort = function(ms) {
    var msAbs = Math.abs(ms);
    if (msAbs >= d) {
      return Math.round(ms / d) + "d";
    }
    if (msAbs >= h) {
      return Math.round(ms / h) + "h";
    }
    if (msAbs >= m) {
      return Math.round(ms / m) + "m";
    }
    if (msAbs >= s) {
      return Math.round(ms / s) + "s";
    }
    return ms + "ms";
  };
  var fmtLong = function(ms) {
    var msAbs = Math.abs(ms);
    if (msAbs >= d) {
      return plural(ms, msAbs, d, "day");
    }
    if (msAbs >= h) {
      return plural(ms, msAbs, h, "hour");
    }
    if (msAbs >= m) {
      return plural(ms, msAbs, m, "minute");
    }
    if (msAbs >= s) {
      return plural(ms, msAbs, s, "second");
    }
    return ms + " ms";
  };
  var plural = function(ms, msAbs, n, name) {
    var isPlural = msAbs >= n * 1.5;
    return Math.round(ms / n) + " " + name + (isPlural ? "s" : "");
  };
  var s = 1000;
  var m = s * 60;
  var h = m * 60;
  var d = h * 24;
  var w = d * 7;
  var y = d * 365.25;
  module.exports = function(val, options) {
    options = options || {};
    var type = typeof val;
    if (type === "string" && val.length > 0) {
      return parse4(val);
    } else if (type === "number" && isFinite(val)) {
      return options.long ? fmtLong(val) : fmtShort(val);
    }
    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(val));
  };
});

// node_modules/debug/src/common.js
var require_common = __commonJS((exports, module) => {
  var setup = function(env) {
    createDebug.debug = createDebug;
    createDebug.default = createDebug;
    createDebug.coerce = coerce;
    createDebug.disable = disable;
    createDebug.enable = enable;
    createDebug.enabled = enabled;
    createDebug.humanize = require_ms();
    createDebug.destroy = destroy;
    Object.keys(env).forEach((key) => {
      createDebug[key] = env[key];
    });
    createDebug.names = [];
    createDebug.skips = [];
    createDebug.formatters = {};
    function selectColor(namespace) {
      let hash = 0;
      for (let i = 0;i < namespace.length; i++) {
        hash = (hash << 5) - hash + namespace.charCodeAt(i);
        hash |= 0;
      }
      return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
    }
    createDebug.selectColor = selectColor;
    function createDebug(namespace) {
      let prevTime;
      let enableOverride = null;
      let namespacesCache;
      let enabledCache;
      function debug(...args) {
        if (!debug.enabled) {
          return;
        }
        const self2 = debug;
        const curr = Number(new Date);
        const ms = curr - (prevTime || curr);
        self2.diff = ms;
        self2.prev = prevTime;
        self2.curr = curr;
        prevTime = curr;
        args[0] = createDebug.coerce(args[0]);
        if (typeof args[0] !== "string") {
          args.unshift("%O");
        }
        let index = 0;
        args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
          if (match === "%%") {
            return "%";
          }
          index++;
          const formatter = createDebug.formatters[format];
          if (typeof formatter === "function") {
            const val = args[index];
            match = formatter.call(self2, val);
            args.splice(index, 1);
            index--;
          }
          return match;
        });
        createDebug.formatArgs.call(self2, args);
        const logFn = self2.log || createDebug.log;
        logFn.apply(self2, args);
      }
      debug.namespace = namespace;
      debug.useColors = createDebug.useColors();
      debug.color = createDebug.selectColor(namespace);
      debug.extend = extend;
      debug.destroy = createDebug.destroy;
      Object.defineProperty(debug, "enabled", {
        enumerable: true,
        configurable: false,
        get: () => {
          if (enableOverride !== null) {
            return enableOverride;
          }
          if (namespacesCache !== createDebug.namespaces) {
            namespacesCache = createDebug.namespaces;
            enabledCache = createDebug.enabled(namespace);
          }
          return enabledCache;
        },
        set: (v) => {
          enableOverride = v;
        }
      });
      if (typeof createDebug.init === "function") {
        createDebug.init(debug);
      }
      return debug;
    }
    function extend(namespace, delimiter) {
      const newDebug = createDebug(this.namespace + (typeof delimiter === "undefined" ? ":" : delimiter) + namespace);
      newDebug.log = this.log;
      return newDebug;
    }
    function enable(namespaces) {
      createDebug.save(namespaces);
      createDebug.namespaces = namespaces;
      createDebug.names = [];
      createDebug.skips = [];
      let i;
      const split = (typeof namespaces === "string" ? namespaces : "").split(/[\s,]+/);
      const len = split.length;
      for (i = 0;i < len; i++) {
        if (!split[i]) {
          continue;
        }
        namespaces = split[i].replace(/\*/g, ".*?");
        if (namespaces[0] === "-") {
          createDebug.skips.push(new RegExp("^" + namespaces.slice(1) + "$"));
        } else {
          createDebug.names.push(new RegExp("^" + namespaces + "$"));
        }
      }
    }
    function disable() {
      const namespaces = [
        ...createDebug.names.map(toNamespace),
        ...createDebug.skips.map(toNamespace).map((namespace) => "-" + namespace)
      ].join(",");
      createDebug.enable("");
      return namespaces;
    }
    function enabled(name) {
      if (name[name.length - 1] === "*") {
        return true;
      }
      let i;
      let len;
      for (i = 0, len = createDebug.skips.length;i < len; i++) {
        if (createDebug.skips[i].test(name)) {
          return false;
        }
      }
      for (i = 0, len = createDebug.names.length;i < len; i++) {
        if (createDebug.names[i].test(name)) {
          return true;
        }
      }
      return false;
    }
    function toNamespace(regexp) {
      return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\.\*\?$/, "*");
    }
    function coerce(val) {
      if (val instanceof Error) {
        return val.stack || val.message;
      }
      return val;
    }
    function destroy() {
      console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
    }
    createDebug.enable(createDebug.load());
    return createDebug;
  };
  module.exports = setup;
});

// node_modules/debug/src/browser.js
var require_browser = __commonJS((exports, module) => {
  var useColors = function() {
    if (typeof window !== "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs)) {
      return true;
    }
    if (typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
      return false;
    }
    return typeof document !== "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window !== "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
  };
  var formatArgs = function(args) {
    args[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + args[0] + (this.useColors ? "%c " : " ") + "+" + exports.humanize(this.diff);
    if (!this.useColors) {
      return;
    }
    const c = "color: " + this.color;
    args.splice(1, 0, c, "color: inherit");
    let index = 0;
    let lastC = 0;
    args[0].replace(/%[a-zA-Z%]/g, (match) => {
      if (match === "%%") {
        return;
      }
      index++;
      if (match === "%c") {
        lastC = index;
      }
    });
    args.splice(lastC, 0, c);
  };
  var save = function(namespaces) {
    try {
      if (namespaces) {
        exports.storage.setItem("debug", namespaces);
      } else {
        exports.storage.removeItem("debug");
      }
    } catch (error2) {
    }
  };
  var load = function() {
    let r;
    try {
      r = exports.storage.getItem("debug");
    } catch (error2) {
    }
    if (!r && typeof process !== "undefined" && ("env" in process)) {
      r = process.env.DEBUG;
    }
    return r;
  };
  var localstorage = function() {
    try {
      return localStorage;
    } catch (error2) {
    }
  };
  exports.formatArgs = formatArgs;
  exports.save = save;
  exports.load = load;
  exports.useColors = useColors;
  exports.storage = localstorage();
  exports.destroy = (() => {
    let warned = false;
    return () => {
      if (!warned) {
        warned = true;
        console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
      }
    };
  })();
  exports.colors = [
    "#0000CC",
    "#0000FF",
    "#0033CC",
    "#0033FF",
    "#0066CC",
    "#0066FF",
    "#0099CC",
    "#0099FF",
    "#00CC00",
    "#00CC33",
    "#00CC66",
    "#00CC99",
    "#00CCCC",
    "#00CCFF",
    "#3300CC",
    "#3300FF",
    "#3333CC",
    "#3333FF",
    "#3366CC",
    "#3366FF",
    "#3399CC",
    "#3399FF",
    "#33CC00",
    "#33CC33",
    "#33CC66",
    "#33CC99",
    "#33CCCC",
    "#33CCFF",
    "#6600CC",
    "#6600FF",
    "#6633CC",
    "#6633FF",
    "#66CC00",
    "#66CC33",
    "#9900CC",
    "#9900FF",
    "#9933CC",
    "#9933FF",
    "#99CC00",
    "#99CC33",
    "#CC0000",
    "#CC0033",
    "#CC0066",
    "#CC0099",
    "#CC00CC",
    "#CC00FF",
    "#CC3300",
    "#CC3333",
    "#CC3366",
    "#CC3399",
    "#CC33CC",
    "#CC33FF",
    "#CC6600",
    "#CC6633",
    "#CC9900",
    "#CC9933",
    "#CCCC00",
    "#CCCC33",
    "#FF0000",
    "#FF0033",
    "#FF0066",
    "#FF0099",
    "#FF00CC",
    "#FF00FF",
    "#FF3300",
    "#FF3333",
    "#FF3366",
    "#FF3399",
    "#FF33CC",
    "#FF33FF",
    "#FF6600",
    "#FF6633",
    "#FF9900",
    "#FF9933",
    "#FFCC00",
    "#FFCC33"
  ];
  exports.log = console.debug || console.log || (() => {
  });
  module.exports = require_common()(exports);
  var { formatters } = module.exports;
  formatters.j = function(v) {
    try {
      return JSON.stringify(v);
    } catch (error2) {
      return "[UnexpectedJSONParseError]: " + error2.message;
    }
  };
});

// node_modules/has-flag/index.js
var require_has_flag = __commonJS((exports, module) => {
  module.exports = (flag, argv = process.argv) => {
    const prefix = flag.startsWith("-") ? "" : flag.length === 1 ? "-" : "--";
    const position = argv.indexOf(prefix + flag);
    const terminatorPosition = argv.indexOf("--");
    return position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);
  };
});

// node_modules/supports-color/index.js
var require_supports_color = __commonJS((exports, module) => {
  var translateLevel = function(level) {
    if (level === 0) {
      return false;
    }
    return {
      level,
      hasBasic: true,
      has256: level >= 2,
      has16m: level >= 3
    };
  };
  var supportsColor = function(haveStream, streamIsTTY) {
    if (forceColor === 0) {
      return 0;
    }
    if (hasFlag("color=16m") || hasFlag("color=full") || hasFlag("color=truecolor")) {
      return 3;
    }
    if (hasFlag("color=256")) {
      return 2;
    }
    if (haveStream && !streamIsTTY && forceColor === undefined) {
      return 0;
    }
    const min = forceColor || 0;
    if (env.TERM === "dumb") {
      return min;
    }
    if (process.platform === "win32") {
      const osRelease = os.release().split(".");
      if (Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
        return Number(osRelease[2]) >= 14931 ? 3 : 2;
      }
      return 1;
    }
    if ("CI" in env) {
      if (["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI", "GITHUB_ACTIONS", "BUILDKITE"].some((sign) => (sign in env)) || env.CI_NAME === "codeship") {
        return 1;
      }
      return min;
    }
    if ("TEAMCITY_VERSION" in env) {
      return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
    }
    if (env.COLORTERM === "truecolor") {
      return 3;
    }
    if ("TERM_PROGRAM" in env) {
      const version4 = parseInt((env.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
      switch (env.TERM_PROGRAM) {
        case "iTerm.app":
          return version4 >= 3 ? 3 : 2;
        case "Apple_Terminal":
          return 2;
      }
    }
    if (/-256(color)?$/i.test(env.TERM)) {
      return 2;
    }
    if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
      return 1;
    }
    if ("COLORTERM" in env) {
      return 1;
    }
    return min;
  };
  var getSupportLevel = function(stream) {
    const level = supportsColor(stream, stream && stream.isTTY);
    return translateLevel(level);
  };
  var os = __require("os");
  var tty = __require("tty");
  var hasFlag = require_has_flag();
  var { env } = process;
  var forceColor;
  if (hasFlag("no-color") || hasFlag("no-colors") || hasFlag("color=false") || hasFlag("color=never")) {
    forceColor = 0;
  } else if (hasFlag("color") || hasFlag("colors") || hasFlag("color=true") || hasFlag("color=always")) {
    forceColor = 1;
  }
  if ("FORCE_COLOR" in env) {
    if (env.FORCE_COLOR === "true") {
      forceColor = 1;
    } else if (env.FORCE_COLOR === "false") {
      forceColor = 0;
    } else {
      forceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);
    }
  }
  module.exports = {
    supportsColor: getSupportLevel,
    stdout: translateLevel(supportsColor(true, tty.isatty(1))),
    stderr: translateLevel(supportsColor(true, tty.isatty(2)))
  };
});

// node_modules/debug/src/node.js
var require_node = __commonJS((exports, module) => {
  var useColors = function() {
    return "colors" in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);
  };
  var formatArgs = function(args) {
    const { namespace: name, useColors: useColors2 } = this;
    if (useColors2) {
      const c = this.color;
      const colorCode = "\x1B[3" + (c < 8 ? c : "8;5;" + c);
      const prefix = `  ${colorCode};1m${name} \x1B[0m`;
      args[0] = prefix + args[0].split("\n").join("\n" + prefix);
      args.push(colorCode + "m+" + exports.humanize(this.diff) + "\x1B[0m");
    } else {
      args[0] = getDate() + name + " " + args[0];
    }
  };
  var getDate = function() {
    if (exports.inspectOpts.hideDate) {
      return "";
    }
    return new Date().toISOString() + " ";
  };
  var log = function(...args) {
    return process.stderr.write(util.format(...args) + "\n");
  };
  var save = function(namespaces) {
    if (namespaces) {
      process.env.DEBUG = namespaces;
    } else {
      delete process.env.DEBUG;
    }
  };
  var load = function() {
    return process.env.DEBUG;
  };
  var init = function(debug) {
    debug.inspectOpts = {};
    const keys = Object.keys(exports.inspectOpts);
    for (let i = 0;i < keys.length; i++) {
      debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
    }
  };
  var tty = __require("tty");
  var util = __require("util");
  exports.init = init;
  exports.log = log;
  exports.formatArgs = formatArgs;
  exports.save = save;
  exports.load = load;
  exports.useColors = useColors;
  exports.destroy = util.deprecate(() => {
  }, "Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
  exports.colors = [6, 2, 3, 4, 5, 1];
  try {
    const supportsColor = require_supports_color();
    if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
      exports.colors = [
        20,
        21,
        26,
        27,
        32,
        33,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        56,
        57,
        62,
        63,
        68,
        69,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        92,
        93,
        98,
        99,
        112,
        113,
        128,
        129,
        134,
        135,
        148,
        149,
        160,
        161,
        162,
        163,
        164,
        165,
        166,
        167,
        168,
        169,
        170,
        171,
        172,
        173,
        178,
        179,
        184,
        185,
        196,
        197,
        198,
        199,
        200,
        201,
        202,
        203,
        204,
        205,
        206,
        207,
        208,
        209,
        214,
        215,
        220,
        221
      ];
    }
  } catch (error2) {
  }
  exports.inspectOpts = Object.keys(process.env).filter((key) => {
    return /^debug_/i.test(key);
  }).reduce((obj, key) => {
    const prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, (_, k) => {
      return k.toUpperCase();
    });
    let val = process.env[key];
    if (/^(yes|on|true|enabled)$/i.test(val)) {
      val = true;
    } else if (/^(no|off|false|disabled)$/i.test(val)) {
      val = false;
    } else if (val === "null") {
      val = null;
    } else {
      val = Number(val);
    }
    obj[prop] = val;
    return obj;
  }, {});
  module.exports = require_common()(exports);
  var { formatters } = module.exports;
  formatters.o = function(v) {
    this.inspectOpts.colors = this.useColors;
    return util.inspect(v, this.inspectOpts).split("\n").map((str) => str.trim()).join(" ");
  };
  formatters.O = function(v) {
    this.inspectOpts.colors = this.useColors;
    return util.inspect(v, this.inspectOpts);
  };
});

// node_modules/debug/src/index.js
var require_src3 = __commonJS((exports, module) => {
  if (typeof process === "undefined" || process.type === "renderer" || false || process.__nwjs) {
    module.exports = require_browser();
  } else {
    module.exports = require_node();
  }
});

// node_modules/cookiejar/cookiejar.js
var require_cookiejar = __commonJS((exports) => {
  (function() {
    function CookieAccessInfo(domain, path, secure, script) {
      if (this instanceof CookieAccessInfo) {
        this.domain = domain || undefined;
        this.path = path || "/";
        this.secure = !!secure;
        this.script = !!script;
        return this;
      }
      return new CookieAccessInfo(domain, path, secure, script);
    }
    CookieAccessInfo.All = Object.freeze(Object.create(null));
    exports.CookieAccessInfo = CookieAccessInfo;
    function Cookie(cookiestr, request_domain, request_path) {
      if (cookiestr instanceof Cookie) {
        return cookiestr;
      }
      if (this instanceof Cookie) {
        this.name = null;
        this.value = null;
        this.expiration_date = Infinity;
        this.path = String(request_path || "/");
        this.explicit_path = false;
        this.domain = request_domain || null;
        this.explicit_domain = false;
        this.secure = false;
        this.noscript = false;
        if (cookiestr) {
          this.parse(cookiestr, request_domain, request_path);
        }
        return this;
      }
      return new Cookie(cookiestr, request_domain, request_path);
    }
    exports.Cookie = Cookie;
    Cookie.prototype.toString = function toString() {
      var str = [this.name + "=" + this.value];
      if (this.expiration_date !== Infinity) {
        str.push("expires=" + new Date(this.expiration_date).toGMTString());
      }
      if (this.domain) {
        str.push("domain=" + this.domain);
      }
      if (this.path) {
        str.push("path=" + this.path);
      }
      if (this.secure) {
        str.push("secure");
      }
      if (this.noscript) {
        str.push("httponly");
      }
      return str.join("; ");
    };
    Cookie.prototype.toValueString = function toValueString() {
      return this.name + "=" + this.value;
    };
    var cookie_str_splitter = /[:](?=\s*[a-zA-Z0-9_\-]+\s*[=])/g;
    Cookie.prototype.parse = function parse(str, request_domain, request_path) {
      if (this instanceof Cookie) {
        if (str.length > 32768) {
          console.warn("Cookie too long for parsing (>32768 characters)");
          return;
        }
        var parts = str.split(";").filter(function(value2) {
          return !!value2;
        });
        var i;
        var pair = parts[0].match(/([^=]+)=([\s\S]*)/);
        if (!pair) {
          console.warn("Invalid cookie header encountered. Header: '" + str + "'");
          return;
        }
        var key = pair[1];
        var value = pair[2];
        if (typeof key !== "string" || key.length === 0 || typeof value !== "string") {
          console.warn("Unable to extract values from cookie header. Cookie: '" + str + "'");
          return;
        }
        this.name = key;
        this.value = value;
        for (i = 1;i < parts.length; i += 1) {
          pair = parts[i].match(/([^=]+)(?:=([\s\S]*))?/);
          key = pair[1].trim().toLowerCase();
          value = pair[2];
          switch (key) {
            case "httponly":
              this.noscript = true;
              break;
            case "expires":
              this.expiration_date = value ? Number(Date.parse(value)) : Infinity;
              break;
            case "path":
              this.path = value ? value.trim() : "";
              this.explicit_path = true;
              break;
            case "domain":
              this.domain = value ? value.trim() : "";
              this.explicit_domain = !!this.domain;
              break;
            case "secure":
              this.secure = true;
              break;
          }
        }
        if (!this.explicit_path) {
          this.path = request_path || "/";
        }
        if (!this.explicit_domain) {
          this.domain = request_domain;
        }
        return this;
      }
      return new Cookie().parse(str, request_domain, request_path);
    };
    Cookie.prototype.matches = function matches(access_info) {
      if (access_info === CookieAccessInfo.All) {
        return true;
      }
      if (this.noscript && access_info.script || this.secure && !access_info.secure || !this.collidesWith(access_info)) {
        return false;
      }
      return true;
    };
    Cookie.prototype.collidesWith = function collidesWith(access_info) {
      if (this.path && !access_info.path || this.domain && !access_info.domain) {
        return false;
      }
      if (this.path && access_info.path.indexOf(this.path) !== 0) {
        return false;
      }
      if (this.explicit_path && access_info.path.indexOf(this.path) !== 0) {
        return false;
      }
      var access_domain = access_info.domain && access_info.domain.replace(/^[\.]/, "");
      var cookie_domain = this.domain && this.domain.replace(/^[\.]/, "");
      if (cookie_domain === access_domain) {
        return true;
      }
      if (cookie_domain) {
        if (!this.explicit_domain) {
          return false;
        }
        var wildcard = access_domain.indexOf(cookie_domain);
        if (wildcard === -1 || wildcard !== access_domain.length - cookie_domain.length) {
          return false;
        }
        return true;
      }
      return true;
    };
    function CookieJar() {
      var cookies, cookies_list, collidable_cookie;
      if (this instanceof CookieJar) {
        cookies = Object.create(null);
        this.setCookie = function setCookie(cookie, request_domain, request_path) {
          var remove, i;
          cookie = new Cookie(cookie, request_domain, request_path);
          remove = cookie.expiration_date <= Date.now();
          if (cookies[cookie.name] !== undefined) {
            cookies_list = cookies[cookie.name];
            for (i = 0;i < cookies_list.length; i += 1) {
              collidable_cookie = cookies_list[i];
              if (collidable_cookie.collidesWith(cookie)) {
                if (remove) {
                  cookies_list.splice(i, 1);
                  if (cookies_list.length === 0) {
                    delete cookies[cookie.name];
                  }
                  return false;
                }
                cookies_list[i] = cookie;
                return cookie;
              }
            }
            if (remove) {
              return false;
            }
            cookies_list.push(cookie);
            return cookie;
          }
          if (remove) {
            return false;
          }
          cookies[cookie.name] = [cookie];
          return cookies[cookie.name];
        };
        this.getCookie = function getCookie(cookie_name, access_info) {
          var cookie, i;
          cookies_list = cookies[cookie_name];
          if (!cookies_list) {
            return;
          }
          for (i = 0;i < cookies_list.length; i += 1) {
            cookie = cookies_list[i];
            if (cookie.expiration_date <= Date.now()) {
              if (cookies_list.length === 0) {
                delete cookies[cookie.name];
              }
              continue;
            }
            if (cookie.matches(access_info)) {
              return cookie;
            }
          }
        };
        this.getCookies = function getCookies(access_info) {
          var matches = [], cookie_name, cookie;
          for (cookie_name in cookies) {
            cookie = this.getCookie(cookie_name, access_info);
            if (cookie) {
              matches.push(cookie);
            }
          }
          matches.toString = function toString() {
            return matches.join(":");
          };
          matches.toValueString = function toValueString() {
            return matches.map(function(c) {
              return c.toValueString();
            }).join("; ");
          };
          return matches;
        };
        return this;
      }
      return new CookieJar;
    }
    exports.CookieJar = CookieJar;
    CookieJar.prototype.setCookies = function setCookies(cookies, request_domain, request_path) {
      cookies = Array.isArray(cookies) ? cookies : cookies.split(cookie_str_splitter);
      var successful = [], i, cookie;
      cookies = cookies.map(function(item) {
        return new Cookie(item, request_domain, request_path);
      });
      for (i = 0;i < cookies.length; i += 1) {
        cookie = cookies[i];
        if (this.setCookie(cookie, request_domain, request_path)) {
          successful.push(cookie);
        }
      }
      return successful;
    };
  })();
});

// node_modules/semver/internal/constants.js
var require_constants = __commonJS((exports, module) => {
  var SEMVER_SPEC_VERSION = "2.0.0";
  var MAX_LENGTH = 256;
  var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;
  var MAX_SAFE_COMPONENT_LENGTH = 16;
  var MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6;
  var RELEASE_TYPES = [
    "major",
    "premajor",
    "minor",
    "preminor",
    "patch",
    "prepatch",
    "prerelease"
  ];
  module.exports = {
    MAX_LENGTH,
    MAX_SAFE_COMPONENT_LENGTH,
    MAX_SAFE_BUILD_LENGTH,
    MAX_SAFE_INTEGER,
    RELEASE_TYPES,
    SEMVER_SPEC_VERSION,
    FLAG_INCLUDE_PRERELEASE: 1,
    FLAG_LOOSE: 2
  };
});

// node_modules/semver/internal/debug.js
var require_debug = __commonJS((exports, module) => {
  var debug = typeof process === "object" && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? (...args) => console.error("SEMVER", ...args) : () => {
  };
  module.exports = debug;
});

// node_modules/semver/internal/re.js
var require_re = __commonJS((exports, module) => {
  var {
    MAX_SAFE_COMPONENT_LENGTH,
    MAX_SAFE_BUILD_LENGTH,
    MAX_LENGTH
  } = require_constants();
  var debug = require_debug();
  exports = module.exports = {};
  var re = exports.re = [];
  var safeRe = exports.safeRe = [];
  var src = exports.src = [];
  var t = exports.t = {};
  var R = 0;
  var LETTERDASHNUMBER = "[a-zA-Z0-9-]";
  var safeRegexReplacements = [
    ["\\s", 1],
    ["\\d", MAX_LENGTH],
    [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH]
  ];
  var makeSafeRegex = (value) => {
    for (const [token, max] of safeRegexReplacements) {
      value = value.split(`${token}*`).join(`${token}{0,${max}}`).split(`${token}+`).join(`${token}{1,${max}}`);
    }
    return value;
  };
  var createToken = (name, value, isGlobal) => {
    const safe = makeSafeRegex(value);
    const index = R++;
    debug(name, index, value);
    t[name] = index;
    src[index] = value;
    re[index] = new RegExp(value, isGlobal ? "g" : undefined);
    safeRe[index] = new RegExp(safe, isGlobal ? "g" : undefined);
  };
  createToken("NUMERICIDENTIFIER", "0|[1-9]\\d*");
  createToken("NUMERICIDENTIFIERLOOSE", "\\d+");
  createToken("NONNUMERICIDENTIFIER", `\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`);
  createToken("MAINVERSION", `(${src[t.NUMERICIDENTIFIER]})\\.` + `(${src[t.NUMERICIDENTIFIER]})\\.` + `(${src[t.NUMERICIDENTIFIER]})`);
  createToken("MAINVERSIONLOOSE", `(${src[t.NUMERICIDENTIFIERLOOSE]})\\.` + `(${src[t.NUMERICIDENTIFIERLOOSE]})\\.` + `(${src[t.NUMERICIDENTIFIERLOOSE]})`);
  createToken("PRERELEASEIDENTIFIER", `(?:${src[t.NUMERICIDENTIFIER]}|${src[t.NONNUMERICIDENTIFIER]})`);
  createToken("PRERELEASEIDENTIFIERLOOSE", `(?:${src[t.NUMERICIDENTIFIERLOOSE]}|${src[t.NONNUMERICIDENTIFIER]})`);
  createToken("PRERELEASE", `(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\.${src[t.PRERELEASEIDENTIFIER]})*))`);
  createToken("PRERELEASELOOSE", `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`);
  createToken("BUILDIDENTIFIER", `${LETTERDASHNUMBER}+`);
  createToken("BUILD", `(?:\\+(${src[t.BUILDIDENTIFIER]}(?:\\.${src[t.BUILDIDENTIFIER]})*))`);
  createToken("FULLPLAIN", `v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`);
  createToken("FULL", `^${src[t.FULLPLAIN]}\$`);
  createToken("LOOSEPLAIN", `[v=\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`);
  createToken("LOOSE", `^${src[t.LOOSEPLAIN]}\$`);
  createToken("GTLT", "((?:<|>)?=?)");
  createToken("XRANGEIDENTIFIERLOOSE", `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`);
  createToken("XRANGEIDENTIFIER", `${src[t.NUMERICIDENTIFIER]}|x|X|\\*`);
  createToken("XRANGEPLAIN", `[v=\\s]*(${src[t.XRANGEIDENTIFIER]})` + `(?:\\.(${src[t.XRANGEIDENTIFIER]})` + `(?:\\.(${src[t.XRANGEIDENTIFIER]})` + `(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?` + `)?)?`);
  createToken("XRANGEPLAINLOOSE", `[v=\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?` + `)?)?`);
  createToken("XRANGE", `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAIN]}\$`);
  createToken("XRANGELOOSE", `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAINLOOSE]}\$`);
  createToken("COERCE", `${"(^|[^\\d])(\\d{1,"}${MAX_SAFE_COMPONENT_LENGTH}})` + `(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` + `(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` + `(?:\$|[^\\d])`);
  createToken("COERCERTL", src[t.COERCE], true);
  createToken("LONETILDE", "(?:~>?)");
  createToken("TILDETRIM", `(\\s*)${src[t.LONETILDE]}\\s+`, true);
  exports.tildeTrimReplace = "$1~";
  createToken("TILDE", `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}\$`);
  createToken("TILDELOOSE", `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}\$`);
  createToken("LONECARET", "(?:\\^)");
  createToken("CARETTRIM", `(\\s*)${src[t.LONECARET]}\\s+`, true);
  exports.caretTrimReplace = "$1^";
  createToken("CARET", `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}\$`);
  createToken("CARETLOOSE", `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}\$`);
  createToken("COMPARATORLOOSE", `^${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]})\$|^\$`);
  createToken("COMPARATOR", `^${src[t.GTLT]}\\s*(${src[t.FULLPLAIN]})\$|^\$`);
  createToken("COMPARATORTRIM", `(\\s*)${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true);
  exports.comparatorTrimReplace = "$1$2$3";
  createToken("HYPHENRANGE", `^\\s*(${src[t.XRANGEPLAIN]})` + `\\s+-\\s+` + `(${src[t.XRANGEPLAIN]})` + `\\s*\$`);
  createToken("HYPHENRANGELOOSE", `^\\s*(${src[t.XRANGEPLAINLOOSE]})` + `\\s+-\\s+` + `(${src[t.XRANGEPLAINLOOSE]})` + `\\s*\$`);
  createToken("STAR", "(<|>)?=?\\s*\\*");
  createToken("GTE0", "^\\s*>=\\s*0\\.0\\.0\\s*$");
  createToken("GTE0PRE", "^\\s*>=\\s*0\\.0\\.0-0\\s*$");
});

// node_modules/semver/internal/parse-options.js
var require_parse_options = __commonJS((exports, module) => {
  var looseOption = Object.freeze({ loose: true });
  var emptyOpts = Object.freeze({});
  var parseOptions = (options) => {
    if (!options) {
      return emptyOpts;
    }
    if (typeof options !== "object") {
      return looseOption;
    }
    return options;
  };
  module.exports = parseOptions;
});

// node_modules/semver/internal/identifiers.js
var require_identifiers = __commonJS((exports, module) => {
  var numeric = /^[0-9]+$/;
  var compareIdentifiers = (a, b) => {
    const anum = numeric.test(a);
    const bnum = numeric.test(b);
    if (anum && bnum) {
      a = +a;
      b = +b;
    }
    return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;
  };
  var rcompareIdentifiers = (a, b) => compareIdentifiers(b, a);
  module.exports = {
    compareIdentifiers,
    rcompareIdentifiers
  };
});

// node_modules/semver/classes/semver.js
var require_semver2 = __commonJS((exports, module) => {
  var debug = require_debug();
  var { MAX_LENGTH, MAX_SAFE_INTEGER } = require_constants();
  var { safeRe: re, t } = require_re();
  var parseOptions = require_parse_options();
  var { compareIdentifiers } = require_identifiers();

  class SemVer {
    constructor(version4, options) {
      options = parseOptions(options);
      if (version4 instanceof SemVer) {
        if (version4.loose === !!options.loose && version4.includePrerelease === !!options.includePrerelease) {
          return version4;
        } else {
          version4 = version4.version;
        }
      } else if (typeof version4 !== "string") {
        throw new TypeError(`Invalid version. Must be a string. Got type "${typeof version4}".`);
      }
      if (version4.length > MAX_LENGTH) {
        throw new TypeError(`version is longer than ${MAX_LENGTH} characters`);
      }
      debug("SemVer", version4, options);
      this.options = options;
      this.loose = !!options.loose;
      this.includePrerelease = !!options.includePrerelease;
      const m = version4.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL]);
      if (!m) {
        throw new TypeError(`Invalid Version: ${version4}`);
      }
      this.raw = version4;
      this.major = +m[1];
      this.minor = +m[2];
      this.patch = +m[3];
      if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
        throw new TypeError("Invalid major version");
      }
      if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
        throw new TypeError("Invalid minor version");
      }
      if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
        throw new TypeError("Invalid patch version");
      }
      if (!m[4]) {
        this.prerelease = [];
      } else {
        this.prerelease = m[4].split(".").map((id) => {
          if (/^[0-9]+$/.test(id)) {
            const num = +id;
            if (num >= 0 && num < MAX_SAFE_INTEGER) {
              return num;
            }
          }
          return id;
        });
      }
      this.build = m[5] ? m[5].split(".") : [];
      this.format();
    }
    format() {
      this.version = `${this.major}.${this.minor}.${this.patch}`;
      if (this.prerelease.length) {
        this.version += `-${this.prerelease.join(".")}`;
      }
      return this.version;
    }
    toString() {
      return this.version;
    }
    compare(other) {
      debug("SemVer.compare", this.version, this.options, other);
      if (!(other instanceof SemVer)) {
        if (typeof other === "string" && other === this.version) {
          return 0;
        }
        other = new SemVer(other, this.options);
      }
      if (other.version === this.version) {
        return 0;
      }
      return this.compareMain(other) || this.comparePre(other);
    }
    compareMain(other) {
      if (!(other instanceof SemVer)) {
        other = new SemVer(other, this.options);
      }
      return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);
    }
    comparePre(other) {
      if (!(other instanceof SemVer)) {
        other = new SemVer(other, this.options);
      }
      if (this.prerelease.length && !other.prerelease.length) {
        return -1;
      } else if (!this.prerelease.length && other.prerelease.length) {
        return 1;
      } else if (!this.prerelease.length && !other.prerelease.length) {
        return 0;
      }
      let i = 0;
      do {
        const a = this.prerelease[i];
        const b = other.prerelease[i];
        debug("prerelease compare", i, a, b);
        if (a === undefined && b === undefined) {
          return 0;
        } else if (b === undefined) {
          return 1;
        } else if (a === undefined) {
          return -1;
        } else if (a === b) {
          continue;
        } else {
          return compareIdentifiers(a, b);
        }
      } while (++i);
    }
    compareBuild(other) {
      if (!(other instanceof SemVer)) {
        other = new SemVer(other, this.options);
      }
      let i = 0;
      do {
        const a = this.build[i];
        const b = other.build[i];
        debug("prerelease compare", i, a, b);
        if (a === undefined && b === undefined) {
          return 0;
        } else if (b === undefined) {
          return 1;
        } else if (a === undefined) {
          return -1;
        } else if (a === b) {
          continue;
        } else {
          return compareIdentifiers(a, b);
        }
      } while (++i);
    }
    inc(release, identifier, identifierBase) {
      switch (release) {
        case "premajor":
          this.prerelease.length = 0;
          this.patch = 0;
          this.minor = 0;
          this.major++;
          this.inc("pre", identifier, identifierBase);
          break;
        case "preminor":
          this.prerelease.length = 0;
          this.patch = 0;
          this.minor++;
          this.inc("pre", identifier, identifierBase);
          break;
        case "prepatch":
          this.prerelease.length = 0;
          this.inc("patch", identifier, identifierBase);
          this.inc("pre", identifier, identifierBase);
          break;
        case "prerelease":
          if (this.prerelease.length === 0) {
            this.inc("patch", identifier, identifierBase);
          }
          this.inc("pre", identifier, identifierBase);
          break;
        case "major":
          if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {
            this.major++;
          }
          this.minor = 0;
          this.patch = 0;
          this.prerelease = [];
          break;
        case "minor":
          if (this.patch !== 0 || this.prerelease.length === 0) {
            this.minor++;
          }
          this.patch = 0;
          this.prerelease = [];
          break;
        case "patch":
          if (this.prerelease.length === 0) {
            this.patch++;
          }
          this.prerelease = [];
          break;
        case "pre": {
          const base = Number(identifierBase) ? 1 : 0;
          if (!identifier && identifierBase === false) {
            throw new Error("invalid increment argument: identifier is empty");
          }
          if (this.prerelease.length === 0) {
            this.prerelease = [base];
          } else {
            let i = this.prerelease.length;
            while (--i >= 0) {
              if (typeof this.prerelease[i] === "number") {
                this.prerelease[i]++;
                i = -2;
              }
            }
            if (i === -1) {
              if (identifier === this.prerelease.join(".") && identifierBase === false) {
                throw new Error("invalid increment argument: identifier already exists");
              }
              this.prerelease.push(base);
            }
          }
          if (identifier) {
            let prerelease = [identifier, base];
            if (identifierBase === false) {
              prerelease = [identifier];
            }
            if (compareIdentifiers(this.prerelease[0], identifier) === 0) {
              if (isNaN(this.prerelease[1])) {
                this.prerelease = prerelease;
              }
            } else {
              this.prerelease = prerelease;
            }
          }
          break;
        }
        default:
          throw new Error(`invalid increment argument: ${release}`);
      }
      this.raw = this.format();
      if (this.build.length) {
        this.raw += `+${this.build.join(".")}`;
      }
      return this;
    }
  }
  module.exports = SemVer;
});

// node_modules/semver/functions/parse.js
var require_parse4 = __commonJS((exports, module) => {
  var SemVer = require_semver2();
  var parse4 = (version4, options, throwErrors = false) => {
    if (version4 instanceof SemVer) {
      return version4;
    }
    try {
      return new SemVer(version4, options);
    } catch (er) {
      if (!throwErrors) {
        return null;
      }
      throw er;
    }
  };
  module.exports = parse4;
});

// node_modules/semver/functions/valid.js
var require_valid = __commonJS((exports, module) => {
  var parse4 = require_parse4();
  var valid = (version4, options) => {
    const v = parse4(version4, options);
    return v ? v.version : null;
  };
  module.exports = valid;
});

// node_modules/semver/functions/clean.js
var require_clean = __commonJS((exports, module) => {
  var parse4 = require_parse4();
  var clean = (version4, options) => {
    const s = parse4(version4.trim().replace(/^[=v]+/, ""), options);
    return s ? s.version : null;
  };
  module.exports = clean;
});

// node_modules/semver/functions/inc.js
var require_inc = __commonJS((exports, module) => {
  var SemVer = require_semver2();
  var inc = (version4, release, options, identifier, identifierBase) => {
    if (typeof options === "string") {
      identifierBase = identifier;
      identifier = options;
      options = undefined;
    }
    try {
      return new SemVer(version4 instanceof SemVer ? version4.version : version4, options).inc(release, identifier, identifierBase).version;
    } catch (er) {
      return null;
    }
  };
  module.exports = inc;
});

// node_modules/semver/functions/diff.js
var require_diff = __commonJS((exports, module) => {
  var parse4 = require_parse4();
  var diff = (version1, version22) => {
    const v1 = parse4(version1, null, true);
    const v2 = parse4(version22, null, true);
    const comparison = v1.compare(v2);
    if (comparison === 0) {
      return null;
    }
    const v1Higher = comparison > 0;
    const highVersion = v1Higher ? v1 : v2;
    const lowVersion = v1Higher ? v2 : v1;
    const highHasPre = !!highVersion.prerelease.length;
    const lowHasPre = !!lowVersion.prerelease.length;
    if (lowHasPre && !highHasPre) {
      if (!lowVersion.patch && !lowVersion.minor) {
        return "major";
      }
      if (highVersion.patch) {
        return "patch";
      }
      if (highVersion.minor) {
        return "minor";
      }
      return "major";
    }
    const prefix = highHasPre ? "pre" : "";
    if (v1.major !== v2.major) {
      return prefix + "major";
    }
    if (v1.minor !== v2.minor) {
      return prefix + "minor";
    }
    if (v1.patch !== v2.patch) {
      return prefix + "patch";
    }
    return "prerelease";
  };
  module.exports = diff;
});

// node_modules/semver/functions/major.js
var require_major = __commonJS((exports, module) => {
  var SemVer = require_semver2();
  var major = (a, loose) => new SemVer(a, loose).major;
  module.exports = major;
});

// node_modules/semver/functions/minor.js
var require_minor = __commonJS((exports, module) => {
  var SemVer = require_semver2();
  var minor = (a, loose) => new SemVer(a, loose).minor;
  module.exports = minor;
});

// node_modules/semver/functions/patch.js
var require_patch = __commonJS((exports, module) => {
  var SemVer = require_semver2();
  var patch = (a, loose) => new SemVer(a, loose).patch;
  module.exports = patch;
});

// node_modules/semver/functions/prerelease.js
var require_prerelease = __commonJS((exports, module) => {
  var parse4 = require_parse4();
  var prerelease = (version4, options) => {
    const parsed = parse4(version4, options);
    return parsed && parsed.prerelease.length ? parsed.prerelease : null;
  };
  module.exports = prerelease;
});

// node_modules/semver/functions/compare.js
var require_compare = __commonJS((exports, module) => {
  var SemVer = require_semver2();
  var compare = (a, b, loose) => new SemVer(a, loose).compare(new SemVer(b, loose));
  module.exports = compare;
});

// node_modules/semver/functions/rcompare.js
var require_rcompare = __commonJS((exports, module) => {
  var compare = require_compare();
  var rcompare = (a, b, loose) => compare(b, a, loose);
  module.exports = rcompare;
});

// node_modules/semver/functions/compare-loose.js
var require_compare_loose = __commonJS((exports, module) => {
  var compare = require_compare();
  var compareLoose = (a, b) => compare(a, b, true);
  module.exports = compareLoose;
});

// node_modules/semver/functions/compare-build.js
var require_compare_build = __commonJS((exports, module) => {
  var SemVer = require_semver2();
  var compareBuild = (a, b, loose) => {
    const versionA = new SemVer(a, loose);
    const versionB = new SemVer(b, loose);
    return versionA.compare(versionB) || versionA.compareBuild(versionB);
  };
  module.exports = compareBuild;
});

// node_modules/semver/functions/sort.js
var require_sort = __commonJS((exports, module) => {
  var compareBuild = require_compare_build();
  var sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose));
  module.exports = sort;
});

// node_modules/semver/functions/rsort.js
var require_rsort = __commonJS((exports, module) => {
  var compareBuild = require_compare_build();
  var rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose));
  module.exports = rsort;
});

// node_modules/semver/functions/gt.js
var require_gt = __commonJS((exports, module) => {
  var compare = require_compare();
  var gt = (a, b, loose) => compare(a, b, loose) > 0;
  module.exports = gt;
});

// node_modules/semver/functions/lt.js
var require_lt = __commonJS((exports, module) => {
  var compare = require_compare();
  var lt = (a, b, loose) => compare(a, b, loose) < 0;
  module.exports = lt;
});

// node_modules/semver/functions/eq.js
var require_eq = __commonJS((exports, module) => {
  var compare = require_compare();
  var eq = (a, b, loose) => compare(a, b, loose) === 0;
  module.exports = eq;
});

// node_modules/semver/functions/neq.js
var require_neq = __commonJS((exports, module) => {
  var compare = require_compare();
  var neq = (a, b, loose) => compare(a, b, loose) !== 0;
  module.exports = neq;
});

// node_modules/semver/functions/gte.js
var require_gte = __commonJS((exports, module) => {
  var compare = require_compare();
  var gte = (a, b, loose) => compare(a, b, loose) >= 0;
  module.exports = gte;
});

// node_modules/semver/functions/lte.js
var require_lte = __commonJS((exports, module) => {
  var compare = require_compare();
  var lte = (a, b, loose) => compare(a, b, loose) <= 0;
  module.exports = lte;
});

// node_modules/semver/functions/cmp.js
var require_cmp = __commonJS((exports, module) => {
  var eq = require_eq();
  var neq = require_neq();
  var gt = require_gt();
  var gte = require_gte();
  var lt = require_lt();
  var lte = require_lte();
  var cmp = (a, op, b, loose) => {
    switch (op) {
      case "===":
        if (typeof a === "object") {
          a = a.version;
        }
        if (typeof b === "object") {
          b = b.version;
        }
        return a === b;
      case "!==":
        if (typeof a === "object") {
          a = a.version;
        }
        if (typeof b === "object") {
          b = b.version;
        }
        return a !== b;
      case "":
      case "=":
      case "==":
        return eq(a, b, loose);
      case "!=":
        return neq(a, b, loose);
      case ">":
        return gt(a, b, loose);
      case ">=":
        return gte(a, b, loose);
      case "<":
        return lt(a, b, loose);
      case "<=":
        return lte(a, b, loose);
      default:
        throw new TypeError(`Invalid operator: ${op}`);
    }
  };
  module.exports = cmp;
});

// node_modules/semver/functions/coerce.js
var require_coerce = __commonJS((exports, module) => {
  var SemVer = require_semver2();
  var parse4 = require_parse4();
  var { safeRe: re, t } = require_re();
  var coerce = (version4, options) => {
    if (version4 instanceof SemVer) {
      return version4;
    }
    if (typeof version4 === "number") {
      version4 = String(version4);
    }
    if (typeof version4 !== "string") {
      return null;
    }
    options = options || {};
    let match = null;
    if (!options.rtl) {
      match = version4.match(re[t.COERCE]);
    } else {
      let next;
      while ((next = re[t.COERCERTL].exec(version4)) && (!match || match.index + match[0].length !== version4.length)) {
        if (!match || next.index + next[0].length !== match.index + match[0].length) {
          match = next;
        }
        re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length;
      }
      re[t.COERCERTL].lastIndex = -1;
    }
    if (match === null) {
      return null;
    }
    return parse4(`${match[2]}.${match[3] || "0"}.${match[4] || "0"}`, options);
  };
  module.exports = coerce;
});

// node_modules/yallist/iterator.js
var require_iterator = __commonJS((exports, module) => {
  module.exports = function(Yallist) {
    Yallist.prototype[Symbol.iterator] = function* () {
      for (let walker = this.head;walker; walker = walker.next) {
        yield walker.value;
      }
    };
  };
});

// node_modules/yallist/yallist.js
var require_yallist = __commonJS((exports, module) => {
  var Yallist = function(list) {
    var self2 = this;
    if (!(self2 instanceof Yallist)) {
      self2 = new Yallist;
    }
    self2.tail = null;
    self2.head = null;
    self2.length = 0;
    if (list && typeof list.forEach === "function") {
      list.forEach(function(item) {
        self2.push(item);
      });
    } else if (arguments.length > 0) {
      for (var i = 0, l = arguments.length;i < l; i++) {
        self2.push(arguments[i]);
      }
    }
    return self2;
  };
  var insert = function(self2, node, value) {
    var inserted = node === self2.head ? new Node(value, null, node, self2) : new Node(value, node, node.next, self2);
    if (inserted.next === null) {
      self2.tail = inserted;
    }
    if (inserted.prev === null) {
      self2.head = inserted;
    }
    self2.length++;
    return inserted;
  };
  var push = function(self2, item) {
    self2.tail = new Node(item, self2.tail, null, self2);
    if (!self2.head) {
      self2.head = self2.tail;
    }
    self2.length++;
  };
  var unshift = function(self2, item) {
    self2.head = new Node(item, null, self2.head, self2);
    if (!self2.tail) {
      self2.tail = self2.head;
    }
    self2.length++;
  };
  var Node = function(value, prev, next, list) {
    if (!(this instanceof Node)) {
      return new Node(value, prev, next, list);
    }
    this.list = list;
    this.value = value;
    if (prev) {
      prev.next = this;
      this.prev = prev;
    } else {
      this.prev = null;
    }
    if (next) {
      next.prev = this;
      this.next = next;
    } else {
      this.next = null;
    }
  };
  module.exports = Yallist;
  Yallist.Node = Node;
  Yallist.create = Yallist;
  Yallist.prototype.removeNode = function(node) {
    if (node.list !== this) {
      throw new Error("removing node which does not belong to this list");
    }
    var next = node.next;
    var prev = node.prev;
    if (next) {
      next.prev = prev;
    }
    if (prev) {
      prev.next = next;
    }
    if (node === this.head) {
      this.head = next;
    }
    if (node === this.tail) {
      this.tail = prev;
    }
    node.list.length--;
    node.next = null;
    node.prev = null;
    node.list = null;
    return next;
  };
  Yallist.prototype.unshiftNode = function(node) {
    if (node === this.head) {
      return;
    }
    if (node.list) {
      node.list.removeNode(node);
    }
    var head = this.head;
    node.list = this;
    node.next = head;
    if (head) {
      head.prev = node;
    }
    this.head = node;
    if (!this.tail) {
      this.tail = node;
    }
    this.length++;
  };
  Yallist.prototype.pushNode = function(node) {
    if (node === this.tail) {
      return;
    }
    if (node.list) {
      node.list.removeNode(node);
    }
    var tail = this.tail;
    node.list = this;
    node.prev = tail;
    if (tail) {
      tail.next = node;
    }
    this.tail = node;
    if (!this.head) {
      this.head = node;
    }
    this.length++;
  };
  Yallist.prototype.push = function() {
    for (var i = 0, l = arguments.length;i < l; i++) {
      push(this, arguments[i]);
    }
    return this.length;
  };
  Yallist.prototype.unshift = function() {
    for (var i = 0, l = arguments.length;i < l; i++) {
      unshift(this, arguments[i]);
    }
    return this.length;
  };
  Yallist.prototype.pop = function() {
    if (!this.tail) {
      return;
    }
    var res = this.tail.value;
    this.tail = this.tail.prev;
    if (this.tail) {
      this.tail.next = null;
    } else {
      this.head = null;
    }
    this.length--;
    return res;
  };
  Yallist.prototype.shift = function() {
    if (!this.head) {
      return;
    }
    var res = this.head.value;
    this.head = this.head.next;
    if (this.head) {
      this.head.prev = null;
    } else {
      this.tail = null;
    }
    this.length--;
    return res;
  };
  Yallist.prototype.forEach = function(fn, thisp) {
    thisp = thisp || this;
    for (var walker = this.head, i = 0;walker !== null; i++) {
      fn.call(thisp, walker.value, i, this);
      walker = walker.next;
    }
  };
  Yallist.prototype.forEachReverse = function(fn, thisp) {
    thisp = thisp || this;
    for (var walker = this.tail, i = this.length - 1;walker !== null; i--) {
      fn.call(thisp, walker.value, i, this);
      walker = walker.prev;
    }
  };
  Yallist.prototype.get = function(n) {
    for (var i = 0, walker = this.head;walker !== null && i < n; i++) {
      walker = walker.next;
    }
    if (i === n && walker !== null) {
      return walker.value;
    }
  };
  Yallist.prototype.getReverse = function(n) {
    for (var i = 0, walker = this.tail;walker !== null && i < n; i++) {
      walker = walker.prev;
    }
    if (i === n && walker !== null) {
      return walker.value;
    }
  };
  Yallist.prototype.map = function(fn, thisp) {
    thisp = thisp || this;
    var res = new Yallist;
    for (var walker = this.head;walker !== null; ) {
      res.push(fn.call(thisp, walker.value, this));
      walker = walker.next;
    }
    return res;
  };
  Yallist.prototype.mapReverse = function(fn, thisp) {
    thisp = thisp || this;
    var res = new Yallist;
    for (var walker = this.tail;walker !== null; ) {
      res.push(fn.call(thisp, walker.value, this));
      walker = walker.prev;
    }
    return res;
  };
  Yallist.prototype.reduce = function(fn, initial) {
    var acc;
    var walker = this.head;
    if (arguments.length > 1) {
      acc = initial;
    } else if (this.head) {
      walker = this.head.next;
      acc = this.head.value;
    } else {
      throw new TypeError("Reduce of empty list with no initial value");
    }
    for (var i = 0;walker !== null; i++) {
      acc = fn(acc, walker.value, i);
      walker = walker.next;
    }
    return acc;
  };
  Yallist.prototype.reduceReverse = function(fn, initial) {
    var acc;
    var walker = this.tail;
    if (arguments.length > 1) {
      acc = initial;
    } else if (this.tail) {
      walker = this.tail.prev;
      acc = this.tail.value;
    } else {
      throw new TypeError("Reduce of empty list with no initial value");
    }
    for (var i = this.length - 1;walker !== null; i--) {
      acc = fn(acc, walker.value, i);
      walker = walker.prev;
    }
    return acc;
  };
  Yallist.prototype.toArray = function() {
    var arr = new Array(this.length);
    for (var i = 0, walker = this.head;walker !== null; i++) {
      arr[i] = walker.value;
      walker = walker.next;
    }
    return arr;
  };
  Yallist.prototype.toArrayReverse = function() {
    var arr = new Array(this.length);
    for (var i = 0, walker = this.tail;walker !== null; i++) {
      arr[i] = walker.value;
      walker = walker.prev;
    }
    return arr;
  };
  Yallist.prototype.slice = function(from, to) {
    to = to || this.length;
    if (to < 0) {
      to += this.length;
    }
    from = from || 0;
    if (from < 0) {
      from += this.length;
    }
    var ret = new Yallist;
    if (to < from || to < 0) {
      return ret;
    }
    if (from < 0) {
      from = 0;
    }
    if (to > this.length) {
      to = this.length;
    }
    for (var i = 0, walker = this.head;walker !== null && i < from; i++) {
      walker = walker.next;
    }
    for (;walker !== null && i < to; i++, walker = walker.next) {
      ret.push(walker.value);
    }
    return ret;
  };
  Yallist.prototype.sliceReverse = function(from, to) {
    to = to || this.length;
    if (to < 0) {
      to += this.length;
    }
    from = from || 0;
    if (from < 0) {
      from += this.length;
    }
    var ret = new Yallist;
    if (to < from || to < 0) {
      return ret;
    }
    if (from < 0) {
      from = 0;
    }
    if (to > this.length) {
      to = this.length;
    }
    for (var i = this.length, walker = this.tail;walker !== null && i > to; i--) {
      walker = walker.prev;
    }
    for (;walker !== null && i > from; i--, walker = walker.prev) {
      ret.push(walker.value);
    }
    return ret;
  };
  Yallist.prototype.splice = function(start, deleteCount, ...nodes) {
    if (start > this.length) {
      start = this.length - 1;
    }
    if (start < 0) {
      start = this.length + start;
    }
    for (var i = 0, walker = this.head;walker !== null && i < start; i++) {
      walker = walker.next;
    }
    var ret = [];
    for (var i = 0;walker && i < deleteCount; i++) {
      ret.push(walker.value);
      walker = this.removeNode(walker);
    }
    if (walker === null) {
      walker = this.tail;
    }
    if (walker !== this.head && walker !== this.tail) {
      walker = walker.prev;
    }
    for (var i = 0;i < nodes.length; i++) {
      walker = insert(this, walker, nodes[i]);
    }
    return ret;
  };
  Yallist.prototype.reverse = function() {
    var head = this.head;
    var tail = this.tail;
    for (var walker = head;walker !== null; walker = walker.prev) {
      var p = walker.prev;
      walker.prev = walker.next;
      walker.next = p;
    }
    this.head = tail;
    this.tail = head;
    return this;
  };
  try {
    require_iterator()(Yallist);
  } catch (er) {
  }
});

// node_modules/lru-cache/index.js
var require_lru_cache = __commonJS((exports, module) => {
  var Yallist = require_yallist();
  var MAX = Symbol("max");
  var LENGTH = Symbol("length");
  var LENGTH_CALCULATOR = Symbol("lengthCalculator");
  var ALLOW_STALE = Symbol("allowStale");
  var MAX_AGE = Symbol("maxAge");
  var DISPOSE = Symbol("dispose");
  var NO_DISPOSE_ON_SET = Symbol("noDisposeOnSet");
  var LRU_LIST = Symbol("lruList");
  var CACHE = Symbol("cache");
  var UPDATE_AGE_ON_GET = Symbol("updateAgeOnGet");
  var naiveLength = () => 1;

  class LRUCache {
    constructor(options) {
      if (typeof options === "number")
        options = { max: options };
      if (!options)
        options = {};
      if (options.max && (typeof options.max !== "number" || options.max < 0))
        throw new TypeError("max must be a non-negative number");
      const max = this[MAX] = options.max || Infinity;
      const lc = options.length || naiveLength;
      this[LENGTH_CALCULATOR] = typeof lc !== "function" ? naiveLength : lc;
      this[ALLOW_STALE] = options.stale || false;
      if (options.maxAge && typeof options.maxAge !== "number")
        throw new TypeError("maxAge must be a number");
      this[MAX_AGE] = options.maxAge || 0;
      this[DISPOSE] = options.dispose;
      this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;
      this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false;
      this.reset();
    }
    set max(mL) {
      if (typeof mL !== "number" || mL < 0)
        throw new TypeError("max must be a non-negative number");
      this[MAX] = mL || Infinity;
      trim(this);
    }
    get max() {
      return this[MAX];
    }
    set allowStale(allowStale) {
      this[ALLOW_STALE] = !!allowStale;
    }
    get allowStale() {
      return this[ALLOW_STALE];
    }
    set maxAge(mA) {
      if (typeof mA !== "number")
        throw new TypeError("maxAge must be a non-negative number");
      this[MAX_AGE] = mA;
      trim(this);
    }
    get maxAge() {
      return this[MAX_AGE];
    }
    set lengthCalculator(lC) {
      if (typeof lC !== "function")
        lC = naiveLength;
      if (lC !== this[LENGTH_CALCULATOR]) {
        this[LENGTH_CALCULATOR] = lC;
        this[LENGTH] = 0;
        this[LRU_LIST].forEach((hit) => {
          hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);
          this[LENGTH] += hit.length;
        });
      }
      trim(this);
    }
    get lengthCalculator() {
      return this[LENGTH_CALCULATOR];
    }
    get length() {
      return this[LENGTH];
    }
    get itemCount() {
      return this[LRU_LIST].length;
    }
    rforEach(fn, thisp) {
      thisp = thisp || this;
      for (let walker = this[LRU_LIST].tail;walker !== null; ) {
        const prev = walker.prev;
        forEachStep(this, fn, walker, thisp);
        walker = prev;
      }
    }
    forEach(fn, thisp) {
      thisp = thisp || this;
      for (let walker = this[LRU_LIST].head;walker !== null; ) {
        const next = walker.next;
        forEachStep(this, fn, walker, thisp);
        walker = next;
      }
    }
    keys() {
      return this[LRU_LIST].toArray().map((k) => k.key);
    }
    values() {
      return this[LRU_LIST].toArray().map((k) => k.value);
    }
    reset() {
      if (this[DISPOSE] && this[LRU_LIST] && this[LRU_LIST].length) {
        this[LRU_LIST].forEach((hit) => this[DISPOSE](hit.key, hit.value));
      }
      this[CACHE] = new Map;
      this[LRU_LIST] = new Yallist;
      this[LENGTH] = 0;
    }
    dump() {
      return this[LRU_LIST].map((hit) => isStale(this, hit) ? false : {
        k: hit.key,
        v: hit.value,
        e: hit.now + (hit.maxAge || 0)
      }).toArray().filter((h) => h);
    }
    dumpLru() {
      return this[LRU_LIST];
    }
    set(key, value, maxAge) {
      maxAge = maxAge || this[MAX_AGE];
      if (maxAge && typeof maxAge !== "number")
        throw new TypeError("maxAge must be a number");
      const now = maxAge ? Date.now() : 0;
      const len = this[LENGTH_CALCULATOR](value, key);
      if (this[CACHE].has(key)) {
        if (len > this[MAX]) {
          del(this, this[CACHE].get(key));
          return false;
        }
        const node = this[CACHE].get(key);
        const item = node.value;
        if (this[DISPOSE]) {
          if (!this[NO_DISPOSE_ON_SET])
            this[DISPOSE](key, item.value);
        }
        item.now = now;
        item.maxAge = maxAge;
        item.value = value;
        this[LENGTH] += len - item.length;
        item.length = len;
        this.get(key);
        trim(this);
        return true;
      }
      const hit = new Entry(key, value, len, now, maxAge);
      if (hit.length > this[MAX]) {
        if (this[DISPOSE])
          this[DISPOSE](key, value);
        return false;
      }
      this[LENGTH] += hit.length;
      this[LRU_LIST].unshift(hit);
      this[CACHE].set(key, this[LRU_LIST].head);
      trim(this);
      return true;
    }
    has(key) {
      if (!this[CACHE].has(key))
        return false;
      const hit = this[CACHE].get(key).value;
      return !isStale(this, hit);
    }
    get(key) {
      return get(this, key, true);
    }
    peek(key) {
      return get(this, key, false);
    }
    pop() {
      const node = this[LRU_LIST].tail;
      if (!node)
        return null;
      del(this, node);
      return node.value;
    }
    del(key) {
      del(this, this[CACHE].get(key));
    }
    load(arr) {
      this.reset();
      const now = Date.now();
      for (let l = arr.length - 1;l >= 0; l--) {
        const hit = arr[l];
        const expiresAt = hit.e || 0;
        if (expiresAt === 0)
          this.set(hit.k, hit.v);
        else {
          const maxAge = expiresAt - now;
          if (maxAge > 0) {
            this.set(hit.k, hit.v, maxAge);
          }
        }
      }
    }
    prune() {
      this[CACHE].forEach((value, key) => get(this, key, false));
    }
  }
  var get = (self2, key, doUse) => {
    const node = self2[CACHE].get(key);
    if (node) {
      const hit = node.value;
      if (isStale(self2, hit)) {
        del(self2, node);
        if (!self2[ALLOW_STALE])
          return;
      } else {
        if (doUse) {
          if (self2[UPDATE_AGE_ON_GET])
            node.value.now = Date.now();
          self2[LRU_LIST].unshiftNode(node);
        }
      }
      return hit.value;
    }
  };
  var isStale = (self2, hit) => {
    if (!hit || !hit.maxAge && !self2[MAX_AGE])
      return false;
    const diff = Date.now() - hit.now;
    return hit.maxAge ? diff > hit.maxAge : self2[MAX_AGE] && diff > self2[MAX_AGE];
  };
  var trim = (self2) => {
    if (self2[LENGTH] > self2[MAX]) {
      for (let walker = self2[LRU_LIST].tail;self2[LENGTH] > self2[MAX] && walker !== null; ) {
        const prev = walker.prev;
        del(self2, walker);
        walker = prev;
      }
    }
  };
  var del = (self2, node) => {
    if (node) {
      const hit = node.value;
      if (self2[DISPOSE])
        self2[DISPOSE](hit.key, hit.value);
      self2[LENGTH] -= hit.length;
      self2[CACHE].delete(hit.key);
      self2[LRU_LIST].removeNode(node);
    }
  };

  class Entry {
    constructor(key, value, length, now, maxAge) {
      this.key = key;
      this.value = value;
      this.length = length;
      this.now = now;
      this.maxAge = maxAge || 0;
    }
  }
  var forEachStep = (self2, fn, node, thisp) => {
    let hit = node.value;
    if (isStale(self2, hit)) {
      del(self2, node);
      if (!self2[ALLOW_STALE])
        hit = undefined;
    }
    if (hit)
      fn.call(thisp, hit.value, hit.key, self2);
  };
  module.exports = LRUCache;
});

// node_modules/semver/classes/range.js
var require_range = __commonJS((exports, module) => {
  class Range {
    constructor(range, options) {
      options = parseOptions(options);
      if (range instanceof Range) {
        if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {
          return range;
        } else {
          return new Range(range.raw, options);
        }
      }
      if (range instanceof Comparator) {
        this.raw = range.value;
        this.set = [[range]];
        this.format();
        return this;
      }
      this.options = options;
      this.loose = !!options.loose;
      this.includePrerelease = !!options.includePrerelease;
      this.raw = range.trim().split(/\s+/).join(" ");
      this.set = this.raw.split("||").map((r) => this.parseRange(r.trim())).filter((c) => c.length);
      if (!this.set.length) {
        throw new TypeError(`Invalid SemVer Range: ${this.raw}`);
      }
      if (this.set.length > 1) {
        const first = this.set[0];
        this.set = this.set.filter((c) => !isNullSet(c[0]));
        if (this.set.length === 0) {
          this.set = [first];
        } else if (this.set.length > 1) {
          for (const c of this.set) {
            if (c.length === 1 && isAny(c[0])) {
              this.set = [c];
              break;
            }
          }
        }
      }
      this.format();
    }
    format() {
      this.range = this.set.map((comps) => comps.join(" ").trim()).join("||").trim();
      return this.range;
    }
    toString() {
      return this.range;
    }
    parseRange(range) {
      const memoOpts = (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) | (this.options.loose && FLAG_LOOSE);
      const memoKey = memoOpts + ":" + range;
      const cached = cache.get(memoKey);
      if (cached) {
        return cached;
      }
      const loose = this.options.loose;
      const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE];
      range = range.replace(hr, hyphenReplace(this.options.includePrerelease));
      debug("hyphen replace", range);
      range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace);
      debug("comparator trim", range);
      range = range.replace(re[t.TILDETRIM], tildeTrimReplace);
      debug("tilde trim", range);
      range = range.replace(re[t.CARETTRIM], caretTrimReplace);
      debug("caret trim", range);
      let rangeList = range.split(" ").map((comp) => parseComparator(comp, this.options)).join(" ").split(/\s+/).map((comp) => replaceGTE0(comp, this.options));
      if (loose) {
        rangeList = rangeList.filter((comp) => {
          debug("loose invalid filter", comp, this.options);
          return !!comp.match(re[t.COMPARATORLOOSE]);
        });
      }
      debug("range list", rangeList);
      const rangeMap = new Map;
      const comparators = rangeList.map((comp) => new Comparator(comp, this.options));
      for (const comp of comparators) {
        if (isNullSet(comp)) {
          return [comp];
        }
        rangeMap.set(comp.value, comp);
      }
      if (rangeMap.size > 1 && rangeMap.has("")) {
        rangeMap.delete("");
      }
      const result = [...rangeMap.values()];
      cache.set(memoKey, result);
      return result;
    }
    intersects(range, options) {
      if (!(range instanceof Range)) {
        throw new TypeError("a Range is required");
      }
      return this.set.some((thisComparators) => {
        return isSatisfiable(thisComparators, options) && range.set.some((rangeComparators) => {
          return isSatisfiable(rangeComparators, options) && thisComparators.every((thisComparator) => {
            return rangeComparators.every((rangeComparator) => {
              return thisComparator.intersects(rangeComparator, options);
            });
          });
        });
      });
    }
    test(version4) {
      if (!version4) {
        return false;
      }
      if (typeof version4 === "string") {
        try {
          version4 = new SemVer(version4, this.options);
        } catch (er) {
          return false;
        }
      }
      for (let i = 0;i < this.set.length; i++) {
        if (testSet(this.set[i], version4, this.options)) {
          return true;
        }
      }
      return false;
    }
  }
  module.exports = Range;
  var LRU = require_lru_cache();
  var cache = new LRU({ max: 1000 });
  var parseOptions = require_parse_options();
  var Comparator = require_comparator();
  var debug = require_debug();
  var SemVer = require_semver2();
  var {
    safeRe: re,
    t,
    comparatorTrimReplace,
    tildeTrimReplace,
    caretTrimReplace
  } = require_re();
  var { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require_constants();
  var isNullSet = (c) => c.value === "<0.0.0-0";
  var isAny = (c) => c.value === "";
  var isSatisfiable = (comparators, options) => {
    let result = true;
    const remainingComparators = comparators.slice();
    let testComparator = remainingComparators.pop();
    while (result && remainingComparators.length) {
      result = remainingComparators.every((otherComparator) => {
        return testComparator.intersects(otherComparator, options);
      });
      testComparator = remainingComparators.pop();
    }
    return result;
  };
  var parseComparator = (comp, options) => {
    debug("comp", comp, options);
    comp = replaceCarets(comp, options);
    debug("caret", comp);
    comp = replaceTildes(comp, options);
    debug("tildes", comp);
    comp = replaceXRanges(comp, options);
    debug("xrange", comp);
    comp = replaceStars(comp, options);
    debug("stars", comp);
    return comp;
  };
  var isX = (id) => !id || id.toLowerCase() === "x" || id === "*";
  var replaceTildes = (comp, options) => {
    return comp.trim().split(/\s+/).map((c) => replaceTilde(c, options)).join(" ");
  };
  var replaceTilde = (comp, options) => {
    const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE];
    return comp.replace(r, (_, M, m, p, pr) => {
      debug("tilde", comp, _, M, m, p, pr);
      let ret;
      if (isX(M)) {
        ret = "";
      } else if (isX(m)) {
        ret = `>=${M}.0.0 <${+M + 1}.0.0-0`;
      } else if (isX(p)) {
        ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`;
      } else if (pr) {
        debug("replaceTilde pr", pr);
        ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;
      } else {
        ret = `>=${M}.${m}.${p} <${M}.${+m + 1}.0-0`;
      }
      debug("tilde return", ret);
      return ret;
    });
  };
  var replaceCarets = (comp, options) => {
    return comp.trim().split(/\s+/).map((c) => replaceCaret(c, options)).join(" ");
  };
  var replaceCaret = (comp, options) => {
    debug("caret", comp, options);
    const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET];
    const z = options.includePrerelease ? "-0" : "";
    return comp.replace(r, (_, M, m, p, pr) => {
      debug("caret", comp, _, M, m, p, pr);
      let ret;
      if (isX(M)) {
        ret = "";
      } else if (isX(m)) {
        ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`;
      } else if (isX(p)) {
        if (M === "0") {
          ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`;
        } else {
          ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`;
        }
      } else if (pr) {
        debug("replaceCaret pr", pr);
        if (M === "0") {
          if (m === "0") {
            ret = `>=${M}.${m}.${p}-${pr} <${M}.${m}.${+p + 1}-0`;
          } else {
            ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;
          }
        } else {
          ret = `>=${M}.${m}.${p}-${pr} <${+M + 1}.0.0-0`;
        }
      } else {
        debug("no pr");
        if (M === "0") {
          if (m === "0") {
            ret = `>=${M}.${m}.${p}${z} <${M}.${m}.${+p + 1}-0`;
          } else {
            ret = `>=${M}.${m}.${p}${z} <${M}.${+m + 1}.0-0`;
          }
        } else {
          ret = `>=${M}.${m}.${p} <${+M + 1}.0.0-0`;
        }
      }
      debug("caret return", ret);
      return ret;
    });
  };
  var replaceXRanges = (comp, options) => {
    debug("replaceXRanges", comp, options);
    return comp.split(/\s+/).map((c) => replaceXRange(c, options)).join(" ");
  };
  var replaceXRange = (comp, options) => {
    comp = comp.trim();
    const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE];
    return comp.replace(r, (ret, gtlt, M, m, p, pr) => {
      debug("xRange", comp, ret, gtlt, M, m, p, pr);
      const xM = isX(M);
      const xm = xM || isX(m);
      const xp = xm || isX(p);
      const anyX = xp;
      if (gtlt === "=" && anyX) {
        gtlt = "";
      }
      pr = options.includePrerelease ? "-0" : "";
      if (xM) {
        if (gtlt === ">" || gtlt === "<") {
          ret = "<0.0.0-0";
        } else {
          ret = "*";
        }
      } else if (gtlt && anyX) {
        if (xm) {
          m = 0;
        }
        p = 0;
        if (gtlt === ">") {
          gtlt = ">=";
          if (xm) {
            M = +M + 1;
            m = 0;
            p = 0;
          } else {
            m = +m + 1;
            p = 0;
          }
        } else if (gtlt === "<=") {
          gtlt = "<";
          if (xm) {
            M = +M + 1;
          } else {
            m = +m + 1;
          }
        }
        if (gtlt === "<") {
          pr = "-0";
        }
        ret = `${gtlt + M}.${m}.${p}${pr}`;
      } else if (xm) {
        ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`;
      } else if (xp) {
        ret = `>=${M}.${m}.0${pr} <${M}.${+m + 1}.0-0`;
      }
      debug("xRange return", ret);
      return ret;
    });
  };
  var replaceStars = (comp, options) => {
    debug("replaceStars", comp, options);
    return comp.trim().replace(re[t.STAR], "");
  };
  var replaceGTE0 = (comp, options) => {
    debug("replaceGTE0", comp, options);
    return comp.trim().replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], "");
  };
  var hyphenReplace = (incPr) => ($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) => {
    if (isX(fM)) {
      from = "";
    } else if (isX(fm)) {
      from = `>=${fM}.0.0${incPr ? "-0" : ""}`;
    } else if (isX(fp)) {
      from = `>=${fM}.${fm}.0${incPr ? "-0" : ""}`;
    } else if (fpr) {
      from = `>=${from}`;
    } else {
      from = `>=${from}${incPr ? "-0" : ""}`;
    }
    if (isX(tM)) {
      to = "";
    } else if (isX(tm)) {
      to = `<${+tM + 1}.0.0-0`;
    } else if (isX(tp)) {
      to = `<${tM}.${+tm + 1}.0-0`;
    } else if (tpr) {
      to = `<=${tM}.${tm}.${tp}-${tpr}`;
    } else if (incPr) {
      to = `<${tM}.${tm}.${+tp + 1}-0`;
    } else {
      to = `<=${to}`;
    }
    return `${from} ${to}`.trim();
  };
  var testSet = (set, version4, options) => {
    for (let i = 0;i < set.length; i++) {
      if (!set[i].test(version4)) {
        return false;
      }
    }
    if (version4.prerelease.length && !options.includePrerelease) {
      for (let i = 0;i < set.length; i++) {
        debug(set[i].semver);
        if (set[i].semver === Comparator.ANY) {
          continue;
        }
        if (set[i].semver.prerelease.length > 0) {
          const allowed = set[i].semver;
          if (allowed.major === version4.major && allowed.minor === version4.minor && allowed.patch === version4.patch) {
            return true;
          }
        }
      }
      return false;
    }
    return true;
  };
});

// node_modules/semver/classes/comparator.js
var require_comparator = __commonJS((exports, module) => {
  var ANY = Symbol("SemVer ANY");

  class Comparator {
    static get ANY() {
      return ANY;
    }
    constructor(comp, options) {
      options = parseOptions(options);
      if (comp instanceof Comparator) {
        if (comp.loose === !!options.loose) {
          return comp;
        } else {
          comp = comp.value;
        }
      }
      comp = comp.trim().split(/\s+/).join(" ");
      debug("comparator", comp, options);
      this.options = options;
      this.loose = !!options.loose;
      this.parse(comp);
      if (this.semver === ANY) {
        this.value = "";
      } else {
        this.value = this.operator + this.semver.version;
      }
      debug("comp", this);
    }
    parse(comp) {
      const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];
      const m = comp.match(r);
      if (!m) {
        throw new TypeError(`Invalid comparator: ${comp}`);
      }
      this.operator = m[1] !== undefined ? m[1] : "";
      if (this.operator === "=") {
        this.operator = "";
      }
      if (!m[2]) {
        this.semver = ANY;
      } else {
        this.semver = new SemVer(m[2], this.options.loose);
      }
    }
    toString() {
      return this.value;
    }
    test(version4) {
      debug("Comparator.test", version4, this.options.loose);
      if (this.semver === ANY || version4 === ANY) {
        return true;
      }
      if (typeof version4 === "string") {
        try {
          version4 = new SemVer(version4, this.options);
        } catch (er) {
          return false;
        }
      }
      return cmp(version4, this.operator, this.semver, this.options);
    }
    intersects(comp, options) {
      if (!(comp instanceof Comparator)) {
        throw new TypeError("a Comparator is required");
      }
      if (this.operator === "") {
        if (this.value === "") {
          return true;
        }
        return new Range(comp.value, options).test(this.value);
      } else if (comp.operator === "") {
        if (comp.value === "") {
          return true;
        }
        return new Range(this.value, options).test(comp.semver);
      }
      options = parseOptions(options);
      if (options.includePrerelease && (this.value === "<0.0.0-0" || comp.value === "<0.0.0-0")) {
        return false;
      }
      if (!options.includePrerelease && (this.value.startsWith("<0.0.0") || comp.value.startsWith("<0.0.0"))) {
        return false;
      }
      if (this.operator.startsWith(">") && comp.operator.startsWith(">")) {
        return true;
      }
      if (this.operator.startsWith("<") && comp.operator.startsWith("<")) {
        return true;
      }
      if (this.semver.version === comp.semver.version && this.operator.includes("=") && comp.operator.includes("=")) {
        return true;
      }
      if (cmp(this.semver, "<", comp.semver, options) && this.operator.startsWith(">") && comp.operator.startsWith("<")) {
        return true;
      }
      if (cmp(this.semver, ">", comp.semver, options) && this.operator.startsWith("<") && comp.operator.startsWith(">")) {
        return true;
      }
      return false;
    }
  }
  module.exports = Comparator;
  var parseOptions = require_parse_options();
  var { safeRe: re, t } = require_re();
  var cmp = require_cmp();
  var debug = require_debug();
  var SemVer = require_semver2();
  var Range = require_range();
});

// node_modules/semver/functions/satisfies.js
var require_satisfies = __commonJS((exports, module) => {
  var Range = require_range();
  var satisfies = (version4, range, options) => {
    try {
      range = new Range(range, options);
    } catch (er) {
      return false;
    }
    return range.test(version4);
  };
  module.exports = satisfies;
});

// node_modules/semver/ranges/to-comparators.js
var require_to_comparators = __commonJS((exports, module) => {
  var Range = require_range();
  var toComparators = (range, options) => new Range(range, options).set.map((comp) => comp.map((c) => c.value).join(" ").trim().split(" "));
  module.exports = toComparators;
});

// node_modules/semver/ranges/max-satisfying.js
var require_max_satisfying = __commonJS((exports, module) => {
  var SemVer = require_semver2();
  var Range = require_range();
  var maxSatisfying = (versions, range, options) => {
    let max = null;
    let maxSV = null;
    let rangeObj = null;
    try {
      rangeObj = new Range(range, options);
    } catch (er) {
      return null;
    }
    versions.forEach((v) => {
      if (rangeObj.test(v)) {
        if (!max || maxSV.compare(v) === -1) {
          max = v;
          maxSV = new SemVer(max, options);
        }
      }
    });
    return max;
  };
  module.exports = maxSatisfying;
});

// node_modules/semver/ranges/min-satisfying.js
var require_min_satisfying = __commonJS((exports, module) => {
  var SemVer = require_semver2();
  var Range = require_range();
  var minSatisfying = (versions, range, options) => {
    let min = null;
    let minSV = null;
    let rangeObj = null;
    try {
      rangeObj = new Range(range, options);
    } catch (er) {
      return null;
    }
    versions.forEach((v) => {
      if (rangeObj.test(v)) {
        if (!min || minSV.compare(v) === 1) {
          min = v;
          minSV = new SemVer(min, options);
        }
      }
    });
    return min;
  };
  module.exports = minSatisfying;
});

// node_modules/semver/ranges/min-version.js
var require_min_version = __commonJS((exports, module) => {
  var SemVer = require_semver2();
  var Range = require_range();
  var gt = require_gt();
  var minVersion = (range, loose) => {
    range = new Range(range, loose);
    let minver = new SemVer("0.0.0");
    if (range.test(minver)) {
      return minver;
    }
    minver = new SemVer("0.0.0-0");
    if (range.test(minver)) {
      return minver;
    }
    minver = null;
    for (let i = 0;i < range.set.length; ++i) {
      const comparators = range.set[i];
      let setMin = null;
      comparators.forEach((comparator) => {
        const compver = new SemVer(comparator.semver.version);
        switch (comparator.operator) {
          case ">":
            if (compver.prerelease.length === 0) {
              compver.patch++;
            } else {
              compver.prerelease.push(0);
            }
            compver.raw = compver.format();
          case "":
          case ">=":
            if (!setMin || gt(compver, setMin)) {
              setMin = compver;
            }
            break;
          case "<":
          case "<=":
            break;
          default:
            throw new Error(`Unexpected operation: ${comparator.operator}`);
        }
      });
      if (setMin && (!minver || gt(minver, setMin))) {
        minver = setMin;
      }
    }
    if (minver && range.test(minver)) {
      return minver;
    }
    return null;
  };
  module.exports = minVersion;
});

// node_modules/semver/ranges/valid.js
var require_valid2 = __commonJS((exports, module) => {
  var Range = require_range();
  var validRange = (range, options) => {
    try {
      return new Range(range, options).range || "*";
    } catch (er) {
      return null;
    }
  };
  module.exports = validRange;
});

// node_modules/semver/ranges/outside.js
var require_outside = __commonJS((exports, module) => {
  var SemVer = require_semver2();
  var Comparator = require_comparator();
  var { ANY } = Comparator;
  var Range = require_range();
  var satisfies = require_satisfies();
  var gt = require_gt();
  var lt = require_lt();
  var lte = require_lte();
  var gte = require_gte();
  var outside = (version4, range, hilo, options) => {
    version4 = new SemVer(version4, options);
    range = new Range(range, options);
    let gtfn, ltefn, ltfn, comp, ecomp;
    switch (hilo) {
      case ">":
        gtfn = gt;
        ltefn = lte;
        ltfn = lt;
        comp = ">";
        ecomp = ">=";
        break;
      case "<":
        gtfn = lt;
        ltefn = gte;
        ltfn = gt;
        comp = "<";
        ecomp = "<=";
        break;
      default:
        throw new TypeError('Must provide a hilo val of "<" or ">"');
    }
    if (satisfies(version4, range, options)) {
      return false;
    }
    for (let i = 0;i < range.set.length; ++i) {
      const comparators = range.set[i];
      let high = null;
      let low = null;
      comparators.forEach((comparator) => {
        if (comparator.semver === ANY) {
          comparator = new Comparator(">=0.0.0");
        }
        high = high || comparator;
        low = low || comparator;
        if (gtfn(comparator.semver, high.semver, options)) {
          high = comparator;
        } else if (ltfn(comparator.semver, low.semver, options)) {
          low = comparator;
        }
      });
      if (high.operator === comp || high.operator === ecomp) {
        return false;
      }
      if ((!low.operator || low.operator === comp) && ltefn(version4, low.semver)) {
        return false;
      } else if (low.operator === ecomp && ltfn(version4, low.semver)) {
        return false;
      }
    }
    return true;
  };
  module.exports = outside;
});

// node_modules/semver/ranges/gtr.js
var require_gtr = __commonJS((exports, module) => {
  var outside = require_outside();
  var gtr = (version4, range, options) => outside(version4, range, ">", options);
  module.exports = gtr;
});

// node_modules/semver/ranges/ltr.js
var require_ltr = __commonJS((exports, module) => {
  var outside = require_outside();
  var ltr = (version4, range, options) => outside(version4, range, "<", options);
  module.exports = ltr;
});

// node_modules/semver/ranges/intersects.js
var require_intersects = __commonJS((exports, module) => {
  var Range = require_range();
  var intersects = (r1, r2, options) => {
    r1 = new Range(r1, options);
    r2 = new Range(r2, options);
    return r1.intersects(r2, options);
  };
  module.exports = intersects;
});

// node_modules/semver/ranges/simplify.js
var require_simplify = __commonJS((exports, module) => {
  var satisfies = require_satisfies();
  var compare = require_compare();
  module.exports = (versions, range, options) => {
    const set = [];
    let first = null;
    let prev = null;
    const v = versions.sort((a, b) => compare(a, b, options));
    for (const version4 of v) {
      const included = satisfies(version4, range, options);
      if (included) {
        prev = version4;
        if (!first) {
          first = version4;
        }
      } else {
        if (prev) {
          set.push([first, prev]);
        }
        prev = null;
        first = null;
      }
    }
    if (first) {
      set.push([first, null]);
    }
    const ranges = [];
    for (const [min, max] of set) {
      if (min === max) {
        ranges.push(min);
      } else if (!max && min === v[0]) {
        ranges.push("*");
      } else if (!max) {
        ranges.push(`>=${min}`);
      } else if (min === v[0]) {
        ranges.push(`<=${max}`);
      } else {
        ranges.push(`${min} - ${max}`);
      }
    }
    const simplified = ranges.join(" || ");
    const original = typeof range.raw === "string" ? range.raw : String(range);
    return simplified.length < original.length ? simplified : range;
  };
});

// node_modules/semver/ranges/subset.js
var require_subset = __commonJS((exports, module) => {
  var Range = require_range();
  var Comparator = require_comparator();
  var { ANY } = Comparator;
  var satisfies = require_satisfies();
  var compare = require_compare();
  var subset = (sub, dom, options = {}) => {
    if (sub === dom) {
      return true;
    }
    sub = new Range(sub, options);
    dom = new Range(dom, options);
    let sawNonNull = false;
    OUTER:
      for (const simpleSub of sub.set) {
        for (const simpleDom of dom.set) {
          const isSub = simpleSubset(simpleSub, simpleDom, options);
          sawNonNull = sawNonNull || isSub !== null;
          if (isSub) {
            continue OUTER;
          }
        }
        if (sawNonNull) {
          return false;
        }
      }
    return true;
  };
  var minimumVersionWithPreRelease = [new Comparator(">=0.0.0-0")];
  var minimumVersion = [new Comparator(">=0.0.0")];
  var simpleSubset = (sub, dom, options) => {
    if (sub === dom) {
      return true;
    }
    if (sub.length === 1 && sub[0].semver === ANY) {
      if (dom.length === 1 && dom[0].semver === ANY) {
        return true;
      } else if (options.includePrerelease) {
        sub = minimumVersionWithPreRelease;
      } else {
        sub = minimumVersion;
      }
    }
    if (dom.length === 1 && dom[0].semver === ANY) {
      if (options.includePrerelease) {
        return true;
      } else {
        dom = minimumVersion;
      }
    }
    const eqSet = new Set;
    let gt, lt;
    for (const c of sub) {
      if (c.operator === ">" || c.operator === ">=") {
        gt = higherGT(gt, c, options);
      } else if (c.operator === "<" || c.operator === "<=") {
        lt = lowerLT(lt, c, options);
      } else {
        eqSet.add(c.semver);
      }
    }
    if (eqSet.size > 1) {
      return null;
    }
    let gtltComp;
    if (gt && lt) {
      gtltComp = compare(gt.semver, lt.semver, options);
      if (gtltComp > 0) {
        return null;
      } else if (gtltComp === 0 && (gt.operator !== ">=" || lt.operator !== "<=")) {
        return null;
      }
    }
    for (const eq of eqSet) {
      if (gt && !satisfies(eq, String(gt), options)) {
        return null;
      }
      if (lt && !satisfies(eq, String(lt), options)) {
        return null;
      }
      for (const c of dom) {
        if (!satisfies(eq, String(c), options)) {
          return false;
        }
      }
      return true;
    }
    let higher, lower;
    let hasDomLT, hasDomGT;
    let needDomLTPre = lt && !options.includePrerelease && lt.semver.prerelease.length ? lt.semver : false;
    let needDomGTPre = gt && !options.includePrerelease && gt.semver.prerelease.length ? gt.semver : false;
    if (needDomLTPre && needDomLTPre.prerelease.length === 1 && lt.operator === "<" && needDomLTPre.prerelease[0] === 0) {
      needDomLTPre = false;
    }
    for (const c of dom) {
      hasDomGT = hasDomGT || c.operator === ">" || c.operator === ">=";
      hasDomLT = hasDomLT || c.operator === "<" || c.operator === "<=";
      if (gt) {
        if (needDomGTPre) {
          if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomGTPre.major && c.semver.minor === needDomGTPre.minor && c.semver.patch === needDomGTPre.patch) {
            needDomGTPre = false;
          }
        }
        if (c.operator === ">" || c.operator === ">=") {
          higher = higherGT(gt, c, options);
          if (higher === c && higher !== gt) {
            return false;
          }
        } else if (gt.operator === ">=" && !satisfies(gt.semver, String(c), options)) {
          return false;
        }
      }
      if (lt) {
        if (needDomLTPre) {
          if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomLTPre.major && c.semver.minor === needDomLTPre.minor && c.semver.patch === needDomLTPre.patch) {
            needDomLTPre = false;
          }
        }
        if (c.operator === "<" || c.operator === "<=") {
          lower = lowerLT(lt, c, options);
          if (lower === c && lower !== lt) {
            return false;
          }
        } else if (lt.operator === "<=" && !satisfies(lt.semver, String(c), options)) {
          return false;
        }
      }
      if (!c.operator && (lt || gt) && gtltComp !== 0) {
        return false;
      }
    }
    if (gt && hasDomLT && !lt && gtltComp !== 0) {
      return false;
    }
    if (lt && hasDomGT && !gt && gtltComp !== 0) {
      return false;
    }
    if (needDomGTPre || needDomLTPre) {
      return false;
    }
    return true;
  };
  var higherGT = (a, b, options) => {
    if (!a) {
      return b;
    }
    const comp = compare(a.semver, b.semver, options);
    return comp > 0 ? a : comp < 0 ? b : b.operator === ">" && a.operator === ">=" ? b : a;
  };
  var lowerLT = (a, b, options) => {
    if (!a) {
      return b;
    }
    const comp = compare(a.semver, b.semver, options);
    return comp < 0 ? a : comp > 0 ? b : b.operator === "<" && a.operator === "<=" ? b : a;
  };
  module.exports = subset;
});

// node_modules/semver/index.js
var require_semver3 = __commonJS((exports, module) => {
  var internalRe = require_re();
  var constants = require_constants();
  var SemVer = require_semver2();
  var identifiers = require_identifiers();
  var parse4 = require_parse4();
  var valid = require_valid();
  var clean = require_clean();
  var inc = require_inc();
  var diff = require_diff();
  var major = require_major();
  var minor = require_minor();
  var patch = require_patch();
  var prerelease = require_prerelease();
  var compare = require_compare();
  var rcompare = require_rcompare();
  var compareLoose = require_compare_loose();
  var compareBuild = require_compare_build();
  var sort = require_sort();
  var rsort = require_rsort();
  var gt = require_gt();
  var lt = require_lt();
  var eq = require_eq();
  var neq = require_neq();
  var gte = require_gte();
  var lte = require_lte();
  var cmp = require_cmp();
  var coerce = require_coerce();
  var Comparator = require_comparator();
  var Range = require_range();
  var satisfies = require_satisfies();
  var toComparators = require_to_comparators();
  var maxSatisfying = require_max_satisfying();
  var minSatisfying = require_min_satisfying();
  var minVersion = require_min_version();
  var validRange = require_valid2();
  var outside = require_outside();
  var gtr = require_gtr();
  var ltr = require_ltr();
  var intersects = require_intersects();
  var simplifyRange = require_simplify();
  var subset = require_subset();
  module.exports = {
    parse: parse4,
    valid,
    clean,
    inc,
    diff,
    major,
    minor,
    patch,
    prerelease,
    compare,
    rcompare,
    compareLoose,
    compareBuild,
    sort,
    rsort,
    gt,
    lt,
    eq,
    neq,
    gte,
    lte,
    cmp,
    coerce,
    Comparator,
    Range,
    satisfies,
    toComparators,
    maxSatisfying,
    minSatisfying,
    minVersion,
    validRange,
    outside,
    gtr,
    ltr,
    intersects,
    simplifyRange,
    subset,
    SemVer,
    re: internalRe.re,
    src: internalRe.src,
    tokens: internalRe.t,
    SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,
    RELEASE_TYPES: constants.RELEASE_TYPES,
    compareIdentifiers: identifiers.compareIdentifiers,
    rcompareIdentifiers: identifiers.rcompareIdentifiers
  };
});

// node_modules/fast-safe-stringify/index.js
var require_fast_safe_stringify = __commonJS((exports, module) => {
  var defaultOptions = function() {
    return {
      depthLimit: Number.MAX_SAFE_INTEGER,
      edgesLimit: Number.MAX_SAFE_INTEGER
    };
  };
  var stringify = function(obj, replacer, spacer, options) {
    if (typeof options === "undefined") {
      options = defaultOptions();
    }
    decirc(obj, "", 0, [], undefined, 0, options);
    var res;
    try {
      if (replacerStack.length === 0) {
        res = JSON.stringify(obj, replacer, spacer);
      } else {
        res = JSON.stringify(obj, replaceGetterValues(replacer), spacer);
      }
    } catch (_) {
      return JSON.stringify("[unable to serialize, circular reference is too complex to analyze]");
    } finally {
      while (arr.length !== 0) {
        var part = arr.pop();
        if (part.length === 4) {
          Object.defineProperty(part[0], part[1], part[3]);
        } else {
          part[0][part[1]] = part[2];
        }
      }
    }
    return res;
  };
  var setReplace = function(replace, val, k, parent) {
    var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k);
    if (propertyDescriptor.get !== undefined) {
      if (propertyDescriptor.configurable) {
        Object.defineProperty(parent, k, { value: replace });
        arr.push([parent, k, val, propertyDescriptor]);
      } else {
        replacerStack.push([val, k, replace]);
      }
    } else {
      parent[k] = replace;
      arr.push([parent, k, val]);
    }
  };
  var decirc = function(val, k, edgeIndex, stack, parent, depth, options) {
    depth += 1;
    var i;
    if (typeof val === "object" && val !== null) {
      for (i = 0;i < stack.length; i++) {
        if (stack[i] === val) {
          setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);
          return;
        }
      }
      if (typeof options.depthLimit !== "undefined" && depth > options.depthLimit) {
        setReplace(LIMIT_REPLACE_NODE, val, k, parent);
        return;
      }
      if (typeof options.edgesLimit !== "undefined" && edgeIndex + 1 > options.edgesLimit) {
        setReplace(LIMIT_REPLACE_NODE, val, k, parent);
        return;
      }
      stack.push(val);
      if (Array.isArray(val)) {
        for (i = 0;i < val.length; i++) {
          decirc(val[i], i, i, stack, val, depth, options);
        }
      } else {
        var keys = Object.keys(val);
        for (i = 0;i < keys.length; i++) {
          var key = keys[i];
          decirc(val[key], key, i, stack, val, depth, options);
        }
      }
      stack.pop();
    }
  };
  var compareFunction = function(a, b) {
    if (a < b) {
      return -1;
    }
    if (a > b) {
      return 1;
    }
    return 0;
  };
  var deterministicStringify = function(obj, replacer, spacer, options) {
    if (typeof options === "undefined") {
      options = defaultOptions();
    }
    var tmp = deterministicDecirc(obj, "", 0, [], undefined, 0, options) || obj;
    var res;
    try {
      if (replacerStack.length === 0) {
        res = JSON.stringify(tmp, replacer, spacer);
      } else {
        res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer);
      }
    } catch (_) {
      return JSON.stringify("[unable to serialize, circular reference is too complex to analyze]");
    } finally {
      while (arr.length !== 0) {
        var part = arr.pop();
        if (part.length === 4) {
          Object.defineProperty(part[0], part[1], part[3]);
        } else {
          part[0][part[1]] = part[2];
        }
      }
    }
    return res;
  };
  var deterministicDecirc = function(val, k, edgeIndex, stack, parent, depth, options) {
    depth += 1;
    var i;
    if (typeof val === "object" && val !== null) {
      for (i = 0;i < stack.length; i++) {
        if (stack[i] === val) {
          setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);
          return;
        }
      }
      try {
        if (typeof val.toJSON === "function") {
          return;
        }
      } catch (_) {
        return;
      }
      if (typeof options.depthLimit !== "undefined" && depth > options.depthLimit) {
        setReplace(LIMIT_REPLACE_NODE, val, k, parent);
        return;
      }
      if (typeof options.edgesLimit !== "undefined" && edgeIndex + 1 > options.edgesLimit) {
        setReplace(LIMIT_REPLACE_NODE, val, k, parent);
        return;
      }
      stack.push(val);
      if (Array.isArray(val)) {
        for (i = 0;i < val.length; i++) {
          deterministicDecirc(val[i], i, i, stack, val, depth, options);
        }
      } else {
        var tmp = {};
        var keys = Object.keys(val).sort(compareFunction);
        for (i = 0;i < keys.length; i++) {
          var key = keys[i];
          deterministicDecirc(val[key], key, i, stack, val, depth, options);
          tmp[key] = val[key];
        }
        if (typeof parent !== "undefined") {
          arr.push([parent, k, val]);
          parent[k] = tmp;
        } else {
          return tmp;
        }
      }
      stack.pop();
    }
  };
  var replaceGetterValues = function(replacer) {
    replacer = typeof replacer !== "undefined" ? replacer : function(k, v) {
      return v;
    };
    return function(key, val) {
      if (replacerStack.length > 0) {
        for (var i = 0;i < replacerStack.length; i++) {
          var part = replacerStack[i];
          if (part[1] === key && part[0] === val) {
            val = part[2];
            replacerStack.splice(i, 1);
            break;
          }
        }
      }
      return replacer.call(this, key, val);
    };
  };
  module.exports = stringify;
  stringify.default = stringify;
  stringify.stable = deterministicStringify;
  stringify.stableStringify = deterministicStringify;
  var LIMIT_REPLACE_NODE = "[...]";
  var CIRCULAR_REPLACE_NODE = "[Circular]";
  var arr = [];
  var replacerStack = [];
});

// node_modules/superagent/lib/utils.js
var require_utils3 = __commonJS((exports) => {
  exports.type = function(str) {
    return str.split(/ *; */).shift();
  };
  exports.params = function(str) {
    return str.split(/ *; */).reduce(function(obj, str2) {
      var parts = str2.split(/ *= */);
      var key = parts.shift();
      var val = parts.shift();
      if (key && val)
        obj[key] = val;
      return obj;
    }, {});
  };
  exports.parseLinks = function(str) {
    return str.split(/ *, */).reduce(function(obj, str2) {
      var parts = str2.split(/ *; */);
      var url = parts[0].slice(1, -1);
      var rel = parts[1].split(/ *= */)[1].slice(1, -1);
      obj[rel] = url;
      return obj;
    }, {});
  };
  exports.cleanHeader = function(header, changesOrigin) {
    delete header["content-type"];
    delete header["content-length"];
    delete header["transfer-encoding"];
    delete header.host;
    if (changesOrigin) {
      delete header.authorization;
      delete header.cookie;
    }
    return header;
  };
});

// node_modules/superagent/lib/is-object.js
var require_is_object = __commonJS((exports, module) => {
  var _typeof = function(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function _typeof(obj2) {
        return typeof obj2;
      };
    } else {
      _typeof = function _typeof(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      };
    }
    return _typeof(obj);
  };
  var isObject2 = function(obj) {
    return obj !== null && _typeof(obj) === "object";
  };
  module.exports = isObject2;
});

// node_modules/superagent/lib/request-base.js
var require_request_base = __commonJS((exports, module) => {
  var _typeof = function(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function _typeof(obj2) {
        return typeof obj2;
      };
    } else {
      _typeof = function _typeof(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      };
    }
    return _typeof(obj);
  };
  var RequestBase = function(obj) {
    if (obj)
      return mixin(obj);
  };
  var mixin = function(obj) {
    for (var key in RequestBase.prototype) {
      if (Object.prototype.hasOwnProperty.call(RequestBase.prototype, key))
        obj[key] = RequestBase.prototype[key];
    }
    return obj;
  };
  var isObject2 = require_is_object();
  module.exports = RequestBase;
  RequestBase.prototype.clearTimeout = function() {
    clearTimeout(this._timer);
    clearTimeout(this._responseTimeoutTimer);
    clearTimeout(this._uploadTimeoutTimer);
    delete this._timer;
    delete this._responseTimeoutTimer;
    delete this._uploadTimeoutTimer;
    return this;
  };
  RequestBase.prototype.parse = function(fn) {
    this._parser = fn;
    return this;
  };
  RequestBase.prototype.responseType = function(val) {
    this._responseType = val;
    return this;
  };
  RequestBase.prototype.serialize = function(fn) {
    this._serializer = fn;
    return this;
  };
  RequestBase.prototype.timeout = function(options) {
    if (!options || _typeof(options) !== "object") {
      this._timeout = options;
      this._responseTimeout = 0;
      this._uploadTimeout = 0;
      return this;
    }
    for (var option in options) {
      if (Object.prototype.hasOwnProperty.call(options, option)) {
        switch (option) {
          case "deadline":
            this._timeout = options.deadline;
            break;
          case "response":
            this._responseTimeout = options.response;
            break;
          case "upload":
            this._uploadTimeout = options.upload;
            break;
          default:
            console.warn("Unknown timeout option", option);
        }
      }
    }
    return this;
  };
  RequestBase.prototype.retry = function(count, fn) {
    if (arguments.length === 0 || count === true)
      count = 1;
    if (count <= 0)
      count = 0;
    this._maxRetries = count;
    this._retries = 0;
    this._retryCallback = fn;
    return this;
  };
  var ERROR_CODES = ["ECONNRESET", "ETIMEDOUT", "EADDRINFO", "ESOCKETTIMEDOUT"];
  RequestBase.prototype._shouldRetry = function(err, res) {
    if (!this._maxRetries || this._retries++ >= this._maxRetries) {
      return false;
    }
    if (this._retryCallback) {
      try {
        var override = this._retryCallback(err, res);
        if (override === true)
          return true;
        if (override === false)
          return false;
      } catch (err_) {
        console.error(err_);
      }
    }
    if (res && res.status && res.status >= 500 && res.status !== 501)
      return true;
    if (err) {
      if (err.code && ERROR_CODES.includes(err.code))
        return true;
      if (err.timeout && err.code === "ECONNABORTED")
        return true;
      if (err.crossDomain)
        return true;
    }
    return false;
  };
  RequestBase.prototype._retry = function() {
    this.clearTimeout();
    if (this.req) {
      this.req = null;
      this.req = this.request();
    }
    this._aborted = false;
    this.timedout = false;
    this.timedoutError = null;
    return this._end();
  };
  RequestBase.prototype.then = function(resolve, reject) {
    var _this = this;
    if (!this._fullfilledPromise) {
      var self2 = this;
      if (this._endCalled) {
        console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises");
      }
      this._fullfilledPromise = new Promise(function(resolve2, reject2) {
        self2.on("abort", function() {
          if (_this._maxRetries && _this._maxRetries > _this._retries) {
            return;
          }
          if (_this.timedout && _this.timedoutError) {
            reject2(_this.timedoutError);
            return;
          }
          var err = new Error("Aborted");
          err.code = "ABORTED";
          err.status = _this.status;
          err.method = _this.method;
          err.url = _this.url;
          reject2(err);
        });
        self2.end(function(err, res) {
          if (err)
            reject2(err);
          else
            resolve2(res);
        });
      });
    }
    return this._fullfilledPromise.then(resolve, reject);
  };
  RequestBase.prototype.catch = function(cb) {
    return this.then(undefined, cb);
  };
  RequestBase.prototype.use = function(fn) {
    fn(this);
    return this;
  };
  RequestBase.prototype.ok = function(cb) {
    if (typeof cb !== "function")
      throw new Error("Callback required");
    this._okCallback = cb;
    return this;
  };
  RequestBase.prototype._isResponseOK = function(res) {
    if (!res) {
      return false;
    }
    if (this._okCallback) {
      return this._okCallback(res);
    }
    return res.status >= 200 && res.status < 300;
  };
  RequestBase.prototype.get = function(field) {
    return this._header[field.toLowerCase()];
  };
  RequestBase.prototype.getHeader = RequestBase.prototype.get;
  RequestBase.prototype.set = function(field, val) {
    if (isObject2(field)) {
      for (var key in field) {
        if (Object.prototype.hasOwnProperty.call(field, key))
          this.set(key, field[key]);
      }
      return this;
    }
    this._header[field.toLowerCase()] = val;
    this.header[field] = val;
    return this;
  };
  RequestBase.prototype.unset = function(field) {
    delete this._header[field.toLowerCase()];
    delete this.header[field];
    return this;
  };
  RequestBase.prototype.field = function(name, val) {
    if (name === null || name === undefined) {
      throw new Error(".field(name, val) name can not be empty");
    }
    if (this._data) {
      throw new Error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()");
    }
    if (isObject2(name)) {
      for (var key in name) {
        if (Object.prototype.hasOwnProperty.call(name, key))
          this.field(key, name[key]);
      }
      return this;
    }
    if (Array.isArray(val)) {
      for (var i in val) {
        if (Object.prototype.hasOwnProperty.call(val, i))
          this.field(name, val[i]);
      }
      return this;
    }
    if (val === null || val === undefined) {
      throw new Error(".field(name, val) val can not be empty");
    }
    if (typeof val === "boolean") {
      val = String(val);
    }
    this._getFormData().append(name, val);
    return this;
  };
  RequestBase.prototype.abort = function() {
    if (this._aborted) {
      return this;
    }
    this._aborted = true;
    if (this.xhr)
      this.xhr.abort();
    if (this.req)
      this.req.abort();
    this.clearTimeout();
    this.emit("abort");
    return this;
  };
  RequestBase.prototype._auth = function(user, pass, options, base64Encoder) {
    switch (options.type) {
      case "basic":
        this.set("Authorization", "Basic ".concat(base64Encoder("".concat(user, ":").concat(pass))));
        break;
      case "auto":
        this.username = user;
        this.password = pass;
        break;
      case "bearer":
        this.set("Authorization", "Bearer ".concat(user));
        break;
      default:
        break;
    }
    return this;
  };
  RequestBase.prototype.withCredentials = function(on) {
    if (on === undefined)
      on = true;
    this._withCredentials = on;
    return this;
  };
  RequestBase.prototype.redirects = function(n) {
    this._maxRedirects = n;
    return this;
  };
  RequestBase.prototype.maxResponseSize = function(n) {
    if (typeof n !== "number") {
      throw new TypeError("Invalid argument");
    }
    this._maxResponseSize = n;
    return this;
  };
  RequestBase.prototype.toJSON = function() {
    return {
      method: this.method,
      url: this.url,
      data: this._data,
      headers: this._header
    };
  };
  RequestBase.prototype.send = function(data) {
    var isObj = isObject2(data);
    var type = this._header["content-type"];
    if (this._formData) {
      throw new Error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()");
    }
    if (isObj && !this._data) {
      if (Array.isArray(data)) {
        this._data = [];
      } else if (!this._isHost(data)) {
        this._data = {};
      }
    } else if (data && this._data && this._isHost(this._data)) {
      throw new Error("Can't merge these send calls");
    }
    if (isObj && isObject2(this._data)) {
      for (var key in data) {
        if (Object.prototype.hasOwnProperty.call(data, key))
          this._data[key] = data[key];
      }
    } else if (typeof data === "string") {
      if (!type)
        this.type("form");
      type = this._header["content-type"];
      if (type === "application/x-www-form-urlencoded") {
        this._data = this._data ? "".concat(this._data, "&").concat(data) : data;
      } else {
        this._data = (this._data || "") + data;
      }
    } else {
      this._data = data;
    }
    if (!isObj || this._isHost(data)) {
      return this;
    }
    if (!type)
      this.type("json");
    return this;
  };
  RequestBase.prototype.sortQuery = function(sort) {
    this._sort = typeof sort === "undefined" ? true : sort;
    return this;
  };
  RequestBase.prototype._finalizeQueryString = function() {
    var query = this._query.join("&");
    if (query) {
      this.url += (this.url.includes("?") ? "&" : "?") + query;
    }
    this._query.length = 0;
    if (this._sort) {
      var index = this.url.indexOf("?");
      if (index >= 0) {
        var queryArr = this.url.slice(index + 1).split("&");
        if (typeof this._sort === "function") {
          queryArr.sort(this._sort);
        } else {
          queryArr.sort();
        }
        this.url = this.url.slice(0, index) + "?" + queryArr.join("&");
      }
    }
  };
  RequestBase.prototype._appendQueryString = function() {
    console.warn("Unsupported");
  };
  RequestBase.prototype._timeoutError = function(reason, timeout, errno) {
    if (this._aborted) {
      return;
    }
    var err = new Error("".concat(reason + timeout, "ms exceeded"));
    err.timeout = timeout;
    err.code = "ECONNABORTED";
    err.errno = errno;
    this.timedout = true;
    this.timedoutError = err;
    this.abort();
    this.callback(err);
  };
  RequestBase.prototype._setTimeouts = function() {
    var self2 = this;
    if (this._timeout && !this._timer) {
      this._timer = setTimeout(function() {
        self2._timeoutError("Timeout of ", self2._timeout, "ETIME");
      }, this._timeout);
    }
    if (this._responseTimeout && !this._responseTimeoutTimer) {
      this._responseTimeoutTimer = setTimeout(function() {
        self2._timeoutError("Response timeout of ", self2._responseTimeout, "ETIMEDOUT");
      }, this._responseTimeout);
    }
  };
});

// node_modules/superagent/lib/node/unzip.js
var require_unzip = __commonJS((exports) => {
  var _require = __require("string_decoder");
  var StringDecoder = _require.StringDecoder;
  var Stream = __require("stream");
  var zlib = __require("zlib");
  exports.unzip = function(req, res) {
    var unzip = zlib.createUnzip();
    var stream = new Stream;
    var decoder;
    stream.req = req;
    unzip.on("error", function(err) {
      if (err && err.code === "Z_BUF_ERROR") {
        stream.emit("end");
        return;
      }
      stream.emit("error", err);
    });
    res.pipe(unzip);
    res.setEncoding = function(type) {
      decoder = new StringDecoder(type);
    };
    unzip.on("data", function(buf) {
      if (decoder) {
        var str = decoder.write(buf);
        if (str.length > 0)
          stream.emit("data", str);
      } else {
        stream.emit("data", buf);
      }
    });
    unzip.on("end", function() {
      stream.emit("end");
    });
    var _on = res.on;
    res.on = function(type, fn) {
      if (type === "data" || type === "end") {
        stream.on(type, fn.bind(res));
      } else if (type === "error") {
        stream.on(type, fn.bind(res));
        _on.call(res, type, fn);
      } else {
        _on.call(res, type, fn);
      }
      return this;
    };
  };
});

// node_modules/superagent/lib/response-base.js
var require_response_base = __commonJS((exports, module) => {
  var ResponseBase = function(obj) {
    if (obj)
      return mixin(obj);
  };
  var mixin = function(obj) {
    for (var key in ResponseBase.prototype) {
      if (Object.prototype.hasOwnProperty.call(ResponseBase.prototype, key))
        obj[key] = ResponseBase.prototype[key];
    }
    return obj;
  };
  var utils = require_utils3();
  module.exports = ResponseBase;
  ResponseBase.prototype.get = function(field) {
    return this.header[field.toLowerCase()];
  };
  ResponseBase.prototype._setHeaderProperties = function(header) {
    var ct = header["content-type"] || "";
    this.type = utils.type(ct);
    var params = utils.params(ct);
    for (var key in params) {
      if (Object.prototype.hasOwnProperty.call(params, key))
        this[key] = params[key];
    }
    this.links = {};
    try {
      if (header.link) {
        this.links = utils.parseLinks(header.link);
      }
    } catch (_unused) {
    }
  };
  ResponseBase.prototype._setStatusProperties = function(status) {
    var type = status / 100 | 0;
    this.statusCode = status;
    this.status = this.statusCode;
    this.statusType = type;
    this.info = type === 1;
    this.ok = type === 2;
    this.redirect = type === 3;
    this.clientError = type === 4;
    this.serverError = type === 5;
    this.error = type === 4 || type === 5 ? this.toError() : false;
    this.created = status === 201;
    this.accepted = status === 202;
    this.noContent = status === 204;
    this.badRequest = status === 400;
    this.unauthorized = status === 401;
    this.notAcceptable = status === 406;
    this.forbidden = status === 403;
    this.notFound = status === 404;
    this.unprocessableEntity = status === 422;
  };
});

// node_modules/superagent/lib/node/response.js
var require_response = __commonJS((exports, module) => {
  var Response = function(req) {
    Stream.call(this);
    this.res = req.res;
    var res = this.res;
    this.request = req;
    this.req = req.req;
    this.text = res.text;
    this.body = res.body === undefined ? {} : res.body;
    this.files = res.files || {};
    this.buffered = req._resBuffered;
    this.headers = res.headers;
    this.header = this.headers;
    this._setStatusProperties(res.statusCode);
    this._setHeaderProperties(this.header);
    this.setEncoding = res.setEncoding.bind(res);
    res.on("data", this.emit.bind(this, "data"));
    res.on("end", this.emit.bind(this, "end"));
    res.on("close", this.emit.bind(this, "close"));
    res.on("error", this.emit.bind(this, "error"));
  };
  var util = __require("util");
  var Stream = __require("stream");
  var ResponseBase = require_response_base();
  module.exports = Response;
  util.inherits(Response, Stream);
  ResponseBase(Response.prototype);
  Response.prototype.destroy = function(err) {
    this.res.destroy(err);
  };
  Response.prototype.pause = function() {
    this.res.pause();
  };
  Response.prototype.resume = function() {
    this.res.resume();
  };
  Response.prototype.toError = function() {
    var req = this.req;
    var method = req.method;
    var path = req.path;
    var msg = "cannot ".concat(method, " ").concat(path, " (").concat(this.status, ")");
    var err = new Error(msg);
    err.status = this.status;
    err.text = this.text;
    err.method = method;
    err.path = path;
    return err;
  };
  Response.prototype.setStatusProperties = function(status) {
    console.warn("In superagent 2.x setStatusProperties is a private method");
    return this._setStatusProperties(status);
  };
  Response.prototype.toJSON = function() {
    return {
      req: this.request.toJSON(),
      header: this.header,
      status: this.status,
      text: this.text
    };
  };
});

// node_modules/superagent/lib/node/http2wrapper.js
var require_http2wrapper = __commonJS((exports) => {
  var ownKeys = function(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly)
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      keys.push.apply(keys, symbols);
    }
    return keys;
  };
  var _objectSpread = function(target) {
    for (var i = 1;i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      if (i % 2) {
        ownKeys(Object(source), true).forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  };
  var _defineProperty = function(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
    } else {
      obj[key] = value;
    }
    return obj;
  };
  var setProtocol = function(protocol) {
    return {
      request: function request(options) {
        return new Request(protocol, options);
      }
    };
  };
  var Request = function(protocol, options) {
    var _this = this;
    Stream.call(this);
    var defaultPort = protocol === "https:" ? 443 : 80;
    var defaultHost = "localhost";
    var port = options.port || defaultPort;
    var host = options.host || defaultHost;
    delete options.port;
    delete options.host;
    this.method = options.method;
    this.path = options.path;
    this.protocol = protocol;
    this.host = host;
    delete options.method;
    delete options.path;
    var sessionOptions = _objectSpread({}, options);
    if (options.socketPath) {
      sessionOptions.socketPath = options.socketPath;
      sessionOptions.createConnection = this.createUnixConnection.bind(this);
    }
    this._headers = {};
    var session = http2.connect("".concat(protocol, "//").concat(host, ":").concat(port), sessionOptions);
    this.setHeader("host", "".concat(host, ":").concat(port));
    session.on("error", function(err) {
      return _this.emit("error", err);
    });
    this.session = session;
  };
  var Stream = __require("stream");
  var util = __require("util");
  var net = __require("net");
  var tls = __require("tls");
  var _require = __require("url");
  var parse4 = _require.parse;
  var semver = require_semver3();
  var http2;
  if (semver.gte(process.version, "v10.10.0"))
    http2 = __require("http2");
  else
    throw new Error("superagent: this version of Node.js does not support http2");
  var _http2$constants = http2.constants;
  var HTTP2_HEADER_PATH = _http2$constants.HTTP2_HEADER_PATH;
  var HTTP2_HEADER_STATUS = _http2$constants.HTTP2_HEADER_STATUS;
  var HTTP2_HEADER_METHOD = _http2$constants.HTTP2_HEADER_METHOD;
  var HTTP2_HEADER_AUTHORITY = _http2$constants.HTTP2_HEADER_AUTHORITY;
  var HTTP2_HEADER_HOST = _http2$constants.HTTP2_HEADER_HOST;
  var HTTP2_HEADER_SET_COOKIE = _http2$constants.HTTP2_HEADER_SET_COOKIE;
  var NGHTTP2_CANCEL = _http2$constants.NGHTTP2_CANCEL;
  util.inherits(Request, Stream);
  Request.prototype.createUnixConnection = function(authority, options) {
    switch (this.protocol) {
      case "http:":
        return net.connect(options.socketPath);
      case "https:":
        options.ALPNProtocols = ["h2"];
        options.servername = this.host;
        options.allowHalfOpen = true;
        return tls.connect(options.socketPath, options);
      default:
        throw new Error("Unsupported protocol", this.protocol);
    }
  };
  Request.prototype.setNoDelay = function(bool) {
  };
  Request.prototype.getFrame = function() {
    var _method, _this2 = this;
    if (this.frame) {
      return this.frame;
    }
    var method = (_method = {}, _defineProperty(_method, HTTP2_HEADER_PATH, this.path), _defineProperty(_method, HTTP2_HEADER_METHOD, this.method), _method);
    var headers = this.mapToHttp2Header(this._headers);
    headers = Object.assign(headers, method);
    var frame = this.session.request(headers);
    frame.once("response", function(headers2, flags) {
      headers2 = _this2.mapToHttpHeader(headers2);
      frame.headers = headers2;
      frame.statusCode = headers2[HTTP2_HEADER_STATUS];
      frame.status = frame.statusCode;
      _this2.emit("response", frame);
    });
    this._headerSent = true;
    frame.once("drain", function() {
      return _this2.emit("drain");
    });
    frame.on("error", function(err) {
      return _this2.emit("error", err);
    });
    frame.on("close", function() {
      return _this2.session.close();
    });
    this.frame = frame;
    return frame;
  };
  Request.prototype.mapToHttpHeader = function(headers) {
    var keys = Object.keys(headers);
    var http2Headers = {};
    for (var _i = 0, _keys = keys;_i < _keys.length; _i++) {
      var key = _keys[_i];
      var value = headers[key];
      key = key.toLowerCase();
      switch (key) {
        case HTTP2_HEADER_SET_COOKIE:
          value = Array.isArray(value) ? value : [value];
          break;
        default:
          break;
      }
      http2Headers[key] = value;
    }
    return http2Headers;
  };
  Request.prototype.mapToHttp2Header = function(headers) {
    var keys = Object.keys(headers);
    var http2Headers = {};
    for (var _i2 = 0, _keys2 = keys;_i2 < _keys2.length; _i2++) {
      var key = _keys2[_i2];
      var value = headers[key];
      key = key.toLowerCase();
      switch (key) {
        case HTTP2_HEADER_HOST:
          key = HTTP2_HEADER_AUTHORITY;
          value = /^http:\/\/|^https:\/\//.test(value) ? parse4(value).host : value;
          break;
        default:
          break;
      }
      http2Headers[key] = value;
    }
    return http2Headers;
  };
  Request.prototype.setHeader = function(name, value) {
    this._headers[name.toLowerCase()] = value;
  };
  Request.prototype.getHeader = function(name) {
    return this._headers[name.toLowerCase()];
  };
  Request.prototype.write = function(data, encoding) {
    var frame = this.getFrame();
    return frame.write(data, encoding);
  };
  Request.prototype.pipe = function(stream, options) {
    var frame = this.getFrame();
    return frame.pipe(stream, options);
  };
  Request.prototype.end = function(data) {
    var frame = this.getFrame();
    frame.end(data);
  };
  Request.prototype.abort = function(data) {
    var frame = this.getFrame();
    frame.close(NGHTTP2_CANCEL);
    this.session.destroy();
  };
  exports.setProtocol = setProtocol;
});

// node_modules/superagent/lib/agent-base.js
var require_agent_base = __commonJS((exports, module) => {
  var _toConsumableArray = function(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
  };
  var _nonIterableSpread = function() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  };
  var _unsupportedIterableToArray = function(o, minLen) {
    if (!o)
      return;
    if (typeof o === "string")
      return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor)
      n = o.constructor.name;
    if (n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray(o, minLen);
  };
  var _iterableToArray = function(iter) {
    if (typeof Symbol !== "undefined" && (Symbol.iterator in Object(iter)))
      return Array.from(iter);
  };
  var _arrayWithoutHoles = function(arr) {
    if (Array.isArray(arr))
      return _arrayLikeToArray(arr);
  };
  var _arrayLikeToArray = function(arr, len) {
    if (len == null || len > arr.length)
      len = arr.length;
    for (var i = 0, arr2 = new Array(len);i < len; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  };
  var Agent = function() {
    this._defaults = [];
  };
  ["use", "on", "once", "set", "query", "type", "accept", "auth", "withCredentials", "sortQuery", "retry", "ok", "redirects", "timeout", "buffer", "serialize", "parse", "ca", "key", "pfx", "cert", "disableTLSCerts"].forEach(function(fn) {
    Agent.prototype[fn] = function() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0;_key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      this._defaults.push({
        fn,
        args
      });
      return this;
    };
  });
  Agent.prototype._setDefaults = function(req) {
    this._defaults.forEach(function(def) {
      req[def.fn].apply(req, _toConsumableArray(def.args));
    });
  };
  module.exports = Agent;
});

// node_modules/superagent/lib/node/agent.js
var require_agent = __commonJS((exports, module) => {
  var Agent = function(options) {
    if (!(this instanceof Agent)) {
      return new Agent(options);
    }
    AgentBase.call(this);
    this.jar = new CookieJar;
    if (options) {
      if (options.ca) {
        this.ca(options.ca);
      }
      if (options.key) {
        this.key(options.key);
      }
      if (options.pfx) {
        this.pfx(options.pfx);
      }
      if (options.cert) {
        this.cert(options.cert);
      }
      if (options.rejectUnauthorized === false) {
        this.disableTLSCerts();
      }
    }
  };
  var _require = __require("url");
  var parse4 = _require.parse;
  var _require2 = require_cookiejar();
  var CookieJar = _require2.CookieJar;
  var _require3 = require_cookiejar();
  var CookieAccessInfo = _require3.CookieAccessInfo;
  var methods = require_methods();
  var request3 = require_node2();
  var AgentBase = require_agent_base();
  module.exports = Agent;
  Agent.prototype = Object.create(AgentBase.prototype);
  Agent.prototype._saveCookies = function(res) {
    var cookies = res.headers["set-cookie"];
    if (cookies)
      this.jar.setCookies(cookies);
  };
  Agent.prototype._attachCookies = function(req) {
    var url = parse4(req.url);
    var access = new CookieAccessInfo(url.hostname, url.pathname, url.protocol === "https:");
    var cookies = this.jar.getCookies(access).toValueString();
    req.cookies = cookies;
  };
  methods.forEach(function(name) {
    var method = name.toUpperCase();
    Agent.prototype[name] = function(url, fn) {
      var req = new request3.Request(method, url);
      req.on("response", this._saveCookies.bind(this));
      req.on("redirect", this._saveCookies.bind(this));
      req.on("redirect", this._attachCookies.bind(this, req));
      this._setDefaults(req);
      this._attachCookies(req);
      if (fn) {
        req.end(fn);
      }
      return req;
    };
  });
  Agent.prototype.del = Agent.prototype.delete;
});

// node_modules/superagent/lib/node/parsers/urlencoded.js
var require_urlencoded = __commonJS((exports, module) => {
  var qs = require_lib2();
  module.exports = function(res, fn) {
    res.text = "";
    res.setEncoding("ascii");
    res.on("data", function(chunk) {
      res.text += chunk;
    });
    res.on("end", function() {
      try {
        fn(null, qs.parse(res.text));
      } catch (err) {
        fn(err);
      }
    });
  };
});

// node_modules/superagent/lib/node/parsers/json.js
var require_json = __commonJS((exports, module) => {
  module.exports = function(res, fn) {
    res.text = "";
    res.setEncoding("utf8");
    res.on("data", function(chunk) {
      res.text += chunk;
    });
    res.on("end", function() {
      var body;
      var err;
      try {
        body = res.text && JSON.parse(res.text);
      } catch (err_) {
        err = err_;
        err.rawResponse = res.text || null;
        err.statusCode = res.statusCode;
      } finally {
        fn(err, body);
      }
    });
  };
});

// node_modules/superagent/lib/node/parsers/text.js
var require_text = __commonJS((exports, module) => {
  module.exports = function(res, fn) {
    res.text = "";
    res.setEncoding("utf8");
    res.on("data", function(chunk) {
      res.text += chunk;
    });
    res.on("end", fn);
  };
});

// node_modules/superagent/lib/node/parsers/image.js
var require_image = __commonJS((exports, module) => {
  module.exports = function(res, fn) {
    var data = [];
    res.on("data", function(chunk) {
      data.push(chunk);
    });
    res.on("end", function() {
      fn(null, Buffer.concat(data));
    });
  };
});

// node_modules/superagent/lib/node/parsers/index.js
var require_parsers = __commonJS((exports) => {
  exports["application/x-www-form-urlencoded"] = require_urlencoded();
  exports["application/json"] = require_json();
  exports.text = require_text();
  var binary = require_image();
  exports["application/octet-stream"] = binary;
  exports["application/pdf"] = binary;
  exports.image = binary;
});

// node_modules/superagent/lib/node/index.js
var require_node2 = __commonJS((exports, module) => {
  var _typeof = function(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function _typeof(obj2) {
        return typeof obj2;
      };
    } else {
      _typeof = function _typeof(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      };
    }
    return _typeof(obj);
  };
  var request3 = function(method, url) {
    if (typeof url === "function") {
      return new exports.Request("GET", method).end(url);
    }
    if (arguments.length === 1) {
      return new exports.Request("GET", method);
    }
    return new exports.Request(method, url);
  };
  var noop = function() {
  };
  var _initHeaders = function(req) {
    req._header = {};
    req.header = {};
  };
  var Request = function(method, url) {
    Stream.call(this);
    if (typeof url !== "string")
      url = format(url);
    this._enableHttp2 = Boolean(process.env.HTTP2_TEST);
    this._agent = false;
    this._formData = null;
    this.method = method;
    this.url = url;
    _initHeaders(this);
    this.writable = true;
    this._redirects = 0;
    this.redirects(method === "HEAD" ? 0 : 5);
    this.cookies = "";
    this.qs = {};
    this._query = [];
    this.qsRaw = this._query;
    this._redirectList = [];
    this._streamRequest = false;
    this.once("end", this.clearTimeout.bind(this));
  };
  var isText = function(mime2) {
    var parts = mime2.split("/");
    var type = parts[0];
    var subtype = parts[1];
    return type === "text" || subtype === "x-www-form-urlencoded";
  };
  var isImageOrVideo = function(mime2) {
    var type = mime2.split("/")[0];
    return type === "image" || type === "video";
  };
  var isJSON = function(mime2) {
    return /[/+]json($|[^-\w])/.test(mime2);
  };
  var isRedirect = function(code) {
    return [301, 302, 303, 305, 307, 308].includes(code);
  };
  var _require = __require("url");
  var parse4 = _require.parse;
  var format = _require.format;
  var resolve = _require.resolve;
  var Stream = __require("stream");
  var https = __require("https");
  var http = __require("http");
  var fs = __require("fs");
  var zlib = __require("zlib");
  var util = __require("util");
  var qs = require_lib2();
  var mime = require_mime();
  var methods = require_methods();
  var FormData = require_form_data();
  var formidable = require_lib3();
  var debug = require_src3()("superagent");
  var CookieJar = require_cookiejar();
  var semver = require_semver3();
  var safeStringify = require_fast_safe_stringify();
  var utils = require_utils3();
  var RequestBase = require_request_base();
  var _require2 = require_unzip();
  var unzip = _require2.unzip;
  var Response = require_response();
  var http2;
  if (semver.gte(process.version, "v10.10.0"))
    http2 = require_http2wrapper();
  module.exports = request3;
  exports = module.exports;
  exports.Request = Request;
  exports.agent = require_agent();
  exports.Response = Response;
  mime.define({
    "application/x-www-form-urlencoded": ["form", "urlencoded", "form-data"]
  }, true);
  exports.protocols = {
    "http:": http,
    "https:": https,
    "http2:": http2
  };
  exports.serialize = {
    "application/x-www-form-urlencoded": qs.stringify,
    "application/json": safeStringify
  };
  exports.parse = require_parsers();
  exports.buffer = {};
  util.inherits(Request, Stream);
  RequestBase(Request.prototype);
  Request.prototype.http2 = function(bool) {
    if (exports.protocols["http2:"] === undefined) {
      throw new Error("superagent: this version of Node.js does not support http2");
    }
    this._enableHttp2 = bool === undefined ? true : bool;
    return this;
  };
  Request.prototype.attach = function(field, file, options) {
    if (file) {
      if (this._data) {
        throw new Error("superagent can't mix .send() and .attach()");
      }
      var o = options || {};
      if (typeof options === "string") {
        o = {
          filename: options
        };
      }
      if (typeof file === "string") {
        if (!o.filename)
          o.filename = file;
        debug("creating `fs.ReadStream` instance for file: %s", file);
        file = fs.createReadStream(file);
      } else if (!o.filename && file.path) {
        o.filename = file.path;
      }
      this._getFormData().append(field, file, o);
    }
    return this;
  };
  Request.prototype._getFormData = function() {
    var _this = this;
    if (!this._formData) {
      this._formData = new FormData;
      this._formData.on("error", function(err) {
        debug("FormData error", err);
        if (_this.called) {
          return;
        }
        _this.callback(err);
        _this.abort();
      });
    }
    return this._formData;
  };
  Request.prototype.agent = function(agent) {
    if (arguments.length === 0)
      return this._agent;
    this._agent = agent;
    return this;
  };
  Request.prototype.type = function(type) {
    return this.set("Content-Type", type.includes("/") ? type : mime.getType(type));
  };
  Request.prototype.accept = function(type) {
    return this.set("Accept", type.includes("/") ? type : mime.getType(type));
  };
  Request.prototype.query = function(val) {
    if (typeof val === "string") {
      this._query.push(val);
    } else {
      Object.assign(this.qs, val);
    }
    return this;
  };
  Request.prototype.write = function(data, encoding) {
    var req = this.request();
    if (!this._streamRequest) {
      this._streamRequest = true;
    }
    return req.write(data, encoding);
  };
  Request.prototype.pipe = function(stream, options) {
    this.piped = true;
    this.buffer(false);
    this.end();
    return this._pipeContinue(stream, options);
  };
  Request.prototype._pipeContinue = function(stream, options) {
    var _this2 = this;
    this.req.once("response", function(res) {
      if (isRedirect(res.statusCode) && _this2._redirects++ !== _this2._maxRedirects) {
        return _this2._redirect(res) === _this2 ? _this2._pipeContinue(stream, options) : undefined;
      }
      _this2.res = res;
      _this2._emitResponse();
      if (_this2._aborted)
        return;
      if (_this2._shouldUnzip(res)) {
        var unzipObj = zlib.createUnzip();
        unzipObj.on("error", function(err) {
          if (err && err.code === "Z_BUF_ERROR") {
            stream.emit("end");
            return;
          }
          stream.emit("error", err);
        });
        res.pipe(unzipObj).pipe(stream, options);
      } else {
        res.pipe(stream, options);
      }
      res.once("end", function() {
        _this2.emit("end");
      });
    });
    return stream;
  };
  Request.prototype.buffer = function(val) {
    this._buffer = val !== false;
    return this;
  };
  Request.prototype._redirect = function(res) {
    var url = res.headers.location;
    if (!url) {
      return this.callback(new Error("No location header for redirect"), res);
    }
    debug("redirect %s -> %s", this.url, url);
    url = resolve(this.url, url);
    res.resume();
    var headers = this.req.getHeaders ? this.req.getHeaders() : this.req._headers;
    var changesOrigin = parse4(url).host !== parse4(this.url).host;
    if (res.statusCode === 301 || res.statusCode === 302) {
      headers = utils.cleanHeader(headers, changesOrigin);
      this.method = this.method === "HEAD" ? "HEAD" : "GET";
      this._data = null;
    }
    if (res.statusCode === 303) {
      headers = utils.cleanHeader(headers, changesOrigin);
      this.method = "GET";
      this._data = null;
    }
    delete headers.host;
    delete this.req;
    delete this._formData;
    _initHeaders(this);
    this._endCalled = false;
    this.url = url;
    this.qs = {};
    this._query.length = 0;
    this.set(headers);
    this.emit("redirect", res);
    this._redirectList.push(this.url);
    this.end(this._callback);
    return this;
  };
  Request.prototype.auth = function(user, pass, options) {
    if (arguments.length === 1)
      pass = "";
    if (_typeof(pass) === "object" && pass !== null) {
      options = pass;
      pass = "";
    }
    if (!options) {
      options = {
        type: "basic"
      };
    }
    var encoder = function encoder(string) {
      return Buffer.from(string).toString("base64");
    };
    return this._auth(user, pass, options, encoder);
  };
  Request.prototype.ca = function(cert) {
    this._ca = cert;
    return this;
  };
  Request.prototype.key = function(cert) {
    this._key = cert;
    return this;
  };
  Request.prototype.pfx = function(cert) {
    if (_typeof(cert) === "object" && !Buffer.isBuffer(cert)) {
      this._pfx = cert.pfx;
      this._passphrase = cert.passphrase;
    } else {
      this._pfx = cert;
    }
    return this;
  };
  Request.prototype.cert = function(cert) {
    this._cert = cert;
    return this;
  };
  Request.prototype.disableTLSCerts = function() {
    this._disableTLSCerts = true;
    return this;
  };
  Request.prototype.request = function() {
    var _this3 = this;
    if (this.req)
      return this.req;
    var options = {};
    try {
      var query = qs.stringify(this.qs, {
        indices: false,
        strictNullHandling: true
      });
      if (query) {
        this.qs = {};
        this._query.push(query);
      }
      this._finalizeQueryString();
    } catch (err) {
      return this.emit("error", err);
    }
    var url = this.url;
    var retries = this._retries;
    var queryStringBackticks;
    if (url.includes("`")) {
      var queryStartIndex = url.indexOf("?");
      if (queryStartIndex !== -1) {
        var queryString = url.slice(queryStartIndex + 1);
        queryStringBackticks = queryString.match(/`|%60/g);
      }
    }
    if (url.indexOf("http") !== 0)
      url = "http://".concat(url);
    url = parse4(url);
    if (queryStringBackticks) {
      var i = 0;
      url.query = url.query.replace(/%60/g, function() {
        return queryStringBackticks[i++];
      });
      url.search = "?".concat(url.query);
      url.path = url.pathname + url.search;
    }
    if (/^https?\+unix:/.test(url.protocol) === true) {
      url.protocol = "".concat(url.protocol.split("+")[0], ":");
      var unixParts = url.path.match(/^([^/]+)(.+)$/);
      options.socketPath = unixParts[1].replace(/%2F/g, "/");
      url.path = unixParts[2];
    }
    if (this._connectOverride) {
      var _url = url, hostname = _url.hostname;
      var match = hostname in this._connectOverride ? this._connectOverride[hostname] : this._connectOverride["*"];
      if (match) {
        if (!this._header.host) {
          this.set("host", url.host);
        }
        var newHost;
        var newPort;
        if (_typeof(match) === "object") {
          newHost = match.host;
          newPort = match.port;
        } else {
          newHost = match;
          newPort = url.port;
        }
        url.host = /:/.test(newHost) ? "[".concat(newHost, "]") : newHost;
        if (newPort) {
          url.host += ":".concat(newPort);
          url.port = newPort;
        }
        url.hostname = newHost;
      }
    }
    options.method = this.method;
    options.port = url.port;
    options.path = url.path;
    options.host = url.hostname;
    options.ca = this._ca;
    options.key = this._key;
    options.pfx = this._pfx;
    options.cert = this._cert;
    options.passphrase = this._passphrase;
    options.agent = this._agent;
    options.rejectUnauthorized = typeof this._disableTLSCerts === "boolean" ? !this._disableTLSCerts : process.env.NODE_TLS_REJECT_UNAUTHORIZED !== "0";
    if (this._header.host) {
      options.servername = this._header.host.replace(/:\d+$/, "");
    }
    if (this._trustLocalhost && /^(?:localhost|127\.0\.0\.\d+|(0*:)+:0*1)$/.test(url.hostname)) {
      options.rejectUnauthorized = false;
    }
    var mod = this._enableHttp2 ? exports.protocols["http2:"].setProtocol(url.protocol) : exports.protocols[url.protocol];
    this.req = mod.request(options);
    var req = this.req;
    req.setNoDelay(true);
    if (options.method !== "HEAD") {
      req.setHeader("Accept-Encoding", "gzip, deflate");
    }
    this.protocol = url.protocol;
    this.host = url.host;
    req.once("drain", function() {
      _this3.emit("drain");
    });
    req.on("error", function(err) {
      if (_this3._aborted)
        return;
      if (_this3._retries !== retries)
        return;
      if (_this3.response)
        return;
      _this3.callback(err);
    });
    if (url.auth) {
      var auth = url.auth.split(":");
      this.auth(auth[0], auth[1]);
    }
    if (this.username && this.password) {
      this.auth(this.username, this.password);
    }
    for (var key in this.header) {
      if (Object.prototype.hasOwnProperty.call(this.header, key))
        req.setHeader(key, this.header[key]);
    }
    if (this.cookies) {
      if (Object.prototype.hasOwnProperty.call(this._header, "cookie")) {
        var tmpJar = new CookieJar.CookieJar;
        tmpJar.setCookies(this._header.cookie.split(";"));
        tmpJar.setCookies(this.cookies.split(";"));
        req.setHeader("Cookie", tmpJar.getCookies(CookieJar.CookieAccessInfo.All).toValueString());
      } else {
        req.setHeader("Cookie", this.cookies);
      }
    }
    return req;
  };
  Request.prototype.callback = function(err, res) {
    if (this._shouldRetry(err, res)) {
      return this._retry();
    }
    var fn = this._callback || noop;
    this.clearTimeout();
    if (this.called)
      return console.warn("superagent: double callback bug");
    this.called = true;
    if (!err) {
      try {
        if (!this._isResponseOK(res)) {
          var msg = "Unsuccessful HTTP response";
          if (res) {
            msg = http.STATUS_CODES[res.status] || msg;
          }
          err = new Error(msg);
          err.status = res ? res.status : undefined;
        }
      } catch (err_) {
        err = err_;
      }
    }
    if (!err) {
      return fn(null, res);
    }
    err.response = res;
    if (this._maxRetries)
      err.retries = this._retries - 1;
    if (err && this.listeners("error").length > 0) {
      this.emit("error", err);
    }
    fn(err, res);
  };
  Request.prototype._isHost = function(obj) {
    return Buffer.isBuffer(obj) || obj instanceof Stream || obj instanceof FormData;
  };
  Request.prototype._emitResponse = function(body, files) {
    var response = new Response(this);
    this.response = response;
    response.redirects = this._redirectList;
    if (body !== undefined) {
      response.body = body;
    }
    response.files = files;
    if (this._endCalled) {
      response.pipe = function() {
        throw new Error("end() has already been called, so it's too late to start piping");
      };
    }
    this.emit("response", response);
    return response;
  };
  Request.prototype.end = function(fn) {
    this.request();
    debug("%s %s", this.method, this.url);
    if (this._endCalled) {
      throw new Error(".end() was called twice. This is not supported in superagent");
    }
    this._endCalled = true;
    this._callback = fn || noop;
    this._end();
  };
  Request.prototype._end = function() {
    var _this4 = this;
    if (this._aborted)
      return this.callback(new Error("The request has been aborted even before .end() was called"));
    var data = this._data;
    var req = this.req;
    var method = this.method;
    this._setTimeouts();
    if (method !== "HEAD" && !req._headerSent) {
      if (typeof data !== "string") {
        var contentType = req.getHeader("Content-Type");
        if (contentType)
          contentType = contentType.split(";")[0];
        var serialize = this._serializer || exports.serialize[contentType];
        if (!serialize && isJSON(contentType)) {
          serialize = exports.serialize["application/json"];
        }
        if (serialize)
          data = serialize(data);
      }
      if (data && !req.getHeader("Content-Length")) {
        req.setHeader("Content-Length", Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data));
      }
    }
    req.once("response", function(res) {
      debug("%s %s -> %s", _this4.method, _this4.url, res.statusCode);
      if (_this4._responseTimeoutTimer) {
        clearTimeout(_this4._responseTimeoutTimer);
      }
      if (_this4.piped) {
        return;
      }
      var max = _this4._maxRedirects;
      var mime2 = utils.type(res.headers["content-type"] || "") || "text/plain";
      var type = mime2.split("/")[0];
      var multipart = type === "multipart";
      var redirect = isRedirect(res.statusCode);
      var responseType = _this4._responseType;
      _this4.res = res;
      if (redirect && _this4._redirects++ !== max) {
        return _this4._redirect(res);
      }
      if (_this4.method === "HEAD") {
        _this4.emit("end");
        _this4.callback(null, _this4._emitResponse());
        return;
      }
      if (_this4._shouldUnzip(res)) {
        unzip(req, res);
      }
      var buffer = _this4._buffer;
      if (buffer === undefined && (mime2 in exports.buffer)) {
        buffer = Boolean(exports.buffer[mime2]);
      }
      var parser = _this4._parser;
      if (buffer === undefined) {
        if (parser) {
          console.warn("A custom superagent parser has been set, but buffering strategy for the parser hasn't been configured. Call `req.buffer(true or false)` or set `superagent.buffer[mime] = true or false`");
          buffer = true;
        }
      }
      if (!parser) {
        if (responseType) {
          parser = exports.parse.image;
          buffer = true;
        } else if (multipart) {
          var form = new formidable.IncomingForm;
          parser = form.parse.bind(form);
          buffer = true;
        } else if (isImageOrVideo(mime2)) {
          parser = exports.parse.image;
          buffer = true;
        } else if (exports.parse[mime2]) {
          parser = exports.parse[mime2];
        } else if (type === "text") {
          parser = exports.parse.text;
          buffer = buffer !== false;
        } else if (isJSON(mime2)) {
          parser = exports.parse["application/json"];
          buffer = buffer !== false;
        } else if (buffer) {
          parser = exports.parse.text;
        } else if (buffer === undefined) {
          parser = exports.parse.image;
          buffer = true;
        }
      }
      if (buffer === undefined && isText(mime2) || isJSON(mime2)) {
        buffer = true;
      }
      _this4._resBuffered = buffer;
      var parserHandlesEnd = false;
      if (buffer) {
        var responseBytesLeft = _this4._maxResponseSize || 200000000;
        res.on("data", function(buf) {
          responseBytesLeft -= buf.byteLength || buf.length;
          if (responseBytesLeft < 0) {
            var err = new Error("Maximum response size reached");
            err.code = "ETOOLARGE";
            parserHandlesEnd = false;
            res.destroy(err);
          }
        });
      }
      if (parser) {
        try {
          parserHandlesEnd = buffer;
          parser(res, function(err, obj, files) {
            if (_this4.timedout) {
              return;
            }
            if (err && !_this4._aborted) {
              return _this4.callback(err);
            }
            if (parserHandlesEnd) {
              _this4.emit("end");
              _this4.callback(null, _this4._emitResponse(obj, files));
            }
          });
        } catch (err) {
          _this4.callback(err);
          return;
        }
      }
      _this4.res = res;
      if (!buffer) {
        debug("unbuffered %s %s", _this4.method, _this4.url);
        _this4.callback(null, _this4._emitResponse());
        if (multipart)
          return;
        res.once("end", function() {
          debug("end %s %s", _this4.method, _this4.url);
          _this4.emit("end");
        });
        return;
      }
      res.once("error", function(err) {
        parserHandlesEnd = false;
        _this4.callback(err, null);
      });
      if (!parserHandlesEnd)
        res.once("end", function() {
          debug("end %s %s", _this4.method, _this4.url);
          _this4.emit("end");
          _this4.callback(null, _this4._emitResponse());
        });
    });
    this.emit("request", this);
    var getProgressMonitor = function getProgressMonitor() {
      var lengthComputable = true;
      var total = req.getHeader("Content-Length");
      var loaded = 0;
      var progress = new Stream.Transform;
      progress._transform = function(chunk, encoding, cb) {
        loaded += chunk.length;
        _this4.emit("progress", {
          direction: "upload",
          lengthComputable,
          loaded,
          total
        });
        cb(null, chunk);
      };
      return progress;
    };
    var bufferToChunks = function bufferToChunks(buffer) {
      var chunkSize = 16 * 1024;
      var chunking = new Stream.Readable;
      var totalLength = buffer.length;
      var remainder = totalLength % chunkSize;
      var cutoff = totalLength - remainder;
      for (var i2 = 0;i2 < cutoff; i2 += chunkSize) {
        var chunk = buffer.slice(i2, i2 + chunkSize);
        chunking.push(chunk);
      }
      if (remainder > 0) {
        var remainderBuffer = buffer.slice(-remainder);
        chunking.push(remainderBuffer);
      }
      chunking.push(null);
      return chunking;
    };
    var formData = this._formData;
    if (formData) {
      var headers = formData.getHeaders();
      for (var i in headers) {
        if (Object.prototype.hasOwnProperty.call(headers, i)) {
          debug('setting FormData header: "%s: %s"', i, headers[i]);
          req.setHeader(i, headers[i]);
        }
      }
      formData.getLength(function(err, length) {
        debug("got FormData Content-Length: %s", length);
        if (typeof length === "number") {
          req.setHeader("Content-Length", length);
        }
        formData.pipe(getProgressMonitor()).pipe(req);
      });
    } else if (Buffer.isBuffer(data)) {
      bufferToChunks(data).pipe(getProgressMonitor()).pipe(req);
    } else {
      req.end(data);
    }
  };
  Request.prototype._shouldUnzip = function(res) {
    if (res.statusCode === 204 || res.statusCode === 304) {
      return false;
    }
    if (res.headers["content-length"] === "0") {
      return false;
    }
    return /^\s*(?:deflate|gzip)\s*$/.test(res.headers["content-encoding"]);
  };
  Request.prototype.connect = function(connectOverride) {
    if (typeof connectOverride === "string") {
      this._connectOverride = {
        "*": connectOverride
      };
    } else if (_typeof(connectOverride) === "object") {
      this._connectOverride = connectOverride;
    } else {
      this._connectOverride = undefined;
    }
    return this;
  };
  Request.prototype.trustLocalhost = function(toggle) {
    this._trustLocalhost = toggle === undefined ? true : toggle;
    return this;
  };
  if (!methods.includes("del")) {
    methods = methods.slice(0);
    methods.push("del");
  }
  methods.forEach(function(method) {
    var name = method;
    method = method === "del" ? "delete" : method;
    method = method.toUpperCase();
    request3[name] = function(url, data, fn) {
      var req = request3(method, url);
      if (typeof data === "function") {
        fn = data;
        data = null;
      }
      if (data) {
        if (method === "GET" || method === "HEAD") {
          req.query(data);
        } else {
          req.send(data);
        }
      }
      if (fn)
        req.end(fn);
      return req;
    };
  });
});

// node_modules/asana/dist/ApiClient.js
var require_ApiClient = __commonJS((exports) => {
  var _interopRequireDefault = function(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  };
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _defineProperty = function(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) {
      Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
    } else {
      obj[key] = value;
    }
    return obj;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ApiClient = undefined;
  var _superagent = _interopRequireDefault(require_node2());
  var _querystring = _interopRequireDefault(__require("querystring"));
  var ApiClient = function() {
    function ApiClient2() {
      _classCallCheck(this, ApiClient2);
      this.basePath = "https://app.asana.com/api/1.0".replace(/\/+$/, "");
      this.authentications = {
        oauth2: {
          type: "oauth2"
        }
      };
      this.defaultHeaders = {};
      this.timeout = 60000;
      this.cache = true;
      this.enableCookies = false;
      if (typeof window === "undefined") {
        this.agent = new _superagent["default"].agent;
      }
      this.requestAgent = null;
    }
    _createClass(ApiClient2, [{
      key: "paramToString",
      value: function paramToString(param) {
        if (param == undefined || param == null) {
          return "";
        }
        if (param instanceof Date) {
          return param.toJSON();
        }
        return param.toString();
      }
    }, {
      key: "buildUrl",
      value: function buildUrl(path, pathParams) {
        var _this = this;
        if (!path.match(/^\//)) {
          path = "/" + path;
        }
        var url = this.basePath + path;
        url = url.replace(/\{([\w-]+)\}/g, function(fullMatch, key) {
          var value;
          if (pathParams.hasOwnProperty(key)) {
            value = _this.paramToString(pathParams[key]);
          } else {
            value = fullMatch;
          }
          return encodeURIComponent(value);
        });
        return url;
      }
    }, {
      key: "isJsonMime",
      value: function isJsonMime(contentType) {
        return Boolean(contentType != null && contentType.match(/^application\/json(;.*)?$/i));
      }
    }, {
      key: "jsonPreferredMime",
      value: function jsonPreferredMime(contentTypes) {
        for (var i = 0;i < contentTypes.length; i++) {
          if (this.isJsonMime(contentTypes[i])) {
            return contentTypes[i];
          }
        }
        return contentTypes[0];
      }
    }, {
      key: "isFileParam",
      value: function isFileParam(param) {
        if (typeof require === "function") {
          var fs;
          try {
            fs = __require("fs");
          } catch (err) {
          }
          if (fs && fs.ReadStream && param instanceof fs.ReadStream) {
            return true;
          }
        }
        if (typeof Buffer === "function" && param instanceof Buffer) {
          return true;
        }
        if (typeof Blob === "function" && param instanceof Blob) {
          return true;
        }
        if (typeof File === "function" && param instanceof File) {
          return true;
        }
        return false;
      }
    }, {
      key: "normalizeParams",
      value: function normalizeParams(params) {
        var newParams = {};
        for (var key in params) {
          if (params.hasOwnProperty(key) && params[key] != null && params[key] != null) {
            var value = params[key];
            if (this.isFileParam(value) || Array.isArray(value)) {
              newParams[key] = value;
            } else {
              newParams[key] = this.paramToString(value);
            }
          }
        }
        return newParams;
      }
    }, {
      key: "buildCollectionParam",
      value: function buildCollectionParam(param, collectionFormat) {
        if (param == null) {
          return null;
        }
        switch (collectionFormat) {
          case "csv":
            return param.map(this.paramToString).join(",");
          case "ssv":
            return param.map(this.paramToString).join(" ");
          case "tsv":
            return param.map(this.paramToString).join("\t");
          case "pipes":
            return param.map(this.paramToString).join("|");
          case "multi":
            return param.map(this.paramToString);
          default:
            throw new Error("Unknown collection format: " + collectionFormat);
        }
      }
    }, {
      key: "applyAuthToRequest",
      value: function applyAuthToRequest(request3, authNames) {
        var _this2 = this;
        authNames.forEach(function(authName) {
          var auth = _this2.authentications[authName];
          switch (auth.type) {
            case "basic":
              if (auth.username || auth.password) {
                request3.auth(auth.username || "", auth.password || "");
              }
              break;
            case "apiKey":
              if (auth.apiKey) {
                var data = {};
                if (auth.apiKeyPrefix) {
                  data[auth.name] = auth.apiKeyPrefix + " " + auth.apiKey;
                } else {
                  data[auth.name] = auth.apiKey;
                }
                if (auth["in"] === "header") {
                  request3.set(data);
                } else {
                  request3.query(data);
                }
              }
              break;
            case "oauth2":
              if (auth.accessToken) {
                request3.set({
                  Authorization: "Bearer " + auth.accessToken
                });
              }
              break;
            default:
              throw new Error("Unknown authentication type: " + auth.type);
          }
        });
      }
    }, {
      key: "deserialize",
      value: function deserialize(response, returnType) {
        if (response == null || returnType == null || response.status == 204) {
          return null;
        }
        var data = response.body;
        if (data == null || _typeof(data) === "object" && typeof data.length === "undefined" && !Object.keys(data).length) {
          data = response.text;
        }
        return ApiClient2.convertToType(data, returnType);
      }
    }, {
      key: "callApi",
      value: function callApi(path, httpMethod, pathParams, queryParams, headerParams, formParams, bodyParam, authNames, contentTypes, accepts, returnType, callback) {
        var _this3 = this;
        var url = this.buildUrl(path, pathParams);
        var request3 = (0, _superagent["default"])(httpMethod, url);
        this.applyAuthToRequest(request3, authNames);
        if (httpMethod.toUpperCase() === "GET" && this.cache === false) {
          queryParams["_"] = new Date().getTime();
        }
        request3.query(this.normalizeParams(queryParams));
        headerParams["X-Asana-Client-Lib"] = _querystring["default"].stringify({
          version: "2.0.3",
          language: "NodeJS",
          language_version: process.version,
          os: process.platform
        });
        request3.set(this.defaultHeaders).set(this.normalizeParams(headerParams));
        if (this.requestAgent) {
          request3.agent(this.requestAgent);
        }
        request3.timeout(this.timeout);
        var contentType = this.jsonPreferredMime(contentTypes);
        if (contentType) {
          if (contentType != "multipart/form-data") {
            request3.type(contentType);
          }
        } else if (!request3.header["Content-Type"]) {
          request3.type("application/json");
        }
        if (contentType === "application/x-www-form-urlencoded") {
          request3.send(_querystring["default"].stringify(this.normalizeParams(formParams)));
        } else if (contentType == "multipart/form-data") {
          var _formParams = this.normalizeParams(formParams);
          for (var key in _formParams) {
            if (_formParams.hasOwnProperty(key)) {
              if (this.isFileParam(_formParams[key])) {
                request3.attach(key, _formParams[key]);
              } else {
                request3.field(key, _formParams[key]);
              }
            }
          }
        } else if (bodyParam) {
          if (bodyParam.data.hasOwnProperty("_public")) {
            bodyParam.data["public"] = bodyParam.data["_public"];
            delete bodyParam.data["_public"];
          }
          request3.send(bodyParam);
        }
        var accept = this.jsonPreferredMime(accepts);
        if (accept) {
          request3.accept(accept);
        }
        if (returnType === "Blob") {
          request3.responseType("blob");
        } else if (returnType === "String") {
          request3.responseType("string");
        }
        if (this.enableCookies) {
          if (typeof window === "undefined") {
            this.agent.attachCookies(request3);
          } else {
            request3.withCredentials();
          }
        }
        request3.end(function(error2, response) {
          if (callback) {
            var data = null;
            if (!error2) {
              try {
                data = _this3.deserialize(response, returnType);
                if (_this3.enableCookies && typeof window === "undefined") {
                  _this3.agent.saveCookies(response);
                }
              } catch (err) {
                error2 = err;
              }
            }
            callback(error2, data, response);
          }
        });
        return request3;
      }
    }], [{
      key: "parseDate",
      value: function parseDate(str) {
        return new Date(str);
      }
    }, {
      key: "convertToType",
      value: function convertToType(data, type) {
        if (data === null || data === undefined)
          return data;
        switch (type) {
          case "Boolean":
            return Boolean(data);
          case "Integer":
            return parseInt(data, 10);
          case "Number":
            return parseFloat(data);
          case "String":
            return String(data);
          case "Date":
            return ApiClient2.parseDate(String(data));
          case "Blob":
            return data;
          default:
            if (type === Object) {
              return data;
            } else if (typeof type === "function") {
              return type.constructFromObject(data);
            } else if (Array.isArray(type)) {
              var itemType = type[0];
              return data.map(function(item) {
                return ApiClient2.convertToType(item, itemType);
              });
            } else if (_typeof(type) === "object") {
              var keyType, valueType;
              for (var k in type) {
                if (type.hasOwnProperty(k)) {
                  keyType = k;
                  valueType = type[k];
                  break;
                }
              }
              var result = {};
              for (var k in data) {
                if (data.hasOwnProperty(k)) {
                  var key = ApiClient2.convertToType(k, keyType);
                  var value = ApiClient2.convertToType(data[k], valueType);
                  result[key] = value;
                }
              }
              return result;
            } else {
              return data;
            }
        }
      }
    }, {
      key: "constructFromObject",
      value: function constructFromObject(data, obj, itemType) {
        if (Array.isArray(data)) {
          for (var i = 0;i < data.length; i++) {
            if (data.hasOwnProperty(i))
              obj[i] = ApiClient2.convertToType(data[i], itemType);
          }
        } else {
          for (var k in data) {
            if (data.hasOwnProperty(k))
              obj[k] = ApiClient2.convertToType(data[k], itemType);
          }
        }
      }
    }]);
    return ApiClient2;
  }();
  exports.ApiClient = ApiClient;
  _defineProperty(ApiClient, "CollectionFormatEnum", {
    CSV: ",",
    SSV: " ",
    TSV: "\t",
    PIPES: "|",
    MULTI: "multi"
  });
  ApiClient.instance = new ApiClient;
});

// node_modules/asana/dist/model/AddCustomFieldSettingRequest.js
var require_AddCustomFieldSettingRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AddCustomFieldSettingRequest = undefined;
  var _ApiClient = require_ApiClient();
  var AddCustomFieldSettingRequest = function() {
    function AddCustomFieldSettingRequest2(custom_field) {
      _classCallCheck(this, AddCustomFieldSettingRequest2);
      this.custom_field = custom_field;
    }
    _createClass(AddCustomFieldSettingRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AddCustomFieldSettingRequest2;
          if (data.hasOwnProperty("custom_field"))
            obj.custom_field = _ApiClient.ApiClient.convertToType(data["custom_field"], "String");
          if (data.hasOwnProperty("is_important"))
            obj.is_important = _ApiClient.ApiClient.convertToType(data["is_important"], "Boolean");
          if (data.hasOwnProperty("insert_before"))
            obj.insert_before = _ApiClient.ApiClient.convertToType(data["insert_before"], "String");
          if (data.hasOwnProperty("insert_after"))
            obj.insert_after = _ApiClient.ApiClient.convertToType(data["insert_after"], "String");
        }
        return obj;
      }
    }]);
    return AddCustomFieldSettingRequest2;
  }();
  exports.AddCustomFieldSettingRequest = AddCustomFieldSettingRequest;
  AddCustomFieldSettingRequest.prototype.custom_field = undefined;
  AddCustomFieldSettingRequest.prototype.is_important = undefined;
  AddCustomFieldSettingRequest.prototype.insert_before = undefined;
  AddCustomFieldSettingRequest.prototype.insert_after = undefined;
});

// node_modules/asana/dist/model/AddFollowersRequest.js
var require_AddFollowersRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AddFollowersRequest = undefined;
  var _ApiClient = require_ApiClient();
  var AddFollowersRequest = function() {
    function AddFollowersRequest2(followers) {
      _classCallCheck(this, AddFollowersRequest2);
      this.followers = followers;
    }
    _createClass(AddFollowersRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AddFollowersRequest2;
          if (data.hasOwnProperty("followers"))
            obj.followers = _ApiClient.ApiClient.convertToType(data["followers"], "String");
        }
        return obj;
      }
    }]);
    return AddFollowersRequest2;
  }();
  exports.AddFollowersRequest = AddFollowersRequest;
  AddFollowersRequest.prototype.followers = undefined;
});

// node_modules/asana/dist/model/AddMembersRequest.js
var require_AddMembersRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AddMembersRequest = undefined;
  var _ApiClient = require_ApiClient();
  var AddMembersRequest = function() {
    function AddMembersRequest2(members) {
      _classCallCheck(this, AddMembersRequest2);
      this.members = members;
    }
    _createClass(AddMembersRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AddMembersRequest2;
          if (data.hasOwnProperty("members"))
            obj.members = _ApiClient.ApiClient.convertToType(data["members"], "String");
        }
        return obj;
      }
    }]);
    return AddMembersRequest2;
  }();
  exports.AddMembersRequest = AddMembersRequest;
  AddMembersRequest.prototype.members = undefined;
});

// node_modules/asana/dist/model/AllOfProjectResponseOwner.js
var require_AllOfProjectResponseOwner = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AllOfProjectResponseOwner = undefined;
  var _ApiClient = require_ApiClient();
  var AllOfProjectResponseOwner = function() {
    function AllOfProjectResponseOwner2() {
      _classCallCheck(this, AllOfProjectResponseOwner2);
    }
    _createClass(AllOfProjectResponseOwner2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AllOfProjectResponseOwner2;
        }
        return obj;
      }
    }]);
    return AllOfProjectResponseOwner2;
  }();
  exports.AllOfProjectResponseOwner = AllOfProjectResponseOwner;
});

// node_modules/asana/dist/model/AllOfProjectTemplateBaseOwner.js
var require_AllOfProjectTemplateBaseOwner = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AllOfProjectTemplateBaseOwner = undefined;
  var _ApiClient = require_ApiClient();
  var AllOfProjectTemplateBaseOwner = function() {
    function AllOfProjectTemplateBaseOwner2() {
      _classCallCheck(this, AllOfProjectTemplateBaseOwner2);
    }
    _createClass(AllOfProjectTemplateBaseOwner2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AllOfProjectTemplateBaseOwner2;
        }
        return obj;
      }
    }]);
    return AllOfProjectTemplateBaseOwner2;
  }();
  exports.AllOfProjectTemplateBaseOwner = AllOfProjectTemplateBaseOwner;
});

// node_modules/asana/dist/model/AllOfProjectTemplateResponseOwner.js
var require_AllOfProjectTemplateResponseOwner = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AllOfProjectTemplateResponseOwner = undefined;
  var _ApiClient = require_ApiClient();
  var AllOfProjectTemplateResponseOwner = function() {
    function AllOfProjectTemplateResponseOwner2() {
      _classCallCheck(this, AllOfProjectTemplateResponseOwner2);
    }
    _createClass(AllOfProjectTemplateResponseOwner2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AllOfProjectTemplateResponseOwner2;
        }
        return obj;
      }
    }]);
    return AllOfProjectTemplateResponseOwner2;
  }();
  exports.AllOfProjectTemplateResponseOwner = AllOfProjectTemplateResponseOwner;
});

// node_modules/asana/dist/model/AllOfStoryResponseNewDateValue.js
var require_AllOfStoryResponseNewDateValue = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AllOfStoryResponseNewDateValue = undefined;
  var _ApiClient = require_ApiClient();
  var AllOfStoryResponseNewDateValue = function() {
    function AllOfStoryResponseNewDateValue2() {
      _classCallCheck(this, AllOfStoryResponseNewDateValue2);
    }
    _createClass(AllOfStoryResponseNewDateValue2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AllOfStoryResponseNewDateValue2;
        }
        return obj;
      }
    }]);
    return AllOfStoryResponseNewDateValue2;
  }();
  exports.AllOfStoryResponseNewDateValue = AllOfStoryResponseNewDateValue;
});

// node_modules/asana/dist/model/AllOfStoryResponseOldDateValue.js
var require_AllOfStoryResponseOldDateValue = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AllOfStoryResponseOldDateValue = undefined;
  var _ApiClient = require_ApiClient();
  var AllOfStoryResponseOldDateValue = function() {
    function AllOfStoryResponseOldDateValue2() {
      _classCallCheck(this, AllOfStoryResponseOldDateValue2);
    }
    _createClass(AllOfStoryResponseOldDateValue2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AllOfStoryResponseOldDateValue2;
        }
        return obj;
      }
    }]);
    return AllOfStoryResponseOldDateValue2;
  }();
  exports.AllOfStoryResponseOldDateValue = AllOfStoryResponseOldDateValue;
});

// node_modules/asana/dist/model/AllOfUserTaskListBaseOwner.js
var require_AllOfUserTaskListBaseOwner = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AllOfUserTaskListBaseOwner = undefined;
  var _ApiClient = require_ApiClient();
  var AllOfUserTaskListBaseOwner = function() {
    function AllOfUserTaskListBaseOwner2() {
      _classCallCheck(this, AllOfUserTaskListBaseOwner2);
    }
    _createClass(AllOfUserTaskListBaseOwner2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AllOfUserTaskListBaseOwner2;
        }
        return obj;
      }
    }]);
    return AllOfUserTaskListBaseOwner2;
  }();
  exports.AllOfUserTaskListBaseOwner = AllOfUserTaskListBaseOwner;
});

// node_modules/asana/dist/model/AllOfUserTaskListBaseWorkspace.js
var require_AllOfUserTaskListBaseWorkspace = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AllOfUserTaskListBaseWorkspace = undefined;
  var _ApiClient = require_ApiClient();
  var AllOfUserTaskListBaseWorkspace = function() {
    function AllOfUserTaskListBaseWorkspace2() {
      _classCallCheck(this, AllOfUserTaskListBaseWorkspace2);
    }
    _createClass(AllOfUserTaskListBaseWorkspace2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AllOfUserTaskListBaseWorkspace2;
        }
        return obj;
      }
    }]);
    return AllOfUserTaskListBaseWorkspace2;
  }();
  exports.AllOfUserTaskListBaseWorkspace = AllOfUserTaskListBaseWorkspace;
});

// node_modules/asana/dist/model/AllOfUserTaskListCompactOwner.js
var require_AllOfUserTaskListCompactOwner = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AllOfUserTaskListCompactOwner = undefined;
  var _ApiClient = require_ApiClient();
  var AllOfUserTaskListCompactOwner = function() {
    function AllOfUserTaskListCompactOwner2() {
      _classCallCheck(this, AllOfUserTaskListCompactOwner2);
    }
    _createClass(AllOfUserTaskListCompactOwner2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AllOfUserTaskListCompactOwner2;
        }
        return obj;
      }
    }]);
    return AllOfUserTaskListCompactOwner2;
  }();
  exports.AllOfUserTaskListCompactOwner = AllOfUserTaskListCompactOwner;
});

// node_modules/asana/dist/model/AllOfUserTaskListCompactWorkspace.js
var require_AllOfUserTaskListCompactWorkspace = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AllOfUserTaskListCompactWorkspace = undefined;
  var _ApiClient = require_ApiClient();
  var AllOfUserTaskListCompactWorkspace = function() {
    function AllOfUserTaskListCompactWorkspace2() {
      _classCallCheck(this, AllOfUserTaskListCompactWorkspace2);
    }
    _createClass(AllOfUserTaskListCompactWorkspace2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AllOfUserTaskListCompactWorkspace2;
        }
        return obj;
      }
    }]);
    return AllOfUserTaskListCompactWorkspace2;
  }();
  exports.AllOfUserTaskListCompactWorkspace = AllOfUserTaskListCompactWorkspace;
});

// node_modules/asana/dist/model/AllOfUserTaskListRequestOwner.js
var require_AllOfUserTaskListRequestOwner = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AllOfUserTaskListRequestOwner = undefined;
  var _ApiClient = require_ApiClient();
  var AllOfUserTaskListRequestOwner = function() {
    function AllOfUserTaskListRequestOwner2() {
      _classCallCheck(this, AllOfUserTaskListRequestOwner2);
    }
    _createClass(AllOfUserTaskListRequestOwner2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AllOfUserTaskListRequestOwner2;
        }
        return obj;
      }
    }]);
    return AllOfUserTaskListRequestOwner2;
  }();
  exports.AllOfUserTaskListRequestOwner = AllOfUserTaskListRequestOwner;
});

// node_modules/asana/dist/model/AllOfUserTaskListRequestWorkspace.js
var require_AllOfUserTaskListRequestWorkspace = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AllOfUserTaskListRequestWorkspace = undefined;
  var _ApiClient = require_ApiClient();
  var AllOfUserTaskListRequestWorkspace = function() {
    function AllOfUserTaskListRequestWorkspace2() {
      _classCallCheck(this, AllOfUserTaskListRequestWorkspace2);
    }
    _createClass(AllOfUserTaskListRequestWorkspace2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AllOfUserTaskListRequestWorkspace2;
        }
        return obj;
      }
    }]);
    return AllOfUserTaskListRequestWorkspace2;
  }();
  exports.AllOfUserTaskListRequestWorkspace = AllOfUserTaskListRequestWorkspace;
});

// node_modules/asana/dist/model/AllOfUserTaskListResponseOwner.js
var require_AllOfUserTaskListResponseOwner = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AllOfUserTaskListResponseOwner = undefined;
  var _ApiClient = require_ApiClient();
  var AllOfUserTaskListResponseOwner = function() {
    function AllOfUserTaskListResponseOwner2() {
      _classCallCheck(this, AllOfUserTaskListResponseOwner2);
    }
    _createClass(AllOfUserTaskListResponseOwner2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AllOfUserTaskListResponseOwner2;
        }
        return obj;
      }
    }]);
    return AllOfUserTaskListResponseOwner2;
  }();
  exports.AllOfUserTaskListResponseOwner = AllOfUserTaskListResponseOwner;
});

// node_modules/asana/dist/model/AllOfUserTaskListResponseWorkspace.js
var require_AllOfUserTaskListResponseWorkspace = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AllOfUserTaskListResponseWorkspace = undefined;
  var _ApiClient = require_ApiClient();
  var AllOfUserTaskListResponseWorkspace = function() {
    function AllOfUserTaskListResponseWorkspace2() {
      _classCallCheck(this, AllOfUserTaskListResponseWorkspace2);
    }
    _createClass(AllOfUserTaskListResponseWorkspace2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AllOfUserTaskListResponseWorkspace2;
        }
        return obj;
      }
    }]);
    return AllOfUserTaskListResponseWorkspace2;
  }();
  exports.AllOfUserTaskListResponseWorkspace = AllOfUserTaskListResponseWorkspace;
});

// node_modules/asana/dist/model/AllOfWorkspaceMembershipResponseUserTaskListOwner.js
var require_AllOfWorkspaceMembershipResponseUserTaskListOwner = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AllOfWorkspaceMembershipResponseUserTaskListOwner = undefined;
  var _ApiClient = require_ApiClient();
  var AllOfWorkspaceMembershipResponseUserTaskListOwner = function() {
    function AllOfWorkspaceMembershipResponseUserTaskListOwner2() {
      _classCallCheck(this, AllOfWorkspaceMembershipResponseUserTaskListOwner2);
    }
    _createClass(AllOfWorkspaceMembershipResponseUserTaskListOwner2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AllOfWorkspaceMembershipResponseUserTaskListOwner2;
        }
        return obj;
      }
    }]);
    return AllOfWorkspaceMembershipResponseUserTaskListOwner2;
  }();
  exports.AllOfWorkspaceMembershipResponseUserTaskListOwner = AllOfWorkspaceMembershipResponseUserTaskListOwner;
});

// node_modules/asana/dist/model/AllOfWorkspaceMembershipResponseUserTaskListWorkspace.js
var require_AllOfWorkspaceMembershipResponseUserTaskListWorkspace = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AllOfWorkspaceMembershipResponseUserTaskListWorkspace = undefined;
  var _ApiClient = require_ApiClient();
  var AllOfWorkspaceMembershipResponseUserTaskListWorkspace = function() {
    function AllOfWorkspaceMembershipResponseUserTaskListWorkspace2() {
      _classCallCheck(this, AllOfWorkspaceMembershipResponseUserTaskListWorkspace2);
    }
    _createClass(AllOfWorkspaceMembershipResponseUserTaskListWorkspace2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AllOfWorkspaceMembershipResponseUserTaskListWorkspace2;
        }
        return obj;
      }
    }]);
    return AllOfWorkspaceMembershipResponseUserTaskListWorkspace2;
  }();
  exports.AllOfWorkspaceMembershipResponseUserTaskListWorkspace = AllOfWorkspaceMembershipResponseUserTaskListWorkspace;
});

// node_modules/asana/dist/model/AsanaNamedResource.js
var require_AsanaNamedResource = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AsanaNamedResource = undefined;
  var _ApiClient = require_ApiClient();
  var AsanaNamedResource = function() {
    function AsanaNamedResource2() {
      _classCallCheck(this, AsanaNamedResource2);
    }
    _createClass(AsanaNamedResource2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AsanaNamedResource2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return AsanaNamedResource2;
  }();
  exports.AsanaNamedResource = AsanaNamedResource;
  AsanaNamedResource.prototype.gid = undefined;
  AsanaNamedResource.prototype.resource_type = undefined;
  AsanaNamedResource.prototype.name = undefined;
});

// node_modules/asana/dist/model/NextPage.js
var require_NextPage = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.NextPage = undefined;
  var _ApiClient = require_ApiClient();
  var NextPage = function() {
    function NextPage2() {
      _classCallCheck(this, NextPage2);
    }
    _createClass(NextPage2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new NextPage2;
          if (data.hasOwnProperty("offset"))
            obj.offset = _ApiClient.ApiClient.convertToType(data["offset"], "String");
          if (data.hasOwnProperty("path"))
            obj.path = _ApiClient.ApiClient.convertToType(data["path"], "String");
          if (data.hasOwnProperty("uri"))
            obj.uri = _ApiClient.ApiClient.convertToType(data["uri"], "String");
        }
        return obj;
      }
    }]);
    return NextPage2;
  }();
  exports.NextPage = NextPage;
  NextPage.prototype.offset = undefined;
  NextPage.prototype.path = undefined;
  NextPage.prototype.uri = undefined;
});

// node_modules/asana/dist/model/AsanaNamedResourceArray.js
var require_AsanaNamedResourceArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AsanaNamedResourceArray = undefined;
  var _ApiClient = require_ApiClient();
  var _AsanaNamedResource = require_AsanaNamedResource();
  var _NextPage = require_NextPage();
  var AsanaNamedResourceArray = function() {
    function AsanaNamedResourceArray2(data) {
      _classCallCheck(this, AsanaNamedResourceArray2);
      this.data = data;
    }
    _createClass(AsanaNamedResourceArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AsanaNamedResourceArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_AsanaNamedResource.AsanaNamedResource]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return AsanaNamedResourceArray2;
  }();
  exports.AsanaNamedResourceArray = AsanaNamedResourceArray;
  AsanaNamedResourceArray.prototype.data = undefined;
  AsanaNamedResourceArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/AsanaResource.js
var require_AsanaResource = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AsanaResource = undefined;
  var _ApiClient = require_ApiClient();
  var AsanaResource = function() {
    function AsanaResource2() {
      _classCallCheck(this, AsanaResource2);
    }
    _createClass(AsanaResource2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AsanaResource2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
        }
        return obj;
      }
    }]);
    return AsanaResource2;
  }();
  exports.AsanaResource = AsanaResource;
  AsanaResource.prototype.gid = undefined;
  AsanaResource.prototype.resource_type = undefined;
});

// node_modules/asana/dist/model/AttachmentBase.js
var require_AttachmentBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AttachmentBase = undefined;
  var _ApiClient = require_ApiClient();
  var AttachmentBase = function() {
    function AttachmentBase2() {
      _classCallCheck(this, AttachmentBase2);
    }
    _createClass(AttachmentBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AttachmentBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
        }
        return obj;
      }
    }]);
    return AttachmentBase2;
  }();
  exports.AttachmentBase = AttachmentBase;
  AttachmentBase.prototype.gid = undefined;
  AttachmentBase.prototype.resource_type = undefined;
  AttachmentBase.prototype.name = undefined;
  AttachmentBase.prototype.resource_subtype = undefined;
});

// node_modules/asana/dist/model/AttachmentCompact.js
var require_AttachmentCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AttachmentCompact = undefined;
  var _ApiClient = require_ApiClient();
  var AttachmentCompact = function() {
    function AttachmentCompact2() {
      _classCallCheck(this, AttachmentCompact2);
    }
    _createClass(AttachmentCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AttachmentCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
        }
        return obj;
      }
    }]);
    return AttachmentCompact2;
  }();
  exports.AttachmentCompact = AttachmentCompact;
  AttachmentCompact.prototype.gid = undefined;
  AttachmentCompact.prototype.resource_type = undefined;
  AttachmentCompact.prototype.name = undefined;
  AttachmentCompact.prototype.resource_subtype = undefined;
});

// node_modules/asana/dist/model/AttachmentRequest.js
var require_AttachmentRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AttachmentRequest = undefined;
  var _ApiClient = require_ApiClient();
  var AttachmentRequest = function() {
    function AttachmentRequest2(parent) {
      _classCallCheck(this, AttachmentRequest2);
      this.parent = parent;
    }
    _createClass(AttachmentRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AttachmentRequest2;
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("file"))
            obj.file = _ApiClient.ApiClient.convertToType(data["file"], "Blob");
          if (data.hasOwnProperty("parent"))
            obj.parent = _ApiClient.ApiClient.convertToType(data["parent"], "String");
          if (data.hasOwnProperty("url"))
            obj.url = _ApiClient.ApiClient.convertToType(data["url"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("connect_to_app"))
            obj.connect_to_app = _ApiClient.ApiClient.convertToType(data["connect_to_app"], "Boolean");
        }
        return obj;
      }
    }]);
    return AttachmentRequest2;
  }();
  exports.AttachmentRequest = AttachmentRequest;
  AttachmentRequest.ResourceSubtypeEnum = {
    asana: "asana",
    dropbox: "dropbox",
    gdrive: "gdrive",
    onedrive: "onedrive",
    box: "box",
    vimeo: "vimeo",
    external: "external"
  };
  AttachmentRequest.prototype.resource_subtype = undefined;
  AttachmentRequest.prototype.file = undefined;
  AttachmentRequest.prototype.parent = undefined;
  AttachmentRequest.prototype.url = undefined;
  AttachmentRequest.prototype.name = undefined;
  AttachmentRequest.prototype.connect_to_app = undefined;
});

// node_modules/asana/dist/model/AttachmentResponseParentCreatedBy.js
var require_AttachmentResponseParentCreatedBy = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AttachmentResponseParentCreatedBy = undefined;
  var _ApiClient = require_ApiClient();
  var AttachmentResponseParentCreatedBy = function() {
    function AttachmentResponseParentCreatedBy2() {
      _classCallCheck(this, AttachmentResponseParentCreatedBy2);
    }
    _createClass(AttachmentResponseParentCreatedBy2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AttachmentResponseParentCreatedBy2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
        }
        return obj;
      }
    }]);
    return AttachmentResponseParentCreatedBy2;
  }();
  exports.AttachmentResponseParentCreatedBy = AttachmentResponseParentCreatedBy;
  AttachmentResponseParentCreatedBy.prototype.gid = undefined;
  AttachmentResponseParentCreatedBy.prototype.resource_type = undefined;
});

// node_modules/asana/dist/model/AttachmentResponseParent.js
var require_AttachmentResponseParent = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AttachmentResponseParent = undefined;
  var _ApiClient = require_ApiClient();
  var _AttachmentResponseParentCreatedBy = require_AttachmentResponseParentCreatedBy();
  var AttachmentResponseParent = function() {
    function AttachmentResponseParent2() {
      _classCallCheck(this, AttachmentResponseParent2);
    }
    _createClass(AttachmentResponseParent2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AttachmentResponseParent2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _AttachmentResponseParentCreatedBy.AttachmentResponseParentCreatedBy.constructFromObject(data["created_by"]);
        }
        return obj;
      }
    }]);
    return AttachmentResponseParent2;
  }();
  exports.AttachmentResponseParent = AttachmentResponseParent;
  AttachmentResponseParent.prototype.gid = undefined;
  AttachmentResponseParent.prototype.resource_type = undefined;
  AttachmentResponseParent.prototype.name = undefined;
  AttachmentResponseParent.prototype.resource_subtype = undefined;
  AttachmentResponseParent.prototype.created_by = undefined;
});

// node_modules/asana/dist/model/AttachmentResponse.js
var require_AttachmentResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AttachmentResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _AttachmentResponseParent = require_AttachmentResponseParent();
  var AttachmentResponse = function() {
    function AttachmentResponse2() {
      _classCallCheck(this, AttachmentResponse2);
    }
    _createClass(AttachmentResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AttachmentResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("download_url"))
            obj.download_url = _ApiClient.ApiClient.convertToType(data["download_url"], "String");
          if (data.hasOwnProperty("permanent_url"))
            obj.permanent_url = _ApiClient.ApiClient.convertToType(data["permanent_url"], "String");
          if (data.hasOwnProperty("host"))
            obj.host = _ApiClient.ApiClient.convertToType(data["host"], "String");
          if (data.hasOwnProperty("parent"))
            obj.parent = _AttachmentResponseParent.AttachmentResponseParent.constructFromObject(data["parent"]);
          if (data.hasOwnProperty("size"))
            obj.size = _ApiClient.ApiClient.convertToType(data["size"], "Number");
          if (data.hasOwnProperty("view_url"))
            obj.view_url = _ApiClient.ApiClient.convertToType(data["view_url"], "String");
          if (data.hasOwnProperty("connected_to_app"))
            obj.connected_to_app = _ApiClient.ApiClient.convertToType(data["connected_to_app"], "Boolean");
        }
        return obj;
      }
    }]);
    return AttachmentResponse2;
  }();
  exports.AttachmentResponse = AttachmentResponse;
  AttachmentResponse.prototype.gid = undefined;
  AttachmentResponse.prototype.resource_type = undefined;
  AttachmentResponse.prototype.name = undefined;
  AttachmentResponse.prototype.resource_subtype = undefined;
  AttachmentResponse.prototype.created_at = undefined;
  AttachmentResponse.prototype.download_url = undefined;
  AttachmentResponse.prototype.permanent_url = undefined;
  AttachmentResponse.prototype.host = undefined;
  AttachmentResponse.prototype.parent = undefined;
  AttachmentResponse.prototype.size = undefined;
  AttachmentResponse.prototype.view_url = undefined;
  AttachmentResponse.prototype.connected_to_app = undefined;
});

// node_modules/asana/dist/model/AttachmentResponseArray.js
var require_AttachmentResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AttachmentResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _AttachmentResponse = require_AttachmentResponse();
  var _NextPage = require_NextPage();
  var AttachmentResponseArray = function() {
    function AttachmentResponseArray2(data) {
      _classCallCheck(this, AttachmentResponseArray2);
      this.data = data;
    }
    _createClass(AttachmentResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AttachmentResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_AttachmentResponse.AttachmentResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return AttachmentResponseArray2;
  }();
  exports.AttachmentResponseArray = AttachmentResponseArray;
  AttachmentResponseArray.prototype.data = undefined;
  AttachmentResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/AttachmentResponseData.js
var require_AttachmentResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AttachmentResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _AttachmentResponse = require_AttachmentResponse();
  var AttachmentResponseData = function() {
    function AttachmentResponseData2(data) {
      _classCallCheck(this, AttachmentResponseData2);
      this.data = data;
    }
    _createClass(AttachmentResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AttachmentResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _AttachmentResponse.AttachmentResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return AttachmentResponseData2;
  }();
  exports.AttachmentResponseData = AttachmentResponseData;
  AttachmentResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/AuditLogEventActor.js
var require_AuditLogEventActor = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AuditLogEventActor = undefined;
  var _ApiClient = require_ApiClient();
  var AuditLogEventActor = function() {
    function AuditLogEventActor2() {
      _classCallCheck(this, AuditLogEventActor2);
    }
    _createClass(AuditLogEventActor2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AuditLogEventActor2;
          if (data.hasOwnProperty("actor_type"))
            obj.actor_type = _ApiClient.ApiClient.convertToType(data["actor_type"], "String");
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("email"))
            obj.email = _ApiClient.ApiClient.convertToType(data["email"], "String");
        }
        return obj;
      }
    }]);
    return AuditLogEventActor2;
  }();
  exports.AuditLogEventActor = AuditLogEventActor;
  AuditLogEventActor.ActorTypeEnum = {
    user: "user",
    asana: "asana",
    asana_support: "asana_support",
    anonymous: "anonymous",
    external_administrator: "external_administrator"
  };
  AuditLogEventActor.prototype.actor_type = undefined;
  AuditLogEventActor.prototype.gid = undefined;
  AuditLogEventActor.prototype.name = undefined;
  AuditLogEventActor.prototype.email = undefined;
});

// node_modules/asana/dist/model/AuditLogEventContext.js
var require_AuditLogEventContext = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AuditLogEventContext = undefined;
  var _ApiClient = require_ApiClient();
  var AuditLogEventContext = function() {
    function AuditLogEventContext2() {
      _classCallCheck(this, AuditLogEventContext2);
    }
    _createClass(AuditLogEventContext2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AuditLogEventContext2;
          if (data.hasOwnProperty("context_type"))
            obj.context_type = _ApiClient.ApiClient.convertToType(data["context_type"], "String");
          if (data.hasOwnProperty("api_authentication_method"))
            obj.api_authentication_method = _ApiClient.ApiClient.convertToType(data["api_authentication_method"], "String");
          if (data.hasOwnProperty("client_ip_address"))
            obj.client_ip_address = _ApiClient.ApiClient.convertToType(data["client_ip_address"], "String");
          if (data.hasOwnProperty("user_agent"))
            obj.user_agent = _ApiClient.ApiClient.convertToType(data["user_agent"], "String");
          if (data.hasOwnProperty("oauth_app_name"))
            obj.oauth_app_name = _ApiClient.ApiClient.convertToType(data["oauth_app_name"], "String");
        }
        return obj;
      }
    }]);
    return AuditLogEventContext2;
  }();
  exports.AuditLogEventContext = AuditLogEventContext;
  AuditLogEventContext.ContextTypeEnum = {
    web: "web",
    desktop: "desktop",
    mobile: "mobile",
    asana_support: "asana_support",
    asana: "asana",
    email: "email",
    api: "api"
  };
  AuditLogEventContext.prototype.context_type = undefined;
  AuditLogEventContext.ApiAuthenticationMethodEnum = {
    cookie: "cookie",
    oauth: "oauth",
    personal_access_token: "personal_access_token",
    service_account: "service_account"
  };
  AuditLogEventContext.prototype.api_authentication_method = undefined;
  AuditLogEventContext.prototype.client_ip_address = undefined;
  AuditLogEventContext.prototype.user_agent = undefined;
  AuditLogEventContext.prototype.oauth_app_name = undefined;
});

// node_modules/asana/dist/model/AuditLogEventResource.js
var require_AuditLogEventResource = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AuditLogEventResource = undefined;
  var _ApiClient = require_ApiClient();
  var AuditLogEventResource = function() {
    function AuditLogEventResource2() {
      _classCallCheck(this, AuditLogEventResource2);
    }
    _createClass(AuditLogEventResource2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AuditLogEventResource2;
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("email"))
            obj.email = _ApiClient.ApiClient.convertToType(data["email"], "String");
        }
        return obj;
      }
    }]);
    return AuditLogEventResource2;
  }();
  exports.AuditLogEventResource = AuditLogEventResource;
  AuditLogEventResource.prototype.resource_type = undefined;
  AuditLogEventResource.prototype.resource_subtype = undefined;
  AuditLogEventResource.prototype.gid = undefined;
  AuditLogEventResource.prototype.name = undefined;
  AuditLogEventResource.prototype.email = undefined;
});

// node_modules/asana/dist/model/AuditLogEvent.js
var require_AuditLogEvent = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AuditLogEvent = undefined;
  var _ApiClient = require_ApiClient();
  var _AuditLogEventActor = require_AuditLogEventActor();
  var _AuditLogEventContext = require_AuditLogEventContext();
  var _AuditLogEventResource = require_AuditLogEventResource();
  var AuditLogEvent = function() {
    function AuditLogEvent2() {
      _classCallCheck(this, AuditLogEvent2);
    }
    _createClass(AuditLogEvent2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AuditLogEvent2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("event_type"))
            obj.event_type = _ApiClient.ApiClient.convertToType(data["event_type"], "String");
          if (data.hasOwnProperty("event_category"))
            obj.event_category = _ApiClient.ApiClient.convertToType(data["event_category"], "String");
          if (data.hasOwnProperty("actor"))
            obj.actor = _AuditLogEventActor.AuditLogEventActor.constructFromObject(data["actor"]);
          if (data.hasOwnProperty("resource"))
            obj.resource = _AuditLogEventResource.AuditLogEventResource.constructFromObject(data["resource"]);
          if (data.hasOwnProperty("details"))
            obj.details = _ApiClient.ApiClient.convertToType(data["details"], Object);
          if (data.hasOwnProperty("context"))
            obj.context = _AuditLogEventContext.AuditLogEventContext.constructFromObject(data["context"]);
        }
        return obj;
      }
    }]);
    return AuditLogEvent2;
  }();
  exports.AuditLogEvent = AuditLogEvent;
  AuditLogEvent.prototype.gid = undefined;
  AuditLogEvent.prototype.created_at = undefined;
  AuditLogEvent.prototype.event_type = undefined;
  AuditLogEvent.prototype.event_category = undefined;
  AuditLogEvent.prototype.actor = undefined;
  AuditLogEvent.prototype.resource = undefined;
  AuditLogEvent.prototype.details = undefined;
  AuditLogEvent.prototype.context = undefined;
});

// node_modules/asana/dist/model/AuditLogEventArray.js
var require_AuditLogEventArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AuditLogEventArray = undefined;
  var _ApiClient = require_ApiClient();
  var _AuditLogEvent = require_AuditLogEvent();
  var _NextPage = require_NextPage();
  var AuditLogEventArray = function() {
    function AuditLogEventArray2(data) {
      _classCallCheck(this, AuditLogEventArray2);
      this.data = data;
    }
    _createClass(AuditLogEventArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AuditLogEventArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_AuditLogEvent.AuditLogEvent]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return AuditLogEventArray2;
  }();
  exports.AuditLogEventArray = AuditLogEventArray;
  AuditLogEventArray.prototype.data = undefined;
  AuditLogEventArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/AuditLogEventDetails.js
var require_AuditLogEventDetails = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AuditLogEventDetails = undefined;
  var _ApiClient = require_ApiClient();
  var AuditLogEventDetails = function() {
    function AuditLogEventDetails2() {
      _classCallCheck(this, AuditLogEventDetails2);
    }
    _createClass(AuditLogEventDetails2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new AuditLogEventDetails2;
        }
        return obj;
      }
    }]);
    return AuditLogEventDetails2;
  }();
  exports.AuditLogEventDetails = AuditLogEventDetails;
});

// node_modules/asana/dist/model/BatchRequestOptions.js
var require_BatchRequestOptions = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.BatchRequestOptions = undefined;
  var _ApiClient = require_ApiClient();
  var BatchRequestOptions = function() {
    function BatchRequestOptions2() {
      _classCallCheck(this, BatchRequestOptions2);
    }
    _createClass(BatchRequestOptions2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new BatchRequestOptions2;
          if (data.hasOwnProperty("limit"))
            obj.limit = _ApiClient.ApiClient.convertToType(data["limit"], "Number");
          if (data.hasOwnProperty("offset"))
            obj.offset = _ApiClient.ApiClient.convertToType(data["offset"], "Number");
          if (data.hasOwnProperty("fields"))
            obj.fields = _ApiClient.ApiClient.convertToType(data["fields"], ["String"]);
        }
        return obj;
      }
    }]);
    return BatchRequestOptions2;
  }();
  exports.BatchRequestOptions = BatchRequestOptions;
  BatchRequestOptions.prototype.limit = undefined;
  BatchRequestOptions.prototype.offset = undefined;
  BatchRequestOptions.prototype.fields = undefined;
});

// node_modules/asana/dist/model/BatchRequestActions.js
var require_BatchRequestActions = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.BatchRequestActions = undefined;
  var _ApiClient = require_ApiClient();
  var _BatchRequestOptions = require_BatchRequestOptions();
  var BatchRequestActions = function() {
    function BatchRequestActions2(relative_path, method) {
      _classCallCheck(this, BatchRequestActions2);
      this.relative_path = relative_path;
      this.method = method;
    }
    _createClass(BatchRequestActions2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new BatchRequestActions2;
          if (data.hasOwnProperty("relative_path"))
            obj.relative_path = _ApiClient.ApiClient.convertToType(data["relative_path"], "String");
          if (data.hasOwnProperty("method"))
            obj.method = _ApiClient.ApiClient.convertToType(data["method"], "String");
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], Object);
          if (data.hasOwnProperty("options"))
            obj.options = _BatchRequestOptions.BatchRequestOptions.constructFromObject(data["options"]);
        }
        return obj;
      }
    }]);
    return BatchRequestActions2;
  }();
  exports.BatchRequestActions = BatchRequestActions;
  BatchRequestActions.prototype.relative_path = undefined;
  BatchRequestActions.MethodEnum = {
    get: "get",
    post: "post",
    put: "put",
    _delete: "delete",
    patch: "patch",
    head: "head"
  };
  BatchRequestActions.prototype.method = undefined;
  BatchRequestActions.prototype.data = undefined;
  BatchRequestActions.prototype.options = undefined;
});

// node_modules/asana/dist/model/BatchRequest.js
var require_BatchRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.BatchRequest = undefined;
  var _ApiClient = require_ApiClient();
  var _BatchRequestActions = require_BatchRequestActions();
  var BatchRequest = function() {
    function BatchRequest2() {
      _classCallCheck(this, BatchRequest2);
    }
    _createClass(BatchRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new BatchRequest2;
          if (data.hasOwnProperty("actions"))
            obj.actions = _ApiClient.ApiClient.convertToType(data["actions"], [_BatchRequestActions.BatchRequestActions]);
        }
        return obj;
      }
    }]);
    return BatchRequest2;
  }();
  exports.BatchRequest = BatchRequest;
  BatchRequest.prototype.actions = undefined;
});

// node_modules/asana/dist/model/BatchBody.js
var require_BatchBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.BatchBody = undefined;
  var _ApiClient = require_ApiClient();
  var _BatchRequest = require_BatchRequest();
  var BatchBody = function() {
    function BatchBody2() {
      _classCallCheck(this, BatchBody2);
    }
    _createClass(BatchBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new BatchBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _BatchRequest.BatchRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return BatchBody2;
  }();
  exports.BatchBody = BatchBody;
  BatchBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/BatchRequestAction.js
var require_BatchRequestAction = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.BatchRequestAction = undefined;
  var _ApiClient = require_ApiClient();
  var _BatchRequestOptions = require_BatchRequestOptions();
  var BatchRequestAction = function() {
    function BatchRequestAction2(relative_path, method) {
      _classCallCheck(this, BatchRequestAction2);
      this.relative_path = relative_path;
      this.method = method;
    }
    _createClass(BatchRequestAction2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new BatchRequestAction2;
          if (data.hasOwnProperty("relative_path"))
            obj.relative_path = _ApiClient.ApiClient.convertToType(data["relative_path"], "String");
          if (data.hasOwnProperty("method"))
            obj.method = _ApiClient.ApiClient.convertToType(data["method"], "String");
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], Object);
          if (data.hasOwnProperty("options"))
            obj.options = _BatchRequestOptions.BatchRequestOptions.constructFromObject(data["options"]);
        }
        return obj;
      }
    }]);
    return BatchRequestAction2;
  }();
  exports.BatchRequestAction = BatchRequestAction;
  BatchRequestAction.prototype.relative_path = undefined;
  BatchRequestAction.MethodEnum = {
    get: "get",
    post: "post",
    put: "put",
    _delete: "delete",
    patch: "patch",
    head: "head"
  };
  BatchRequestAction.prototype.method = undefined;
  BatchRequestAction.prototype.data = undefined;
  BatchRequestAction.prototype.options = undefined;
});

// node_modules/asana/dist/model/BatchResponse.js
var require_BatchResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.BatchResponse = undefined;
  var _ApiClient = require_ApiClient();
  var BatchResponse = function() {
    function BatchResponse2() {
      _classCallCheck(this, BatchResponse2);
    }
    _createClass(BatchResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new BatchResponse2;
          if (data.hasOwnProperty("status_code"))
            obj.status_code = _ApiClient.ApiClient.convertToType(data["status_code"], "Number");
          if (data.hasOwnProperty("headers"))
            obj.headers = _ApiClient.ApiClient.convertToType(data["headers"], Object);
          if (data.hasOwnProperty("body"))
            obj.body = _ApiClient.ApiClient.convertToType(data["body"], Object);
        }
        return obj;
      }
    }]);
    return BatchResponse2;
  }();
  exports.BatchResponse = BatchResponse;
  BatchResponse.prototype.status_code = undefined;
  BatchResponse.prototype.headers = undefined;
  BatchResponse.prototype.body = undefined;
});

// node_modules/asana/dist/model/BatchResponseArray.js
var require_BatchResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.BatchResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _BatchResponse = require_BatchResponse();
  var _NextPage = require_NextPage();
  var BatchResponseArray = function() {
    function BatchResponseArray2(data) {
      _classCallCheck(this, BatchResponseArray2);
      this.data = data;
    }
    _createClass(BatchResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new BatchResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_BatchResponse.BatchResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return BatchResponseArray2;
  }();
  exports.BatchResponseArray = BatchResponseArray;
  BatchResponseArray.prototype.data = undefined;
  BatchResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/CreateMembershipRequest.js
var require_CreateMembershipRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CreateMembershipRequest = undefined;
  var _ApiClient = require_ApiClient();
  var CreateMembershipRequest = function() {
    function CreateMembershipRequest2() {
      _classCallCheck(this, CreateMembershipRequest2);
    }
    _createClass(CreateMembershipRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CreateMembershipRequest2;
          if (data.hasOwnProperty("is_active"))
            obj.is_active = _ApiClient.ApiClient.convertToType(data["is_active"], "Boolean");
          if (data.hasOwnProperty("member"))
            obj.member = _ApiClient.ApiClient.convertToType(data["member"], "String");
          if (data.hasOwnProperty("parent"))
            obj.parent = _ApiClient.ApiClient.convertToType(data["parent"], "String");
        }
        return obj;
      }
    }]);
    return CreateMembershipRequest2;
  }();
  exports.CreateMembershipRequest = CreateMembershipRequest;
  CreateMembershipRequest.prototype.is_active = undefined;
  CreateMembershipRequest.prototype.member = undefined;
  CreateMembershipRequest.prototype.parent = undefined;
});

// node_modules/asana/dist/model/CreateTimeTrackingEntryRequest.js
var require_CreateTimeTrackingEntryRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CreateTimeTrackingEntryRequest = undefined;
  var _ApiClient = require_ApiClient();
  var CreateTimeTrackingEntryRequest = function() {
    function CreateTimeTrackingEntryRequest2() {
      _classCallCheck(this, CreateTimeTrackingEntryRequest2);
    }
    _createClass(CreateTimeTrackingEntryRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CreateTimeTrackingEntryRequest2;
          if (data.hasOwnProperty("duration_minutes"))
            obj.duration_minutes = _ApiClient.ApiClient.convertToType(data["duration_minutes"], "Number");
          if (data.hasOwnProperty("entered_on"))
            obj.entered_on = _ApiClient.ApiClient.convertToType(data["entered_on"], "Date");
        }
        return obj;
      }
    }]);
    return CreateTimeTrackingEntryRequest2;
  }();
  exports.CreateTimeTrackingEntryRequest = CreateTimeTrackingEntryRequest;
  CreateTimeTrackingEntryRequest.prototype.duration_minutes = undefined;
  CreateTimeTrackingEntryRequest.prototype.entered_on = undefined;
});

// node_modules/asana/dist/model/CustomFieldBaseDateValue.js
var require_CustomFieldBaseDateValue = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldBaseDateValue = undefined;
  var _ApiClient = require_ApiClient();
  var CustomFieldBaseDateValue = function() {
    function CustomFieldBaseDateValue2() {
      _classCallCheck(this, CustomFieldBaseDateValue2);
    }
    _createClass(CustomFieldBaseDateValue2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldBaseDateValue2;
          if (data.hasOwnProperty("date"))
            obj._date = _ApiClient.ApiClient.convertToType(data["date"], "String");
          if (data.hasOwnProperty("date_time"))
            obj.date_time = _ApiClient.ApiClient.convertToType(data["date_time"], "String");
        }
        return obj;
      }
    }]);
    return CustomFieldBaseDateValue2;
  }();
  exports.CustomFieldBaseDateValue = CustomFieldBaseDateValue;
  CustomFieldBaseDateValue.prototype._date = undefined;
  CustomFieldBaseDateValue.prototype.date_time = undefined;
});

// node_modules/asana/dist/model/CustomFieldBaseEnumOptions.js
var require_CustomFieldBaseEnumOptions = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldBaseEnumOptions = undefined;
  var _ApiClient = require_ApiClient();
  var CustomFieldBaseEnumOptions = function() {
    function CustomFieldBaseEnumOptions2() {
      _classCallCheck(this, CustomFieldBaseEnumOptions2);
    }
    _createClass(CustomFieldBaseEnumOptions2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldBaseEnumOptions2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("enabled"))
            obj.enabled = _ApiClient.ApiClient.convertToType(data["enabled"], "Boolean");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
        }
        return obj;
      }
    }]);
    return CustomFieldBaseEnumOptions2;
  }();
  exports.CustomFieldBaseEnumOptions = CustomFieldBaseEnumOptions;
  CustomFieldBaseEnumOptions.prototype.gid = undefined;
  CustomFieldBaseEnumOptions.prototype.resource_type = undefined;
  CustomFieldBaseEnumOptions.prototype.name = undefined;
  CustomFieldBaseEnumOptions.prototype.enabled = undefined;
  CustomFieldBaseEnumOptions.prototype.color = undefined;
});

// node_modules/asana/dist/model/CustomFieldBaseEnumValue.js
var require_CustomFieldBaseEnumValue = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldBaseEnumValue = undefined;
  var _ApiClient = require_ApiClient();
  var CustomFieldBaseEnumValue = function() {
    function CustomFieldBaseEnumValue2() {
      _classCallCheck(this, CustomFieldBaseEnumValue2);
    }
    _createClass(CustomFieldBaseEnumValue2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldBaseEnumValue2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("enabled"))
            obj.enabled = _ApiClient.ApiClient.convertToType(data["enabled"], "Boolean");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
        }
        return obj;
      }
    }]);
    return CustomFieldBaseEnumValue2;
  }();
  exports.CustomFieldBaseEnumValue = CustomFieldBaseEnumValue;
  CustomFieldBaseEnumValue.prototype.gid = undefined;
  CustomFieldBaseEnumValue.prototype.resource_type = undefined;
  CustomFieldBaseEnumValue.prototype.name = undefined;
  CustomFieldBaseEnumValue.prototype.enabled = undefined;
  CustomFieldBaseEnumValue.prototype.color = undefined;
});

// node_modules/asana/dist/model/CustomFieldBase.js
var require_CustomFieldBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldBase = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldBaseDateValue = require_CustomFieldBaseDateValue();
  var _CustomFieldBaseEnumOptions = require_CustomFieldBaseEnumOptions();
  var _CustomFieldBaseEnumValue = require_CustomFieldBaseEnumValue();
  var CustomFieldBase = function() {
    function CustomFieldBase2() {
      _classCallCheck(this, CustomFieldBase2);
    }
    _createClass(CustomFieldBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("type"))
            obj.type = _ApiClient.ApiClient.convertToType(data["type"], "String");
          if (data.hasOwnProperty("enum_options"))
            obj.enum_options = _ApiClient.ApiClient.convertToType(data["enum_options"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("enabled"))
            obj.enabled = _ApiClient.ApiClient.convertToType(data["enabled"], "Boolean");
          if (data.hasOwnProperty("is_formula_field"))
            obj.is_formula_field = _ApiClient.ApiClient.convertToType(data["is_formula_field"], "Boolean");
          if (data.hasOwnProperty("date_value"))
            obj.date_value = _CustomFieldBaseDateValue.CustomFieldBaseDateValue.constructFromObject(data["date_value"]);
          if (data.hasOwnProperty("enum_value"))
            obj.enum_value = _CustomFieldBaseEnumValue.CustomFieldBaseEnumValue.constructFromObject(data["enum_value"]);
          if (data.hasOwnProperty("multi_enum_values"))
            obj.multi_enum_values = _ApiClient.ApiClient.convertToType(data["multi_enum_values"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("number_value"))
            obj.number_value = _ApiClient.ApiClient.convertToType(data["number_value"], "Number");
          if (data.hasOwnProperty("text_value"))
            obj.text_value = _ApiClient.ApiClient.convertToType(data["text_value"], "String");
          if (data.hasOwnProperty("display_value"))
            obj.display_value = _ApiClient.ApiClient.convertToType(data["display_value"], "String");
          if (data.hasOwnProperty("description"))
            obj.description = _ApiClient.ApiClient.convertToType(data["description"], "String");
          if (data.hasOwnProperty("precision"))
            obj.precision = _ApiClient.ApiClient.convertToType(data["precision"], "Number");
          if (data.hasOwnProperty("format"))
            obj.format = _ApiClient.ApiClient.convertToType(data["format"], "String");
          if (data.hasOwnProperty("currency_code"))
            obj.currency_code = _ApiClient.ApiClient.convertToType(data["currency_code"], "String");
          if (data.hasOwnProperty("custom_label"))
            obj.custom_label = _ApiClient.ApiClient.convertToType(data["custom_label"], "String");
          if (data.hasOwnProperty("custom_label_position"))
            obj.custom_label_position = _ApiClient.ApiClient.convertToType(data["custom_label_position"], "String");
          if (data.hasOwnProperty("is_global_to_workspace"))
            obj.is_global_to_workspace = _ApiClient.ApiClient.convertToType(data["is_global_to_workspace"], "Boolean");
          if (data.hasOwnProperty("has_notifications_enabled"))
            obj.has_notifications_enabled = _ApiClient.ApiClient.convertToType(data["has_notifications_enabled"], "Boolean");
          if (data.hasOwnProperty("asana_created_field"))
            obj.asana_created_field = _ApiClient.ApiClient.convertToType(data["asana_created_field"], "String");
        }
        return obj;
      }
    }]);
    return CustomFieldBase2;
  }();
  exports.CustomFieldBase = CustomFieldBase;
  CustomFieldBase.prototype.gid = undefined;
  CustomFieldBase.prototype.resource_type = undefined;
  CustomFieldBase.prototype.name = undefined;
  CustomFieldBase.ResourceSubtypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  CustomFieldBase.prototype.resource_subtype = undefined;
  CustomFieldBase.TypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  CustomFieldBase.prototype.type = undefined;
  CustomFieldBase.prototype.enum_options = undefined;
  CustomFieldBase.prototype.enabled = undefined;
  CustomFieldBase.prototype.is_formula_field = undefined;
  CustomFieldBase.prototype.date_value = undefined;
  CustomFieldBase.prototype.enum_value = undefined;
  CustomFieldBase.prototype.multi_enum_values = undefined;
  CustomFieldBase.prototype.number_value = undefined;
  CustomFieldBase.prototype.text_value = undefined;
  CustomFieldBase.prototype.display_value = undefined;
  CustomFieldBase.prototype.description = undefined;
  CustomFieldBase.prototype.precision = undefined;
  CustomFieldBase.FormatEnum = {
    currency: "currency",
    identifier: "identifier",
    percentage: "percentage",
    custom: "custom",
    duration: "duration",
    none: "none"
  };
  CustomFieldBase.prototype.format = undefined;
  CustomFieldBase.prototype.currency_code = undefined;
  CustomFieldBase.prototype.custom_label = undefined;
  CustomFieldBase.CustomLabelPositionEnum = {
    prefix: "prefix",
    suffix: "suffix",
    _null: "null"
  };
  CustomFieldBase.prototype.custom_label_position = undefined;
  CustomFieldBase.prototype.is_global_to_workspace = undefined;
  CustomFieldBase.prototype.has_notifications_enabled = undefined;
  CustomFieldBase.AsanaCreatedFieldEnum = {
    a_v_requirements: "a_v_requirements",
    account_name: "account_name",
    actionable: "actionable",
    align_shipping_link: "align_shipping_link",
    align_status: "align_status",
    allotted_time: "allotted_time",
    appointment: "appointment",
    approval_stage: "approval_stage",
    approved: "approved",
    article_series: "article_series",
    board_committee: "board_committee",
    browser: "browser",
    campaign_audience: "campaign_audience",
    campaign_project_status: "campaign_project_status",
    campaign_regions: "campaign_regions",
    channel_primary: "channel_primary",
    client_topic_type: "client_topic_type",
    complete_by: "complete_by",
    contact: "contact",
    contact_email_address: "contact_email_address",
    content_channels: "content_channels",
    content_channels_needed: "content_channels_needed",
    content_stage: "content_stage",
    content_type: "content_type",
    contract: "contract",
    contract_status: "contract_status",
    cost: "cost",
    creation_stage: "creation_stage",
    creative_channel: "creative_channel",
    creative_needed: "creative_needed",
    creative_needs: "creative_needs",
    data_sensitivity: "data_sensitivity",
    deal_size: "deal_size",
    delivery_appt: "delivery_appt",
    delivery_appt_date: "delivery_appt_date",
    department: "department",
    department_responsible: "department_responsible",
    design_request_needed: "design_request_needed",
    design_request_type: "design_request_type",
    discussion_category: "discussion_category",
    do_this_task: "do_this_task",
    editorial_content_status: "editorial_content_status",
    editorial_content_tag: "editorial_content_tag",
    editorial_content_type: "editorial_content_type",
    effort: "effort",
    effort_level: "effort_level",
    est_completion_date: "est_completion_date",
    estimated_time: "estimated_time",
    estimated_value: "estimated_value",
    expected_cost: "expected_cost",
    external_steps_needed: "external_steps_needed",
    favorite_idea: "favorite_idea",
    feedback_type: "feedback_type",
    financial: "financial",
    funding_amount: "funding_amount",
    grant_application_process: "grant_application_process",
    hiring_candidate_status: "hiring_candidate_status",
    idea_status: "idea_status",
    ids_link: "ids_link",
    ids_patient_link: "ids_patient_link",
    implementation_stage: "implementation_stage",
    insurance: "insurance",
    interview_area: "interview_area",
    interview_question_score: "interview_question_score",
    itero_scan_link: "itero_scan_link",
    job_s_applied_to: "job_s_applied_to",
    lab: "lab",
    launch_status: "launch_status",
    lead_status: "lead_status",
    localization_language: "localization_language",
    localization_market_team: "localization_market_team",
    localization_status: "localization_status",
    meeting_minutes: "meeting_minutes",
    meeting_needed: "meeting_needed",
    minutes: "minutes",
    mrr: "mrr",
    must_localize: "must_localize",
    name_of_foundation: "name_of_foundation",
    need_to_follow_up: "need_to_follow_up",
    next_appointment: "next_appointment",
    next_steps_sales: "next_steps_sales",
    num_people: "num_people",
    number_of_user_reports: "number_of_user_reports",
    office_location: "office_location",
    onboarding_activity: "onboarding_activity",
    owner: "owner",
    participants_needed: "participants_needed",
    patient_date_of_birth: "patient_date_of_birth",
    patient_email: "patient_email",
    patient_phone: "patient_phone",
    patient_status: "patient_status",
    phone_number: "phone_number",
    planning_category: "planning_category",
    point_of_contact: "point_of_contact",
    position: "position",
    post_format: "post_format",
    prescription: "prescription",
    priority: "priority",
    priority_level: "priority_level",
    product: "product",
    product_stage: "product_stage",
    progress: "progress",
    project_size: "project_size",
    project_status: "project_status",
    proposed_budget: "proposed_budget",
    publish_status: "publish_status",
    reason_for_scan: "reason_for_scan",
    referral: "referral",
    request_type: "request_type",
    research_status: "research_status",
    responsible_department: "responsible_department",
    responsible_team: "responsible_team",
    risk_assessment_status: "risk_assessment_status",
    room_name: "room_name",
    sales_counterpart: "sales_counterpart",
    sentiment: "sentiment",
    shipping_link: "shipping_link",
    social_channels: "social_channels",
    stage: "stage",
    status: "status",
    status_design: "status_design",
    status_of_initiative: "status_of_initiative",
    system_setup: "system_setup",
    task_progress: "task_progress",
    team: "team",
    team_marketing: "team_marketing",
    team_responsible: "team_responsible",
    time_it_takes_to_complete_tasks: "time_it_takes_to_complete_tasks",
    timeframe: "timeframe",
    treatment_type: "treatment_type",
    type_work_requests_it: "type_work_requests_it",
    use_agency: "use_agency",
    user_name: "user_name",
    vendor_category: "vendor_category",
    vendor_type: "vendor_type",
    word_count: "word_count",
    _null: "null"
  };
  CustomFieldBase.prototype.asana_created_field = undefined;
});

// node_modules/asana/dist/model/CustomFieldCompact.js
var require_CustomFieldCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldCompact = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldBaseDateValue = require_CustomFieldBaseDateValue();
  var _CustomFieldBaseEnumOptions = require_CustomFieldBaseEnumOptions();
  var _CustomFieldBaseEnumValue = require_CustomFieldBaseEnumValue();
  var CustomFieldCompact = function() {
    function CustomFieldCompact2() {
      _classCallCheck(this, CustomFieldCompact2);
    }
    _createClass(CustomFieldCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("type"))
            obj.type = _ApiClient.ApiClient.convertToType(data["type"], "String");
          if (data.hasOwnProperty("enum_options"))
            obj.enum_options = _ApiClient.ApiClient.convertToType(data["enum_options"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("enabled"))
            obj.enabled = _ApiClient.ApiClient.convertToType(data["enabled"], "Boolean");
          if (data.hasOwnProperty("is_formula_field"))
            obj.is_formula_field = _ApiClient.ApiClient.convertToType(data["is_formula_field"], "Boolean");
          if (data.hasOwnProperty("date_value"))
            obj.date_value = _CustomFieldBaseDateValue.CustomFieldBaseDateValue.constructFromObject(data["date_value"]);
          if (data.hasOwnProperty("enum_value"))
            obj.enum_value = _CustomFieldBaseEnumValue.CustomFieldBaseEnumValue.constructFromObject(data["enum_value"]);
          if (data.hasOwnProperty("multi_enum_values"))
            obj.multi_enum_values = _ApiClient.ApiClient.convertToType(data["multi_enum_values"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("number_value"))
            obj.number_value = _ApiClient.ApiClient.convertToType(data["number_value"], "Number");
          if (data.hasOwnProperty("text_value"))
            obj.text_value = _ApiClient.ApiClient.convertToType(data["text_value"], "String");
          if (data.hasOwnProperty("display_value"))
            obj.display_value = _ApiClient.ApiClient.convertToType(data["display_value"], "String");
        }
        return obj;
      }
    }]);
    return CustomFieldCompact2;
  }();
  exports.CustomFieldCompact = CustomFieldCompact;
  CustomFieldCompact.prototype.gid = undefined;
  CustomFieldCompact.prototype.resource_type = undefined;
  CustomFieldCompact.prototype.name = undefined;
  CustomFieldCompact.ResourceSubtypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  CustomFieldCompact.prototype.resource_subtype = undefined;
  CustomFieldCompact.TypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  CustomFieldCompact.prototype.type = undefined;
  CustomFieldCompact.prototype.enum_options = undefined;
  CustomFieldCompact.prototype.enabled = undefined;
  CustomFieldCompact.prototype.is_formula_field = undefined;
  CustomFieldCompact.prototype.date_value = undefined;
  CustomFieldCompact.prototype.enum_value = undefined;
  CustomFieldCompact.prototype.multi_enum_values = undefined;
  CustomFieldCompact.prototype.number_value = undefined;
  CustomFieldCompact.prototype.text_value = undefined;
  CustomFieldCompact.prototype.display_value = undefined;
});

// node_modules/asana/dist/model/EnumOptionRequest.js
var require_EnumOptionRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EnumOptionRequest = undefined;
  var _ApiClient = require_ApiClient();
  var EnumOptionRequest = function() {
    function EnumOptionRequest2() {
      _classCallCheck(this, EnumOptionRequest2);
    }
    _createClass(EnumOptionRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new EnumOptionRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("enabled"))
            obj.enabled = _ApiClient.ApiClient.convertToType(data["enabled"], "Boolean");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
          if (data.hasOwnProperty("insert_before"))
            obj.insert_before = _ApiClient.ApiClient.convertToType(data["insert_before"], "String");
          if (data.hasOwnProperty("insert_after"))
            obj.insert_after = _ApiClient.ApiClient.convertToType(data["insert_after"], "String");
        }
        return obj;
      }
    }]);
    return EnumOptionRequest2;
  }();
  exports.EnumOptionRequest = EnumOptionRequest;
  EnumOptionRequest.prototype.gid = undefined;
  EnumOptionRequest.prototype.resource_type = undefined;
  EnumOptionRequest.prototype.name = undefined;
  EnumOptionRequest.prototype.enabled = undefined;
  EnumOptionRequest.prototype.color = undefined;
  EnumOptionRequest.prototype.insert_before = undefined;
  EnumOptionRequest.prototype.insert_after = undefined;
});

// node_modules/asana/dist/model/CustomFieldGidEnumOptionsBody.js
var require_CustomFieldGidEnumOptionsBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldGidEnumOptionsBody = undefined;
  var _ApiClient = require_ApiClient();
  var _EnumOptionRequest = require_EnumOptionRequest();
  var CustomFieldGidEnumOptionsBody = function() {
    function CustomFieldGidEnumOptionsBody2() {
      _classCallCheck(this, CustomFieldGidEnumOptionsBody2);
    }
    _createClass(CustomFieldGidEnumOptionsBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldGidEnumOptionsBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _EnumOptionRequest.EnumOptionRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return CustomFieldGidEnumOptionsBody2;
  }();
  exports.CustomFieldGidEnumOptionsBody = CustomFieldGidEnumOptionsBody;
  CustomFieldGidEnumOptionsBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/CustomFieldRequest.js
var require_CustomFieldRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldRequest = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldBaseDateValue = require_CustomFieldBaseDateValue();
  var _CustomFieldBaseEnumOptions = require_CustomFieldBaseEnumOptions();
  var _CustomFieldBaseEnumValue = require_CustomFieldBaseEnumValue();
  var CustomFieldRequest = function() {
    function CustomFieldRequest2(workspace) {
      _classCallCheck(this, CustomFieldRequest2);
      this.workspace = workspace;
    }
    _createClass(CustomFieldRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("type"))
            obj.type = _ApiClient.ApiClient.convertToType(data["type"], "String");
          if (data.hasOwnProperty("enum_options"))
            obj.enum_options = _ApiClient.ApiClient.convertToType(data["enum_options"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("enabled"))
            obj.enabled = _ApiClient.ApiClient.convertToType(data["enabled"], "Boolean");
          if (data.hasOwnProperty("is_formula_field"))
            obj.is_formula_field = _ApiClient.ApiClient.convertToType(data["is_formula_field"], "Boolean");
          if (data.hasOwnProperty("date_value"))
            obj.date_value = _CustomFieldBaseDateValue.CustomFieldBaseDateValue.constructFromObject(data["date_value"]);
          if (data.hasOwnProperty("enum_value"))
            obj.enum_value = _CustomFieldBaseEnumValue.CustomFieldBaseEnumValue.constructFromObject(data["enum_value"]);
          if (data.hasOwnProperty("multi_enum_values"))
            obj.multi_enum_values = _ApiClient.ApiClient.convertToType(data["multi_enum_values"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("number_value"))
            obj.number_value = _ApiClient.ApiClient.convertToType(data["number_value"], "Number");
          if (data.hasOwnProperty("text_value"))
            obj.text_value = _ApiClient.ApiClient.convertToType(data["text_value"], "String");
          if (data.hasOwnProperty("display_value"))
            obj.display_value = _ApiClient.ApiClient.convertToType(data["display_value"], "String");
          if (data.hasOwnProperty("description"))
            obj.description = _ApiClient.ApiClient.convertToType(data["description"], "String");
          if (data.hasOwnProperty("precision"))
            obj.precision = _ApiClient.ApiClient.convertToType(data["precision"], "Number");
          if (data.hasOwnProperty("format"))
            obj.format = _ApiClient.ApiClient.convertToType(data["format"], "String");
          if (data.hasOwnProperty("currency_code"))
            obj.currency_code = _ApiClient.ApiClient.convertToType(data["currency_code"], "String");
          if (data.hasOwnProperty("custom_label"))
            obj.custom_label = _ApiClient.ApiClient.convertToType(data["custom_label"], "String");
          if (data.hasOwnProperty("custom_label_position"))
            obj.custom_label_position = _ApiClient.ApiClient.convertToType(data["custom_label_position"], "String");
          if (data.hasOwnProperty("is_global_to_workspace"))
            obj.is_global_to_workspace = _ApiClient.ApiClient.convertToType(data["is_global_to_workspace"], "Boolean");
          if (data.hasOwnProperty("has_notifications_enabled"))
            obj.has_notifications_enabled = _ApiClient.ApiClient.convertToType(data["has_notifications_enabled"], "Boolean");
          if (data.hasOwnProperty("asana_created_field"))
            obj.asana_created_field = _ApiClient.ApiClient.convertToType(data["asana_created_field"], "String");
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _ApiClient.ApiClient.convertToType(data["workspace"], "String");
          if (data.hasOwnProperty("owned_by_app"))
            obj.owned_by_app = _ApiClient.ApiClient.convertToType(data["owned_by_app"], "Boolean");
          if (data.hasOwnProperty("people_value"))
            obj.people_value = _ApiClient.ApiClient.convertToType(data["people_value"], ["String"]);
        }
        return obj;
      }
    }]);
    return CustomFieldRequest2;
  }();
  exports.CustomFieldRequest = CustomFieldRequest;
  CustomFieldRequest.prototype.gid = undefined;
  CustomFieldRequest.prototype.resource_type = undefined;
  CustomFieldRequest.prototype.name = undefined;
  CustomFieldRequest.ResourceSubtypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  CustomFieldRequest.prototype.resource_subtype = undefined;
  CustomFieldRequest.TypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  CustomFieldRequest.prototype.type = undefined;
  CustomFieldRequest.prototype.enum_options = undefined;
  CustomFieldRequest.prototype.enabled = undefined;
  CustomFieldRequest.prototype.is_formula_field = undefined;
  CustomFieldRequest.prototype.date_value = undefined;
  CustomFieldRequest.prototype.enum_value = undefined;
  CustomFieldRequest.prototype.multi_enum_values = undefined;
  CustomFieldRequest.prototype.number_value = undefined;
  CustomFieldRequest.prototype.text_value = undefined;
  CustomFieldRequest.prototype.display_value = undefined;
  CustomFieldRequest.prototype.description = undefined;
  CustomFieldRequest.prototype.precision = undefined;
  CustomFieldRequest.FormatEnum = {
    currency: "currency",
    identifier: "identifier",
    percentage: "percentage",
    custom: "custom",
    duration: "duration",
    none: "none"
  };
  CustomFieldRequest.prototype.format = undefined;
  CustomFieldRequest.prototype.currency_code = undefined;
  CustomFieldRequest.prototype.custom_label = undefined;
  CustomFieldRequest.CustomLabelPositionEnum = {
    prefix: "prefix",
    suffix: "suffix",
    _null: "null"
  };
  CustomFieldRequest.prototype.custom_label_position = undefined;
  CustomFieldRequest.prototype.is_global_to_workspace = undefined;
  CustomFieldRequest.prototype.has_notifications_enabled = undefined;
  CustomFieldRequest.AsanaCreatedFieldEnum = {
    a_v_requirements: "a_v_requirements",
    account_name: "account_name",
    actionable: "actionable",
    align_shipping_link: "align_shipping_link",
    align_status: "align_status",
    allotted_time: "allotted_time",
    appointment: "appointment",
    approval_stage: "approval_stage",
    approved: "approved",
    article_series: "article_series",
    board_committee: "board_committee",
    browser: "browser",
    campaign_audience: "campaign_audience",
    campaign_project_status: "campaign_project_status",
    campaign_regions: "campaign_regions",
    channel_primary: "channel_primary",
    client_topic_type: "client_topic_type",
    complete_by: "complete_by",
    contact: "contact",
    contact_email_address: "contact_email_address",
    content_channels: "content_channels",
    content_channels_needed: "content_channels_needed",
    content_stage: "content_stage",
    content_type: "content_type",
    contract: "contract",
    contract_status: "contract_status",
    cost: "cost",
    creation_stage: "creation_stage",
    creative_channel: "creative_channel",
    creative_needed: "creative_needed",
    creative_needs: "creative_needs",
    data_sensitivity: "data_sensitivity",
    deal_size: "deal_size",
    delivery_appt: "delivery_appt",
    delivery_appt_date: "delivery_appt_date",
    department: "department",
    department_responsible: "department_responsible",
    design_request_needed: "design_request_needed",
    design_request_type: "design_request_type",
    discussion_category: "discussion_category",
    do_this_task: "do_this_task",
    editorial_content_status: "editorial_content_status",
    editorial_content_tag: "editorial_content_tag",
    editorial_content_type: "editorial_content_type",
    effort: "effort",
    effort_level: "effort_level",
    est_completion_date: "est_completion_date",
    estimated_time: "estimated_time",
    estimated_value: "estimated_value",
    expected_cost: "expected_cost",
    external_steps_needed: "external_steps_needed",
    favorite_idea: "favorite_idea",
    feedback_type: "feedback_type",
    financial: "financial",
    funding_amount: "funding_amount",
    grant_application_process: "grant_application_process",
    hiring_candidate_status: "hiring_candidate_status",
    idea_status: "idea_status",
    ids_link: "ids_link",
    ids_patient_link: "ids_patient_link",
    implementation_stage: "implementation_stage",
    insurance: "insurance",
    interview_area: "interview_area",
    interview_question_score: "interview_question_score",
    itero_scan_link: "itero_scan_link",
    job_s_applied_to: "job_s_applied_to",
    lab: "lab",
    launch_status: "launch_status",
    lead_status: "lead_status",
    localization_language: "localization_language",
    localization_market_team: "localization_market_team",
    localization_status: "localization_status",
    meeting_minutes: "meeting_minutes",
    meeting_needed: "meeting_needed",
    minutes: "minutes",
    mrr: "mrr",
    must_localize: "must_localize",
    name_of_foundation: "name_of_foundation",
    need_to_follow_up: "need_to_follow_up",
    next_appointment: "next_appointment",
    next_steps_sales: "next_steps_sales",
    num_people: "num_people",
    number_of_user_reports: "number_of_user_reports",
    office_location: "office_location",
    onboarding_activity: "onboarding_activity",
    owner: "owner",
    participants_needed: "participants_needed",
    patient_date_of_birth: "patient_date_of_birth",
    patient_email: "patient_email",
    patient_phone: "patient_phone",
    patient_status: "patient_status",
    phone_number: "phone_number",
    planning_category: "planning_category",
    point_of_contact: "point_of_contact",
    position: "position",
    post_format: "post_format",
    prescription: "prescription",
    priority: "priority",
    priority_level: "priority_level",
    product: "product",
    product_stage: "product_stage",
    progress: "progress",
    project_size: "project_size",
    project_status: "project_status",
    proposed_budget: "proposed_budget",
    publish_status: "publish_status",
    reason_for_scan: "reason_for_scan",
    referral: "referral",
    request_type: "request_type",
    research_status: "research_status",
    responsible_department: "responsible_department",
    responsible_team: "responsible_team",
    risk_assessment_status: "risk_assessment_status",
    room_name: "room_name",
    sales_counterpart: "sales_counterpart",
    sentiment: "sentiment",
    shipping_link: "shipping_link",
    social_channels: "social_channels",
    stage: "stage",
    status: "status",
    status_design: "status_design",
    status_of_initiative: "status_of_initiative",
    system_setup: "system_setup",
    task_progress: "task_progress",
    team: "team",
    team_marketing: "team_marketing",
    team_responsible: "team_responsible",
    time_it_takes_to_complete_tasks: "time_it_takes_to_complete_tasks",
    timeframe: "timeframe",
    treatment_type: "treatment_type",
    type_work_requests_it: "type_work_requests_it",
    use_agency: "use_agency",
    user_name: "user_name",
    vendor_category: "vendor_category",
    vendor_type: "vendor_type",
    word_count: "word_count",
    _null: "null"
  };
  CustomFieldRequest.prototype.asana_created_field = undefined;
  CustomFieldRequest.prototype.workspace = undefined;
  CustomFieldRequest.prototype.owned_by_app = undefined;
  CustomFieldRequest.prototype.people_value = undefined;
});

// node_modules/asana/dist/model/CustomFieldResponseCreatedBy.js
var require_CustomFieldResponseCreatedBy = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldResponseCreatedBy = undefined;
  var _ApiClient = require_ApiClient();
  var CustomFieldResponseCreatedBy = function() {
    function CustomFieldResponseCreatedBy2() {
      _classCallCheck(this, CustomFieldResponseCreatedBy2);
    }
    _createClass(CustomFieldResponseCreatedBy2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldResponseCreatedBy2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return CustomFieldResponseCreatedBy2;
  }();
  exports.CustomFieldResponseCreatedBy = CustomFieldResponseCreatedBy;
  CustomFieldResponseCreatedBy.prototype.gid = undefined;
  CustomFieldResponseCreatedBy.prototype.resource_type = undefined;
  CustomFieldResponseCreatedBy.prototype.name = undefined;
});

// node_modules/asana/dist/model/CustomFieldResponsePeopleValue.js
var require_CustomFieldResponsePeopleValue = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldResponsePeopleValue = undefined;
  var _ApiClient = require_ApiClient();
  var CustomFieldResponsePeopleValue = function() {
    function CustomFieldResponsePeopleValue2() {
      _classCallCheck(this, CustomFieldResponsePeopleValue2);
    }
    _createClass(CustomFieldResponsePeopleValue2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldResponsePeopleValue2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return CustomFieldResponsePeopleValue2;
  }();
  exports.CustomFieldResponsePeopleValue = CustomFieldResponsePeopleValue;
  CustomFieldResponsePeopleValue.prototype.gid = undefined;
  CustomFieldResponsePeopleValue.prototype.resource_type = undefined;
  CustomFieldResponsePeopleValue.prototype.name = undefined;
});

// node_modules/asana/dist/model/CustomFieldResponse.js
var require_CustomFieldResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldBaseDateValue = require_CustomFieldBaseDateValue();
  var _CustomFieldBaseEnumOptions = require_CustomFieldBaseEnumOptions();
  var _CustomFieldBaseEnumValue = require_CustomFieldBaseEnumValue();
  var _CustomFieldResponseCreatedBy = require_CustomFieldResponseCreatedBy();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var CustomFieldResponse = function() {
    function CustomFieldResponse2() {
      _classCallCheck(this, CustomFieldResponse2);
    }
    _createClass(CustomFieldResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("type"))
            obj.type = _ApiClient.ApiClient.convertToType(data["type"], "String");
          if (data.hasOwnProperty("enum_options"))
            obj.enum_options = _ApiClient.ApiClient.convertToType(data["enum_options"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("enabled"))
            obj.enabled = _ApiClient.ApiClient.convertToType(data["enabled"], "Boolean");
          if (data.hasOwnProperty("is_formula_field"))
            obj.is_formula_field = _ApiClient.ApiClient.convertToType(data["is_formula_field"], "Boolean");
          if (data.hasOwnProperty("date_value"))
            obj.date_value = _CustomFieldBaseDateValue.CustomFieldBaseDateValue.constructFromObject(data["date_value"]);
          if (data.hasOwnProperty("enum_value"))
            obj.enum_value = _CustomFieldBaseEnumValue.CustomFieldBaseEnumValue.constructFromObject(data["enum_value"]);
          if (data.hasOwnProperty("multi_enum_values"))
            obj.multi_enum_values = _ApiClient.ApiClient.convertToType(data["multi_enum_values"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("number_value"))
            obj.number_value = _ApiClient.ApiClient.convertToType(data["number_value"], "Number");
          if (data.hasOwnProperty("text_value"))
            obj.text_value = _ApiClient.ApiClient.convertToType(data["text_value"], "String");
          if (data.hasOwnProperty("display_value"))
            obj.display_value = _ApiClient.ApiClient.convertToType(data["display_value"], "String");
          if (data.hasOwnProperty("description"))
            obj.description = _ApiClient.ApiClient.convertToType(data["description"], "String");
          if (data.hasOwnProperty("precision"))
            obj.precision = _ApiClient.ApiClient.convertToType(data["precision"], "Number");
          if (data.hasOwnProperty("format"))
            obj.format = _ApiClient.ApiClient.convertToType(data["format"], "String");
          if (data.hasOwnProperty("currency_code"))
            obj.currency_code = _ApiClient.ApiClient.convertToType(data["currency_code"], "String");
          if (data.hasOwnProperty("custom_label"))
            obj.custom_label = _ApiClient.ApiClient.convertToType(data["custom_label"], "String");
          if (data.hasOwnProperty("custom_label_position"))
            obj.custom_label_position = _ApiClient.ApiClient.convertToType(data["custom_label_position"], "String");
          if (data.hasOwnProperty("is_global_to_workspace"))
            obj.is_global_to_workspace = _ApiClient.ApiClient.convertToType(data["is_global_to_workspace"], "Boolean");
          if (data.hasOwnProperty("has_notifications_enabled"))
            obj.has_notifications_enabled = _ApiClient.ApiClient.convertToType(data["has_notifications_enabled"], "Boolean");
          if (data.hasOwnProperty("asana_created_field"))
            obj.asana_created_field = _ApiClient.ApiClient.convertToType(data["asana_created_field"], "String");
          if (data.hasOwnProperty("is_value_read_only"))
            obj.is_value_read_only = _ApiClient.ApiClient.convertToType(data["is_value_read_only"], "Boolean");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _CustomFieldResponseCreatedBy.CustomFieldResponseCreatedBy.constructFromObject(data["created_by"]);
          if (data.hasOwnProperty("people_value"))
            obj.people_value = _ApiClient.ApiClient.convertToType(data["people_value"], [_CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue]);
        }
        return obj;
      }
    }]);
    return CustomFieldResponse2;
  }();
  exports.CustomFieldResponse = CustomFieldResponse;
  CustomFieldResponse.prototype.gid = undefined;
  CustomFieldResponse.prototype.resource_type = undefined;
  CustomFieldResponse.prototype.name = undefined;
  CustomFieldResponse.ResourceSubtypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  CustomFieldResponse.prototype.resource_subtype = undefined;
  CustomFieldResponse.TypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  CustomFieldResponse.prototype.type = undefined;
  CustomFieldResponse.prototype.enum_options = undefined;
  CustomFieldResponse.prototype.enabled = undefined;
  CustomFieldResponse.prototype.is_formula_field = undefined;
  CustomFieldResponse.prototype.date_value = undefined;
  CustomFieldResponse.prototype.enum_value = undefined;
  CustomFieldResponse.prototype.multi_enum_values = undefined;
  CustomFieldResponse.prototype.number_value = undefined;
  CustomFieldResponse.prototype.text_value = undefined;
  CustomFieldResponse.prototype.display_value = undefined;
  CustomFieldResponse.prototype.description = undefined;
  CustomFieldResponse.prototype.precision = undefined;
  CustomFieldResponse.FormatEnum = {
    currency: "currency",
    identifier: "identifier",
    percentage: "percentage",
    custom: "custom",
    duration: "duration",
    none: "none"
  };
  CustomFieldResponse.prototype.format = undefined;
  CustomFieldResponse.prototype.currency_code = undefined;
  CustomFieldResponse.prototype.custom_label = undefined;
  CustomFieldResponse.CustomLabelPositionEnum = {
    prefix: "prefix",
    suffix: "suffix",
    _null: "null"
  };
  CustomFieldResponse.prototype.custom_label_position = undefined;
  CustomFieldResponse.prototype.is_global_to_workspace = undefined;
  CustomFieldResponse.prototype.has_notifications_enabled = undefined;
  CustomFieldResponse.AsanaCreatedFieldEnum = {
    a_v_requirements: "a_v_requirements",
    account_name: "account_name",
    actionable: "actionable",
    align_shipping_link: "align_shipping_link",
    align_status: "align_status",
    allotted_time: "allotted_time",
    appointment: "appointment",
    approval_stage: "approval_stage",
    approved: "approved",
    article_series: "article_series",
    board_committee: "board_committee",
    browser: "browser",
    campaign_audience: "campaign_audience",
    campaign_project_status: "campaign_project_status",
    campaign_regions: "campaign_regions",
    channel_primary: "channel_primary",
    client_topic_type: "client_topic_type",
    complete_by: "complete_by",
    contact: "contact",
    contact_email_address: "contact_email_address",
    content_channels: "content_channels",
    content_channels_needed: "content_channels_needed",
    content_stage: "content_stage",
    content_type: "content_type",
    contract: "contract",
    contract_status: "contract_status",
    cost: "cost",
    creation_stage: "creation_stage",
    creative_channel: "creative_channel",
    creative_needed: "creative_needed",
    creative_needs: "creative_needs",
    data_sensitivity: "data_sensitivity",
    deal_size: "deal_size",
    delivery_appt: "delivery_appt",
    delivery_appt_date: "delivery_appt_date",
    department: "department",
    department_responsible: "department_responsible",
    design_request_needed: "design_request_needed",
    design_request_type: "design_request_type",
    discussion_category: "discussion_category",
    do_this_task: "do_this_task",
    editorial_content_status: "editorial_content_status",
    editorial_content_tag: "editorial_content_tag",
    editorial_content_type: "editorial_content_type",
    effort: "effort",
    effort_level: "effort_level",
    est_completion_date: "est_completion_date",
    estimated_time: "estimated_time",
    estimated_value: "estimated_value",
    expected_cost: "expected_cost",
    external_steps_needed: "external_steps_needed",
    favorite_idea: "favorite_idea",
    feedback_type: "feedback_type",
    financial: "financial",
    funding_amount: "funding_amount",
    grant_application_process: "grant_application_process",
    hiring_candidate_status: "hiring_candidate_status",
    idea_status: "idea_status",
    ids_link: "ids_link",
    ids_patient_link: "ids_patient_link",
    implementation_stage: "implementation_stage",
    insurance: "insurance",
    interview_area: "interview_area",
    interview_question_score: "interview_question_score",
    itero_scan_link: "itero_scan_link",
    job_s_applied_to: "job_s_applied_to",
    lab: "lab",
    launch_status: "launch_status",
    lead_status: "lead_status",
    localization_language: "localization_language",
    localization_market_team: "localization_market_team",
    localization_status: "localization_status",
    meeting_minutes: "meeting_minutes",
    meeting_needed: "meeting_needed",
    minutes: "minutes",
    mrr: "mrr",
    must_localize: "must_localize",
    name_of_foundation: "name_of_foundation",
    need_to_follow_up: "need_to_follow_up",
    next_appointment: "next_appointment",
    next_steps_sales: "next_steps_sales",
    num_people: "num_people",
    number_of_user_reports: "number_of_user_reports",
    office_location: "office_location",
    onboarding_activity: "onboarding_activity",
    owner: "owner",
    participants_needed: "participants_needed",
    patient_date_of_birth: "patient_date_of_birth",
    patient_email: "patient_email",
    patient_phone: "patient_phone",
    patient_status: "patient_status",
    phone_number: "phone_number",
    planning_category: "planning_category",
    point_of_contact: "point_of_contact",
    position: "position",
    post_format: "post_format",
    prescription: "prescription",
    priority: "priority",
    priority_level: "priority_level",
    product: "product",
    product_stage: "product_stage",
    progress: "progress",
    project_size: "project_size",
    project_status: "project_status",
    proposed_budget: "proposed_budget",
    publish_status: "publish_status",
    reason_for_scan: "reason_for_scan",
    referral: "referral",
    request_type: "request_type",
    research_status: "research_status",
    responsible_department: "responsible_department",
    responsible_team: "responsible_team",
    risk_assessment_status: "risk_assessment_status",
    room_name: "room_name",
    sales_counterpart: "sales_counterpart",
    sentiment: "sentiment",
    shipping_link: "shipping_link",
    social_channels: "social_channels",
    stage: "stage",
    status: "status",
    status_design: "status_design",
    status_of_initiative: "status_of_initiative",
    system_setup: "system_setup",
    task_progress: "task_progress",
    team: "team",
    team_marketing: "team_marketing",
    team_responsible: "team_responsible",
    time_it_takes_to_complete_tasks: "time_it_takes_to_complete_tasks",
    timeframe: "timeframe",
    treatment_type: "treatment_type",
    type_work_requests_it: "type_work_requests_it",
    use_agency: "use_agency",
    user_name: "user_name",
    vendor_category: "vendor_category",
    vendor_type: "vendor_type",
    word_count: "word_count",
    _null: "null"
  };
  CustomFieldResponse.prototype.asana_created_field = undefined;
  CustomFieldResponse.prototype.is_value_read_only = undefined;
  CustomFieldResponse.prototype.created_by = undefined;
  CustomFieldResponse.prototype.people_value = undefined;
});

// node_modules/asana/dist/model/CustomFieldResponseArray.js
var require_CustomFieldResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponse = require_CustomFieldResponse();
  var _NextPage = require_NextPage();
  var CustomFieldResponseArray = function() {
    function CustomFieldResponseArray2(data) {
      _classCallCheck(this, CustomFieldResponseArray2);
      this.data = data;
    }
    _createClass(CustomFieldResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_CustomFieldResponse.CustomFieldResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return CustomFieldResponseArray2;
  }();
  exports.CustomFieldResponseArray = CustomFieldResponseArray;
  CustomFieldResponseArray.prototype.data = undefined;
  CustomFieldResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/CustomFieldResponseData.js
var require_CustomFieldResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponse = require_CustomFieldResponse();
  var CustomFieldResponseData = function() {
    function CustomFieldResponseData2(data) {
      _classCallCheck(this, CustomFieldResponseData2);
      this.data = data;
    }
    _createClass(CustomFieldResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _CustomFieldResponse.CustomFieldResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return CustomFieldResponseData2;
  }();
  exports.CustomFieldResponseData = CustomFieldResponseData;
  CustomFieldResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/CustomFieldSettingBase.js
var require_CustomFieldSettingBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldSettingBase = undefined;
  var _ApiClient = require_ApiClient();
  var CustomFieldSettingBase = function() {
    function CustomFieldSettingBase2() {
      _classCallCheck(this, CustomFieldSettingBase2);
    }
    _createClass(CustomFieldSettingBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldSettingBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
        }
        return obj;
      }
    }]);
    return CustomFieldSettingBase2;
  }();
  exports.CustomFieldSettingBase = CustomFieldSettingBase;
  CustomFieldSettingBase.prototype.gid = undefined;
  CustomFieldSettingBase.prototype.resource_type = undefined;
});

// node_modules/asana/dist/model/CustomFieldSettingCompact.js
var require_CustomFieldSettingCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldSettingCompact = undefined;
  var _ApiClient = require_ApiClient();
  var CustomFieldSettingCompact = function() {
    function CustomFieldSettingCompact2() {
      _classCallCheck(this, CustomFieldSettingCompact2);
    }
    _createClass(CustomFieldSettingCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldSettingCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
        }
        return obj;
      }
    }]);
    return CustomFieldSettingCompact2;
  }();
  exports.CustomFieldSettingCompact = CustomFieldSettingCompact;
  CustomFieldSettingCompact.prototype.gid = undefined;
  CustomFieldSettingCompact.prototype.resource_type = undefined;
});

// node_modules/asana/dist/model/CustomFieldSettingResponseCustomField.js
var require_CustomFieldSettingResponseCustomField = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldSettingResponseCustomField = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldBaseDateValue = require_CustomFieldBaseDateValue();
  var _CustomFieldBaseEnumOptions = require_CustomFieldBaseEnumOptions();
  var _CustomFieldBaseEnumValue = require_CustomFieldBaseEnumValue();
  var _CustomFieldResponseCreatedBy = require_CustomFieldResponseCreatedBy();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var CustomFieldSettingResponseCustomField = function() {
    function CustomFieldSettingResponseCustomField2() {
      _classCallCheck(this, CustomFieldSettingResponseCustomField2);
    }
    _createClass(CustomFieldSettingResponseCustomField2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldSettingResponseCustomField2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("type"))
            obj.type = _ApiClient.ApiClient.convertToType(data["type"], "String");
          if (data.hasOwnProperty("enum_options"))
            obj.enum_options = _ApiClient.ApiClient.convertToType(data["enum_options"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("enabled"))
            obj.enabled = _ApiClient.ApiClient.convertToType(data["enabled"], "Boolean");
          if (data.hasOwnProperty("is_formula_field"))
            obj.is_formula_field = _ApiClient.ApiClient.convertToType(data["is_formula_field"], "Boolean");
          if (data.hasOwnProperty("date_value"))
            obj.date_value = _CustomFieldBaseDateValue.CustomFieldBaseDateValue.constructFromObject(data["date_value"]);
          if (data.hasOwnProperty("enum_value"))
            obj.enum_value = _CustomFieldBaseEnumValue.CustomFieldBaseEnumValue.constructFromObject(data["enum_value"]);
          if (data.hasOwnProperty("multi_enum_values"))
            obj.multi_enum_values = _ApiClient.ApiClient.convertToType(data["multi_enum_values"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("number_value"))
            obj.number_value = _ApiClient.ApiClient.convertToType(data["number_value"], "Number");
          if (data.hasOwnProperty("text_value"))
            obj.text_value = _ApiClient.ApiClient.convertToType(data["text_value"], "String");
          if (data.hasOwnProperty("display_value"))
            obj.display_value = _ApiClient.ApiClient.convertToType(data["display_value"], "String");
          if (data.hasOwnProperty("description"))
            obj.description = _ApiClient.ApiClient.convertToType(data["description"], "String");
          if (data.hasOwnProperty("precision"))
            obj.precision = _ApiClient.ApiClient.convertToType(data["precision"], "Number");
          if (data.hasOwnProperty("format"))
            obj.format = _ApiClient.ApiClient.convertToType(data["format"], "String");
          if (data.hasOwnProperty("currency_code"))
            obj.currency_code = _ApiClient.ApiClient.convertToType(data["currency_code"], "String");
          if (data.hasOwnProperty("custom_label"))
            obj.custom_label = _ApiClient.ApiClient.convertToType(data["custom_label"], "String");
          if (data.hasOwnProperty("custom_label_position"))
            obj.custom_label_position = _ApiClient.ApiClient.convertToType(data["custom_label_position"], "String");
          if (data.hasOwnProperty("is_global_to_workspace"))
            obj.is_global_to_workspace = _ApiClient.ApiClient.convertToType(data["is_global_to_workspace"], "Boolean");
          if (data.hasOwnProperty("has_notifications_enabled"))
            obj.has_notifications_enabled = _ApiClient.ApiClient.convertToType(data["has_notifications_enabled"], "Boolean");
          if (data.hasOwnProperty("asana_created_field"))
            obj.asana_created_field = _ApiClient.ApiClient.convertToType(data["asana_created_field"], "String");
          if (data.hasOwnProperty("is_value_read_only"))
            obj.is_value_read_only = _ApiClient.ApiClient.convertToType(data["is_value_read_only"], "Boolean");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _CustomFieldResponseCreatedBy.CustomFieldResponseCreatedBy.constructFromObject(data["created_by"]);
          if (data.hasOwnProperty("people_value"))
            obj.people_value = _ApiClient.ApiClient.convertToType(data["people_value"], [_CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue]);
        }
        return obj;
      }
    }]);
    return CustomFieldSettingResponseCustomField2;
  }();
  exports.CustomFieldSettingResponseCustomField = CustomFieldSettingResponseCustomField;
  CustomFieldSettingResponseCustomField.prototype.gid = undefined;
  CustomFieldSettingResponseCustomField.prototype.resource_type = undefined;
  CustomFieldSettingResponseCustomField.prototype.name = undefined;
  CustomFieldSettingResponseCustomField.ResourceSubtypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  CustomFieldSettingResponseCustomField.prototype.resource_subtype = undefined;
  CustomFieldSettingResponseCustomField.TypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  CustomFieldSettingResponseCustomField.prototype.type = undefined;
  CustomFieldSettingResponseCustomField.prototype.enum_options = undefined;
  CustomFieldSettingResponseCustomField.prototype.enabled = undefined;
  CustomFieldSettingResponseCustomField.prototype.is_formula_field = undefined;
  CustomFieldSettingResponseCustomField.prototype.date_value = undefined;
  CustomFieldSettingResponseCustomField.prototype.enum_value = undefined;
  CustomFieldSettingResponseCustomField.prototype.multi_enum_values = undefined;
  CustomFieldSettingResponseCustomField.prototype.number_value = undefined;
  CustomFieldSettingResponseCustomField.prototype.text_value = undefined;
  CustomFieldSettingResponseCustomField.prototype.display_value = undefined;
  CustomFieldSettingResponseCustomField.prototype.description = undefined;
  CustomFieldSettingResponseCustomField.prototype.precision = undefined;
  CustomFieldSettingResponseCustomField.FormatEnum = {
    currency: "currency",
    identifier: "identifier",
    percentage: "percentage",
    custom: "custom",
    duration: "duration",
    none: "none"
  };
  CustomFieldSettingResponseCustomField.prototype.format = undefined;
  CustomFieldSettingResponseCustomField.prototype.currency_code = undefined;
  CustomFieldSettingResponseCustomField.prototype.custom_label = undefined;
  CustomFieldSettingResponseCustomField.CustomLabelPositionEnum = {
    prefix: "prefix",
    suffix: "suffix",
    _null: "null"
  };
  CustomFieldSettingResponseCustomField.prototype.custom_label_position = undefined;
  CustomFieldSettingResponseCustomField.prototype.is_global_to_workspace = undefined;
  CustomFieldSettingResponseCustomField.prototype.has_notifications_enabled = undefined;
  CustomFieldSettingResponseCustomField.AsanaCreatedFieldEnum = {
    a_v_requirements: "a_v_requirements",
    account_name: "account_name",
    actionable: "actionable",
    align_shipping_link: "align_shipping_link",
    align_status: "align_status",
    allotted_time: "allotted_time",
    appointment: "appointment",
    approval_stage: "approval_stage",
    approved: "approved",
    article_series: "article_series",
    board_committee: "board_committee",
    browser: "browser",
    campaign_audience: "campaign_audience",
    campaign_project_status: "campaign_project_status",
    campaign_regions: "campaign_regions",
    channel_primary: "channel_primary",
    client_topic_type: "client_topic_type",
    complete_by: "complete_by",
    contact: "contact",
    contact_email_address: "contact_email_address",
    content_channels: "content_channels",
    content_channels_needed: "content_channels_needed",
    content_stage: "content_stage",
    content_type: "content_type",
    contract: "contract",
    contract_status: "contract_status",
    cost: "cost",
    creation_stage: "creation_stage",
    creative_channel: "creative_channel",
    creative_needed: "creative_needed",
    creative_needs: "creative_needs",
    data_sensitivity: "data_sensitivity",
    deal_size: "deal_size",
    delivery_appt: "delivery_appt",
    delivery_appt_date: "delivery_appt_date",
    department: "department",
    department_responsible: "department_responsible",
    design_request_needed: "design_request_needed",
    design_request_type: "design_request_type",
    discussion_category: "discussion_category",
    do_this_task: "do_this_task",
    editorial_content_status: "editorial_content_status",
    editorial_content_tag: "editorial_content_tag",
    editorial_content_type: "editorial_content_type",
    effort: "effort",
    effort_level: "effort_level",
    est_completion_date: "est_completion_date",
    estimated_time: "estimated_time",
    estimated_value: "estimated_value",
    expected_cost: "expected_cost",
    external_steps_needed: "external_steps_needed",
    favorite_idea: "favorite_idea",
    feedback_type: "feedback_type",
    financial: "financial",
    funding_amount: "funding_amount",
    grant_application_process: "grant_application_process",
    hiring_candidate_status: "hiring_candidate_status",
    idea_status: "idea_status",
    ids_link: "ids_link",
    ids_patient_link: "ids_patient_link",
    implementation_stage: "implementation_stage",
    insurance: "insurance",
    interview_area: "interview_area",
    interview_question_score: "interview_question_score",
    itero_scan_link: "itero_scan_link",
    job_s_applied_to: "job_s_applied_to",
    lab: "lab",
    launch_status: "launch_status",
    lead_status: "lead_status",
    localization_language: "localization_language",
    localization_market_team: "localization_market_team",
    localization_status: "localization_status",
    meeting_minutes: "meeting_minutes",
    meeting_needed: "meeting_needed",
    minutes: "minutes",
    mrr: "mrr",
    must_localize: "must_localize",
    name_of_foundation: "name_of_foundation",
    need_to_follow_up: "need_to_follow_up",
    next_appointment: "next_appointment",
    next_steps_sales: "next_steps_sales",
    num_people: "num_people",
    number_of_user_reports: "number_of_user_reports",
    office_location: "office_location",
    onboarding_activity: "onboarding_activity",
    owner: "owner",
    participants_needed: "participants_needed",
    patient_date_of_birth: "patient_date_of_birth",
    patient_email: "patient_email",
    patient_phone: "patient_phone",
    patient_status: "patient_status",
    phone_number: "phone_number",
    planning_category: "planning_category",
    point_of_contact: "point_of_contact",
    position: "position",
    post_format: "post_format",
    prescription: "prescription",
    priority: "priority",
    priority_level: "priority_level",
    product: "product",
    product_stage: "product_stage",
    progress: "progress",
    project_size: "project_size",
    project_status: "project_status",
    proposed_budget: "proposed_budget",
    publish_status: "publish_status",
    reason_for_scan: "reason_for_scan",
    referral: "referral",
    request_type: "request_type",
    research_status: "research_status",
    responsible_department: "responsible_department",
    responsible_team: "responsible_team",
    risk_assessment_status: "risk_assessment_status",
    room_name: "room_name",
    sales_counterpart: "sales_counterpart",
    sentiment: "sentiment",
    shipping_link: "shipping_link",
    social_channels: "social_channels",
    stage: "stage",
    status: "status",
    status_design: "status_design",
    status_of_initiative: "status_of_initiative",
    system_setup: "system_setup",
    task_progress: "task_progress",
    team: "team",
    team_marketing: "team_marketing",
    team_responsible: "team_responsible",
    time_it_takes_to_complete_tasks: "time_it_takes_to_complete_tasks",
    timeframe: "timeframe",
    treatment_type: "treatment_type",
    type_work_requests_it: "type_work_requests_it",
    use_agency: "use_agency",
    user_name: "user_name",
    vendor_category: "vendor_category",
    vendor_type: "vendor_type",
    word_count: "word_count",
    _null: "null"
  };
  CustomFieldSettingResponseCustomField.prototype.asana_created_field = undefined;
  CustomFieldSettingResponseCustomField.prototype.is_value_read_only = undefined;
  CustomFieldSettingResponseCustomField.prototype.created_by = undefined;
  CustomFieldSettingResponseCustomField.prototype.people_value = undefined;
});

// node_modules/asana/dist/model/CustomFieldSettingResponseParent.js
var require_CustomFieldSettingResponseParent = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldSettingResponseParent = undefined;
  var _ApiClient = require_ApiClient();
  var CustomFieldSettingResponseParent = function() {
    function CustomFieldSettingResponseParent2() {
      _classCallCheck(this, CustomFieldSettingResponseParent2);
    }
    _createClass(CustomFieldSettingResponseParent2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldSettingResponseParent2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return CustomFieldSettingResponseParent2;
  }();
  exports.CustomFieldSettingResponseParent = CustomFieldSettingResponseParent;
  CustomFieldSettingResponseParent.prototype.gid = undefined;
  CustomFieldSettingResponseParent.prototype.resource_type = undefined;
  CustomFieldSettingResponseParent.prototype.name = undefined;
});

// node_modules/asana/dist/model/CustomFieldSettingResponseProject.js
var require_CustomFieldSettingResponseProject = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldSettingResponseProject = undefined;
  var _ApiClient = require_ApiClient();
  var CustomFieldSettingResponseProject = function() {
    function CustomFieldSettingResponseProject2() {
      _classCallCheck(this, CustomFieldSettingResponseProject2);
    }
    _createClass(CustomFieldSettingResponseProject2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldSettingResponseProject2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return CustomFieldSettingResponseProject2;
  }();
  exports.CustomFieldSettingResponseProject = CustomFieldSettingResponseProject;
  CustomFieldSettingResponseProject.prototype.gid = undefined;
  CustomFieldSettingResponseProject.prototype.resource_type = undefined;
  CustomFieldSettingResponseProject.prototype.name = undefined;
});

// node_modules/asana/dist/model/CustomFieldSettingResponse.js
var require_CustomFieldSettingResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldSettingResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldSettingResponseCustomField = require_CustomFieldSettingResponseCustomField();
  var _CustomFieldSettingResponseParent = require_CustomFieldSettingResponseParent();
  var _CustomFieldSettingResponseProject = require_CustomFieldSettingResponseProject();
  var CustomFieldSettingResponse = function() {
    function CustomFieldSettingResponse2() {
      _classCallCheck(this, CustomFieldSettingResponse2);
    }
    _createClass(CustomFieldSettingResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldSettingResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("project"))
            obj.project = _CustomFieldSettingResponseProject.CustomFieldSettingResponseProject.constructFromObject(data["project"]);
          if (data.hasOwnProperty("is_important"))
            obj.is_important = _ApiClient.ApiClient.convertToType(data["is_important"], "Boolean");
          if (data.hasOwnProperty("parent"))
            obj.parent = _CustomFieldSettingResponseParent.CustomFieldSettingResponseParent.constructFromObject(data["parent"]);
          if (data.hasOwnProperty("custom_field"))
            obj.custom_field = _CustomFieldSettingResponseCustomField.CustomFieldSettingResponseCustomField.constructFromObject(data["custom_field"]);
        }
        return obj;
      }
    }]);
    return CustomFieldSettingResponse2;
  }();
  exports.CustomFieldSettingResponse = CustomFieldSettingResponse;
  CustomFieldSettingResponse.prototype.gid = undefined;
  CustomFieldSettingResponse.prototype.resource_type = undefined;
  CustomFieldSettingResponse.prototype.project = undefined;
  CustomFieldSettingResponse.prototype.is_important = undefined;
  CustomFieldSettingResponse.prototype.parent = undefined;
  CustomFieldSettingResponse.prototype.custom_field = undefined;
});

// node_modules/asana/dist/model/CustomFieldSettingResponseArray.js
var require_CustomFieldSettingResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldSettingResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldSettingResponse = require_CustomFieldSettingResponse();
  var _NextPage = require_NextPage();
  var CustomFieldSettingResponseArray = function() {
    function CustomFieldSettingResponseArray2(data) {
      _classCallCheck(this, CustomFieldSettingResponseArray2);
      this.data = data;
    }
    _createClass(CustomFieldSettingResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldSettingResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_CustomFieldSettingResponse.CustomFieldSettingResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return CustomFieldSettingResponseArray2;
  }();
  exports.CustomFieldSettingResponseArray = CustomFieldSettingResponseArray;
  CustomFieldSettingResponseArray.prototype.data = undefined;
  CustomFieldSettingResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/CustomFieldSettingResponseData.js
var require_CustomFieldSettingResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldSettingResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldSettingResponse = require_CustomFieldSettingResponse();
  var CustomFieldSettingResponseData = function() {
    function CustomFieldSettingResponseData2(data) {
      _classCallCheck(this, CustomFieldSettingResponseData2);
      this.data = data;
    }
    _createClass(CustomFieldSettingResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldSettingResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _CustomFieldSettingResponse.CustomFieldSettingResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return CustomFieldSettingResponseData2;
  }();
  exports.CustomFieldSettingResponseData = CustomFieldSettingResponseData;
  CustomFieldSettingResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/CustomFieldsBody.js
var require_CustomFieldsBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldsBody = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldRequest = require_CustomFieldRequest();
  var CustomFieldsBody = function() {
    function CustomFieldsBody2() {
      _classCallCheck(this, CustomFieldsBody2);
    }
    _createClass(CustomFieldsBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldsBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _CustomFieldRequest.CustomFieldRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return CustomFieldsBody2;
  }();
  exports.CustomFieldsBody = CustomFieldsBody;
  CustomFieldsBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/CustomFieldsCustomFieldGidBody.js
var require_CustomFieldsCustomFieldGidBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldsCustomFieldGidBody = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldRequest = require_CustomFieldRequest();
  var CustomFieldsCustomFieldGidBody = function() {
    function CustomFieldsCustomFieldGidBody2() {
      _classCallCheck(this, CustomFieldsCustomFieldGidBody2);
    }
    _createClass(CustomFieldsCustomFieldGidBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new CustomFieldsCustomFieldGidBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _CustomFieldRequest.CustomFieldRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return CustomFieldsCustomFieldGidBody2;
  }();
  exports.CustomFieldsCustomFieldGidBody = CustomFieldsCustomFieldGidBody;
  CustomFieldsCustomFieldGidBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/DateVariableCompact.js
var require_DateVariableCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.DateVariableCompact = undefined;
  var _ApiClient = require_ApiClient();
  var DateVariableCompact = function() {
    function DateVariableCompact2() {
      _classCallCheck(this, DateVariableCompact2);
    }
    _createClass(DateVariableCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new DateVariableCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("description"))
            obj.description = _ApiClient.ApiClient.convertToType(data["description"], "String");
        }
        return obj;
      }
    }]);
    return DateVariableCompact2;
  }();
  exports.DateVariableCompact = DateVariableCompact;
  DateVariableCompact.prototype.gid = undefined;
  DateVariableCompact.prototype.name = undefined;
  DateVariableCompact.prototype.description = undefined;
});

// node_modules/asana/dist/model/DateVariableRequest.js
var require_DateVariableRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.DateVariableRequest = undefined;
  var _ApiClient = require_ApiClient();
  var DateVariableRequest = function() {
    function DateVariableRequest2() {
      _classCallCheck(this, DateVariableRequest2);
    }
    _createClass(DateVariableRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new DateVariableRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("value"))
            obj.value = _ApiClient.ApiClient.convertToType(data["value"], "Date");
        }
        return obj;
      }
    }]);
    return DateVariableRequest2;
  }();
  exports.DateVariableRequest = DateVariableRequest;
  DateVariableRequest.prototype.gid = undefined;
  DateVariableRequest.prototype.value = undefined;
});

// node_modules/asana/dist/model/EmptyResponse.js
var require_EmptyResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EmptyResponse = undefined;
  var _ApiClient = require_ApiClient();
  var EmptyResponse = function() {
    function EmptyResponse2() {
      _classCallCheck(this, EmptyResponse2);
    }
    _createClass(EmptyResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new EmptyResponse2;
        }
        return obj;
      }
    }]);
    return EmptyResponse2;
  }();
  exports.EmptyResponse = EmptyResponse;
});

// node_modules/asana/dist/model/EmptyResponseData.js
var require_EmptyResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EmptyResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponse = require_EmptyResponse();
  var EmptyResponseData = function() {
    function EmptyResponseData2(data) {
      _classCallCheck(this, EmptyResponseData2);
      this.data = data;
    }
    _createClass(EmptyResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new EmptyResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _EmptyResponse.EmptyResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return EmptyResponseData2;
  }();
  exports.EmptyResponseData = EmptyResponseData;
  EmptyResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/EnumOption.js
var require_EnumOption = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EnumOption = undefined;
  var _ApiClient = require_ApiClient();
  var EnumOption = function() {
    function EnumOption2() {
      _classCallCheck(this, EnumOption2);
    }
    _createClass(EnumOption2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new EnumOption2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("enabled"))
            obj.enabled = _ApiClient.ApiClient.convertToType(data["enabled"], "Boolean");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
        }
        return obj;
      }
    }]);
    return EnumOption2;
  }();
  exports.EnumOption = EnumOption;
  EnumOption.prototype.gid = undefined;
  EnumOption.prototype.resource_type = undefined;
  EnumOption.prototype.name = undefined;
  EnumOption.prototype.enabled = undefined;
  EnumOption.prototype.color = undefined;
});

// node_modules/asana/dist/model/EnumOptionBase.js
var require_EnumOptionBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EnumOptionBase = undefined;
  var _ApiClient = require_ApiClient();
  var EnumOptionBase = function() {
    function EnumOptionBase2() {
      _classCallCheck(this, EnumOptionBase2);
    }
    _createClass(EnumOptionBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new EnumOptionBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("enabled"))
            obj.enabled = _ApiClient.ApiClient.convertToType(data["enabled"], "Boolean");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
        }
        return obj;
      }
    }]);
    return EnumOptionBase2;
  }();
  exports.EnumOptionBase = EnumOptionBase;
  EnumOptionBase.prototype.gid = undefined;
  EnumOptionBase.prototype.resource_type = undefined;
  EnumOptionBase.prototype.name = undefined;
  EnumOptionBase.prototype.enabled = undefined;
  EnumOptionBase.prototype.color = undefined;
});

// node_modules/asana/dist/model/EnumOptionData.js
var require_EnumOptionData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EnumOptionData = undefined;
  var _ApiClient = require_ApiClient();
  var _EnumOption = require_EnumOption();
  var EnumOptionData = function() {
    function EnumOptionData2(data) {
      _classCallCheck(this, EnumOptionData2);
      this.data = data;
    }
    _createClass(EnumOptionData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new EnumOptionData2;
          if (data.hasOwnProperty("data"))
            obj.data = _EnumOption.EnumOption.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return EnumOptionData2;
  }();
  exports.EnumOptionData = EnumOptionData;
  EnumOptionData.prototype.data = undefined;
});

// node_modules/asana/dist/model/EnumOptionInsertRequest.js
var require_EnumOptionInsertRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EnumOptionInsertRequest = undefined;
  var _ApiClient = require_ApiClient();
  var EnumOptionInsertRequest = function() {
    function EnumOptionInsertRequest2(enum_option) {
      _classCallCheck(this, EnumOptionInsertRequest2);
      this.enum_option = enum_option;
    }
    _createClass(EnumOptionInsertRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new EnumOptionInsertRequest2;
          if (data.hasOwnProperty("enum_option"))
            obj.enum_option = _ApiClient.ApiClient.convertToType(data["enum_option"], "String");
          if (data.hasOwnProperty("before_enum_option"))
            obj.before_enum_option = _ApiClient.ApiClient.convertToType(data["before_enum_option"], "String");
          if (data.hasOwnProperty("after_enum_option"))
            obj.after_enum_option = _ApiClient.ApiClient.convertToType(data["after_enum_option"], "String");
        }
        return obj;
      }
    }]);
    return EnumOptionInsertRequest2;
  }();
  exports.EnumOptionInsertRequest = EnumOptionInsertRequest;
  EnumOptionInsertRequest.prototype.enum_option = undefined;
  EnumOptionInsertRequest.prototype.before_enum_option = undefined;
  EnumOptionInsertRequest.prototype.after_enum_option = undefined;
});

// node_modules/asana/dist/model/EnumOptionsEnumOptionGidBody.js
var require_EnumOptionsEnumOptionGidBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EnumOptionsEnumOptionGidBody = undefined;
  var _ApiClient = require_ApiClient();
  var _EnumOptionBase = require_EnumOptionBase();
  var EnumOptionsEnumOptionGidBody = function() {
    function EnumOptionsEnumOptionGidBody2() {
      _classCallCheck(this, EnumOptionsEnumOptionGidBody2);
    }
    _createClass(EnumOptionsEnumOptionGidBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new EnumOptionsEnumOptionGidBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _EnumOptionBase.EnumOptionBase.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return EnumOptionsEnumOptionGidBody2;
  }();
  exports.EnumOptionsEnumOptionGidBody = EnumOptionsEnumOptionGidBody;
  EnumOptionsEnumOptionGidBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/EnumOptionsInsertBody.js
var require_EnumOptionsInsertBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EnumOptionsInsertBody = undefined;
  var _ApiClient = require_ApiClient();
  var _EnumOptionInsertRequest = require_EnumOptionInsertRequest();
  var EnumOptionsInsertBody = function() {
    function EnumOptionsInsertBody2() {
      _classCallCheck(this, EnumOptionsInsertBody2);
    }
    _createClass(EnumOptionsInsertBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new EnumOptionsInsertBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _EnumOptionInsertRequest.EnumOptionInsertRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return EnumOptionsInsertBody2;
  }();
  exports.EnumOptionsInsertBody = EnumOptionsInsertBody;
  EnumOptionsInsertBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/Error.js
var require_Error = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Error = undefined;
  var _ApiClient = require_ApiClient();
  var Error2 = function() {
    function Error3() {
      _classCallCheck(this, Error3);
    }
    _createClass(Error3, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new Error3;
          if (data.hasOwnProperty("message"))
            obj.message = _ApiClient.ApiClient.convertToType(data["message"], "String");
          if (data.hasOwnProperty("help"))
            obj.help = _ApiClient.ApiClient.convertToType(data["help"], "String");
          if (data.hasOwnProperty("phrase"))
            obj.phrase = _ApiClient.ApiClient.convertToType(data["phrase"], "String");
        }
        return obj;
      }
    }]);
    return Error3;
  }();
  exports.Error = Error2;
  Error2.prototype.message = undefined;
  Error2.prototype.help = undefined;
  Error2.prototype.phrase = undefined;
});

// node_modules/asana/dist/model/ErrorResponseErrors.js
var require_ErrorResponseErrors = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ErrorResponseErrors = undefined;
  var _ApiClient = require_ApiClient();
  var ErrorResponseErrors = function() {
    function ErrorResponseErrors2() {
      _classCallCheck(this, ErrorResponseErrors2);
    }
    _createClass(ErrorResponseErrors2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ErrorResponseErrors2;
          if (data.hasOwnProperty("message"))
            obj.message = _ApiClient.ApiClient.convertToType(data["message"], "String");
          if (data.hasOwnProperty("help"))
            obj.help = _ApiClient.ApiClient.convertToType(data["help"], "String");
          if (data.hasOwnProperty("phrase"))
            obj.phrase = _ApiClient.ApiClient.convertToType(data["phrase"], "String");
        }
        return obj;
      }
    }]);
    return ErrorResponseErrors2;
  }();
  exports.ErrorResponseErrors = ErrorResponseErrors;
  ErrorResponseErrors.prototype.message = undefined;
  ErrorResponseErrors.prototype.help = undefined;
  ErrorResponseErrors.prototype.phrase = undefined;
});

// node_modules/asana/dist/model/ErrorResponse.js
var require_ErrorResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ErrorResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _ErrorResponseErrors = require_ErrorResponseErrors();
  var ErrorResponse = function() {
    function ErrorResponse2() {
      _classCallCheck(this, ErrorResponse2);
    }
    _createClass(ErrorResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ErrorResponse2;
          if (data.hasOwnProperty("errors"))
            obj.errors = _ApiClient.ApiClient.convertToType(data["errors"], [_ErrorResponseErrors.ErrorResponseErrors]);
        }
        return obj;
      }
    }]);
    return ErrorResponse2;
  }();
  exports.ErrorResponse = ErrorResponse;
  ErrorResponse.prototype.errors = undefined;
});

// node_modules/asana/dist/model/EventResponseChange.js
var require_EventResponseChange = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EventResponseChange = undefined;
  var _ApiClient = require_ApiClient();
  var EventResponseChange = function() {
    function EventResponseChange2() {
      _classCallCheck(this, EventResponseChange2);
    }
    _createClass(EventResponseChange2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new EventResponseChange2;
          if (data.hasOwnProperty("field"))
            obj.field = _ApiClient.ApiClient.convertToType(data["field"], "String");
          if (data.hasOwnProperty("action"))
            obj.action = _ApiClient.ApiClient.convertToType(data["action"], "String");
          if (data.hasOwnProperty("new_value"))
            obj.new_value = _ApiClient.ApiClient.convertToType(data["new_value"], Object);
          if (data.hasOwnProperty("added_value"))
            obj.added_value = _ApiClient.ApiClient.convertToType(data["added_value"], Object);
          if (data.hasOwnProperty("removed_value"))
            obj.removed_value = _ApiClient.ApiClient.convertToType(data["removed_value"], Object);
        }
        return obj;
      }
    }]);
    return EventResponseChange2;
  }();
  exports.EventResponseChange = EventResponseChange;
  EventResponseChange.prototype.field = undefined;
  EventResponseChange.prototype.action = undefined;
  EventResponseChange.prototype.new_value = undefined;
  EventResponseChange.prototype.added_value = undefined;
  EventResponseChange.prototype.removed_value = undefined;
});

// node_modules/asana/dist/model/EventResponseParent.js
var require_EventResponseParent = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EventResponseParent = undefined;
  var _ApiClient = require_ApiClient();
  var EventResponseParent = function() {
    function EventResponseParent2() {
      _classCallCheck(this, EventResponseParent2);
    }
    _createClass(EventResponseParent2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new EventResponseParent2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return EventResponseParent2;
  }();
  exports.EventResponseParent = EventResponseParent;
  EventResponseParent.prototype.gid = undefined;
  EventResponseParent.prototype.resource_type = undefined;
  EventResponseParent.prototype.name = undefined;
});

// node_modules/asana/dist/model/EventResponseResource.js
var require_EventResponseResource = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EventResponseResource = undefined;
  var _ApiClient = require_ApiClient();
  var EventResponseResource = function() {
    function EventResponseResource2() {
      _classCallCheck(this, EventResponseResource2);
    }
    _createClass(EventResponseResource2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new EventResponseResource2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return EventResponseResource2;
  }();
  exports.EventResponseResource = EventResponseResource;
  EventResponseResource.prototype.gid = undefined;
  EventResponseResource.prototype.resource_type = undefined;
  EventResponseResource.prototype.name = undefined;
});

// node_modules/asana/dist/model/EventResponseUser.js
var require_EventResponseUser = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EventResponseUser = undefined;
  var _ApiClient = require_ApiClient();
  var EventResponseUser = function() {
    function EventResponseUser2() {
      _classCallCheck(this, EventResponseUser2);
    }
    _createClass(EventResponseUser2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new EventResponseUser2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return EventResponseUser2;
  }();
  exports.EventResponseUser = EventResponseUser;
  EventResponseUser.prototype.gid = undefined;
  EventResponseUser.prototype.resource_type = undefined;
  EventResponseUser.prototype.name = undefined;
});

// node_modules/asana/dist/model/EventResponse.js
var require_EventResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EventResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _EventResponseChange = require_EventResponseChange();
  var _EventResponseParent = require_EventResponseParent();
  var _EventResponseResource = require_EventResponseResource();
  var _EventResponseUser = require_EventResponseUser();
  var EventResponse = function() {
    function EventResponse2() {
      _classCallCheck(this, EventResponse2);
    }
    _createClass(EventResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new EventResponse2;
          if (data.hasOwnProperty("user"))
            obj.user = _EventResponseUser.EventResponseUser.constructFromObject(data["user"]);
          if (data.hasOwnProperty("resource"))
            obj.resource = _EventResponseResource.EventResponseResource.constructFromObject(data["resource"]);
          if (data.hasOwnProperty("type"))
            obj.type = _ApiClient.ApiClient.convertToType(data["type"], "String");
          if (data.hasOwnProperty("action"))
            obj.action = _ApiClient.ApiClient.convertToType(data["action"], "String");
          if (data.hasOwnProperty("parent"))
            obj.parent = _EventResponseParent.EventResponseParent.constructFromObject(data["parent"]);
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("change"))
            obj.change = _EventResponseChange.EventResponseChange.constructFromObject(data["change"]);
        }
        return obj;
      }
    }]);
    return EventResponse2;
  }();
  exports.EventResponse = EventResponse;
  EventResponse.prototype.user = undefined;
  EventResponse.prototype.resource = undefined;
  EventResponse.prototype.type = undefined;
  EventResponse.prototype.action = undefined;
  EventResponse.prototype.parent = undefined;
  EventResponse.prototype.created_at = undefined;
  EventResponse.prototype.change = undefined;
});

// node_modules/asana/dist/model/EventResponseArray.js
var require_EventResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EventResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _EventResponse = require_EventResponse();
  var _NextPage = require_NextPage();
  var EventResponseArray = function() {
    function EventResponseArray2(data) {
      _classCallCheck(this, EventResponseArray2);
      this.data = data;
    }
    _createClass(EventResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new EventResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_EventResponse.EventResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return EventResponseArray2;
  }();
  exports.EventResponseArray = EventResponseArray;
  EventResponseArray.prototype.data = undefined;
  EventResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/GoalAddSubgoalRequest.js
var require_GoalAddSubgoalRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalAddSubgoalRequest = undefined;
  var _ApiClient = require_ApiClient();
  var GoalAddSubgoalRequest = function() {
    function GoalAddSubgoalRequest2(subgoal) {
      _classCallCheck(this, GoalAddSubgoalRequest2);
      this.subgoal = subgoal;
    }
    _createClass(GoalAddSubgoalRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalAddSubgoalRequest2;
          if (data.hasOwnProperty("subgoal"))
            obj.subgoal = _ApiClient.ApiClient.convertToType(data["subgoal"], "String");
          if (data.hasOwnProperty("insert_before"))
            obj.insert_before = _ApiClient.ApiClient.convertToType(data["insert_before"], "String");
          if (data.hasOwnProperty("insert_after"))
            obj.insert_after = _ApiClient.ApiClient.convertToType(data["insert_after"], "String");
        }
        return obj;
      }
    }]);
    return GoalAddSubgoalRequest2;
  }();
  exports.GoalAddSubgoalRequest = GoalAddSubgoalRequest;
  GoalAddSubgoalRequest.prototype.subgoal = undefined;
  GoalAddSubgoalRequest.prototype.insert_before = undefined;
  GoalAddSubgoalRequest.prototype.insert_after = undefined;
});

// node_modules/asana/dist/model/GoalAddSupportingRelationshipRequest.js
var require_GoalAddSupportingRelationshipRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalAddSupportingRelationshipRequest = undefined;
  var _ApiClient = require_ApiClient();
  var GoalAddSupportingRelationshipRequest = function() {
    function GoalAddSupportingRelationshipRequest2(supporting_resource) {
      _classCallCheck(this, GoalAddSupportingRelationshipRequest2);
      this.supporting_resource = supporting_resource;
    }
    _createClass(GoalAddSupportingRelationshipRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalAddSupportingRelationshipRequest2;
          if (data.hasOwnProperty("supporting_resource"))
            obj.supporting_resource = _ApiClient.ApiClient.convertToType(data["supporting_resource"], "String");
          if (data.hasOwnProperty("insert_before"))
            obj.insert_before = _ApiClient.ApiClient.convertToType(data["insert_before"], "String");
          if (data.hasOwnProperty("insert_after"))
            obj.insert_after = _ApiClient.ApiClient.convertToType(data["insert_after"], "String");
          if (data.hasOwnProperty("contribution_weight"))
            obj.contribution_weight = _ApiClient.ApiClient.convertToType(data["contribution_weight"], "Number");
        }
        return obj;
      }
    }]);
    return GoalAddSupportingRelationshipRequest2;
  }();
  exports.GoalAddSupportingRelationshipRequest = GoalAddSupportingRelationshipRequest;
  GoalAddSupportingRelationshipRequest.prototype.supporting_resource = undefined;
  GoalAddSupportingRelationshipRequest.prototype.insert_before = undefined;
  GoalAddSupportingRelationshipRequest.prototype.insert_after = undefined;
  GoalAddSupportingRelationshipRequest.prototype.contribution_weight = undefined;
});

// node_modules/asana/dist/model/GoalAddSupportingWorkRequest.js
var require_GoalAddSupportingWorkRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalAddSupportingWorkRequest = undefined;
  var _ApiClient = require_ApiClient();
  var GoalAddSupportingWorkRequest = function() {
    function GoalAddSupportingWorkRequest2(supporting_work) {
      _classCallCheck(this, GoalAddSupportingWorkRequest2);
      this.supporting_work = supporting_work;
    }
    _createClass(GoalAddSupportingWorkRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalAddSupportingWorkRequest2;
          if (data.hasOwnProperty("supporting_work"))
            obj.supporting_work = _ApiClient.ApiClient.convertToType(data["supporting_work"], "String");
        }
        return obj;
      }
    }]);
    return GoalAddSupportingWorkRequest2;
  }();
  exports.GoalAddSupportingWorkRequest = GoalAddSupportingWorkRequest;
  GoalAddSupportingWorkRequest.prototype.supporting_work = undefined;
});

// node_modules/asana/dist/model/GoalBase.js
var require_GoalBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalBase = undefined;
  var _ApiClient = require_ApiClient();
  var GoalBase = function() {
    function GoalBase2() {
      _classCallCheck(this, GoalBase2);
    }
    _createClass(GoalBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("html_notes"))
            obj.html_notes = _ApiClient.ApiClient.convertToType(data["html_notes"], "String");
          if (data.hasOwnProperty("notes"))
            obj.notes = _ApiClient.ApiClient.convertToType(data["notes"], "String");
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "String");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "String");
          if (data.hasOwnProperty("is_workspace_level"))
            obj.is_workspace_level = _ApiClient.ApiClient.convertToType(data["is_workspace_level"], "Boolean");
          if (data.hasOwnProperty("liked"))
            obj.liked = _ApiClient.ApiClient.convertToType(data["liked"], "Boolean");
        }
        return obj;
      }
    }]);
    return GoalBase2;
  }();
  exports.GoalBase = GoalBase;
  GoalBase.prototype.gid = undefined;
  GoalBase.prototype.resource_type = undefined;
  GoalBase.prototype.name = undefined;
  GoalBase.prototype.html_notes = undefined;
  GoalBase.prototype.notes = undefined;
  GoalBase.prototype.due_on = undefined;
  GoalBase.prototype.start_on = undefined;
  GoalBase.prototype.is_workspace_level = undefined;
  GoalBase.prototype.liked = undefined;
});

// node_modules/asana/dist/model/GoalCompact.js
var require_GoalCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalCompact = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponseCreatedBy = require_CustomFieldResponseCreatedBy();
  var GoalCompact = function() {
    function GoalCompact2() {
      _classCallCheck(this, GoalCompact2);
    }
    _createClass(GoalCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("owner"))
            obj.owner = _CustomFieldResponseCreatedBy.CustomFieldResponseCreatedBy.constructFromObject(data["owner"]);
        }
        return obj;
      }
    }]);
    return GoalCompact2;
  }();
  exports.GoalCompact = GoalCompact;
  GoalCompact.prototype.gid = undefined;
  GoalCompact.prototype.resource_type = undefined;
  GoalCompact.prototype.name = undefined;
  GoalCompact.prototype.owner = undefined;
});

// node_modules/asana/dist/model/TaskAddFollowersRequest.js
var require_TaskAddFollowersRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskAddFollowersRequest = undefined;
  var _ApiClient = require_ApiClient();
  var TaskAddFollowersRequest = function() {
    function TaskAddFollowersRequest2(followers) {
      _classCallCheck(this, TaskAddFollowersRequest2);
      this.followers = followers;
    }
    _createClass(TaskAddFollowersRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskAddFollowersRequest2;
          if (data.hasOwnProperty("followers"))
            obj.followers = _ApiClient.ApiClient.convertToType(data["followers"], ["String"]);
        }
        return obj;
      }
    }]);
    return TaskAddFollowersRequest2;
  }();
  exports.TaskAddFollowersRequest = TaskAddFollowersRequest;
  TaskAddFollowersRequest.prototype.followers = undefined;
});

// node_modules/asana/dist/model/GoalGidAddFollowersBody.js
var require_GoalGidAddFollowersBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalGidAddFollowersBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TaskAddFollowersRequest = require_TaskAddFollowersRequest();
  var GoalGidAddFollowersBody = function() {
    function GoalGidAddFollowersBody2() {
      _classCallCheck(this, GoalGidAddFollowersBody2);
    }
    _createClass(GoalGidAddFollowersBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalGidAddFollowersBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TaskAddFollowersRequest.TaskAddFollowersRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return GoalGidAddFollowersBody2;
  }();
  exports.GoalGidAddFollowersBody = GoalGidAddFollowersBody;
  GoalGidAddFollowersBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/GoalGidAddSupportingRelationshipBody.js
var require_GoalGidAddSupportingRelationshipBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalGidAddSupportingRelationshipBody = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalAddSupportingRelationshipRequest = require_GoalAddSupportingRelationshipRequest();
  var GoalGidAddSupportingRelationshipBody = function() {
    function GoalGidAddSupportingRelationshipBody2() {
      _classCallCheck(this, GoalGidAddSupportingRelationshipBody2);
    }
    _createClass(GoalGidAddSupportingRelationshipBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalGidAddSupportingRelationshipBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _GoalAddSupportingRelationshipRequest.GoalAddSupportingRelationshipRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return GoalGidAddSupportingRelationshipBody2;
  }();
  exports.GoalGidAddSupportingRelationshipBody = GoalGidAddSupportingRelationshipBody;
  GoalGidAddSupportingRelationshipBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/GoalGidRemoveFollowersBody.js
var require_GoalGidRemoveFollowersBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalGidRemoveFollowersBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TaskAddFollowersRequest = require_TaskAddFollowersRequest();
  var GoalGidRemoveFollowersBody = function() {
    function GoalGidRemoveFollowersBody2() {
      _classCallCheck(this, GoalGidRemoveFollowersBody2);
    }
    _createClass(GoalGidRemoveFollowersBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalGidRemoveFollowersBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TaskAddFollowersRequest.TaskAddFollowersRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return GoalGidRemoveFollowersBody2;
  }();
  exports.GoalGidRemoveFollowersBody = GoalGidRemoveFollowersBody;
  GoalGidRemoveFollowersBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/GoalRemoveSupportingRelationshipRequest.js
var require_GoalRemoveSupportingRelationshipRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalRemoveSupportingRelationshipRequest = undefined;
  var _ApiClient = require_ApiClient();
  var GoalRemoveSupportingRelationshipRequest = function() {
    function GoalRemoveSupportingRelationshipRequest2(supporting_resource) {
      _classCallCheck(this, GoalRemoveSupportingRelationshipRequest2);
      this.supporting_resource = supporting_resource;
    }
    _createClass(GoalRemoveSupportingRelationshipRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalRemoveSupportingRelationshipRequest2;
          if (data.hasOwnProperty("supporting_resource"))
            obj.supporting_resource = _ApiClient.ApiClient.convertToType(data["supporting_resource"], "String");
        }
        return obj;
      }
    }]);
    return GoalRemoveSupportingRelationshipRequest2;
  }();
  exports.GoalRemoveSupportingRelationshipRequest = GoalRemoveSupportingRelationshipRequest;
  GoalRemoveSupportingRelationshipRequest.prototype.supporting_resource = undefined;
});

// node_modules/asana/dist/model/GoalGidRemoveSupportingRelationshipBody.js
var require_GoalGidRemoveSupportingRelationshipBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalGidRemoveSupportingRelationshipBody = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalRemoveSupportingRelationshipRequest = require_GoalRemoveSupportingRelationshipRequest();
  var GoalGidRemoveSupportingRelationshipBody = function() {
    function GoalGidRemoveSupportingRelationshipBody2() {
      _classCallCheck(this, GoalGidRemoveSupportingRelationshipBody2);
    }
    _createClass(GoalGidRemoveSupportingRelationshipBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalGidRemoveSupportingRelationshipBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _GoalRemoveSupportingRelationshipRequest.GoalRemoveSupportingRelationshipRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return GoalGidRemoveSupportingRelationshipBody2;
  }();
  exports.GoalGidRemoveSupportingRelationshipBody = GoalGidRemoveSupportingRelationshipBody;
  GoalGidRemoveSupportingRelationshipBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/GoalMetricRequest.js
var require_GoalMetricRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalMetricRequest = undefined;
  var _ApiClient = require_ApiClient();
  var GoalMetricRequest = function() {
    function GoalMetricRequest2() {
      _classCallCheck(this, GoalMetricRequest2);
    }
    _createClass(GoalMetricRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalMetricRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("precision"))
            obj.precision = _ApiClient.ApiClient.convertToType(data["precision"], "Number");
          if (data.hasOwnProperty("unit"))
            obj.unit = _ApiClient.ApiClient.convertToType(data["unit"], "String");
          if (data.hasOwnProperty("currency_code"))
            obj.currency_code = _ApiClient.ApiClient.convertToType(data["currency_code"], "String");
          if (data.hasOwnProperty("initial_number_value"))
            obj.initial_number_value = _ApiClient.ApiClient.convertToType(data["initial_number_value"], "Number");
          if (data.hasOwnProperty("target_number_value"))
            obj.target_number_value = _ApiClient.ApiClient.convertToType(data["target_number_value"], "Number");
          if (data.hasOwnProperty("current_number_value"))
            obj.current_number_value = _ApiClient.ApiClient.convertToType(data["current_number_value"], "Number");
          if (data.hasOwnProperty("current_display_value"))
            obj.current_display_value = _ApiClient.ApiClient.convertToType(data["current_display_value"], "String");
          if (data.hasOwnProperty("progress_source"))
            obj.progress_source = _ApiClient.ApiClient.convertToType(data["progress_source"], "String");
        }
        return obj;
      }
    }]);
    return GoalMetricRequest2;
  }();
  exports.GoalMetricRequest = GoalMetricRequest;
  GoalMetricRequest.prototype.gid = undefined;
  GoalMetricRequest.prototype.resource_type = undefined;
  GoalMetricRequest.ResourceSubtypeEnum = {
    _number: "number"
  };
  GoalMetricRequest.prototype.resource_subtype = undefined;
  GoalMetricRequest.prototype.precision = undefined;
  GoalMetricRequest.UnitEnum = {
    none: "none",
    currency: "currency",
    percentage: "percentage"
  };
  GoalMetricRequest.prototype.unit = undefined;
  GoalMetricRequest.prototype.currency_code = undefined;
  GoalMetricRequest.prototype.initial_number_value = undefined;
  GoalMetricRequest.prototype.target_number_value = undefined;
  GoalMetricRequest.prototype.current_number_value = undefined;
  GoalMetricRequest.prototype.current_display_value = undefined;
  GoalMetricRequest.ProgressSourceEnum = {
    manual: "manual",
    subgoal_progress: "subgoal_progress",
    project_task_completion: "project_task_completion",
    project_milestone_completion: "project_milestone_completion",
    external: "external"
  };
  GoalMetricRequest.prototype.progress_source = undefined;
});

// node_modules/asana/dist/model/GoalGidSetMetricBody.js
var require_GoalGidSetMetricBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalGidSetMetricBody = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalMetricRequest = require_GoalMetricRequest();
  var GoalGidSetMetricBody = function() {
    function GoalGidSetMetricBody2() {
      _classCallCheck(this, GoalGidSetMetricBody2);
    }
    _createClass(GoalGidSetMetricBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalGidSetMetricBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _GoalMetricRequest.GoalMetricRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return GoalGidSetMetricBody2;
  }();
  exports.GoalGidSetMetricBody = GoalGidSetMetricBody;
  GoalGidSetMetricBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/GoalMetricCurrentValueRequest.js
var require_GoalMetricCurrentValueRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalMetricCurrentValueRequest = undefined;
  var _ApiClient = require_ApiClient();
  var GoalMetricCurrentValueRequest = function() {
    function GoalMetricCurrentValueRequest2() {
      _classCallCheck(this, GoalMetricCurrentValueRequest2);
    }
    _createClass(GoalMetricCurrentValueRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalMetricCurrentValueRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("current_number_value"))
            obj.current_number_value = _ApiClient.ApiClient.convertToType(data["current_number_value"], "Number");
        }
        return obj;
      }
    }]);
    return GoalMetricCurrentValueRequest2;
  }();
  exports.GoalMetricCurrentValueRequest = GoalMetricCurrentValueRequest;
  GoalMetricCurrentValueRequest.prototype.gid = undefined;
  GoalMetricCurrentValueRequest.prototype.resource_type = undefined;
  GoalMetricCurrentValueRequest.prototype.current_number_value = undefined;
});

// node_modules/asana/dist/model/GoalGidSetMetricCurrentValueBody.js
var require_GoalGidSetMetricCurrentValueBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalGidSetMetricCurrentValueBody = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalMetricCurrentValueRequest = require_GoalMetricCurrentValueRequest();
  var GoalGidSetMetricCurrentValueBody = function() {
    function GoalGidSetMetricCurrentValueBody2() {
      _classCallCheck(this, GoalGidSetMetricCurrentValueBody2);
    }
    _createClass(GoalGidSetMetricCurrentValueBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalGidSetMetricCurrentValueBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _GoalMetricCurrentValueRequest.GoalMetricCurrentValueRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return GoalGidSetMetricCurrentValueBody2;
  }();
  exports.GoalGidSetMetricCurrentValueBody = GoalGidSetMetricCurrentValueBody;
  GoalGidSetMetricCurrentValueBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/MembershipCompactGoal.js
var require_MembershipCompactGoal = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MembershipCompactGoal = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponseCreatedBy = require_CustomFieldResponseCreatedBy();
  var MembershipCompactGoal = function() {
    function MembershipCompactGoal2() {
      _classCallCheck(this, MembershipCompactGoal2);
    }
    _createClass(MembershipCompactGoal2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new MembershipCompactGoal2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("owner"))
            obj.owner = _CustomFieldResponseCreatedBy.CustomFieldResponseCreatedBy.constructFromObject(data["owner"]);
        }
        return obj;
      }
    }]);
    return MembershipCompactGoal2;
  }();
  exports.MembershipCompactGoal = MembershipCompactGoal;
  MembershipCompactGoal.prototype.gid = undefined;
  MembershipCompactGoal.prototype.resource_type = undefined;
  MembershipCompactGoal.prototype.name = undefined;
  MembershipCompactGoal.prototype.owner = undefined;
});

// node_modules/asana/dist/model/MembershipCompactMember.js
var require_MembershipCompactMember = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MembershipCompactMember = undefined;
  var _ApiClient = require_ApiClient();
  var MembershipCompactMember = function() {
    function MembershipCompactMember2() {
      _classCallCheck(this, MembershipCompactMember2);
    }
    _createClass(MembershipCompactMember2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new MembershipCompactMember2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return MembershipCompactMember2;
  }();
  exports.MembershipCompactMember = MembershipCompactMember;
  MembershipCompactMember.prototype.gid = undefined;
  MembershipCompactMember.prototype.resource_type = undefined;
  MembershipCompactMember.prototype.name = undefined;
});

// node_modules/asana/dist/model/MembershipCompactParent.js
var require_MembershipCompactParent = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MembershipCompactParent = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponseCreatedBy = require_CustomFieldResponseCreatedBy();
  var MembershipCompactParent = function() {
    function MembershipCompactParent2() {
      _classCallCheck(this, MembershipCompactParent2);
    }
    _createClass(MembershipCompactParent2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new MembershipCompactParent2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("owner"))
            obj.owner = _CustomFieldResponseCreatedBy.CustomFieldResponseCreatedBy.constructFromObject(data["owner"]);
        }
        return obj;
      }
    }]);
    return MembershipCompactParent2;
  }();
  exports.MembershipCompactParent = MembershipCompactParent;
  MembershipCompactParent.prototype.gid = undefined;
  MembershipCompactParent.prototype.resource_type = undefined;
  MembershipCompactParent.prototype.name = undefined;
  MembershipCompactParent.prototype.owner = undefined;
});

// node_modules/asana/dist/model/GoalMembershipBase.js
var require_GoalMembershipBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalMembershipBase = undefined;
  var _ApiClient = require_ApiClient();
  var _MembershipCompactGoal = require_MembershipCompactGoal();
  var _MembershipCompactMember = require_MembershipCompactMember();
  var _MembershipCompactParent = require_MembershipCompactParent();
  var GoalMembershipBase = function() {
    function GoalMembershipBase2() {
      _classCallCheck(this, GoalMembershipBase2);
    }
    _createClass(GoalMembershipBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalMembershipBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("member"))
            obj.member = _MembershipCompactMember.MembershipCompactMember.constructFromObject(data["member"]);
          if (data.hasOwnProperty("parent"))
            obj.parent = _MembershipCompactParent.MembershipCompactParent.constructFromObject(data["parent"]);
          if (data.hasOwnProperty("role"))
            obj.role = _ApiClient.ApiClient.convertToType(data["role"], "String");
          if (data.hasOwnProperty("goal"))
            obj.goal = _MembershipCompactGoal.MembershipCompactGoal.constructFromObject(data["goal"]);
        }
        return obj;
      }
    }]);
    return GoalMembershipBase2;
  }();
  exports.GoalMembershipBase = GoalMembershipBase;
  GoalMembershipBase.prototype.gid = undefined;
  GoalMembershipBase.prototype.resource_type = undefined;
  GoalMembershipBase.prototype.resource_subtype = undefined;
  GoalMembershipBase.prototype.member = undefined;
  GoalMembershipBase.prototype.parent = undefined;
  GoalMembershipBase.RoleEnum = {
    commenter: "commenter",
    editor: "editor"
  };
  GoalMembershipBase.prototype.role = undefined;
  GoalMembershipBase.prototype.goal = undefined;
});

// node_modules/asana/dist/model/GoalMembershipCompact.js
var require_GoalMembershipCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalMembershipCompact = undefined;
  var _ApiClient = require_ApiClient();
  var _MembershipCompactGoal = require_MembershipCompactGoal();
  var _MembershipCompactMember = require_MembershipCompactMember();
  var _MembershipCompactParent = require_MembershipCompactParent();
  var GoalMembershipCompact = function() {
    function GoalMembershipCompact2() {
      _classCallCheck(this, GoalMembershipCompact2);
    }
    _createClass(GoalMembershipCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalMembershipCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("member"))
            obj.member = _MembershipCompactMember.MembershipCompactMember.constructFromObject(data["member"]);
          if (data.hasOwnProperty("parent"))
            obj.parent = _MembershipCompactParent.MembershipCompactParent.constructFromObject(data["parent"]);
          if (data.hasOwnProperty("role"))
            obj.role = _ApiClient.ApiClient.convertToType(data["role"], "String");
          if (data.hasOwnProperty("goal"))
            obj.goal = _MembershipCompactGoal.MembershipCompactGoal.constructFromObject(data["goal"]);
          if (data.hasOwnProperty("is_commenter"))
            obj.is_commenter = _ApiClient.ApiClient.convertToType(data["is_commenter"], "Boolean");
          if (data.hasOwnProperty("is_editor"))
            obj.is_editor = _ApiClient.ApiClient.convertToType(data["is_editor"], "Boolean");
        }
        return obj;
      }
    }]);
    return GoalMembershipCompact2;
  }();
  exports.GoalMembershipCompact = GoalMembershipCompact;
  GoalMembershipCompact.prototype.gid = undefined;
  GoalMembershipCompact.prototype.resource_type = undefined;
  GoalMembershipCompact.prototype.resource_subtype = undefined;
  GoalMembershipCompact.prototype.member = undefined;
  GoalMembershipCompact.prototype.parent = undefined;
  GoalMembershipCompact.RoleEnum = {
    commenter: "commenter",
    editor: "editor"
  };
  GoalMembershipCompact.prototype.role = undefined;
  GoalMembershipCompact.prototype.goal = undefined;
  GoalMembershipCompact.prototype.is_commenter = undefined;
  GoalMembershipCompact.prototype.is_editor = undefined;
});

// node_modules/asana/dist/model/GoalMembershipResponseUser.js
var require_GoalMembershipResponseUser = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalMembershipResponseUser = undefined;
  var _ApiClient = require_ApiClient();
  var GoalMembershipResponseUser = function() {
    function GoalMembershipResponseUser2() {
      _classCallCheck(this, GoalMembershipResponseUser2);
    }
    _createClass(GoalMembershipResponseUser2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalMembershipResponseUser2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return GoalMembershipResponseUser2;
  }();
  exports.GoalMembershipResponseUser = GoalMembershipResponseUser;
  GoalMembershipResponseUser.prototype.gid = undefined;
  GoalMembershipResponseUser.prototype.resource_type = undefined;
  GoalMembershipResponseUser.prototype.name = undefined;
});

// node_modules/asana/dist/model/GoalMembershipResponseWorkspace.js
var require_GoalMembershipResponseWorkspace = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalMembershipResponseWorkspace = undefined;
  var _ApiClient = require_ApiClient();
  var GoalMembershipResponseWorkspace = function() {
    function GoalMembershipResponseWorkspace2() {
      _classCallCheck(this, GoalMembershipResponseWorkspace2);
    }
    _createClass(GoalMembershipResponseWorkspace2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalMembershipResponseWorkspace2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return GoalMembershipResponseWorkspace2;
  }();
  exports.GoalMembershipResponseWorkspace = GoalMembershipResponseWorkspace;
  GoalMembershipResponseWorkspace.prototype.gid = undefined;
  GoalMembershipResponseWorkspace.prototype.resource_type = undefined;
  GoalMembershipResponseWorkspace.prototype.name = undefined;
});

// node_modules/asana/dist/model/GoalMembershipResponse.js
var require_GoalMembershipResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalMembershipResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalMembershipResponseUser = require_GoalMembershipResponseUser();
  var _GoalMembershipResponseWorkspace = require_GoalMembershipResponseWorkspace();
  var _MembershipCompactGoal = require_MembershipCompactGoal();
  var _MembershipCompactMember = require_MembershipCompactMember();
  var _MembershipCompactParent = require_MembershipCompactParent();
  var GoalMembershipResponse = function() {
    function GoalMembershipResponse2() {
      _classCallCheck(this, GoalMembershipResponse2);
    }
    _createClass(GoalMembershipResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalMembershipResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("member"))
            obj.member = _MembershipCompactMember.MembershipCompactMember.constructFromObject(data["member"]);
          if (data.hasOwnProperty("parent"))
            obj.parent = _MembershipCompactParent.MembershipCompactParent.constructFromObject(data["parent"]);
          if (data.hasOwnProperty("role"))
            obj.role = _ApiClient.ApiClient.convertToType(data["role"], "String");
          if (data.hasOwnProperty("goal"))
            obj.goal = _MembershipCompactGoal.MembershipCompactGoal.constructFromObject(data["goal"]);
          if (data.hasOwnProperty("user"))
            obj.user = _GoalMembershipResponseUser.GoalMembershipResponseUser.constructFromObject(data["user"]);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _GoalMembershipResponseWorkspace.GoalMembershipResponseWorkspace.constructFromObject(data["workspace"]);
        }
        return obj;
      }
    }]);
    return GoalMembershipResponse2;
  }();
  exports.GoalMembershipResponse = GoalMembershipResponse;
  GoalMembershipResponse.prototype.gid = undefined;
  GoalMembershipResponse.prototype.resource_type = undefined;
  GoalMembershipResponse.prototype.resource_subtype = undefined;
  GoalMembershipResponse.prototype.member = undefined;
  GoalMembershipResponse.prototype.parent = undefined;
  GoalMembershipResponse.RoleEnum = {
    commenter: "commenter",
    editor: "editor"
  };
  GoalMembershipResponse.prototype.role = undefined;
  GoalMembershipResponse.prototype.goal = undefined;
  GoalMembershipResponse.prototype.user = undefined;
  GoalMembershipResponse.prototype.workspace = undefined;
});

// node_modules/asana/dist/model/GoalMetricBase.js
var require_GoalMetricBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalMetricBase = undefined;
  var _ApiClient = require_ApiClient();
  var GoalMetricBase = function() {
    function GoalMetricBase2() {
      _classCallCheck(this, GoalMetricBase2);
    }
    _createClass(GoalMetricBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalMetricBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("precision"))
            obj.precision = _ApiClient.ApiClient.convertToType(data["precision"], "Number");
          if (data.hasOwnProperty("unit"))
            obj.unit = _ApiClient.ApiClient.convertToType(data["unit"], "String");
          if (data.hasOwnProperty("currency_code"))
            obj.currency_code = _ApiClient.ApiClient.convertToType(data["currency_code"], "String");
          if (data.hasOwnProperty("initial_number_value"))
            obj.initial_number_value = _ApiClient.ApiClient.convertToType(data["initial_number_value"], "Number");
          if (data.hasOwnProperty("target_number_value"))
            obj.target_number_value = _ApiClient.ApiClient.convertToType(data["target_number_value"], "Number");
          if (data.hasOwnProperty("current_number_value"))
            obj.current_number_value = _ApiClient.ApiClient.convertToType(data["current_number_value"], "Number");
          if (data.hasOwnProperty("current_display_value"))
            obj.current_display_value = _ApiClient.ApiClient.convertToType(data["current_display_value"], "String");
          if (data.hasOwnProperty("progress_source"))
            obj.progress_source = _ApiClient.ApiClient.convertToType(data["progress_source"], "String");
        }
        return obj;
      }
    }]);
    return GoalMetricBase2;
  }();
  exports.GoalMetricBase = GoalMetricBase;
  GoalMetricBase.prototype.gid = undefined;
  GoalMetricBase.prototype.resource_type = undefined;
  GoalMetricBase.ResourceSubtypeEnum = {
    _number: "number"
  };
  GoalMetricBase.prototype.resource_subtype = undefined;
  GoalMetricBase.prototype.precision = undefined;
  GoalMetricBase.UnitEnum = {
    none: "none",
    currency: "currency",
    percentage: "percentage"
  };
  GoalMetricBase.prototype.unit = undefined;
  GoalMetricBase.prototype.currency_code = undefined;
  GoalMetricBase.prototype.initial_number_value = undefined;
  GoalMetricBase.prototype.target_number_value = undefined;
  GoalMetricBase.prototype.current_number_value = undefined;
  GoalMetricBase.prototype.current_display_value = undefined;
  GoalMetricBase.ProgressSourceEnum = {
    manual: "manual",
    subgoal_progress: "subgoal_progress",
    project_task_completion: "project_task_completion",
    project_milestone_completion: "project_milestone_completion",
    external: "external"
  };
  GoalMetricBase.prototype.progress_source = undefined;
});

// node_modules/asana/dist/model/GoalRelationshipBaseSupportedGoal.js
var require_GoalRelationshipBaseSupportedGoal = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalRelationshipBaseSupportedGoal = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponseCreatedBy = require_CustomFieldResponseCreatedBy();
  var GoalRelationshipBaseSupportedGoal = function() {
    function GoalRelationshipBaseSupportedGoal2() {
      _classCallCheck(this, GoalRelationshipBaseSupportedGoal2);
    }
    _createClass(GoalRelationshipBaseSupportedGoal2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalRelationshipBaseSupportedGoal2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("owner"))
            obj.owner = _CustomFieldResponseCreatedBy.CustomFieldResponseCreatedBy.constructFromObject(data["owner"]);
        }
        return obj;
      }
    }]);
    return GoalRelationshipBaseSupportedGoal2;
  }();
  exports.GoalRelationshipBaseSupportedGoal = GoalRelationshipBaseSupportedGoal;
  GoalRelationshipBaseSupportedGoal.prototype.gid = undefined;
  GoalRelationshipBaseSupportedGoal.prototype.resource_type = undefined;
  GoalRelationshipBaseSupportedGoal.prototype.name = undefined;
  GoalRelationshipBaseSupportedGoal.prototype.owner = undefined;
});

// node_modules/asana/dist/model/GoalRelationshipBaseSupportingResource.js
var require_GoalRelationshipBaseSupportingResource = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalRelationshipBaseSupportingResource = undefined;
  var _ApiClient = require_ApiClient();
  var GoalRelationshipBaseSupportingResource = function() {
    function GoalRelationshipBaseSupportingResource2() {
      _classCallCheck(this, GoalRelationshipBaseSupportingResource2);
    }
    _createClass(GoalRelationshipBaseSupportingResource2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalRelationshipBaseSupportingResource2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return GoalRelationshipBaseSupportingResource2;
  }();
  exports.GoalRelationshipBaseSupportingResource = GoalRelationshipBaseSupportingResource;
  GoalRelationshipBaseSupportingResource.prototype.gid = undefined;
  GoalRelationshipBaseSupportingResource.prototype.resource_type = undefined;
  GoalRelationshipBaseSupportingResource.prototype.name = undefined;
});

// node_modules/asana/dist/model/GoalRelationshipBase.js
var require_GoalRelationshipBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalRelationshipBase = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalRelationshipBaseSupportedGoal = require_GoalRelationshipBaseSupportedGoal();
  var _GoalRelationshipBaseSupportingResource = require_GoalRelationshipBaseSupportingResource();
  var GoalRelationshipBase = function() {
    function GoalRelationshipBase2() {
      _classCallCheck(this, GoalRelationshipBase2);
    }
    _createClass(GoalRelationshipBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalRelationshipBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("supporting_resource"))
            obj.supporting_resource = _GoalRelationshipBaseSupportingResource.GoalRelationshipBaseSupportingResource.constructFromObject(data["supporting_resource"]);
          if (data.hasOwnProperty("contribution_weight"))
            obj.contribution_weight = _ApiClient.ApiClient.convertToType(data["contribution_weight"], "Number");
          if (data.hasOwnProperty("supported_goal"))
            obj.supported_goal = _GoalRelationshipBaseSupportedGoal.GoalRelationshipBaseSupportedGoal.constructFromObject(data["supported_goal"]);
        }
        return obj;
      }
    }]);
    return GoalRelationshipBase2;
  }();
  exports.GoalRelationshipBase = GoalRelationshipBase;
  GoalRelationshipBase.prototype.gid = undefined;
  GoalRelationshipBase.prototype.resource_type = undefined;
  GoalRelationshipBase.ResourceSubtypeEnum = {
    subgoal: "subgoal",
    supporting_work: "supporting_work"
  };
  GoalRelationshipBase.prototype.resource_subtype = undefined;
  GoalRelationshipBase.prototype.supporting_resource = undefined;
  GoalRelationshipBase.prototype.contribution_weight = undefined;
  GoalRelationshipBase.prototype.supported_goal = undefined;
});

// node_modules/asana/dist/model/GoalRelationshipCompact.js
var require_GoalRelationshipCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalRelationshipCompact = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalRelationshipBaseSupportingResource = require_GoalRelationshipBaseSupportingResource();
  var GoalRelationshipCompact = function() {
    function GoalRelationshipCompact2() {
      _classCallCheck(this, GoalRelationshipCompact2);
    }
    _createClass(GoalRelationshipCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalRelationshipCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("supporting_resource"))
            obj.supporting_resource = _GoalRelationshipBaseSupportingResource.GoalRelationshipBaseSupportingResource.constructFromObject(data["supporting_resource"]);
          if (data.hasOwnProperty("contribution_weight"))
            obj.contribution_weight = _ApiClient.ApiClient.convertToType(data["contribution_weight"], "Number");
        }
        return obj;
      }
    }]);
    return GoalRelationshipCompact2;
  }();
  exports.GoalRelationshipCompact = GoalRelationshipCompact;
  GoalRelationshipCompact.prototype.gid = undefined;
  GoalRelationshipCompact.prototype.resource_type = undefined;
  GoalRelationshipCompact.ResourceSubtypeEnum = {
    subgoal: "subgoal",
    supporting_work: "supporting_work"
  };
  GoalRelationshipCompact.prototype.resource_subtype = undefined;
  GoalRelationshipCompact.prototype.supporting_resource = undefined;
  GoalRelationshipCompact.prototype.contribution_weight = undefined;
});

// node_modules/asana/dist/model/GoalRelationshipRequest.js
var require_GoalRelationshipRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalRelationshipRequest = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalRelationshipBaseSupportedGoal = require_GoalRelationshipBaseSupportedGoal();
  var _GoalRelationshipBaseSupportingResource = require_GoalRelationshipBaseSupportingResource();
  var GoalRelationshipRequest = function() {
    function GoalRelationshipRequest2() {
      _classCallCheck(this, GoalRelationshipRequest2);
    }
    _createClass(GoalRelationshipRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalRelationshipRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("supporting_resource"))
            obj.supporting_resource = _GoalRelationshipBaseSupportingResource.GoalRelationshipBaseSupportingResource.constructFromObject(data["supporting_resource"]);
          if (data.hasOwnProperty("contribution_weight"))
            obj.contribution_weight = _ApiClient.ApiClient.convertToType(data["contribution_weight"], "Number");
          if (data.hasOwnProperty("supported_goal"))
            obj.supported_goal = _GoalRelationshipBaseSupportedGoal.GoalRelationshipBaseSupportedGoal.constructFromObject(data["supported_goal"]);
        }
        return obj;
      }
    }]);
    return GoalRelationshipRequest2;
  }();
  exports.GoalRelationshipRequest = GoalRelationshipRequest;
  GoalRelationshipRequest.prototype.gid = undefined;
  GoalRelationshipRequest.prototype.resource_type = undefined;
  GoalRelationshipRequest.ResourceSubtypeEnum = {
    subgoal: "subgoal",
    supporting_work: "supporting_work"
  };
  GoalRelationshipRequest.prototype.resource_subtype = undefined;
  GoalRelationshipRequest.prototype.supporting_resource = undefined;
  GoalRelationshipRequest.prototype.contribution_weight = undefined;
  GoalRelationshipRequest.prototype.supported_goal = undefined;
});

// node_modules/asana/dist/model/GoalRelationshipResponse.js
var require_GoalRelationshipResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalRelationshipResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalRelationshipBaseSupportedGoal = require_GoalRelationshipBaseSupportedGoal();
  var _GoalRelationshipBaseSupportingResource = require_GoalRelationshipBaseSupportingResource();
  var GoalRelationshipResponse = function() {
    function GoalRelationshipResponse2() {
      _classCallCheck(this, GoalRelationshipResponse2);
    }
    _createClass(GoalRelationshipResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalRelationshipResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("supporting_resource"))
            obj.supporting_resource = _GoalRelationshipBaseSupportingResource.GoalRelationshipBaseSupportingResource.constructFromObject(data["supporting_resource"]);
          if (data.hasOwnProperty("contribution_weight"))
            obj.contribution_weight = _ApiClient.ApiClient.convertToType(data["contribution_weight"], "Number");
          if (data.hasOwnProperty("supported_goal"))
            obj.supported_goal = _GoalRelationshipBaseSupportedGoal.GoalRelationshipBaseSupportedGoal.constructFromObject(data["supported_goal"]);
        }
        return obj;
      }
    }]);
    return GoalRelationshipResponse2;
  }();
  exports.GoalRelationshipResponse = GoalRelationshipResponse;
  GoalRelationshipResponse.prototype.gid = undefined;
  GoalRelationshipResponse.prototype.resource_type = undefined;
  GoalRelationshipResponse.ResourceSubtypeEnum = {
    subgoal: "subgoal",
    supporting_work: "supporting_work"
  };
  GoalRelationshipResponse.prototype.resource_subtype = undefined;
  GoalRelationshipResponse.prototype.supporting_resource = undefined;
  GoalRelationshipResponse.prototype.contribution_weight = undefined;
  GoalRelationshipResponse.prototype.supported_goal = undefined;
});

// node_modules/asana/dist/model/GoalRelationshipResponseArray.js
var require_GoalRelationshipResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalRelationshipResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalRelationshipResponse = require_GoalRelationshipResponse();
  var _NextPage = require_NextPage();
  var GoalRelationshipResponseArray = function() {
    function GoalRelationshipResponseArray2(data) {
      _classCallCheck(this, GoalRelationshipResponseArray2);
      this.data = data;
    }
    _createClass(GoalRelationshipResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalRelationshipResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_GoalRelationshipResponse.GoalRelationshipResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return GoalRelationshipResponseArray2;
  }();
  exports.GoalRelationshipResponseArray = GoalRelationshipResponseArray;
  GoalRelationshipResponseArray.prototype.data = undefined;
  GoalRelationshipResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/GoalRelationshipResponseData.js
var require_GoalRelationshipResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalRelationshipResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalRelationshipResponse = require_GoalRelationshipResponse();
  var GoalRelationshipResponseData = function() {
    function GoalRelationshipResponseData2(data) {
      _classCallCheck(this, GoalRelationshipResponseData2);
      this.data = data;
    }
    _createClass(GoalRelationshipResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalRelationshipResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _GoalRelationshipResponse.GoalRelationshipResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return GoalRelationshipResponseData2;
  }();
  exports.GoalRelationshipResponseData = GoalRelationshipResponseData;
  GoalRelationshipResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/GoalRelationshipsGoalRelationshipGidBody.js
var require_GoalRelationshipsGoalRelationshipGidBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalRelationshipsGoalRelationshipGidBody = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalRelationshipRequest = require_GoalRelationshipRequest();
  var GoalRelationshipsGoalRelationshipGidBody = function() {
    function GoalRelationshipsGoalRelationshipGidBody2() {
      _classCallCheck(this, GoalRelationshipsGoalRelationshipGidBody2);
    }
    _createClass(GoalRelationshipsGoalRelationshipGidBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalRelationshipsGoalRelationshipGidBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _GoalRelationshipRequest.GoalRelationshipRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return GoalRelationshipsGoalRelationshipGidBody2;
  }();
  exports.GoalRelationshipsGoalRelationshipGidBody = GoalRelationshipsGoalRelationshipGidBody;
  GoalRelationshipsGoalRelationshipGidBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/GoalRemoveSubgoalRequest.js
var require_GoalRemoveSubgoalRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalRemoveSubgoalRequest = undefined;
  var _ApiClient = require_ApiClient();
  var GoalRemoveSubgoalRequest = function() {
    function GoalRemoveSubgoalRequest2(subgoal) {
      _classCallCheck(this, GoalRemoveSubgoalRequest2);
      this.subgoal = subgoal;
    }
    _createClass(GoalRemoveSubgoalRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalRemoveSubgoalRequest2;
          if (data.hasOwnProperty("subgoal"))
            obj.subgoal = _ApiClient.ApiClient.convertToType(data["subgoal"], "String");
        }
        return obj;
      }
    }]);
    return GoalRemoveSubgoalRequest2;
  }();
  exports.GoalRemoveSubgoalRequest = GoalRemoveSubgoalRequest;
  GoalRemoveSubgoalRequest.prototype.subgoal = undefined;
});

// node_modules/asana/dist/model/GoalRequest.js
var require_GoalRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalRequest = undefined;
  var _ApiClient = require_ApiClient();
  var GoalRequest = function() {
    function GoalRequest2() {
      _classCallCheck(this, GoalRequest2);
    }
    _createClass(GoalRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("html_notes"))
            obj.html_notes = _ApiClient.ApiClient.convertToType(data["html_notes"], "String");
          if (data.hasOwnProperty("notes"))
            obj.notes = _ApiClient.ApiClient.convertToType(data["notes"], "String");
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "String");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "String");
          if (data.hasOwnProperty("is_workspace_level"))
            obj.is_workspace_level = _ApiClient.ApiClient.convertToType(data["is_workspace_level"], "Boolean");
          if (data.hasOwnProperty("liked"))
            obj.liked = _ApiClient.ApiClient.convertToType(data["liked"], "Boolean");
          if (data.hasOwnProperty("team"))
            obj.team = _ApiClient.ApiClient.convertToType(data["team"], "String");
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _ApiClient.ApiClient.convertToType(data["workspace"], "String");
          if (data.hasOwnProperty("time_period"))
            obj.time_period = _ApiClient.ApiClient.convertToType(data["time_period"], "String");
          if (data.hasOwnProperty("owner"))
            obj.owner = _ApiClient.ApiClient.convertToType(data["owner"], "String");
          if (data.hasOwnProperty("followers"))
            obj.followers = _ApiClient.ApiClient.convertToType(data["followers"], ["String"]);
        }
        return obj;
      }
    }]);
    return GoalRequest2;
  }();
  exports.GoalRequest = GoalRequest;
  GoalRequest.prototype.gid = undefined;
  GoalRequest.prototype.resource_type = undefined;
  GoalRequest.prototype.name = undefined;
  GoalRequest.prototype.html_notes = undefined;
  GoalRequest.prototype.notes = undefined;
  GoalRequest.prototype.due_on = undefined;
  GoalRequest.prototype.start_on = undefined;
  GoalRequest.prototype.is_workspace_level = undefined;
  GoalRequest.prototype.liked = undefined;
  GoalRequest.prototype.team = undefined;
  GoalRequest.prototype.workspace = undefined;
  GoalRequest.prototype.time_period = undefined;
  GoalRequest.prototype.owner = undefined;
  GoalRequest.prototype.followers = undefined;
});

// node_modules/asana/dist/model/GoalRequestBase.js
var require_GoalRequestBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalRequestBase = undefined;
  var _ApiClient = require_ApiClient();
  var GoalRequestBase = function() {
    function GoalRequestBase2() {
      _classCallCheck(this, GoalRequestBase2);
    }
    _createClass(GoalRequestBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalRequestBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("html_notes"))
            obj.html_notes = _ApiClient.ApiClient.convertToType(data["html_notes"], "String");
          if (data.hasOwnProperty("notes"))
            obj.notes = _ApiClient.ApiClient.convertToType(data["notes"], "String");
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "String");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "String");
          if (data.hasOwnProperty("is_workspace_level"))
            obj.is_workspace_level = _ApiClient.ApiClient.convertToType(data["is_workspace_level"], "Boolean");
          if (data.hasOwnProperty("liked"))
            obj.liked = _ApiClient.ApiClient.convertToType(data["liked"], "Boolean");
          if (data.hasOwnProperty("team"))
            obj.team = _ApiClient.ApiClient.convertToType(data["team"], "String");
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _ApiClient.ApiClient.convertToType(data["workspace"], "String");
          if (data.hasOwnProperty("time_period"))
            obj.time_period = _ApiClient.ApiClient.convertToType(data["time_period"], "String");
          if (data.hasOwnProperty("owner"))
            obj.owner = _ApiClient.ApiClient.convertToType(data["owner"], "String");
        }
        return obj;
      }
    }]);
    return GoalRequestBase2;
  }();
  exports.GoalRequestBase = GoalRequestBase;
  GoalRequestBase.prototype.gid = undefined;
  GoalRequestBase.prototype.resource_type = undefined;
  GoalRequestBase.prototype.name = undefined;
  GoalRequestBase.prototype.html_notes = undefined;
  GoalRequestBase.prototype.notes = undefined;
  GoalRequestBase.prototype.due_on = undefined;
  GoalRequestBase.prototype.start_on = undefined;
  GoalRequestBase.prototype.is_workspace_level = undefined;
  GoalRequestBase.prototype.liked = undefined;
  GoalRequestBase.prototype.team = undefined;
  GoalRequestBase.prototype.workspace = undefined;
  GoalRequestBase.prototype.time_period = undefined;
  GoalRequestBase.prototype.owner = undefined;
});

// node_modules/asana/dist/model/GoalResponseCurrentStatusUpdate.js
var require_GoalResponseCurrentStatusUpdate = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalResponseCurrentStatusUpdate = undefined;
  var _ApiClient = require_ApiClient();
  var GoalResponseCurrentStatusUpdate = function() {
    function GoalResponseCurrentStatusUpdate2() {
      _classCallCheck(this, GoalResponseCurrentStatusUpdate2);
    }
    _createClass(GoalResponseCurrentStatusUpdate2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalResponseCurrentStatusUpdate2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
        }
        return obj;
      }
    }]);
    return GoalResponseCurrentStatusUpdate2;
  }();
  exports.GoalResponseCurrentStatusUpdate = GoalResponseCurrentStatusUpdate;
  GoalResponseCurrentStatusUpdate.prototype.gid = undefined;
  GoalResponseCurrentStatusUpdate.prototype.resource_type = undefined;
  GoalResponseCurrentStatusUpdate.prototype.title = undefined;
  GoalResponseCurrentStatusUpdate.ResourceSubtypeEnum = {
    project_status_update: "project_status_update",
    portfolio_status_update: "portfolio_status_update",
    goal_status_update: "goal_status_update"
  };
  GoalResponseCurrentStatusUpdate.prototype.resource_subtype = undefined;
});

// node_modules/asana/dist/model/GoalResponseLikes.js
var require_GoalResponseLikes = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalResponseLikes = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var GoalResponseLikes = function() {
    function GoalResponseLikes2() {
      _classCallCheck(this, GoalResponseLikes2);
    }
    _createClass(GoalResponseLikes2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalResponseLikes2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
        }
        return obj;
      }
    }]);
    return GoalResponseLikes2;
  }();
  exports.GoalResponseLikes = GoalResponseLikes;
  GoalResponseLikes.prototype.gid = undefined;
  GoalResponseLikes.prototype.user = undefined;
});

// node_modules/asana/dist/model/GoalResponseMetric.js
var require_GoalResponseMetric = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalResponseMetric = undefined;
  var _ApiClient = require_ApiClient();
  var GoalResponseMetric = function() {
    function GoalResponseMetric2() {
      _classCallCheck(this, GoalResponseMetric2);
    }
    _createClass(GoalResponseMetric2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalResponseMetric2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("precision"))
            obj.precision = _ApiClient.ApiClient.convertToType(data["precision"], "Number");
          if (data.hasOwnProperty("unit"))
            obj.unit = _ApiClient.ApiClient.convertToType(data["unit"], "String");
          if (data.hasOwnProperty("currency_code"))
            obj.currency_code = _ApiClient.ApiClient.convertToType(data["currency_code"], "String");
          if (data.hasOwnProperty("initial_number_value"))
            obj.initial_number_value = _ApiClient.ApiClient.convertToType(data["initial_number_value"], "Number");
          if (data.hasOwnProperty("target_number_value"))
            obj.target_number_value = _ApiClient.ApiClient.convertToType(data["target_number_value"], "Number");
          if (data.hasOwnProperty("current_number_value"))
            obj.current_number_value = _ApiClient.ApiClient.convertToType(data["current_number_value"], "Number");
          if (data.hasOwnProperty("current_display_value"))
            obj.current_display_value = _ApiClient.ApiClient.convertToType(data["current_display_value"], "String");
          if (data.hasOwnProperty("progress_source"))
            obj.progress_source = _ApiClient.ApiClient.convertToType(data["progress_source"], "String");
          if (data.hasOwnProperty("can_manage"))
            obj.can_manage = _ApiClient.ApiClient.convertToType(data["can_manage"], "Boolean");
        }
        return obj;
      }
    }]);
    return GoalResponseMetric2;
  }();
  exports.GoalResponseMetric = GoalResponseMetric;
  GoalResponseMetric.prototype.gid = undefined;
  GoalResponseMetric.prototype.resource_type = undefined;
  GoalResponseMetric.ResourceSubtypeEnum = {
    _number: "number"
  };
  GoalResponseMetric.prototype.resource_subtype = undefined;
  GoalResponseMetric.prototype.precision = undefined;
  GoalResponseMetric.UnitEnum = {
    none: "none",
    currency: "currency",
    percentage: "percentage"
  };
  GoalResponseMetric.prototype.unit = undefined;
  GoalResponseMetric.prototype.currency_code = undefined;
  GoalResponseMetric.prototype.initial_number_value = undefined;
  GoalResponseMetric.prototype.target_number_value = undefined;
  GoalResponseMetric.prototype.current_number_value = undefined;
  GoalResponseMetric.prototype.current_display_value = undefined;
  GoalResponseMetric.ProgressSourceEnum = {
    manual: "manual",
    subgoal_progress: "subgoal_progress",
    project_task_completion: "project_task_completion",
    project_milestone_completion: "project_milestone_completion",
    external: "external"
  };
  GoalResponseMetric.prototype.progress_source = undefined;
  GoalResponseMetric.prototype.can_manage = undefined;
});

// node_modules/asana/dist/model/GoalResponseTeam.js
var require_GoalResponseTeam = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalResponseTeam = undefined;
  var _ApiClient = require_ApiClient();
  var GoalResponseTeam = function() {
    function GoalResponseTeam2() {
      _classCallCheck(this, GoalResponseTeam2);
    }
    _createClass(GoalResponseTeam2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalResponseTeam2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return GoalResponseTeam2;
  }();
  exports.GoalResponseTeam = GoalResponseTeam;
  GoalResponseTeam.prototype.gid = undefined;
  GoalResponseTeam.prototype.resource_type = undefined;
  GoalResponseTeam.prototype.name = undefined;
});

// node_modules/asana/dist/model/GoalResponseTimePeriod.js
var require_GoalResponseTimePeriod = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalResponseTimePeriod = undefined;
  var _ApiClient = require_ApiClient();
  var GoalResponseTimePeriod = function() {
    function GoalResponseTimePeriod2() {
      _classCallCheck(this, GoalResponseTimePeriod2);
    }
    _createClass(GoalResponseTimePeriod2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalResponseTimePeriod2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("end_on"))
            obj.end_on = _ApiClient.ApiClient.convertToType(data["end_on"], "String");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "String");
          if (data.hasOwnProperty("period"))
            obj.period = _ApiClient.ApiClient.convertToType(data["period"], "String");
          if (data.hasOwnProperty("display_name"))
            obj.display_name = _ApiClient.ApiClient.convertToType(data["display_name"], "String");
        }
        return obj;
      }
    }]);
    return GoalResponseTimePeriod2;
  }();
  exports.GoalResponseTimePeriod = GoalResponseTimePeriod;
  GoalResponseTimePeriod.prototype.gid = undefined;
  GoalResponseTimePeriod.prototype.resource_type = undefined;
  GoalResponseTimePeriod.prototype.end_on = undefined;
  GoalResponseTimePeriod.prototype.start_on = undefined;
  GoalResponseTimePeriod.PeriodEnum = {
    FY: "FY",
    H1: "H1",
    H2: "H2",
    Q1: "Q1",
    Q2: "Q2",
    Q3: "Q3",
    Q4: "Q4"
  };
  GoalResponseTimePeriod.prototype.period = undefined;
  GoalResponseTimePeriod.prototype.display_name = undefined;
});

// node_modules/asana/dist/model/GoalResponseWorkspace.js
var require_GoalResponseWorkspace = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalResponseWorkspace = undefined;
  var _ApiClient = require_ApiClient();
  var GoalResponseWorkspace = function() {
    function GoalResponseWorkspace2() {
      _classCallCheck(this, GoalResponseWorkspace2);
    }
    _createClass(GoalResponseWorkspace2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalResponseWorkspace2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return GoalResponseWorkspace2;
  }();
  exports.GoalResponseWorkspace = GoalResponseWorkspace;
  GoalResponseWorkspace.prototype.gid = undefined;
  GoalResponseWorkspace.prototype.resource_type = undefined;
  GoalResponseWorkspace.prototype.name = undefined;
});

// node_modules/asana/dist/model/GoalResponse.js
var require_GoalResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponseCreatedBy = require_CustomFieldResponseCreatedBy();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _GoalResponseCurrentStatusUpdate = require_GoalResponseCurrentStatusUpdate();
  var _GoalResponseLikes = require_GoalResponseLikes();
  var _GoalResponseMetric = require_GoalResponseMetric();
  var _GoalResponseTeam = require_GoalResponseTeam();
  var _GoalResponseTimePeriod = require_GoalResponseTimePeriod();
  var _GoalResponseWorkspace = require_GoalResponseWorkspace();
  var GoalResponse = function() {
    function GoalResponse2() {
      _classCallCheck(this, GoalResponse2);
    }
    _createClass(GoalResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("html_notes"))
            obj.html_notes = _ApiClient.ApiClient.convertToType(data["html_notes"], "String");
          if (data.hasOwnProperty("notes"))
            obj.notes = _ApiClient.ApiClient.convertToType(data["notes"], "String");
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "String");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "String");
          if (data.hasOwnProperty("is_workspace_level"))
            obj.is_workspace_level = _ApiClient.ApiClient.convertToType(data["is_workspace_level"], "Boolean");
          if (data.hasOwnProperty("liked"))
            obj.liked = _ApiClient.ApiClient.convertToType(data["liked"], "Boolean");
          if (data.hasOwnProperty("likes"))
            obj.likes = _ApiClient.ApiClient.convertToType(data["likes"], [_GoalResponseLikes.GoalResponseLikes]);
          if (data.hasOwnProperty("num_likes"))
            obj.num_likes = _ApiClient.ApiClient.convertToType(data["num_likes"], "Number");
          if (data.hasOwnProperty("team"))
            obj.team = _GoalResponseTeam.GoalResponseTeam.constructFromObject(data["team"]);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _GoalResponseWorkspace.GoalResponseWorkspace.constructFromObject(data["workspace"]);
          if (data.hasOwnProperty("followers"))
            obj.followers = _ApiClient.ApiClient.convertToType(data["followers"], [_CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue]);
          if (data.hasOwnProperty("time_period"))
            obj.time_period = _GoalResponseTimePeriod.GoalResponseTimePeriod.constructFromObject(data["time_period"]);
          if (data.hasOwnProperty("metric"))
            obj.metric = _GoalResponseMetric.GoalResponseMetric.constructFromObject(data["metric"]);
          if (data.hasOwnProperty("owner"))
            obj.owner = _CustomFieldResponseCreatedBy.CustomFieldResponseCreatedBy.constructFromObject(data["owner"]);
          if (data.hasOwnProperty("current_status_update"))
            obj.current_status_update = _GoalResponseCurrentStatusUpdate.GoalResponseCurrentStatusUpdate.constructFromObject(data["current_status_update"]);
          if (data.hasOwnProperty("status"))
            obj.status = _ApiClient.ApiClient.convertToType(data["status"], "String");
        }
        return obj;
      }
    }]);
    return GoalResponse2;
  }();
  exports.GoalResponse = GoalResponse;
  GoalResponse.prototype.gid = undefined;
  GoalResponse.prototype.resource_type = undefined;
  GoalResponse.prototype.name = undefined;
  GoalResponse.prototype.html_notes = undefined;
  GoalResponse.prototype.notes = undefined;
  GoalResponse.prototype.due_on = undefined;
  GoalResponse.prototype.start_on = undefined;
  GoalResponse.prototype.is_workspace_level = undefined;
  GoalResponse.prototype.liked = undefined;
  GoalResponse.prototype.likes = undefined;
  GoalResponse.prototype.num_likes = undefined;
  GoalResponse.prototype.team = undefined;
  GoalResponse.prototype.workspace = undefined;
  GoalResponse.prototype.followers = undefined;
  GoalResponse.prototype.time_period = undefined;
  GoalResponse.prototype.metric = undefined;
  GoalResponse.prototype.owner = undefined;
  GoalResponse.prototype.current_status_update = undefined;
  GoalResponse.prototype.status = undefined;
});

// node_modules/asana/dist/model/GoalResponseArray.js
var require_GoalResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalResponse = require_GoalResponse();
  var _NextPage = require_NextPage();
  var GoalResponseArray = function() {
    function GoalResponseArray2(data) {
      _classCallCheck(this, GoalResponseArray2);
      this.data = data;
    }
    _createClass(GoalResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_GoalResponse.GoalResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return GoalResponseArray2;
  }();
  exports.GoalResponseArray = GoalResponseArray;
  GoalResponseArray.prototype.data = undefined;
  GoalResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/GoalResponseData.js
var require_GoalResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalResponse = require_GoalResponse();
  var GoalResponseData = function() {
    function GoalResponseData2(data) {
      _classCallCheck(this, GoalResponseData2);
      this.data = data;
    }
    _createClass(GoalResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _GoalResponse.GoalResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return GoalResponseData2;
  }();
  exports.GoalResponseData = GoalResponseData;
  GoalResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/GoalUpdateRequest.js
var require_GoalUpdateRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalUpdateRequest = undefined;
  var _ApiClient = require_ApiClient();
  var GoalUpdateRequest = function() {
    function GoalUpdateRequest2() {
      _classCallCheck(this, GoalUpdateRequest2);
    }
    _createClass(GoalUpdateRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalUpdateRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("html_notes"))
            obj.html_notes = _ApiClient.ApiClient.convertToType(data["html_notes"], "String");
          if (data.hasOwnProperty("notes"))
            obj.notes = _ApiClient.ApiClient.convertToType(data["notes"], "String");
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "String");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "String");
          if (data.hasOwnProperty("is_workspace_level"))
            obj.is_workspace_level = _ApiClient.ApiClient.convertToType(data["is_workspace_level"], "Boolean");
          if (data.hasOwnProperty("liked"))
            obj.liked = _ApiClient.ApiClient.convertToType(data["liked"], "Boolean");
          if (data.hasOwnProperty("team"))
            obj.team = _ApiClient.ApiClient.convertToType(data["team"], "String");
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _ApiClient.ApiClient.convertToType(data["workspace"], "String");
          if (data.hasOwnProperty("time_period"))
            obj.time_period = _ApiClient.ApiClient.convertToType(data["time_period"], "String");
          if (data.hasOwnProperty("owner"))
            obj.owner = _ApiClient.ApiClient.convertToType(data["owner"], "String");
          if (data.hasOwnProperty("status"))
            obj.status = _ApiClient.ApiClient.convertToType(data["status"], "String");
        }
        return obj;
      }
    }]);
    return GoalUpdateRequest2;
  }();
  exports.GoalUpdateRequest = GoalUpdateRequest;
  GoalUpdateRequest.prototype.gid = undefined;
  GoalUpdateRequest.prototype.resource_type = undefined;
  GoalUpdateRequest.prototype.name = undefined;
  GoalUpdateRequest.prototype.html_notes = undefined;
  GoalUpdateRequest.prototype.notes = undefined;
  GoalUpdateRequest.prototype.due_on = undefined;
  GoalUpdateRequest.prototype.start_on = undefined;
  GoalUpdateRequest.prototype.is_workspace_level = undefined;
  GoalUpdateRequest.prototype.liked = undefined;
  GoalUpdateRequest.prototype.team = undefined;
  GoalUpdateRequest.prototype.workspace = undefined;
  GoalUpdateRequest.prototype.time_period = undefined;
  GoalUpdateRequest.prototype.owner = undefined;
  GoalUpdateRequest.prototype.status = undefined;
});

// node_modules/asana/dist/model/GoalsBody.js
var require_GoalsBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalsBody = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalRequest = require_GoalRequest();
  var GoalsBody = function() {
    function GoalsBody2() {
      _classCallCheck(this, GoalsBody2);
    }
    _createClass(GoalsBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalsBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _GoalRequest.GoalRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return GoalsBody2;
  }();
  exports.GoalsBody = GoalsBody;
  GoalsBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/GoalsGoalGidBody.js
var require_GoalsGoalGidBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalsGoalGidBody = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalUpdateRequest = require_GoalUpdateRequest();
  var GoalsGoalGidBody = function() {
    function GoalsGoalGidBody2() {
      _classCallCheck(this, GoalsGoalGidBody2);
    }
    _createClass(GoalsGoalGidBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new GoalsGoalGidBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _GoalUpdateRequest.GoalUpdateRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return GoalsGoalGidBody2;
  }();
  exports.GoalsGoalGidBody = GoalsGoalGidBody;
  GoalsGoalGidBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/InlineResponse412Errors.js
var require_InlineResponse412Errors = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.InlineResponse412Errors = undefined;
  var _ApiClient = require_ApiClient();
  var InlineResponse412Errors = function() {
    function InlineResponse412Errors2() {
      _classCallCheck(this, InlineResponse412Errors2);
    }
    _createClass(InlineResponse412Errors2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new InlineResponse412Errors2;
          if (data.hasOwnProperty("message"))
            obj.message = _ApiClient.ApiClient.convertToType(data["message"], "String");
        }
        return obj;
      }
    }]);
    return InlineResponse412Errors2;
  }();
  exports.InlineResponse412Errors = InlineResponse412Errors;
  InlineResponse412Errors.prototype.message = undefined;
});

// node_modules/asana/dist/model/InlineResponse412.js
var require_InlineResponse412 = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.InlineResponse412 = undefined;
  var _ApiClient = require_ApiClient();
  var _InlineResponse412Errors = require_InlineResponse412Errors();
  var InlineResponse412 = function() {
    function InlineResponse4122() {
      _classCallCheck(this, InlineResponse4122);
    }
    _createClass(InlineResponse4122, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new InlineResponse4122;
          if (data.hasOwnProperty("errors"))
            obj.errors = _ApiClient.ApiClient.convertToType(data["errors"], [_InlineResponse412Errors.InlineResponse412Errors]);
          if (data.hasOwnProperty("sync"))
            obj.sync = _ApiClient.ApiClient.convertToType(data["sync"], "String");
        }
        return obj;
      }
    }]);
    return InlineResponse4122;
  }();
  exports.InlineResponse412 = InlineResponse412;
  InlineResponse412.prototype.errors = undefined;
  InlineResponse412.prototype.sync = undefined;
});

// node_modules/asana/dist/model/JobBaseNewProject.js
var require_JobBaseNewProject = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.JobBaseNewProject = undefined;
  var _ApiClient = require_ApiClient();
  var JobBaseNewProject = function() {
    function JobBaseNewProject2() {
      _classCallCheck(this, JobBaseNewProject2);
    }
    _createClass(JobBaseNewProject2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new JobBaseNewProject2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return JobBaseNewProject2;
  }();
  exports.JobBaseNewProject = JobBaseNewProject;
  JobBaseNewProject.prototype.gid = undefined;
  JobBaseNewProject.prototype.resource_type = undefined;
  JobBaseNewProject.prototype.name = undefined;
});

// node_modules/asana/dist/model/JobBaseNewProjectTemplate.js
var require_JobBaseNewProjectTemplate = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.JobBaseNewProjectTemplate = undefined;
  var _ApiClient = require_ApiClient();
  var JobBaseNewProjectTemplate = function() {
    function JobBaseNewProjectTemplate2() {
      _classCallCheck(this, JobBaseNewProjectTemplate2);
    }
    _createClass(JobBaseNewProjectTemplate2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new JobBaseNewProjectTemplate2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return JobBaseNewProjectTemplate2;
  }();
  exports.JobBaseNewProjectTemplate = JobBaseNewProjectTemplate;
  JobBaseNewProjectTemplate.prototype.gid = undefined;
  JobBaseNewProjectTemplate.prototype.resource_type = undefined;
  JobBaseNewProjectTemplate.prototype.name = undefined;
});

// node_modules/asana/dist/model/JobBaseNewTask.js
var require_JobBaseNewTask = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.JobBaseNewTask = undefined;
  var _ApiClient = require_ApiClient();
  var _AttachmentResponseParentCreatedBy = require_AttachmentResponseParentCreatedBy();
  var JobBaseNewTask = function() {
    function JobBaseNewTask2() {
      _classCallCheck(this, JobBaseNewTask2);
    }
    _createClass(JobBaseNewTask2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new JobBaseNewTask2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _AttachmentResponseParentCreatedBy.AttachmentResponseParentCreatedBy.constructFromObject(data["created_by"]);
        }
        return obj;
      }
    }]);
    return JobBaseNewTask2;
  }();
  exports.JobBaseNewTask = JobBaseNewTask;
  JobBaseNewTask.prototype.gid = undefined;
  JobBaseNewTask.prototype.resource_type = undefined;
  JobBaseNewTask.prototype.name = undefined;
  JobBaseNewTask.ResourceSubtypeEnum = {
    default_task: "default_task",
    milestone: "milestone",
    section: "section",
    approval: "approval"
  };
  JobBaseNewTask.prototype.resource_subtype = undefined;
  JobBaseNewTask.prototype.created_by = undefined;
});

// node_modules/asana/dist/model/JobBase.js
var require_JobBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.JobBase = undefined;
  var _ApiClient = require_ApiClient();
  var _JobBaseNewProject = require_JobBaseNewProject();
  var _JobBaseNewProjectTemplate = require_JobBaseNewProjectTemplate();
  var _JobBaseNewTask = require_JobBaseNewTask();
  var JobBase = function() {
    function JobBase2() {
      _classCallCheck(this, JobBase2);
    }
    _createClass(JobBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new JobBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("status"))
            obj.status = _ApiClient.ApiClient.convertToType(data["status"], "String");
          if (data.hasOwnProperty("new_project"))
            obj.new_project = _JobBaseNewProject.JobBaseNewProject.constructFromObject(data["new_project"]);
          if (data.hasOwnProperty("new_task"))
            obj.new_task = _JobBaseNewTask.JobBaseNewTask.constructFromObject(data["new_task"]);
          if (data.hasOwnProperty("new_project_template"))
            obj.new_project_template = _JobBaseNewProjectTemplate.JobBaseNewProjectTemplate.constructFromObject(data["new_project_template"]);
        }
        return obj;
      }
    }]);
    return JobBase2;
  }();
  exports.JobBase = JobBase;
  JobBase.prototype.gid = undefined;
  JobBase.prototype.resource_type = undefined;
  JobBase.prototype.resource_subtype = undefined;
  JobBase.StatusEnum = {
    not_started: "not_started",
    in_progress: "in_progress",
    succeeded: "succeeded",
    failed: "failed"
  };
  JobBase.prototype.status = undefined;
  JobBase.prototype.new_project = undefined;
  JobBase.prototype.new_task = undefined;
  JobBase.prototype.new_project_template = undefined;
});

// node_modules/asana/dist/model/JobCompact.js
var require_JobCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.JobCompact = undefined;
  var _ApiClient = require_ApiClient();
  var _JobBaseNewProject = require_JobBaseNewProject();
  var _JobBaseNewProjectTemplate = require_JobBaseNewProjectTemplate();
  var _JobBaseNewTask = require_JobBaseNewTask();
  var JobCompact = function() {
    function JobCompact2() {
      _classCallCheck(this, JobCompact2);
    }
    _createClass(JobCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new JobCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("status"))
            obj.status = _ApiClient.ApiClient.convertToType(data["status"], "String");
          if (data.hasOwnProperty("new_project"))
            obj.new_project = _JobBaseNewProject.JobBaseNewProject.constructFromObject(data["new_project"]);
          if (data.hasOwnProperty("new_task"))
            obj.new_task = _JobBaseNewTask.JobBaseNewTask.constructFromObject(data["new_task"]);
          if (data.hasOwnProperty("new_project_template"))
            obj.new_project_template = _JobBaseNewProjectTemplate.JobBaseNewProjectTemplate.constructFromObject(data["new_project_template"]);
        }
        return obj;
      }
    }]);
    return JobCompact2;
  }();
  exports.JobCompact = JobCompact;
  JobCompact.prototype.gid = undefined;
  JobCompact.prototype.resource_type = undefined;
  JobCompact.prototype.resource_subtype = undefined;
  JobCompact.StatusEnum = {
    not_started: "not_started",
    in_progress: "in_progress",
    succeeded: "succeeded",
    failed: "failed"
  };
  JobCompact.prototype.status = undefined;
  JobCompact.prototype.new_project = undefined;
  JobCompact.prototype.new_task = undefined;
  JobCompact.prototype.new_project_template = undefined;
});

// node_modules/asana/dist/model/JobResponse.js
var require_JobResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.JobResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _JobBaseNewProject = require_JobBaseNewProject();
  var _JobBaseNewProjectTemplate = require_JobBaseNewProjectTemplate();
  var _JobBaseNewTask = require_JobBaseNewTask();
  var JobResponse = function() {
    function JobResponse2() {
      _classCallCheck(this, JobResponse2);
    }
    _createClass(JobResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new JobResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("status"))
            obj.status = _ApiClient.ApiClient.convertToType(data["status"], "String");
          if (data.hasOwnProperty("new_project"))
            obj.new_project = _JobBaseNewProject.JobBaseNewProject.constructFromObject(data["new_project"]);
          if (data.hasOwnProperty("new_task"))
            obj.new_task = _JobBaseNewTask.JobBaseNewTask.constructFromObject(data["new_task"]);
          if (data.hasOwnProperty("new_project_template"))
            obj.new_project_template = _JobBaseNewProjectTemplate.JobBaseNewProjectTemplate.constructFromObject(data["new_project_template"]);
        }
        return obj;
      }
    }]);
    return JobResponse2;
  }();
  exports.JobResponse = JobResponse;
  JobResponse.prototype.gid = undefined;
  JobResponse.prototype.resource_type = undefined;
  JobResponse.prototype.resource_subtype = undefined;
  JobResponse.StatusEnum = {
    not_started: "not_started",
    in_progress: "in_progress",
    succeeded: "succeeded",
    failed: "failed"
  };
  JobResponse.prototype.status = undefined;
  JobResponse.prototype.new_project = undefined;
  JobResponse.prototype.new_task = undefined;
  JobResponse.prototype.new_project_template = undefined;
});

// node_modules/asana/dist/model/JobResponseData.js
var require_JobResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.JobResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _JobResponse = require_JobResponse();
  var JobResponseData = function() {
    function JobResponseData2(data) {
      _classCallCheck(this, JobResponseData2);
      this.data = data;
    }
    _createClass(JobResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new JobResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _JobResponse.JobResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return JobResponseData2;
  }();
  exports.JobResponseData = JobResponseData;
  JobResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/Like.js
var require_Like = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Like = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var Like = function() {
    function Like2() {
      _classCallCheck(this, Like2);
    }
    _createClass(Like2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new Like2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
        }
        return obj;
      }
    }]);
    return Like2;
  }();
  exports.Like = Like;
  Like.prototype.gid = undefined;
  Like.prototype.user = undefined;
});

// node_modules/asana/dist/model/MemberCompact.js
var require_MemberCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MemberCompact = undefined;
  var _ApiClient = require_ApiClient();
  var MemberCompact = function() {
    function MemberCompact2() {
      _classCallCheck(this, MemberCompact2);
    }
    _createClass(MemberCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new MemberCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return MemberCompact2;
  }();
  exports.MemberCompact = MemberCompact;
  MemberCompact.prototype.gid = undefined;
  MemberCompact.prototype.resource_type = undefined;
  MemberCompact.prototype.name = undefined;
});

// node_modules/asana/dist/model/MembershipCompact.js
var require_MembershipCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MembershipCompact = undefined;
  var _ApiClient = require_ApiClient();
  var MembershipCompact = function() {
    function MembershipCompact2() {
      _classCallCheck(this, MembershipCompact2);
    }
    _createClass(MembershipCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new MembershipCompact2;
        }
        return obj;
      }
    }]);
    return MembershipCompact2;
  }();
  exports.MembershipCompact = MembershipCompact;
});

// node_modules/asana/dist/model/MembershipRequest.js
var require_MembershipRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MembershipRequest = undefined;
  var _ApiClient = require_ApiClient();
  var MembershipRequest = function() {
    function MembershipRequest2() {
      _classCallCheck(this, MembershipRequest2);
    }
    _createClass(MembershipRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new MembershipRequest2;
          if (data.hasOwnProperty("is_active"))
            obj.is_active = _ApiClient.ApiClient.convertToType(data["is_active"], "Boolean");
        }
        return obj;
      }
    }]);
    return MembershipRequest2;
  }();
  exports.MembershipRequest = MembershipRequest;
  MembershipRequest.prototype.is_active = undefined;
});

// node_modules/asana/dist/model/MembershipResponse.js
var require_MembershipResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MembershipResponse = undefined;
  var _ApiClient = require_ApiClient();
  var MembershipResponse = function() {
    function MembershipResponse2() {
      _classCallCheck(this, MembershipResponse2);
    }
    _createClass(MembershipResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new MembershipResponse2;
        }
        return obj;
      }
    }]);
    return MembershipResponse2;
  }();
  exports.MembershipResponse = MembershipResponse;
});

// node_modules/asana/dist/model/MembershipResponseArray.js
var require_MembershipResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MembershipResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _MembershipResponse = require_MembershipResponse();
  var _NextPage = require_NextPage();
  var MembershipResponseArray = function() {
    function MembershipResponseArray2(data) {
      _classCallCheck(this, MembershipResponseArray2);
      this.data = data;
    }
    _createClass(MembershipResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new MembershipResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_MembershipResponse.MembershipResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return MembershipResponseArray2;
  }();
  exports.MembershipResponseArray = MembershipResponseArray;
  MembershipResponseArray.prototype.data = undefined;
  MembershipResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/MembershipResponseData.js
var require_MembershipResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MembershipResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _MembershipResponse = require_MembershipResponse();
  var MembershipResponseData = function() {
    function MembershipResponseData2(data) {
      _classCallCheck(this, MembershipResponseData2);
      this.data = data;
    }
    _createClass(MembershipResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new MembershipResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _MembershipResponse.MembershipResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return MembershipResponseData2;
  }();
  exports.MembershipResponseData = MembershipResponseData;
  MembershipResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/MembershipsBody.js
var require_MembershipsBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MembershipsBody = undefined;
  var _ApiClient = require_ApiClient();
  var _CreateMembershipRequest = require_CreateMembershipRequest();
  var MembershipsBody = function() {
    function MembershipsBody2() {
      _classCallCheck(this, MembershipsBody2);
    }
    _createClass(MembershipsBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new MembershipsBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _CreateMembershipRequest.CreateMembershipRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return MembershipsBody2;
  }();
  exports.MembershipsBody = MembershipsBody;
  MembershipsBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/ModifyDependenciesRequest.js
var require_ModifyDependenciesRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ModifyDependenciesRequest = undefined;
  var _ApiClient = require_ApiClient();
  var ModifyDependenciesRequest = function() {
    function ModifyDependenciesRequest2() {
      _classCallCheck(this, ModifyDependenciesRequest2);
    }
    _createClass(ModifyDependenciesRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ModifyDependenciesRequest2;
          if (data.hasOwnProperty("dependencies"))
            obj.dependencies = _ApiClient.ApiClient.convertToType(data["dependencies"], ["String"]);
        }
        return obj;
      }
    }]);
    return ModifyDependenciesRequest2;
  }();
  exports.ModifyDependenciesRequest = ModifyDependenciesRequest;
  ModifyDependenciesRequest.prototype.dependencies = undefined;
});

// node_modules/asana/dist/model/ModifyDependentsRequest.js
var require_ModifyDependentsRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ModifyDependentsRequest = undefined;
  var _ApiClient = require_ApiClient();
  var ModifyDependentsRequest = function() {
    function ModifyDependentsRequest2() {
      _classCallCheck(this, ModifyDependentsRequest2);
    }
    _createClass(ModifyDependentsRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ModifyDependentsRequest2;
          if (data.hasOwnProperty("dependents"))
            obj.dependents = _ApiClient.ApiClient.convertToType(data["dependents"], ["String"]);
        }
        return obj;
      }
    }]);
    return ModifyDependentsRequest2;
  }();
  exports.ModifyDependentsRequest = ModifyDependentsRequest;
  ModifyDependentsRequest.prototype.dependents = undefined;
});

// node_modules/asana/dist/model/OrganizationExportBase.js
var require_OrganizationExportBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.OrganizationExportBase = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalResponseWorkspace = require_GoalResponseWorkspace();
  var OrganizationExportBase = function() {
    function OrganizationExportBase2() {
      _classCallCheck(this, OrganizationExportBase2);
    }
    _createClass(OrganizationExportBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new OrganizationExportBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("download_url"))
            obj.download_url = _ApiClient.ApiClient.convertToType(data["download_url"], "String");
          if (data.hasOwnProperty("state"))
            obj.state = _ApiClient.ApiClient.convertToType(data["state"], "String");
          if (data.hasOwnProperty("organization"))
            obj.organization = _GoalResponseWorkspace.GoalResponseWorkspace.constructFromObject(data["organization"]);
        }
        return obj;
      }
    }]);
    return OrganizationExportBase2;
  }();
  exports.OrganizationExportBase = OrganizationExportBase;
  OrganizationExportBase.prototype.gid = undefined;
  OrganizationExportBase.prototype.resource_type = undefined;
  OrganizationExportBase.prototype.created_at = undefined;
  OrganizationExportBase.prototype.download_url = undefined;
  OrganizationExportBase.StateEnum = {
    pending: "pending",
    started: "started",
    finished: "finished",
    error: "error"
  };
  OrganizationExportBase.prototype.state = undefined;
  OrganizationExportBase.prototype.organization = undefined;
});

// node_modules/asana/dist/model/OrganizationExportCompact.js
var require_OrganizationExportCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.OrganizationExportCompact = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalResponseWorkspace = require_GoalResponseWorkspace();
  var OrganizationExportCompact = function() {
    function OrganizationExportCompact2() {
      _classCallCheck(this, OrganizationExportCompact2);
    }
    _createClass(OrganizationExportCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new OrganizationExportCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("download_url"))
            obj.download_url = _ApiClient.ApiClient.convertToType(data["download_url"], "String");
          if (data.hasOwnProperty("state"))
            obj.state = _ApiClient.ApiClient.convertToType(data["state"], "String");
          if (data.hasOwnProperty("organization"))
            obj.organization = _GoalResponseWorkspace.GoalResponseWorkspace.constructFromObject(data["organization"]);
        }
        return obj;
      }
    }]);
    return OrganizationExportCompact2;
  }();
  exports.OrganizationExportCompact = OrganizationExportCompact;
  OrganizationExportCompact.prototype.gid = undefined;
  OrganizationExportCompact.prototype.resource_type = undefined;
  OrganizationExportCompact.prototype.created_at = undefined;
  OrganizationExportCompact.prototype.download_url = undefined;
  OrganizationExportCompact.StateEnum = {
    pending: "pending",
    started: "started",
    finished: "finished",
    error: "error"
  };
  OrganizationExportCompact.prototype.state = undefined;
  OrganizationExportCompact.prototype.organization = undefined;
});

// node_modules/asana/dist/model/OrganizationExportRequest.js
var require_OrganizationExportRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.OrganizationExportRequest = undefined;
  var _ApiClient = require_ApiClient();
  var OrganizationExportRequest = function() {
    function OrganizationExportRequest2() {
      _classCallCheck(this, OrganizationExportRequest2);
    }
    _createClass(OrganizationExportRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new OrganizationExportRequest2;
          if (data.hasOwnProperty("organization"))
            obj.organization = _ApiClient.ApiClient.convertToType(data["organization"], "String");
        }
        return obj;
      }
    }]);
    return OrganizationExportRequest2;
  }();
  exports.OrganizationExportRequest = OrganizationExportRequest;
  OrganizationExportRequest.prototype.organization = undefined;
});

// node_modules/asana/dist/model/OrganizationExportResponse.js
var require_OrganizationExportResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.OrganizationExportResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalResponseWorkspace = require_GoalResponseWorkspace();
  var OrganizationExportResponse = function() {
    function OrganizationExportResponse2() {
      _classCallCheck(this, OrganizationExportResponse2);
    }
    _createClass(OrganizationExportResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new OrganizationExportResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("download_url"))
            obj.download_url = _ApiClient.ApiClient.convertToType(data["download_url"], "String");
          if (data.hasOwnProperty("state"))
            obj.state = _ApiClient.ApiClient.convertToType(data["state"], "String");
          if (data.hasOwnProperty("organization"))
            obj.organization = _GoalResponseWorkspace.GoalResponseWorkspace.constructFromObject(data["organization"]);
        }
        return obj;
      }
    }]);
    return OrganizationExportResponse2;
  }();
  exports.OrganizationExportResponse = OrganizationExportResponse;
  OrganizationExportResponse.prototype.gid = undefined;
  OrganizationExportResponse.prototype.resource_type = undefined;
  OrganizationExportResponse.prototype.created_at = undefined;
  OrganizationExportResponse.prototype.download_url = undefined;
  OrganizationExportResponse.StateEnum = {
    pending: "pending",
    started: "started",
    finished: "finished",
    error: "error"
  };
  OrganizationExportResponse.prototype.state = undefined;
  OrganizationExportResponse.prototype.organization = undefined;
});

// node_modules/asana/dist/model/OrganizationExportResponseData.js
var require_OrganizationExportResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.OrganizationExportResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _OrganizationExportResponse = require_OrganizationExportResponse();
  var OrganizationExportResponseData = function() {
    function OrganizationExportResponseData2(data) {
      _classCallCheck(this, OrganizationExportResponseData2);
      this.data = data;
    }
    _createClass(OrganizationExportResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new OrganizationExportResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _OrganizationExportResponse.OrganizationExportResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return OrganizationExportResponseData2;
  }();
  exports.OrganizationExportResponseData = OrganizationExportResponseData;
  OrganizationExportResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/OrganizationExportsBody.js
var require_OrganizationExportsBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.OrganizationExportsBody = undefined;
  var _ApiClient = require_ApiClient();
  var _OrganizationExportRequest = require_OrganizationExportRequest();
  var OrganizationExportsBody = function() {
    function OrganizationExportsBody2() {
      _classCallCheck(this, OrganizationExportsBody2);
    }
    _createClass(OrganizationExportsBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new OrganizationExportsBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _OrganizationExportRequest.OrganizationExportRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return OrganizationExportsBody2;
  }();
  exports.OrganizationExportsBody = OrganizationExportsBody;
  OrganizationExportsBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/PortfolioAddItemRequest.js
var require_PortfolioAddItemRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioAddItemRequest = undefined;
  var _ApiClient = require_ApiClient();
  var PortfolioAddItemRequest = function() {
    function PortfolioAddItemRequest2(item) {
      _classCallCheck(this, PortfolioAddItemRequest2);
      this.item = item;
    }
    _createClass(PortfolioAddItemRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioAddItemRequest2;
          if (data.hasOwnProperty("item"))
            obj.item = _ApiClient.ApiClient.convertToType(data["item"], "String");
          if (data.hasOwnProperty("insert_before"))
            obj.insert_before = _ApiClient.ApiClient.convertToType(data["insert_before"], "String");
          if (data.hasOwnProperty("insert_after"))
            obj.insert_after = _ApiClient.ApiClient.convertToType(data["insert_after"], "String");
        }
        return obj;
      }
    }]);
    return PortfolioAddItemRequest2;
  }();
  exports.PortfolioAddItemRequest = PortfolioAddItemRequest;
  PortfolioAddItemRequest.prototype.item = undefined;
  PortfolioAddItemRequest.prototype.insert_before = undefined;
  PortfolioAddItemRequest.prototype.insert_after = undefined;
});

// node_modules/asana/dist/model/PortfolioBase.js
var require_PortfolioBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioBase = undefined;
  var _ApiClient = require_ApiClient();
  var PortfolioBase = function() {
    function PortfolioBase2() {
      _classCallCheck(this, PortfolioBase2);
    }
    _createClass(PortfolioBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
        }
        return obj;
      }
    }]);
    return PortfolioBase2;
  }();
  exports.PortfolioBase = PortfolioBase;
  PortfolioBase.prototype.gid = undefined;
  PortfolioBase.prototype.resource_type = undefined;
  PortfolioBase.prototype.name = undefined;
  PortfolioBase.ColorEnum = {
    dark_pink: "dark-pink",
    dark_green: "dark-green",
    dark_blue: "dark-blue",
    dark_red: "dark-red",
    dark_teal: "dark-teal",
    dark_brown: "dark-brown",
    dark_orange: "dark-orange",
    dark_purple: "dark-purple",
    dark_warm_gray: "dark-warm-gray",
    light_pink: "light-pink",
    light_green: "light-green",
    light_blue: "light-blue",
    light_red: "light-red",
    light_teal: "light-teal",
    light_brown: "light-brown",
    light_orange: "light-orange",
    light_purple: "light-purple",
    light_warm_gray: "light-warm-gray"
  };
  PortfolioBase.prototype.color = undefined;
});

// node_modules/asana/dist/model/PortfolioCompact.js
var require_PortfolioCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioCompact = undefined;
  var _ApiClient = require_ApiClient();
  var PortfolioCompact = function() {
    function PortfolioCompact2() {
      _classCallCheck(this, PortfolioCompact2);
    }
    _createClass(PortfolioCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return PortfolioCompact2;
  }();
  exports.PortfolioCompact = PortfolioCompact;
  PortfolioCompact.prototype.gid = undefined;
  PortfolioCompact.prototype.resource_type = undefined;
  PortfolioCompact.prototype.name = undefined;
});

// node_modules/asana/dist/model/PortfolioGidAddCustomFieldSettingBody.js
var require_PortfolioGidAddCustomFieldSettingBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioGidAddCustomFieldSettingBody = undefined;
  var _ApiClient = require_ApiClient();
  var _AddCustomFieldSettingRequest = require_AddCustomFieldSettingRequest();
  var PortfolioGidAddCustomFieldSettingBody = function() {
    function PortfolioGidAddCustomFieldSettingBody2() {
      _classCallCheck(this, PortfolioGidAddCustomFieldSettingBody2);
    }
    _createClass(PortfolioGidAddCustomFieldSettingBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioGidAddCustomFieldSettingBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _AddCustomFieldSettingRequest.AddCustomFieldSettingRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return PortfolioGidAddCustomFieldSettingBody2;
  }();
  exports.PortfolioGidAddCustomFieldSettingBody = PortfolioGidAddCustomFieldSettingBody;
  PortfolioGidAddCustomFieldSettingBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/PortfolioGidAddItemBody.js
var require_PortfolioGidAddItemBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioGidAddItemBody = undefined;
  var _ApiClient = require_ApiClient();
  var _PortfolioAddItemRequest = require_PortfolioAddItemRequest();
  var PortfolioGidAddItemBody = function() {
    function PortfolioGidAddItemBody2() {
      _classCallCheck(this, PortfolioGidAddItemBody2);
    }
    _createClass(PortfolioGidAddItemBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioGidAddItemBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _PortfolioAddItemRequest.PortfolioAddItemRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return PortfolioGidAddItemBody2;
  }();
  exports.PortfolioGidAddItemBody = PortfolioGidAddItemBody;
  PortfolioGidAddItemBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/PortfolioGidAddMembersBody.js
var require_PortfolioGidAddMembersBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioGidAddMembersBody = undefined;
  var _ApiClient = require_ApiClient();
  var _AddMembersRequest = require_AddMembersRequest();
  var PortfolioGidAddMembersBody = function() {
    function PortfolioGidAddMembersBody2() {
      _classCallCheck(this, PortfolioGidAddMembersBody2);
    }
    _createClass(PortfolioGidAddMembersBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioGidAddMembersBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _AddMembersRequest.AddMembersRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return PortfolioGidAddMembersBody2;
  }();
  exports.PortfolioGidAddMembersBody = PortfolioGidAddMembersBody;
  PortfolioGidAddMembersBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/RemoveCustomFieldSettingRequest.js
var require_RemoveCustomFieldSettingRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RemoveCustomFieldSettingRequest = undefined;
  var _ApiClient = require_ApiClient();
  var RemoveCustomFieldSettingRequest = function() {
    function RemoveCustomFieldSettingRequest2(custom_field) {
      _classCallCheck(this, RemoveCustomFieldSettingRequest2);
      this.custom_field = custom_field;
    }
    _createClass(RemoveCustomFieldSettingRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new RemoveCustomFieldSettingRequest2;
          if (data.hasOwnProperty("custom_field"))
            obj.custom_field = _ApiClient.ApiClient.convertToType(data["custom_field"], "String");
        }
        return obj;
      }
    }]);
    return RemoveCustomFieldSettingRequest2;
  }();
  exports.RemoveCustomFieldSettingRequest = RemoveCustomFieldSettingRequest;
  RemoveCustomFieldSettingRequest.prototype.custom_field = undefined;
});

// node_modules/asana/dist/model/PortfolioGidRemoveCustomFieldSettingBody.js
var require_PortfolioGidRemoveCustomFieldSettingBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioGidRemoveCustomFieldSettingBody = undefined;
  var _ApiClient = require_ApiClient();
  var _RemoveCustomFieldSettingRequest = require_RemoveCustomFieldSettingRequest();
  var PortfolioGidRemoveCustomFieldSettingBody = function() {
    function PortfolioGidRemoveCustomFieldSettingBody2() {
      _classCallCheck(this, PortfolioGidRemoveCustomFieldSettingBody2);
    }
    _createClass(PortfolioGidRemoveCustomFieldSettingBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioGidRemoveCustomFieldSettingBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _RemoveCustomFieldSettingRequest.RemoveCustomFieldSettingRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return PortfolioGidRemoveCustomFieldSettingBody2;
  }();
  exports.PortfolioGidRemoveCustomFieldSettingBody = PortfolioGidRemoveCustomFieldSettingBody;
  PortfolioGidRemoveCustomFieldSettingBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/PortfolioRemoveItemRequest.js
var require_PortfolioRemoveItemRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioRemoveItemRequest = undefined;
  var _ApiClient = require_ApiClient();
  var PortfolioRemoveItemRequest = function() {
    function PortfolioRemoveItemRequest2(item) {
      _classCallCheck(this, PortfolioRemoveItemRequest2);
      this.item = item;
    }
    _createClass(PortfolioRemoveItemRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioRemoveItemRequest2;
          if (data.hasOwnProperty("item"))
            obj.item = _ApiClient.ApiClient.convertToType(data["item"], "String");
        }
        return obj;
      }
    }]);
    return PortfolioRemoveItemRequest2;
  }();
  exports.PortfolioRemoveItemRequest = PortfolioRemoveItemRequest;
  PortfolioRemoveItemRequest.prototype.item = undefined;
});

// node_modules/asana/dist/model/PortfolioGidRemoveItemBody.js
var require_PortfolioGidRemoveItemBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioGidRemoveItemBody = undefined;
  var _ApiClient = require_ApiClient();
  var _PortfolioRemoveItemRequest = require_PortfolioRemoveItemRequest();
  var PortfolioGidRemoveItemBody = function() {
    function PortfolioGidRemoveItemBody2() {
      _classCallCheck(this, PortfolioGidRemoveItemBody2);
    }
    _createClass(PortfolioGidRemoveItemBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioGidRemoveItemBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _PortfolioRemoveItemRequest.PortfolioRemoveItemRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return PortfolioGidRemoveItemBody2;
  }();
  exports.PortfolioGidRemoveItemBody = PortfolioGidRemoveItemBody;
  PortfolioGidRemoveItemBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/RemoveMembersRequest.js
var require_RemoveMembersRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RemoveMembersRequest = undefined;
  var _ApiClient = require_ApiClient();
  var RemoveMembersRequest = function() {
    function RemoveMembersRequest2(members) {
      _classCallCheck(this, RemoveMembersRequest2);
      this.members = members;
    }
    _createClass(RemoveMembersRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new RemoveMembersRequest2;
          if (data.hasOwnProperty("members"))
            obj.members = _ApiClient.ApiClient.convertToType(data["members"], "String");
        }
        return obj;
      }
    }]);
    return RemoveMembersRequest2;
  }();
  exports.RemoveMembersRequest = RemoveMembersRequest;
  RemoveMembersRequest.prototype.members = undefined;
});

// node_modules/asana/dist/model/PortfolioGidRemoveMembersBody.js
var require_PortfolioGidRemoveMembersBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioGidRemoveMembersBody = undefined;
  var _ApiClient = require_ApiClient();
  var _RemoveMembersRequest = require_RemoveMembersRequest();
  var PortfolioGidRemoveMembersBody = function() {
    function PortfolioGidRemoveMembersBody2() {
      _classCallCheck(this, PortfolioGidRemoveMembersBody2);
    }
    _createClass(PortfolioGidRemoveMembersBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioGidRemoveMembersBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _RemoveMembersRequest.RemoveMembersRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return PortfolioGidRemoveMembersBody2;
  }();
  exports.PortfolioGidRemoveMembersBody = PortfolioGidRemoveMembersBody;
  PortfolioGidRemoveMembersBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/PortfolioMembershipBasePortfolio.js
var require_PortfolioMembershipBasePortfolio = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioMembershipBasePortfolio = undefined;
  var _ApiClient = require_ApiClient();
  var PortfolioMembershipBasePortfolio = function() {
    function PortfolioMembershipBasePortfolio2() {
      _classCallCheck(this, PortfolioMembershipBasePortfolio2);
    }
    _createClass(PortfolioMembershipBasePortfolio2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioMembershipBasePortfolio2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return PortfolioMembershipBasePortfolio2;
  }();
  exports.PortfolioMembershipBasePortfolio = PortfolioMembershipBasePortfolio;
  PortfolioMembershipBasePortfolio.prototype.gid = undefined;
  PortfolioMembershipBasePortfolio.prototype.resource_type = undefined;
  PortfolioMembershipBasePortfolio.prototype.name = undefined;
});

// node_modules/asana/dist/model/PortfolioMembershipBase.js
var require_PortfolioMembershipBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioMembershipBase = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _PortfolioMembershipBasePortfolio = require_PortfolioMembershipBasePortfolio();
  var PortfolioMembershipBase = function() {
    function PortfolioMembershipBase2() {
      _classCallCheck(this, PortfolioMembershipBase2);
    }
    _createClass(PortfolioMembershipBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioMembershipBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("portfolio"))
            obj.portfolio = _PortfolioMembershipBasePortfolio.PortfolioMembershipBasePortfolio.constructFromObject(data["portfolio"]);
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
        }
        return obj;
      }
    }]);
    return PortfolioMembershipBase2;
  }();
  exports.PortfolioMembershipBase = PortfolioMembershipBase;
  PortfolioMembershipBase.prototype.gid = undefined;
  PortfolioMembershipBase.prototype.resource_type = undefined;
  PortfolioMembershipBase.prototype.portfolio = undefined;
  PortfolioMembershipBase.prototype.user = undefined;
});

// node_modules/asana/dist/model/PortfolioMembershipCompact.js
var require_PortfolioMembershipCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioMembershipCompact = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _PortfolioMembershipBasePortfolio = require_PortfolioMembershipBasePortfolio();
  var PortfolioMembershipCompact = function() {
    function PortfolioMembershipCompact2() {
      _classCallCheck(this, PortfolioMembershipCompact2);
    }
    _createClass(PortfolioMembershipCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioMembershipCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("portfolio"))
            obj.portfolio = _PortfolioMembershipBasePortfolio.PortfolioMembershipBasePortfolio.constructFromObject(data["portfolio"]);
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
        }
        return obj;
      }
    }]);
    return PortfolioMembershipCompact2;
  }();
  exports.PortfolioMembershipCompact = PortfolioMembershipCompact;
  PortfolioMembershipCompact.prototype.gid = undefined;
  PortfolioMembershipCompact.prototype.resource_type = undefined;
  PortfolioMembershipCompact.prototype.portfolio = undefined;
  PortfolioMembershipCompact.prototype.user = undefined;
});

// node_modules/asana/dist/model/PortfolioMembershipResponse.js
var require_PortfolioMembershipResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioMembershipResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _PortfolioMembershipBasePortfolio = require_PortfolioMembershipBasePortfolio();
  var PortfolioMembershipResponse = function() {
    function PortfolioMembershipResponse2() {
      _classCallCheck(this, PortfolioMembershipResponse2);
    }
    _createClass(PortfolioMembershipResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioMembershipResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("portfolio"))
            obj.portfolio = _PortfolioMembershipBasePortfolio.PortfolioMembershipBasePortfolio.constructFromObject(data["portfolio"]);
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
        }
        return obj;
      }
    }]);
    return PortfolioMembershipResponse2;
  }();
  exports.PortfolioMembershipResponse = PortfolioMembershipResponse;
  PortfolioMembershipResponse.prototype.gid = undefined;
  PortfolioMembershipResponse.prototype.resource_type = undefined;
  PortfolioMembershipResponse.prototype.portfolio = undefined;
  PortfolioMembershipResponse.prototype.user = undefined;
});

// node_modules/asana/dist/model/PortfolioMembershipResponseArray.js
var require_PortfolioMembershipResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioMembershipResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _PortfolioMembershipResponse = require_PortfolioMembershipResponse();
  var PortfolioMembershipResponseArray = function() {
    function PortfolioMembershipResponseArray2(data) {
      _classCallCheck(this, PortfolioMembershipResponseArray2);
      this.data = data;
    }
    _createClass(PortfolioMembershipResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioMembershipResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_PortfolioMembershipResponse.PortfolioMembershipResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return PortfolioMembershipResponseArray2;
  }();
  exports.PortfolioMembershipResponseArray = PortfolioMembershipResponseArray;
  PortfolioMembershipResponseArray.prototype.data = undefined;
  PortfolioMembershipResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/PortfolioMembershipResponseData.js
var require_PortfolioMembershipResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioMembershipResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _PortfolioMembershipResponse = require_PortfolioMembershipResponse();
  var PortfolioMembershipResponseData = function() {
    function PortfolioMembershipResponseData2(data) {
      _classCallCheck(this, PortfolioMembershipResponseData2);
      this.data = data;
    }
    _createClass(PortfolioMembershipResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioMembershipResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _PortfolioMembershipResponse.PortfolioMembershipResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return PortfolioMembershipResponseData2;
  }();
  exports.PortfolioMembershipResponseData = PortfolioMembershipResponseData;
  PortfolioMembershipResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/PortfolioRequest.js
var require_PortfolioRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioRequest = undefined;
  var _ApiClient = require_ApiClient();
  var PortfolioRequest = function() {
    function PortfolioRequest2() {
      _classCallCheck(this, PortfolioRequest2);
    }
    _createClass(PortfolioRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
          if (data.hasOwnProperty("members"))
            obj.members = _ApiClient.ApiClient.convertToType(data["members"], ["String"]);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _ApiClient.ApiClient.convertToType(data["workspace"], "String");
          if (data.hasOwnProperty("public"))
            obj._public = _ApiClient.ApiClient.convertToType(data["public"], "Boolean");
        }
        return obj;
      }
    }]);
    return PortfolioRequest2;
  }();
  exports.PortfolioRequest = PortfolioRequest;
  PortfolioRequest.prototype.gid = undefined;
  PortfolioRequest.prototype.resource_type = undefined;
  PortfolioRequest.prototype.name = undefined;
  PortfolioRequest.ColorEnum = {
    dark_pink: "dark-pink",
    dark_green: "dark-green",
    dark_blue: "dark-blue",
    dark_red: "dark-red",
    dark_teal: "dark-teal",
    dark_brown: "dark-brown",
    dark_orange: "dark-orange",
    dark_purple: "dark-purple",
    dark_warm_gray: "dark-warm-gray",
    light_pink: "light-pink",
    light_green: "light-green",
    light_blue: "light-blue",
    light_red: "light-red",
    light_teal: "light-teal",
    light_brown: "light-brown",
    light_orange: "light-orange",
    light_purple: "light-purple",
    light_warm_gray: "light-warm-gray"
  };
  PortfolioRequest.prototype.color = undefined;
  PortfolioRequest.prototype.members = undefined;
  PortfolioRequest.prototype.workspace = undefined;
  PortfolioRequest.prototype._public = undefined;
});

// node_modules/asana/dist/model/PortfolioResponseCurrentStatusUpdate.js
var require_PortfolioResponseCurrentStatusUpdate = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioResponseCurrentStatusUpdate = undefined;
  var _ApiClient = require_ApiClient();
  var PortfolioResponseCurrentStatusUpdate = function() {
    function PortfolioResponseCurrentStatusUpdate2() {
      _classCallCheck(this, PortfolioResponseCurrentStatusUpdate2);
    }
    _createClass(PortfolioResponseCurrentStatusUpdate2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioResponseCurrentStatusUpdate2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
        }
        return obj;
      }
    }]);
    return PortfolioResponseCurrentStatusUpdate2;
  }();
  exports.PortfolioResponseCurrentStatusUpdate = PortfolioResponseCurrentStatusUpdate;
  PortfolioResponseCurrentStatusUpdate.prototype.gid = undefined;
  PortfolioResponseCurrentStatusUpdate.prototype.resource_type = undefined;
  PortfolioResponseCurrentStatusUpdate.prototype.title = undefined;
  PortfolioResponseCurrentStatusUpdate.ResourceSubtypeEnum = {
    project_status_update: "project_status_update",
    portfolio_status_update: "portfolio_status_update",
    goal_status_update: "goal_status_update"
  };
  PortfolioResponseCurrentStatusUpdate.prototype.resource_subtype = undefined;
});

// node_modules/asana/dist/model/PortfolioResponseCustomFieldSettings.js
var require_PortfolioResponseCustomFieldSettings = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioResponseCustomFieldSettings = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldSettingResponseCustomField = require_CustomFieldSettingResponseCustomField();
  var _CustomFieldSettingResponseParent = require_CustomFieldSettingResponseParent();
  var _CustomFieldSettingResponseProject = require_CustomFieldSettingResponseProject();
  var PortfolioResponseCustomFieldSettings = function() {
    function PortfolioResponseCustomFieldSettings2() {
      _classCallCheck(this, PortfolioResponseCustomFieldSettings2);
    }
    _createClass(PortfolioResponseCustomFieldSettings2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioResponseCustomFieldSettings2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("project"))
            obj.project = _CustomFieldSettingResponseProject.CustomFieldSettingResponseProject.constructFromObject(data["project"]);
          if (data.hasOwnProperty("is_important"))
            obj.is_important = _ApiClient.ApiClient.convertToType(data["is_important"], "Boolean");
          if (data.hasOwnProperty("parent"))
            obj.parent = _CustomFieldSettingResponseParent.CustomFieldSettingResponseParent.constructFromObject(data["parent"]);
          if (data.hasOwnProperty("custom_field"))
            obj.custom_field = _CustomFieldSettingResponseCustomField.CustomFieldSettingResponseCustomField.constructFromObject(data["custom_field"]);
        }
        return obj;
      }
    }]);
    return PortfolioResponseCustomFieldSettings2;
  }();
  exports.PortfolioResponseCustomFieldSettings = PortfolioResponseCustomFieldSettings;
  PortfolioResponseCustomFieldSettings.prototype.gid = undefined;
  PortfolioResponseCustomFieldSettings.prototype.resource_type = undefined;
  PortfolioResponseCustomFieldSettings.prototype.project = undefined;
  PortfolioResponseCustomFieldSettings.prototype.is_important = undefined;
  PortfolioResponseCustomFieldSettings.prototype.parent = undefined;
  PortfolioResponseCustomFieldSettings.prototype.custom_field = undefined;
});

// node_modules/asana/dist/model/PortfolioResponseCustomFields.js
var require_PortfolioResponseCustomFields = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioResponseCustomFields = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldBaseDateValue = require_CustomFieldBaseDateValue();
  var _CustomFieldBaseEnumOptions = require_CustomFieldBaseEnumOptions();
  var _CustomFieldBaseEnumValue = require_CustomFieldBaseEnumValue();
  var PortfolioResponseCustomFields = function() {
    function PortfolioResponseCustomFields2() {
      _classCallCheck(this, PortfolioResponseCustomFields2);
    }
    _createClass(PortfolioResponseCustomFields2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioResponseCustomFields2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("type"))
            obj.type = _ApiClient.ApiClient.convertToType(data["type"], "String");
          if (data.hasOwnProperty("enum_options"))
            obj.enum_options = _ApiClient.ApiClient.convertToType(data["enum_options"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("enabled"))
            obj.enabled = _ApiClient.ApiClient.convertToType(data["enabled"], "Boolean");
          if (data.hasOwnProperty("is_formula_field"))
            obj.is_formula_field = _ApiClient.ApiClient.convertToType(data["is_formula_field"], "Boolean");
          if (data.hasOwnProperty("date_value"))
            obj.date_value = _CustomFieldBaseDateValue.CustomFieldBaseDateValue.constructFromObject(data["date_value"]);
          if (data.hasOwnProperty("enum_value"))
            obj.enum_value = _CustomFieldBaseEnumValue.CustomFieldBaseEnumValue.constructFromObject(data["enum_value"]);
          if (data.hasOwnProperty("multi_enum_values"))
            obj.multi_enum_values = _ApiClient.ApiClient.convertToType(data["multi_enum_values"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("number_value"))
            obj.number_value = _ApiClient.ApiClient.convertToType(data["number_value"], "Number");
          if (data.hasOwnProperty("text_value"))
            obj.text_value = _ApiClient.ApiClient.convertToType(data["text_value"], "String");
          if (data.hasOwnProperty("display_value"))
            obj.display_value = _ApiClient.ApiClient.convertToType(data["display_value"], "String");
        }
        return obj;
      }
    }]);
    return PortfolioResponseCustomFields2;
  }();
  exports.PortfolioResponseCustomFields = PortfolioResponseCustomFields;
  PortfolioResponseCustomFields.prototype.gid = undefined;
  PortfolioResponseCustomFields.prototype.resource_type = undefined;
  PortfolioResponseCustomFields.prototype.name = undefined;
  PortfolioResponseCustomFields.ResourceSubtypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  PortfolioResponseCustomFields.prototype.resource_subtype = undefined;
  PortfolioResponseCustomFields.TypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  PortfolioResponseCustomFields.prototype.type = undefined;
  PortfolioResponseCustomFields.prototype.enum_options = undefined;
  PortfolioResponseCustomFields.prototype.enabled = undefined;
  PortfolioResponseCustomFields.prototype.is_formula_field = undefined;
  PortfolioResponseCustomFields.prototype.date_value = undefined;
  PortfolioResponseCustomFields.prototype.enum_value = undefined;
  PortfolioResponseCustomFields.prototype.multi_enum_values = undefined;
  PortfolioResponseCustomFields.prototype.number_value = undefined;
  PortfolioResponseCustomFields.prototype.text_value = undefined;
  PortfolioResponseCustomFields.prototype.display_value = undefined;
});

// node_modules/asana/dist/model/PortfolioResponseWorkspace.js
var require_PortfolioResponseWorkspace = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioResponseWorkspace = undefined;
  var _ApiClient = require_ApiClient();
  var PortfolioResponseWorkspace = function() {
    function PortfolioResponseWorkspace2() {
      _classCallCheck(this, PortfolioResponseWorkspace2);
    }
    _createClass(PortfolioResponseWorkspace2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioResponseWorkspace2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return PortfolioResponseWorkspace2;
  }();
  exports.PortfolioResponseWorkspace = PortfolioResponseWorkspace;
  PortfolioResponseWorkspace.prototype.gid = undefined;
  PortfolioResponseWorkspace.prototype.resource_type = undefined;
  PortfolioResponseWorkspace.prototype.name = undefined;
});

// node_modules/asana/dist/model/PortfolioResponse.js
var require_PortfolioResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _JobBaseNewProjectTemplate = require_JobBaseNewProjectTemplate();
  var _PortfolioResponseCurrentStatusUpdate = require_PortfolioResponseCurrentStatusUpdate();
  var _PortfolioResponseCustomFieldSettings = require_PortfolioResponseCustomFieldSettings();
  var _PortfolioResponseCustomFields = require_PortfolioResponseCustomFields();
  var _PortfolioResponseWorkspace = require_PortfolioResponseWorkspace();
  var PortfolioResponse = function() {
    function PortfolioResponse2() {
      _classCallCheck(this, PortfolioResponse2);
    }
    _createClass(PortfolioResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["created_by"]);
          if (data.hasOwnProperty("custom_field_settings"))
            obj.custom_field_settings = _ApiClient.ApiClient.convertToType(data["custom_field_settings"], [_PortfolioResponseCustomFieldSettings.PortfolioResponseCustomFieldSettings]);
          if (data.hasOwnProperty("current_status_update"))
            obj.current_status_update = _PortfolioResponseCurrentStatusUpdate.PortfolioResponseCurrentStatusUpdate.constructFromObject(data["current_status_update"]);
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "Date");
          if (data.hasOwnProperty("custom_fields"))
            obj.custom_fields = _ApiClient.ApiClient.convertToType(data["custom_fields"], [_PortfolioResponseCustomFields.PortfolioResponseCustomFields]);
          if (data.hasOwnProperty("members"))
            obj.members = _ApiClient.ApiClient.convertToType(data["members"], [_CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue]);
          if (data.hasOwnProperty("owner"))
            obj.owner = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["owner"]);
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "Date");
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _PortfolioResponseWorkspace.PortfolioResponseWorkspace.constructFromObject(data["workspace"]);
          if (data.hasOwnProperty("permalink_url"))
            obj.permalink_url = _ApiClient.ApiClient.convertToType(data["permalink_url"], "String");
          if (data.hasOwnProperty("public"))
            obj._public = _ApiClient.ApiClient.convertToType(data["public"], "Boolean");
          if (data.hasOwnProperty("project_templates"))
            obj.project_templates = _ApiClient.ApiClient.convertToType(data["project_templates"], [_JobBaseNewProjectTemplate.JobBaseNewProjectTemplate]);
        }
        return obj;
      }
    }]);
    return PortfolioResponse2;
  }();
  exports.PortfolioResponse = PortfolioResponse;
  PortfolioResponse.prototype.gid = undefined;
  PortfolioResponse.prototype.resource_type = undefined;
  PortfolioResponse.prototype.name = undefined;
  PortfolioResponse.ColorEnum = {
    dark_pink: "dark-pink",
    dark_green: "dark-green",
    dark_blue: "dark-blue",
    dark_red: "dark-red",
    dark_teal: "dark-teal",
    dark_brown: "dark-brown",
    dark_orange: "dark-orange",
    dark_purple: "dark-purple",
    dark_warm_gray: "dark-warm-gray",
    light_pink: "light-pink",
    light_green: "light-green",
    light_blue: "light-blue",
    light_red: "light-red",
    light_teal: "light-teal",
    light_brown: "light-brown",
    light_orange: "light-orange",
    light_purple: "light-purple",
    light_warm_gray: "light-warm-gray"
  };
  PortfolioResponse.prototype.color = undefined;
  PortfolioResponse.prototype.created_at = undefined;
  PortfolioResponse.prototype.created_by = undefined;
  PortfolioResponse.prototype.custom_field_settings = undefined;
  PortfolioResponse.prototype.current_status_update = undefined;
  PortfolioResponse.prototype.due_on = undefined;
  PortfolioResponse.prototype.custom_fields = undefined;
  PortfolioResponse.prototype.members = undefined;
  PortfolioResponse.prototype.owner = undefined;
  PortfolioResponse.prototype.start_on = undefined;
  PortfolioResponse.prototype.workspace = undefined;
  PortfolioResponse.prototype.permalink_url = undefined;
  PortfolioResponse.prototype._public = undefined;
  PortfolioResponse.prototype.project_templates = undefined;
});

// node_modules/asana/dist/model/PortfolioResponseArray.js
var require_PortfolioResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _PortfolioResponse = require_PortfolioResponse();
  var PortfolioResponseArray = function() {
    function PortfolioResponseArray2(data) {
      _classCallCheck(this, PortfolioResponseArray2);
      this.data = data;
    }
    _createClass(PortfolioResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_PortfolioResponse.PortfolioResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return PortfolioResponseArray2;
  }();
  exports.PortfolioResponseArray = PortfolioResponseArray;
  PortfolioResponseArray.prototype.data = undefined;
  PortfolioResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/PortfolioResponseData.js
var require_PortfolioResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _PortfolioResponse = require_PortfolioResponse();
  var PortfolioResponseData = function() {
    function PortfolioResponseData2(data) {
      _classCallCheck(this, PortfolioResponseData2);
      this.data = data;
    }
    _createClass(PortfolioResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfolioResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _PortfolioResponse.PortfolioResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return PortfolioResponseData2;
  }();
  exports.PortfolioResponseData = PortfolioResponseData;
  PortfolioResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/PortfoliosBody.js
var require_PortfoliosBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfoliosBody = undefined;
  var _ApiClient = require_ApiClient();
  var _PortfolioRequest = require_PortfolioRequest();
  var PortfoliosBody = function() {
    function PortfoliosBody2() {
      _classCallCheck(this, PortfoliosBody2);
    }
    _createClass(PortfoliosBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfoliosBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _PortfolioRequest.PortfolioRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return PortfoliosBody2;
  }();
  exports.PortfoliosBody = PortfoliosBody;
  PortfoliosBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/PortfoliosPortfolioGidBody.js
var require_PortfoliosPortfolioGidBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfoliosPortfolioGidBody = undefined;
  var _ApiClient = require_ApiClient();
  var _PortfolioRequest = require_PortfolioRequest();
  var PortfoliosPortfolioGidBody = function() {
    function PortfoliosPortfolioGidBody2() {
      _classCallCheck(this, PortfoliosPortfolioGidBody2);
    }
    _createClass(PortfoliosPortfolioGidBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new PortfoliosPortfolioGidBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _PortfolioRequest.PortfolioRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return PortfoliosPortfolioGidBody2;
  }();
  exports.PortfoliosPortfolioGidBody = PortfoliosPortfolioGidBody;
  PortfoliosPortfolioGidBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/Preview.js
var require_Preview = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Preview = undefined;
  var _ApiClient = require_ApiClient();
  var Preview = function() {
    function Preview2() {
      _classCallCheck(this, Preview2);
    }
    _createClass(Preview2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new Preview2;
          if (data.hasOwnProperty("fallback"))
            obj.fallback = _ApiClient.ApiClient.convertToType(data["fallback"], "String");
          if (data.hasOwnProperty("footer"))
            obj.footer = _ApiClient.ApiClient.convertToType(data["footer"], "String");
          if (data.hasOwnProperty("header"))
            obj.header = _ApiClient.ApiClient.convertToType(data["header"], "String");
          if (data.hasOwnProperty("header_link"))
            obj.header_link = _ApiClient.ApiClient.convertToType(data["header_link"], "String");
          if (data.hasOwnProperty("html_text"))
            obj.html_text = _ApiClient.ApiClient.convertToType(data["html_text"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("title_link"))
            obj.title_link = _ApiClient.ApiClient.convertToType(data["title_link"], "String");
        }
        return obj;
      }
    }]);
    return Preview2;
  }();
  exports.Preview = Preview;
  Preview.prototype.fallback = undefined;
  Preview.prototype.footer = undefined;
  Preview.prototype.header = undefined;
  Preview.prototype.header_link = undefined;
  Preview.prototype.html_text = undefined;
  Preview.prototype.text = undefined;
  Preview.prototype.title = undefined;
  Preview.prototype.title_link = undefined;
});

// node_modules/asana/dist/model/ProjectBaseCurrentStatus.js
var require_ProjectBaseCurrentStatus = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectBaseCurrentStatus = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var ProjectBaseCurrentStatus = function() {
    function ProjectBaseCurrentStatus2(text, color) {
      _classCallCheck(this, ProjectBaseCurrentStatus2);
      this.text = text;
      this.color = color;
    }
    _createClass(ProjectBaseCurrentStatus2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectBaseCurrentStatus2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
          if (data.hasOwnProperty("html_text"))
            obj.html_text = _ApiClient.ApiClient.convertToType(data["html_text"], "String");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
          if (data.hasOwnProperty("author"))
            obj.author = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["author"]);
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["created_by"]);
          if (data.hasOwnProperty("modified_at"))
            obj.modified_at = _ApiClient.ApiClient.convertToType(data["modified_at"], "Date");
        }
        return obj;
      }
    }]);
    return ProjectBaseCurrentStatus2;
  }();
  exports.ProjectBaseCurrentStatus = ProjectBaseCurrentStatus;
  ProjectBaseCurrentStatus.prototype.gid = undefined;
  ProjectBaseCurrentStatus.prototype.resource_type = undefined;
  ProjectBaseCurrentStatus.prototype.title = undefined;
  ProjectBaseCurrentStatus.prototype.text = undefined;
  ProjectBaseCurrentStatus.prototype.html_text = undefined;
  ProjectBaseCurrentStatus.ColorEnum = {
    green: "green",
    yellow: "yellow",
    red: "red",
    blue: "blue"
  };
  ProjectBaseCurrentStatus.prototype.color = undefined;
  ProjectBaseCurrentStatus.prototype.author = undefined;
  ProjectBaseCurrentStatus.prototype.created_at = undefined;
  ProjectBaseCurrentStatus.prototype.created_by = undefined;
  ProjectBaseCurrentStatus.prototype.modified_at = undefined;
});

// node_modules/asana/dist/model/ProjectBaseCurrentStatusUpdate.js
var require_ProjectBaseCurrentStatusUpdate = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectBaseCurrentStatusUpdate = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectBaseCurrentStatusUpdate = function() {
    function ProjectBaseCurrentStatusUpdate2() {
      _classCallCheck(this, ProjectBaseCurrentStatusUpdate2);
    }
    _createClass(ProjectBaseCurrentStatusUpdate2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectBaseCurrentStatusUpdate2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
        }
        return obj;
      }
    }]);
    return ProjectBaseCurrentStatusUpdate2;
  }();
  exports.ProjectBaseCurrentStatusUpdate = ProjectBaseCurrentStatusUpdate;
  ProjectBaseCurrentStatusUpdate.prototype.gid = undefined;
  ProjectBaseCurrentStatusUpdate.prototype.resource_type = undefined;
  ProjectBaseCurrentStatusUpdate.prototype.title = undefined;
  ProjectBaseCurrentStatusUpdate.ResourceSubtypeEnum = {
    project_status_update: "project_status_update",
    portfolio_status_update: "portfolio_status_update",
    goal_status_update: "goal_status_update"
  };
  ProjectBaseCurrentStatusUpdate.prototype.resource_subtype = undefined;
});

// node_modules/asana/dist/model/ProjectBase.js
var require_ProjectBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectBase = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _PortfolioResponseCustomFieldSettings = require_PortfolioResponseCustomFieldSettings();
  var _ProjectBaseCurrentStatus = require_ProjectBaseCurrentStatus();
  var _ProjectBaseCurrentStatusUpdate = require_ProjectBaseCurrentStatusUpdate();
  var ProjectBase = function() {
    function ProjectBase2() {
      _classCallCheck(this, ProjectBase2);
    }
    _createClass(ProjectBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("archived"))
            obj.archived = _ApiClient.ApiClient.convertToType(data["archived"], "Boolean");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("current_status"))
            obj.current_status = _ProjectBaseCurrentStatus.ProjectBaseCurrentStatus.constructFromObject(data["current_status"]);
          if (data.hasOwnProperty("current_status_update"))
            obj.current_status_update = _ProjectBaseCurrentStatusUpdate.ProjectBaseCurrentStatusUpdate.constructFromObject(data["current_status_update"]);
          if (data.hasOwnProperty("custom_field_settings"))
            obj.custom_field_settings = _ApiClient.ApiClient.convertToType(data["custom_field_settings"], [_PortfolioResponseCustomFieldSettings.PortfolioResponseCustomFieldSettings]);
          if (data.hasOwnProperty("default_view"))
            obj.default_view = _ApiClient.ApiClient.convertToType(data["default_view"], "String");
          if (data.hasOwnProperty("due_date"))
            obj.due_date = _ApiClient.ApiClient.convertToType(data["due_date"], "Date");
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "Date");
          if (data.hasOwnProperty("html_notes"))
            obj.html_notes = _ApiClient.ApiClient.convertToType(data["html_notes"], "String");
          if (data.hasOwnProperty("members"))
            obj.members = _ApiClient.ApiClient.convertToType(data["members"], [_CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue]);
          if (data.hasOwnProperty("modified_at"))
            obj.modified_at = _ApiClient.ApiClient.convertToType(data["modified_at"], "Date");
          if (data.hasOwnProperty("notes"))
            obj.notes = _ApiClient.ApiClient.convertToType(data["notes"], "String");
          if (data.hasOwnProperty("public"))
            obj._public = _ApiClient.ApiClient.convertToType(data["public"], "Boolean");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "Date");
          if (data.hasOwnProperty("default_access_level"))
            obj.default_access_level = _ApiClient.ApiClient.convertToType(data["default_access_level"], "String");
        }
        return obj;
      }
    }]);
    return ProjectBase2;
  }();
  exports.ProjectBase = ProjectBase;
  ProjectBase.prototype.gid = undefined;
  ProjectBase.prototype.resource_type = undefined;
  ProjectBase.prototype.name = undefined;
  ProjectBase.prototype.archived = undefined;
  ProjectBase.ColorEnum = {
    dark_pink: "dark-pink",
    dark_green: "dark-green",
    dark_blue: "dark-blue",
    dark_red: "dark-red",
    dark_teal: "dark-teal",
    dark_brown: "dark-brown",
    dark_orange: "dark-orange",
    dark_purple: "dark-purple",
    dark_warm_gray: "dark-warm-gray",
    light_pink: "light-pink",
    light_green: "light-green",
    light_blue: "light-blue",
    light_red: "light-red",
    light_teal: "light-teal",
    light_brown: "light-brown",
    light_orange: "light-orange",
    light_purple: "light-purple",
    light_warm_gray: "light-warm-gray",
    none: "none",
    _null: "null"
  };
  ProjectBase.prototype.color = undefined;
  ProjectBase.prototype.created_at = undefined;
  ProjectBase.prototype.current_status = undefined;
  ProjectBase.prototype.current_status_update = undefined;
  ProjectBase.prototype.custom_field_settings = undefined;
  ProjectBase.DefaultViewEnum = {
    list: "list",
    board: "board",
    calendar: "calendar",
    timeline: "timeline"
  };
  ProjectBase.prototype.default_view = undefined;
  ProjectBase.prototype.due_date = undefined;
  ProjectBase.prototype.due_on = undefined;
  ProjectBase.prototype.html_notes = undefined;
  ProjectBase.prototype.members = undefined;
  ProjectBase.prototype.modified_at = undefined;
  ProjectBase.prototype.notes = undefined;
  ProjectBase.prototype._public = undefined;
  ProjectBase.prototype.start_on = undefined;
  ProjectBase.DefaultAccessLevelEnum = {
    admin: "admin",
    editor: "editor",
    commenter: "commenter",
    viewer: "viewer"
  };
  ProjectBase.prototype.default_access_level = undefined;
});

// node_modules/asana/dist/model/ProjectBriefBase.js
var require_ProjectBriefBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectBriefBase = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectBriefBase = function() {
    function ProjectBriefBase2() {
      _classCallCheck(this, ProjectBriefBase2);
    }
    _createClass(ProjectBriefBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectBriefBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("html_text"))
            obj.html_text = _ApiClient.ApiClient.convertToType(data["html_text"], "String");
        }
        return obj;
      }
    }]);
    return ProjectBriefBase2;
  }();
  exports.ProjectBriefBase = ProjectBriefBase;
  ProjectBriefBase.prototype.gid = undefined;
  ProjectBriefBase.prototype.resource_type = undefined;
  ProjectBriefBase.prototype.title = undefined;
  ProjectBriefBase.prototype.html_text = undefined;
});

// node_modules/asana/dist/model/ProjectBriefCompact.js
var require_ProjectBriefCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectBriefCompact = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectBriefCompact = function() {
    function ProjectBriefCompact2() {
      _classCallCheck(this, ProjectBriefCompact2);
    }
    _createClass(ProjectBriefCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectBriefCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
        }
        return obj;
      }
    }]);
    return ProjectBriefCompact2;
  }();
  exports.ProjectBriefCompact = ProjectBriefCompact;
  ProjectBriefCompact.prototype.gid = undefined;
  ProjectBriefCompact.prototype.resource_type = undefined;
});

// node_modules/asana/dist/model/ProjectBriefRequest.js
var require_ProjectBriefRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectBriefRequest = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectBriefRequest = function() {
    function ProjectBriefRequest2() {
      _classCallCheck(this, ProjectBriefRequest2);
    }
    _createClass(ProjectBriefRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectBriefRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("html_text"))
            obj.html_text = _ApiClient.ApiClient.convertToType(data["html_text"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
        }
        return obj;
      }
    }]);
    return ProjectBriefRequest2;
  }();
  exports.ProjectBriefRequest = ProjectBriefRequest;
  ProjectBriefRequest.prototype.gid = undefined;
  ProjectBriefRequest.prototype.resource_type = undefined;
  ProjectBriefRequest.prototype.title = undefined;
  ProjectBriefRequest.prototype.html_text = undefined;
  ProjectBriefRequest.prototype.text = undefined;
});

// node_modules/asana/dist/model/ProjectBriefResponseProject.js
var require_ProjectBriefResponseProject = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectBriefResponseProject = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectBriefResponseProject = function() {
    function ProjectBriefResponseProject2() {
      _classCallCheck(this, ProjectBriefResponseProject2);
    }
    _createClass(ProjectBriefResponseProject2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectBriefResponseProject2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return ProjectBriefResponseProject2;
  }();
  exports.ProjectBriefResponseProject = ProjectBriefResponseProject;
  ProjectBriefResponseProject.prototype.gid = undefined;
  ProjectBriefResponseProject.prototype.resource_type = undefined;
  ProjectBriefResponseProject.prototype.name = undefined;
});

// node_modules/asana/dist/model/ProjectBriefResponse.js
var require_ProjectBriefResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectBriefResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectBriefResponseProject = require_ProjectBriefResponseProject();
  var ProjectBriefResponse = function() {
    function ProjectBriefResponse2() {
      _classCallCheck(this, ProjectBriefResponse2);
    }
    _createClass(ProjectBriefResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectBriefResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("html_text"))
            obj.html_text = _ApiClient.ApiClient.convertToType(data["html_text"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
          if (data.hasOwnProperty("permalink_url"))
            obj.permalink_url = _ApiClient.ApiClient.convertToType(data["permalink_url"], "String");
          if (data.hasOwnProperty("project"))
            obj.project = _ProjectBriefResponseProject.ProjectBriefResponseProject.constructFromObject(data["project"]);
        }
        return obj;
      }
    }]);
    return ProjectBriefResponse2;
  }();
  exports.ProjectBriefResponse = ProjectBriefResponse;
  ProjectBriefResponse.prototype.gid = undefined;
  ProjectBriefResponse.prototype.resource_type = undefined;
  ProjectBriefResponse.prototype.title = undefined;
  ProjectBriefResponse.prototype.html_text = undefined;
  ProjectBriefResponse.prototype.text = undefined;
  ProjectBriefResponse.prototype.permalink_url = undefined;
  ProjectBriefResponse.prototype.project = undefined;
});

// node_modules/asana/dist/model/ProjectBriefResponseData.js
var require_ProjectBriefResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectBriefResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectBriefResponse = require_ProjectBriefResponse();
  var ProjectBriefResponseData = function() {
    function ProjectBriefResponseData2(data) {
      _classCallCheck(this, ProjectBriefResponseData2);
      this.data = data;
    }
    _createClass(ProjectBriefResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectBriefResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectBriefResponse.ProjectBriefResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectBriefResponseData2;
  }();
  exports.ProjectBriefResponseData = ProjectBriefResponseData;
  ProjectBriefResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectBriefsProjectBriefGidBody.js
var require_ProjectBriefsProjectBriefGidBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectBriefsProjectBriefGidBody = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectBriefRequest = require_ProjectBriefRequest();
  var ProjectBriefsProjectBriefGidBody = function() {
    function ProjectBriefsProjectBriefGidBody2() {
      _classCallCheck(this, ProjectBriefsProjectBriefGidBody2);
    }
    _createClass(ProjectBriefsProjectBriefGidBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectBriefsProjectBriefGidBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectBriefRequest.ProjectBriefRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectBriefsProjectBriefGidBody2;
  }();
  exports.ProjectBriefsProjectBriefGidBody = ProjectBriefsProjectBriefGidBody;
  ProjectBriefsProjectBriefGidBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectCompact.js
var require_ProjectCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectCompact = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectCompact = function() {
    function ProjectCompact2() {
      _classCallCheck(this, ProjectCompact2);
    }
    _createClass(ProjectCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return ProjectCompact2;
  }();
  exports.ProjectCompact = ProjectCompact;
  ProjectCompact.prototype.gid = undefined;
  ProjectCompact.prototype.resource_type = undefined;
  ProjectCompact.prototype.name = undefined;
});

// node_modules/asana/dist/model/ProjectDuplicateRequestScheduleDates.js
var require_ProjectDuplicateRequestScheduleDates = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectDuplicateRequestScheduleDates = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectDuplicateRequestScheduleDates = function() {
    function ProjectDuplicateRequestScheduleDates2(should_skip_weekends) {
      _classCallCheck(this, ProjectDuplicateRequestScheduleDates2);
      this.should_skip_weekends = should_skip_weekends;
    }
    _createClass(ProjectDuplicateRequestScheduleDates2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectDuplicateRequestScheduleDates2;
          if (data.hasOwnProperty("should_skip_weekends"))
            obj.should_skip_weekends = _ApiClient.ApiClient.convertToType(data["should_skip_weekends"], "Boolean");
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "String");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "String");
        }
        return obj;
      }
    }]);
    return ProjectDuplicateRequestScheduleDates2;
  }();
  exports.ProjectDuplicateRequestScheduleDates = ProjectDuplicateRequestScheduleDates;
  ProjectDuplicateRequestScheduleDates.prototype.should_skip_weekends = undefined;
  ProjectDuplicateRequestScheduleDates.prototype.due_on = undefined;
  ProjectDuplicateRequestScheduleDates.prototype.start_on = undefined;
});

// node_modules/asana/dist/model/ProjectDuplicateRequest.js
var require_ProjectDuplicateRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectDuplicateRequest = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectDuplicateRequestScheduleDates = require_ProjectDuplicateRequestScheduleDates();
  var ProjectDuplicateRequest = function() {
    function ProjectDuplicateRequest2(name) {
      _classCallCheck(this, ProjectDuplicateRequest2);
      this.name = name;
    }
    _createClass(ProjectDuplicateRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectDuplicateRequest2;
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("team"))
            obj.team = _ApiClient.ApiClient.convertToType(data["team"], "String");
          if (data.hasOwnProperty("include"))
            obj.include = _ApiClient.ApiClient.convertToType(data["include"], "String");
          if (data.hasOwnProperty("schedule_dates"))
            obj.schedule_dates = _ProjectDuplicateRequestScheduleDates.ProjectDuplicateRequestScheduleDates.constructFromObject(data["schedule_dates"]);
        }
        return obj;
      }
    }]);
    return ProjectDuplicateRequest2;
  }();
  exports.ProjectDuplicateRequest = ProjectDuplicateRequest;
  ProjectDuplicateRequest.prototype.name = undefined;
  ProjectDuplicateRequest.prototype.team = undefined;
  ProjectDuplicateRequest.prototype.include = undefined;
  ProjectDuplicateRequest.prototype.schedule_dates = undefined;
});

// node_modules/asana/dist/model/ProjectGidAddCustomFieldSettingBody.js
var require_ProjectGidAddCustomFieldSettingBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectGidAddCustomFieldSettingBody = undefined;
  var _ApiClient = require_ApiClient();
  var _AddCustomFieldSettingRequest = require_AddCustomFieldSettingRequest();
  var ProjectGidAddCustomFieldSettingBody = function() {
    function ProjectGidAddCustomFieldSettingBody2() {
      _classCallCheck(this, ProjectGidAddCustomFieldSettingBody2);
    }
    _createClass(ProjectGidAddCustomFieldSettingBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectGidAddCustomFieldSettingBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _AddCustomFieldSettingRequest.AddCustomFieldSettingRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectGidAddCustomFieldSettingBody2;
  }();
  exports.ProjectGidAddCustomFieldSettingBody = ProjectGidAddCustomFieldSettingBody;
  ProjectGidAddCustomFieldSettingBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectGidAddFollowersBody.js
var require_ProjectGidAddFollowersBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectGidAddFollowersBody = undefined;
  var _ApiClient = require_ApiClient();
  var _AddFollowersRequest = require_AddFollowersRequest();
  var ProjectGidAddFollowersBody = function() {
    function ProjectGidAddFollowersBody2() {
      _classCallCheck(this, ProjectGidAddFollowersBody2);
    }
    _createClass(ProjectGidAddFollowersBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectGidAddFollowersBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _AddFollowersRequest.AddFollowersRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectGidAddFollowersBody2;
  }();
  exports.ProjectGidAddFollowersBody = ProjectGidAddFollowersBody;
  ProjectGidAddFollowersBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectGidAddMembersBody.js
var require_ProjectGidAddMembersBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectGidAddMembersBody = undefined;
  var _ApiClient = require_ApiClient();
  var _AddMembersRequest = require_AddMembersRequest();
  var ProjectGidAddMembersBody = function() {
    function ProjectGidAddMembersBody2() {
      _classCallCheck(this, ProjectGidAddMembersBody2);
    }
    _createClass(ProjectGidAddMembersBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectGidAddMembersBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _AddMembersRequest.AddMembersRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectGidAddMembersBody2;
  }();
  exports.ProjectGidAddMembersBody = ProjectGidAddMembersBody;
  ProjectGidAddMembersBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectGidDuplicateBody.js
var require_ProjectGidDuplicateBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectGidDuplicateBody = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectDuplicateRequest = require_ProjectDuplicateRequest();
  var ProjectGidDuplicateBody = function() {
    function ProjectGidDuplicateBody2() {
      _classCallCheck(this, ProjectGidDuplicateBody2);
    }
    _createClass(ProjectGidDuplicateBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectGidDuplicateBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectDuplicateRequest.ProjectDuplicateRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectGidDuplicateBody2;
  }();
  exports.ProjectGidDuplicateBody = ProjectGidDuplicateBody;
  ProjectGidDuplicateBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectGidProjectBriefsBody.js
var require_ProjectGidProjectBriefsBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectGidProjectBriefsBody = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectBriefRequest = require_ProjectBriefRequest();
  var ProjectGidProjectBriefsBody = function() {
    function ProjectGidProjectBriefsBody2() {
      _classCallCheck(this, ProjectGidProjectBriefsBody2);
    }
    _createClass(ProjectGidProjectBriefsBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectGidProjectBriefsBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectBriefRequest.ProjectBriefRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectGidProjectBriefsBody2;
  }();
  exports.ProjectGidProjectBriefsBody = ProjectGidProjectBriefsBody;
  ProjectGidProjectBriefsBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectStatusRequest.js
var require_ProjectStatusRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectStatusRequest = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectStatusRequest = function() {
    function ProjectStatusRequest2(text, color) {
      _classCallCheck(this, ProjectStatusRequest2);
      this.text = text;
      this.color = color;
    }
    _createClass(ProjectStatusRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectStatusRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
          if (data.hasOwnProperty("html_text"))
            obj.html_text = _ApiClient.ApiClient.convertToType(data["html_text"], "String");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
        }
        return obj;
      }
    }]);
    return ProjectStatusRequest2;
  }();
  exports.ProjectStatusRequest = ProjectStatusRequest;
  ProjectStatusRequest.prototype.gid = undefined;
  ProjectStatusRequest.prototype.resource_type = undefined;
  ProjectStatusRequest.prototype.title = undefined;
  ProjectStatusRequest.prototype.text = undefined;
  ProjectStatusRequest.prototype.html_text = undefined;
  ProjectStatusRequest.ColorEnum = {
    green: "green",
    yellow: "yellow",
    red: "red",
    blue: "blue"
  };
  ProjectStatusRequest.prototype.color = undefined;
});

// node_modules/asana/dist/model/ProjectGidProjectStatusesBody.js
var require_ProjectGidProjectStatusesBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectGidProjectStatusesBody = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectStatusRequest = require_ProjectStatusRequest();
  var ProjectGidProjectStatusesBody = function() {
    function ProjectGidProjectStatusesBody2() {
      _classCallCheck(this, ProjectGidProjectStatusesBody2);
    }
    _createClass(ProjectGidProjectStatusesBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectGidProjectStatusesBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectStatusRequest.ProjectStatusRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectGidProjectStatusesBody2;
  }();
  exports.ProjectGidProjectStatusesBody = ProjectGidProjectStatusesBody;
  ProjectGidProjectStatusesBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectGidRemoveCustomFieldSettingBody.js
var require_ProjectGidRemoveCustomFieldSettingBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectGidRemoveCustomFieldSettingBody = undefined;
  var _ApiClient = require_ApiClient();
  var _RemoveCustomFieldSettingRequest = require_RemoveCustomFieldSettingRequest();
  var ProjectGidRemoveCustomFieldSettingBody = function() {
    function ProjectGidRemoveCustomFieldSettingBody2() {
      _classCallCheck(this, ProjectGidRemoveCustomFieldSettingBody2);
    }
    _createClass(ProjectGidRemoveCustomFieldSettingBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectGidRemoveCustomFieldSettingBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _RemoveCustomFieldSettingRequest.RemoveCustomFieldSettingRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectGidRemoveCustomFieldSettingBody2;
  }();
  exports.ProjectGidRemoveCustomFieldSettingBody = ProjectGidRemoveCustomFieldSettingBody;
  ProjectGidRemoveCustomFieldSettingBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/RemoveFollowersRequest.js
var require_RemoveFollowersRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RemoveFollowersRequest = undefined;
  var _ApiClient = require_ApiClient();
  var RemoveFollowersRequest = function() {
    function RemoveFollowersRequest2(followers) {
      _classCallCheck(this, RemoveFollowersRequest2);
      this.followers = followers;
    }
    _createClass(RemoveFollowersRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new RemoveFollowersRequest2;
          if (data.hasOwnProperty("followers"))
            obj.followers = _ApiClient.ApiClient.convertToType(data["followers"], "String");
        }
        return obj;
      }
    }]);
    return RemoveFollowersRequest2;
  }();
  exports.RemoveFollowersRequest = RemoveFollowersRequest;
  RemoveFollowersRequest.prototype.followers = undefined;
});

// node_modules/asana/dist/model/ProjectGidRemoveFollowersBody.js
var require_ProjectGidRemoveFollowersBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectGidRemoveFollowersBody = undefined;
  var _ApiClient = require_ApiClient();
  var _RemoveFollowersRequest = require_RemoveFollowersRequest();
  var ProjectGidRemoveFollowersBody = function() {
    function ProjectGidRemoveFollowersBody2() {
      _classCallCheck(this, ProjectGidRemoveFollowersBody2);
    }
    _createClass(ProjectGidRemoveFollowersBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectGidRemoveFollowersBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _RemoveFollowersRequest.RemoveFollowersRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectGidRemoveFollowersBody2;
  }();
  exports.ProjectGidRemoveFollowersBody = ProjectGidRemoveFollowersBody;
  ProjectGidRemoveFollowersBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectGidRemoveMembersBody.js
var require_ProjectGidRemoveMembersBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectGidRemoveMembersBody = undefined;
  var _ApiClient = require_ApiClient();
  var _RemoveMembersRequest = require_RemoveMembersRequest();
  var ProjectGidRemoveMembersBody = function() {
    function ProjectGidRemoveMembersBody2() {
      _classCallCheck(this, ProjectGidRemoveMembersBody2);
    }
    _createClass(ProjectGidRemoveMembersBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectGidRemoveMembersBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _RemoveMembersRequest.RemoveMembersRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectGidRemoveMembersBody2;
  }();
  exports.ProjectGidRemoveMembersBody = ProjectGidRemoveMembersBody;
  ProjectGidRemoveMembersBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectSaveAsTemplateRequest.js
var require_ProjectSaveAsTemplateRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectSaveAsTemplateRequest = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectSaveAsTemplateRequest = function() {
    function ProjectSaveAsTemplateRequest2(name, _public) {
      _classCallCheck(this, ProjectSaveAsTemplateRequest2);
      this.name = name;
      this._public = _public;
    }
    _createClass(ProjectSaveAsTemplateRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectSaveAsTemplateRequest2;
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("team"))
            obj.team = _ApiClient.ApiClient.convertToType(data["team"], "String");
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _ApiClient.ApiClient.convertToType(data["workspace"], "String");
          if (data.hasOwnProperty("public"))
            obj._public = _ApiClient.ApiClient.convertToType(data["public"], "Boolean");
        }
        return obj;
      }
    }]);
    return ProjectSaveAsTemplateRequest2;
  }();
  exports.ProjectSaveAsTemplateRequest = ProjectSaveAsTemplateRequest;
  ProjectSaveAsTemplateRequest.prototype.name = undefined;
  ProjectSaveAsTemplateRequest.prototype.team = undefined;
  ProjectSaveAsTemplateRequest.prototype.workspace = undefined;
  ProjectSaveAsTemplateRequest.prototype._public = undefined;
});

// node_modules/asana/dist/model/ProjectGidSaveAsTemplateBody.js
var require_ProjectGidSaveAsTemplateBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectGidSaveAsTemplateBody = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectSaveAsTemplateRequest = require_ProjectSaveAsTemplateRequest();
  var ProjectGidSaveAsTemplateBody = function() {
    function ProjectGidSaveAsTemplateBody2() {
      _classCallCheck(this, ProjectGidSaveAsTemplateBody2);
    }
    _createClass(ProjectGidSaveAsTemplateBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectGidSaveAsTemplateBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectSaveAsTemplateRequest.ProjectSaveAsTemplateRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectGidSaveAsTemplateBody2;
  }();
  exports.ProjectGidSaveAsTemplateBody = ProjectGidSaveAsTemplateBody;
  ProjectGidSaveAsTemplateBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/SectionRequest.js
var require_SectionRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SectionRequest = undefined;
  var _ApiClient = require_ApiClient();
  var SectionRequest = function() {
    function SectionRequest2(name) {
      _classCallCheck(this, SectionRequest2);
      this.name = name;
    }
    _createClass(SectionRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new SectionRequest2;
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("insert_before"))
            obj.insert_before = _ApiClient.ApiClient.convertToType(data["insert_before"], "String");
          if (data.hasOwnProperty("insert_after"))
            obj.insert_after = _ApiClient.ApiClient.convertToType(data["insert_after"], "String");
        }
        return obj;
      }
    }]);
    return SectionRequest2;
  }();
  exports.SectionRequest = SectionRequest;
  SectionRequest.prototype.name = undefined;
  SectionRequest.prototype.insert_before = undefined;
  SectionRequest.prototype.insert_after = undefined;
});

// node_modules/asana/dist/model/ProjectGidSectionsBody.js
var require_ProjectGidSectionsBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectGidSectionsBody = undefined;
  var _ApiClient = require_ApiClient();
  var _SectionRequest = require_SectionRequest();
  var ProjectGidSectionsBody = function() {
    function ProjectGidSectionsBody2() {
      _classCallCheck(this, ProjectGidSectionsBody2);
    }
    _createClass(ProjectGidSectionsBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectGidSectionsBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _SectionRequest.SectionRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectGidSectionsBody2;
  }();
  exports.ProjectGidSectionsBody = ProjectGidSectionsBody;
  ProjectGidSectionsBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectMembershipBase.js
var require_ProjectMembershipBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectMembershipBase = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _JobBaseNewProject = require_JobBaseNewProject();
  var _MembershipCompactMember = require_MembershipCompactMember();
  var ProjectMembershipBase = function() {
    function ProjectMembershipBase2() {
      _classCallCheck(this, ProjectMembershipBase2);
    }
    _createClass(ProjectMembershipBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectMembershipBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
          if (data.hasOwnProperty("parent"))
            obj.parent = _JobBaseNewProject.JobBaseNewProject.constructFromObject(data["parent"]);
          if (data.hasOwnProperty("member"))
            obj.member = _MembershipCompactMember.MembershipCompactMember.constructFromObject(data["member"]);
          if (data.hasOwnProperty("access_level"))
            obj.access_level = _ApiClient.ApiClient.convertToType(data["access_level"], "String");
        }
        return obj;
      }
    }]);
    return ProjectMembershipBase2;
  }();
  exports.ProjectMembershipBase = ProjectMembershipBase;
  ProjectMembershipBase.prototype.gid = undefined;
  ProjectMembershipBase.prototype.resource_type = undefined;
  ProjectMembershipBase.prototype.user = undefined;
  ProjectMembershipBase.prototype.parent = undefined;
  ProjectMembershipBase.prototype.member = undefined;
  ProjectMembershipBase.AccessLevelEnum = {
    admin: "admin",
    editor: "editor",
    commenter: "commenter",
    viewer: "viewer"
  };
  ProjectMembershipBase.prototype.access_level = undefined;
});

// node_modules/asana/dist/model/ProjectMembershipCompact.js
var require_ProjectMembershipCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectMembershipCompact = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _JobBaseNewProject = require_JobBaseNewProject();
  var _MembershipCompactMember = require_MembershipCompactMember();
  var ProjectMembershipCompact = function() {
    function ProjectMembershipCompact2() {
      _classCallCheck(this, ProjectMembershipCompact2);
    }
    _createClass(ProjectMembershipCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectMembershipCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
          if (data.hasOwnProperty("parent"))
            obj.parent = _JobBaseNewProject.JobBaseNewProject.constructFromObject(data["parent"]);
          if (data.hasOwnProperty("member"))
            obj.member = _MembershipCompactMember.MembershipCompactMember.constructFromObject(data["member"]);
          if (data.hasOwnProperty("access_level"))
            obj.access_level = _ApiClient.ApiClient.convertToType(data["access_level"], "String");
        }
        return obj;
      }
    }]);
    return ProjectMembershipCompact2;
  }();
  exports.ProjectMembershipCompact = ProjectMembershipCompact;
  ProjectMembershipCompact.prototype.gid = undefined;
  ProjectMembershipCompact.prototype.resource_type = undefined;
  ProjectMembershipCompact.prototype.user = undefined;
  ProjectMembershipCompact.prototype.parent = undefined;
  ProjectMembershipCompact.prototype.member = undefined;
  ProjectMembershipCompact.AccessLevelEnum = {
    admin: "admin",
    editor: "editor",
    commenter: "commenter",
    viewer: "viewer"
  };
  ProjectMembershipCompact.prototype.access_level = undefined;
});

// node_modules/asana/dist/model/ProjectMembershipCompactArray.js
var require_ProjectMembershipCompactArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectMembershipCompactArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _ProjectMembershipCompact = require_ProjectMembershipCompact();
  var ProjectMembershipCompactArray = function() {
    function ProjectMembershipCompactArray2(data) {
      _classCallCheck(this, ProjectMembershipCompactArray2);
      this.data = data;
    }
    _createClass(ProjectMembershipCompactArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectMembershipCompactArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_ProjectMembershipCompact.ProjectMembershipCompact]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return ProjectMembershipCompactArray2;
  }();
  exports.ProjectMembershipCompactArray = ProjectMembershipCompactArray;
  ProjectMembershipCompactArray.prototype.data = undefined;
  ProjectMembershipCompactArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/ProjectMembershipCompactResponse.js
var require_ProjectMembershipCompactResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectMembershipCompactResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _JobBaseNewProject = require_JobBaseNewProject();
  var _MembershipCompactMember = require_MembershipCompactMember();
  var ProjectMembershipCompactResponse = function() {
    function ProjectMembershipCompactResponse2() {
      _classCallCheck(this, ProjectMembershipCompactResponse2);
    }
    _createClass(ProjectMembershipCompactResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectMembershipCompactResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
          if (data.hasOwnProperty("parent"))
            obj.parent = _JobBaseNewProject.JobBaseNewProject.constructFromObject(data["parent"]);
          if (data.hasOwnProperty("member"))
            obj.member = _MembershipCompactMember.MembershipCompactMember.constructFromObject(data["member"]);
          if (data.hasOwnProperty("access_level"))
            obj.access_level = _ApiClient.ApiClient.convertToType(data["access_level"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
        }
        return obj;
      }
    }]);
    return ProjectMembershipCompactResponse2;
  }();
  exports.ProjectMembershipCompactResponse = ProjectMembershipCompactResponse;
  ProjectMembershipCompactResponse.prototype.gid = undefined;
  ProjectMembershipCompactResponse.prototype.resource_type = undefined;
  ProjectMembershipCompactResponse.prototype.user = undefined;
  ProjectMembershipCompactResponse.prototype.parent = undefined;
  ProjectMembershipCompactResponse.prototype.member = undefined;
  ProjectMembershipCompactResponse.AccessLevelEnum = {
    admin: "admin",
    editor: "editor",
    commenter: "commenter",
    viewer: "viewer"
  };
  ProjectMembershipCompactResponse.prototype.access_level = undefined;
  ProjectMembershipCompactResponse.prototype.resource_subtype = undefined;
});

// node_modules/asana/dist/model/ProjectMembershipNormalResponse.js
var require_ProjectMembershipNormalResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectMembershipNormalResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _JobBaseNewProject = require_JobBaseNewProject();
  var _MembershipCompactMember = require_MembershipCompactMember();
  var ProjectMembershipNormalResponse = function() {
    function ProjectMembershipNormalResponse2() {
      _classCallCheck(this, ProjectMembershipNormalResponse2);
    }
    _createClass(ProjectMembershipNormalResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectMembershipNormalResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
          if (data.hasOwnProperty("parent"))
            obj.parent = _JobBaseNewProject.JobBaseNewProject.constructFromObject(data["parent"]);
          if (data.hasOwnProperty("member"))
            obj.member = _MembershipCompactMember.MembershipCompactMember.constructFromObject(data["member"]);
          if (data.hasOwnProperty("access_level"))
            obj.access_level = _ApiClient.ApiClient.convertToType(data["access_level"], "String");
          if (data.hasOwnProperty("project"))
            obj.project = _JobBaseNewProject.JobBaseNewProject.constructFromObject(data["project"]);
          if (data.hasOwnProperty("write_access"))
            obj.write_access = _ApiClient.ApiClient.convertToType(data["write_access"], "String");
        }
        return obj;
      }
    }]);
    return ProjectMembershipNormalResponse2;
  }();
  exports.ProjectMembershipNormalResponse = ProjectMembershipNormalResponse;
  ProjectMembershipNormalResponse.prototype.gid = undefined;
  ProjectMembershipNormalResponse.prototype.resource_type = undefined;
  ProjectMembershipNormalResponse.prototype.user = undefined;
  ProjectMembershipNormalResponse.prototype.parent = undefined;
  ProjectMembershipNormalResponse.prototype.member = undefined;
  ProjectMembershipNormalResponse.AccessLevelEnum = {
    admin: "admin",
    editor: "editor",
    commenter: "commenter",
    viewer: "viewer"
  };
  ProjectMembershipNormalResponse.prototype.access_level = undefined;
  ProjectMembershipNormalResponse.prototype.project = undefined;
  ProjectMembershipNormalResponse.WriteAccessEnum = {
    full_write: "full_write",
    comment_only: "comment_only"
  };
  ProjectMembershipNormalResponse.prototype.write_access = undefined;
});

// node_modules/asana/dist/model/ProjectMembershipNormalResponseData.js
var require_ProjectMembershipNormalResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectMembershipNormalResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectMembershipNormalResponse = require_ProjectMembershipNormalResponse();
  var ProjectMembershipNormalResponseData = function() {
    function ProjectMembershipNormalResponseData2(data) {
      _classCallCheck(this, ProjectMembershipNormalResponseData2);
      this.data = data;
    }
    _createClass(ProjectMembershipNormalResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectMembershipNormalResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectMembershipNormalResponse.ProjectMembershipNormalResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectMembershipNormalResponseData2;
  }();
  exports.ProjectMembershipNormalResponseData = ProjectMembershipNormalResponseData;
  ProjectMembershipNormalResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectRequest.js
var require_ProjectRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectRequest = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _PortfolioResponseCustomFieldSettings = require_PortfolioResponseCustomFieldSettings();
  var _ProjectBaseCurrentStatus = require_ProjectBaseCurrentStatus();
  var _ProjectBaseCurrentStatusUpdate = require_ProjectBaseCurrentStatusUpdate();
  var ProjectRequest = function() {
    function ProjectRequest2() {
      _classCallCheck(this, ProjectRequest2);
    }
    _createClass(ProjectRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("archived"))
            obj.archived = _ApiClient.ApiClient.convertToType(data["archived"], "Boolean");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("current_status"))
            obj.current_status = _ProjectBaseCurrentStatus.ProjectBaseCurrentStatus.constructFromObject(data["current_status"]);
          if (data.hasOwnProperty("current_status_update"))
            obj.current_status_update = _ProjectBaseCurrentStatusUpdate.ProjectBaseCurrentStatusUpdate.constructFromObject(data["current_status_update"]);
          if (data.hasOwnProperty("custom_field_settings"))
            obj.custom_field_settings = _ApiClient.ApiClient.convertToType(data["custom_field_settings"], [_PortfolioResponseCustomFieldSettings.PortfolioResponseCustomFieldSettings]);
          if (data.hasOwnProperty("default_view"))
            obj.default_view = _ApiClient.ApiClient.convertToType(data["default_view"], "String");
          if (data.hasOwnProperty("due_date"))
            obj.due_date = _ApiClient.ApiClient.convertToType(data["due_date"], "Date");
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "Date");
          if (data.hasOwnProperty("html_notes"))
            obj.html_notes = _ApiClient.ApiClient.convertToType(data["html_notes"], "String");
          if (data.hasOwnProperty("members"))
            obj.members = _ApiClient.ApiClient.convertToType(data["members"], [_CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue]);
          if (data.hasOwnProperty("modified_at"))
            obj.modified_at = _ApiClient.ApiClient.convertToType(data["modified_at"], "Date");
          if (data.hasOwnProperty("notes"))
            obj.notes = _ApiClient.ApiClient.convertToType(data["notes"], "String");
          if (data.hasOwnProperty("public"))
            obj._public = _ApiClient.ApiClient.convertToType(data["public"], "Boolean");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "Date");
          if (data.hasOwnProperty("default_access_level"))
            obj.default_access_level = _ApiClient.ApiClient.convertToType(data["default_access_level"], "String");
          if (data.hasOwnProperty("custom_fields"))
            obj.custom_fields = _ApiClient.ApiClient.convertToType(data["custom_fields"], {
              String: "String"
            });
          if (data.hasOwnProperty("followers"))
            obj.followers = _ApiClient.ApiClient.convertToType(data["followers"], "String");
          if (data.hasOwnProperty("owner"))
            obj.owner = _ApiClient.ApiClient.convertToType(data["owner"], "String");
          if (data.hasOwnProperty("team"))
            obj.team = _ApiClient.ApiClient.convertToType(data["team"], "String");
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _ApiClient.ApiClient.convertToType(data["workspace"], "String");
        }
        return obj;
      }
    }]);
    return ProjectRequest2;
  }();
  exports.ProjectRequest = ProjectRequest;
  ProjectRequest.prototype.gid = undefined;
  ProjectRequest.prototype.resource_type = undefined;
  ProjectRequest.prototype.name = undefined;
  ProjectRequest.prototype.archived = undefined;
  ProjectRequest.ColorEnum = {
    dark_pink: "dark-pink",
    dark_green: "dark-green",
    dark_blue: "dark-blue",
    dark_red: "dark-red",
    dark_teal: "dark-teal",
    dark_brown: "dark-brown",
    dark_orange: "dark-orange",
    dark_purple: "dark-purple",
    dark_warm_gray: "dark-warm-gray",
    light_pink: "light-pink",
    light_green: "light-green",
    light_blue: "light-blue",
    light_red: "light-red",
    light_teal: "light-teal",
    light_brown: "light-brown",
    light_orange: "light-orange",
    light_purple: "light-purple",
    light_warm_gray: "light-warm-gray",
    none: "none",
    _null: "null"
  };
  ProjectRequest.prototype.color = undefined;
  ProjectRequest.prototype.created_at = undefined;
  ProjectRequest.prototype.current_status = undefined;
  ProjectRequest.prototype.current_status_update = undefined;
  ProjectRequest.prototype.custom_field_settings = undefined;
  ProjectRequest.DefaultViewEnum = {
    list: "list",
    board: "board",
    calendar: "calendar",
    timeline: "timeline"
  };
  ProjectRequest.prototype.default_view = undefined;
  ProjectRequest.prototype.due_date = undefined;
  ProjectRequest.prototype.due_on = undefined;
  ProjectRequest.prototype.html_notes = undefined;
  ProjectRequest.prototype.members = undefined;
  ProjectRequest.prototype.modified_at = undefined;
  ProjectRequest.prototype.notes = undefined;
  ProjectRequest.prototype._public = undefined;
  ProjectRequest.prototype.start_on = undefined;
  ProjectRequest.DefaultAccessLevelEnum = {
    admin: "admin",
    editor: "editor",
    commenter: "commenter",
    viewer: "viewer"
  };
  ProjectRequest.prototype.default_access_level = undefined;
  ProjectRequest.prototype.custom_fields = undefined;
  ProjectRequest.prototype.followers = undefined;
  ProjectRequest.prototype.owner = undefined;
  ProjectRequest.prototype.team = undefined;
  ProjectRequest.prototype.workspace = undefined;
});

// node_modules/asana/dist/model/ProjectResponseCompletedBy.js
var require_ProjectResponseCompletedBy = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectResponseCompletedBy = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectResponseCompletedBy = function() {
    function ProjectResponseCompletedBy2() {
      _classCallCheck(this, ProjectResponseCompletedBy2);
    }
    _createClass(ProjectResponseCompletedBy2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectResponseCompletedBy2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return ProjectResponseCompletedBy2;
  }();
  exports.ProjectResponseCompletedBy = ProjectResponseCompletedBy;
  ProjectResponseCompletedBy.prototype.gid = undefined;
  ProjectResponseCompletedBy.prototype.resource_type = undefined;
  ProjectResponseCompletedBy.prototype.name = undefined;
});

// node_modules/asana/dist/model/ProjectResponseCreatedFromTemplate.js
var require_ProjectResponseCreatedFromTemplate = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectResponseCreatedFromTemplate = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectResponseCreatedFromTemplate = function() {
    function ProjectResponseCreatedFromTemplate2() {
      _classCallCheck(this, ProjectResponseCreatedFromTemplate2);
    }
    _createClass(ProjectResponseCreatedFromTemplate2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectResponseCreatedFromTemplate2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return ProjectResponseCreatedFromTemplate2;
  }();
  exports.ProjectResponseCreatedFromTemplate = ProjectResponseCreatedFromTemplate;
  ProjectResponseCreatedFromTemplate.prototype.gid = undefined;
  ProjectResponseCreatedFromTemplate.prototype.resource_type = undefined;
  ProjectResponseCreatedFromTemplate.prototype.name = undefined;
});

// node_modules/asana/dist/model/ProjectResponseProjectBrief.js
var require_ProjectResponseProjectBrief = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectResponseProjectBrief = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectResponseProjectBrief = function() {
    function ProjectResponseProjectBrief2() {
      _classCallCheck(this, ProjectResponseProjectBrief2);
    }
    _createClass(ProjectResponseProjectBrief2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectResponseProjectBrief2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
        }
        return obj;
      }
    }]);
    return ProjectResponseProjectBrief2;
  }();
  exports.ProjectResponseProjectBrief = ProjectResponseProjectBrief;
  ProjectResponseProjectBrief.prototype.gid = undefined;
  ProjectResponseProjectBrief.prototype.resource_type = undefined;
});

// node_modules/asana/dist/model/ProjectResponseTeam.js
var require_ProjectResponseTeam = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectResponseTeam = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectResponseTeam = function() {
    function ProjectResponseTeam2() {
      _classCallCheck(this, ProjectResponseTeam2);
    }
    _createClass(ProjectResponseTeam2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectResponseTeam2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return ProjectResponseTeam2;
  }();
  exports.ProjectResponseTeam = ProjectResponseTeam;
  ProjectResponseTeam.prototype.gid = undefined;
  ProjectResponseTeam.prototype.resource_type = undefined;
  ProjectResponseTeam.prototype.name = undefined;
});

// node_modules/asana/dist/model/ProjectResponseWorkspace.js
var require_ProjectResponseWorkspace = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectResponseWorkspace = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectResponseWorkspace = function() {
    function ProjectResponseWorkspace2() {
      _classCallCheck(this, ProjectResponseWorkspace2);
    }
    _createClass(ProjectResponseWorkspace2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectResponseWorkspace2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return ProjectResponseWorkspace2;
  }();
  exports.ProjectResponseWorkspace = ProjectResponseWorkspace;
  ProjectResponseWorkspace.prototype.gid = undefined;
  ProjectResponseWorkspace.prototype.resource_type = undefined;
  ProjectResponseWorkspace.prototype.name = undefined;
});

// node_modules/asana/dist/model/ProjectResponse.js
var require_ProjectResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _PortfolioResponseCustomFieldSettings = require_PortfolioResponseCustomFieldSettings();
  var _PortfolioResponseCustomFields = require_PortfolioResponseCustomFields();
  var _ProjectBaseCurrentStatus = require_ProjectBaseCurrentStatus();
  var _ProjectBaseCurrentStatusUpdate = require_ProjectBaseCurrentStatusUpdate();
  var _ProjectResponseCompletedBy = require_ProjectResponseCompletedBy();
  var _ProjectResponseCreatedFromTemplate = require_ProjectResponseCreatedFromTemplate();
  var _ProjectResponseProjectBrief = require_ProjectResponseProjectBrief();
  var _ProjectResponseTeam = require_ProjectResponseTeam();
  var _ProjectResponseWorkspace = require_ProjectResponseWorkspace();
  var ProjectResponse = function() {
    function ProjectResponse2() {
      _classCallCheck(this, ProjectResponse2);
    }
    _createClass(ProjectResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("archived"))
            obj.archived = _ApiClient.ApiClient.convertToType(data["archived"], "Boolean");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("current_status"))
            obj.current_status = _ProjectBaseCurrentStatus.ProjectBaseCurrentStatus.constructFromObject(data["current_status"]);
          if (data.hasOwnProperty("current_status_update"))
            obj.current_status_update = _ProjectBaseCurrentStatusUpdate.ProjectBaseCurrentStatusUpdate.constructFromObject(data["current_status_update"]);
          if (data.hasOwnProperty("custom_field_settings"))
            obj.custom_field_settings = _ApiClient.ApiClient.convertToType(data["custom_field_settings"], [_PortfolioResponseCustomFieldSettings.PortfolioResponseCustomFieldSettings]);
          if (data.hasOwnProperty("default_view"))
            obj.default_view = _ApiClient.ApiClient.convertToType(data["default_view"], "String");
          if (data.hasOwnProperty("due_date"))
            obj.due_date = _ApiClient.ApiClient.convertToType(data["due_date"], "Date");
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "Date");
          if (data.hasOwnProperty("html_notes"))
            obj.html_notes = _ApiClient.ApiClient.convertToType(data["html_notes"], "String");
          if (data.hasOwnProperty("members"))
            obj.members = _ApiClient.ApiClient.convertToType(data["members"], [_CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue]);
          if (data.hasOwnProperty("modified_at"))
            obj.modified_at = _ApiClient.ApiClient.convertToType(data["modified_at"], "Date");
          if (data.hasOwnProperty("notes"))
            obj.notes = _ApiClient.ApiClient.convertToType(data["notes"], "String");
          if (data.hasOwnProperty("public"))
            obj._public = _ApiClient.ApiClient.convertToType(data["public"], "Boolean");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "Date");
          if (data.hasOwnProperty("default_access_level"))
            obj.default_access_level = _ApiClient.ApiClient.convertToType(data["default_access_level"], "String");
          if (data.hasOwnProperty("custom_fields"))
            obj.custom_fields = _ApiClient.ApiClient.convertToType(data["custom_fields"], [_PortfolioResponseCustomFields.PortfolioResponseCustomFields]);
          if (data.hasOwnProperty("completed"))
            obj.completed = _ApiClient.ApiClient.convertToType(data["completed"], "Boolean");
          if (data.hasOwnProperty("completed_at"))
            obj.completed_at = _ApiClient.ApiClient.convertToType(data["completed_at"], "Date");
          if (data.hasOwnProperty("completed_by"))
            obj.completed_by = _ProjectResponseCompletedBy.ProjectResponseCompletedBy.constructFromObject(data["completed_by"]);
          if (data.hasOwnProperty("followers"))
            obj.followers = _ApiClient.ApiClient.convertToType(data["followers"], [_CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue]);
          if (data.hasOwnProperty("owner"))
            obj.owner = _ApiClient.ApiClient.convertToType(data["owner"], Object);
          if (data.hasOwnProperty("team"))
            obj.team = _ProjectResponseTeam.ProjectResponseTeam.constructFromObject(data["team"]);
          if (data.hasOwnProperty("icon"))
            obj.icon = _ApiClient.ApiClient.convertToType(data["icon"], "String");
          if (data.hasOwnProperty("permalink_url"))
            obj.permalink_url = _ApiClient.ApiClient.convertToType(data["permalink_url"], "String");
          if (data.hasOwnProperty("project_brief"))
            obj.project_brief = _ProjectResponseProjectBrief.ProjectResponseProjectBrief.constructFromObject(data["project_brief"]);
          if (data.hasOwnProperty("created_from_template"))
            obj.created_from_template = _ProjectResponseCreatedFromTemplate.ProjectResponseCreatedFromTemplate.constructFromObject(data["created_from_template"]);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _ProjectResponseWorkspace.ProjectResponseWorkspace.constructFromObject(data["workspace"]);
        }
        return obj;
      }
    }]);
    return ProjectResponse2;
  }();
  exports.ProjectResponse = ProjectResponse;
  ProjectResponse.prototype.gid = undefined;
  ProjectResponse.prototype.resource_type = undefined;
  ProjectResponse.prototype.name = undefined;
  ProjectResponse.prototype.archived = undefined;
  ProjectResponse.ColorEnum = {
    dark_pink: "dark-pink",
    dark_green: "dark-green",
    dark_blue: "dark-blue",
    dark_red: "dark-red",
    dark_teal: "dark-teal",
    dark_brown: "dark-brown",
    dark_orange: "dark-orange",
    dark_purple: "dark-purple",
    dark_warm_gray: "dark-warm-gray",
    light_pink: "light-pink",
    light_green: "light-green",
    light_blue: "light-blue",
    light_red: "light-red",
    light_teal: "light-teal",
    light_brown: "light-brown",
    light_orange: "light-orange",
    light_purple: "light-purple",
    light_warm_gray: "light-warm-gray",
    none: "none",
    _null: "null"
  };
  ProjectResponse.prototype.color = undefined;
  ProjectResponse.prototype.created_at = undefined;
  ProjectResponse.prototype.current_status = undefined;
  ProjectResponse.prototype.current_status_update = undefined;
  ProjectResponse.prototype.custom_field_settings = undefined;
  ProjectResponse.DefaultViewEnum = {
    list: "list",
    board: "board",
    calendar: "calendar",
    timeline: "timeline"
  };
  ProjectResponse.prototype.default_view = undefined;
  ProjectResponse.prototype.due_date = undefined;
  ProjectResponse.prototype.due_on = undefined;
  ProjectResponse.prototype.html_notes = undefined;
  ProjectResponse.prototype.members = undefined;
  ProjectResponse.prototype.modified_at = undefined;
  ProjectResponse.prototype.notes = undefined;
  ProjectResponse.prototype._public = undefined;
  ProjectResponse.prototype.start_on = undefined;
  ProjectResponse.DefaultAccessLevelEnum = {
    admin: "admin",
    editor: "editor",
    commenter: "commenter",
    viewer: "viewer"
  };
  ProjectResponse.prototype.default_access_level = undefined;
  ProjectResponse.prototype.custom_fields = undefined;
  ProjectResponse.prototype.completed = undefined;
  ProjectResponse.prototype.completed_at = undefined;
  ProjectResponse.prototype.completed_by = undefined;
  ProjectResponse.prototype.followers = undefined;
  ProjectResponse.prototype.owner = undefined;
  ProjectResponse.prototype.team = undefined;
  ProjectResponse.IconEnum = {
    list: "list",
    board: "board",
    timeline: "timeline",
    calendar: "calendar",
    rocket: "rocket",
    people: "people",
    graph: "graph",
    star: "star",
    bug: "bug",
    light_bulb: "light_bulb",
    globe: "globe",
    gear: "gear",
    notebook: "notebook",
    computer: "computer",
    check: "check",
    target: "target",
    html: "html",
    megaphone: "megaphone",
    chat_bubbles: "chat_bubbles",
    briefcase: "briefcase",
    page_layout: "page_layout",
    mountain_flag: "mountain_flag",
    puzzle: "puzzle",
    presentation: "presentation",
    line_and_symbols: "line_and_symbols",
    speed_dial: "speed_dial",
    ribbon: "ribbon",
    shoe: "shoe",
    shopping_basket: "shopping_basket",
    map: "map",
    ticket: "ticket",
    coins: "coins"
  };
  ProjectResponse.prototype.icon = undefined;
  ProjectResponse.prototype.permalink_url = undefined;
  ProjectResponse.prototype.project_brief = undefined;
  ProjectResponse.prototype.created_from_template = undefined;
  ProjectResponse.prototype.workspace = undefined;
});

// node_modules/asana/dist/model/ProjectResponseArray.js
var require_ProjectResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _ProjectResponse = require_ProjectResponse();
  var ProjectResponseArray = function() {
    function ProjectResponseArray2(data) {
      _classCallCheck(this, ProjectResponseArray2);
      this.data = data;
    }
    _createClass(ProjectResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_ProjectResponse.ProjectResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return ProjectResponseArray2;
  }();
  exports.ProjectResponseArray = ProjectResponseArray;
  ProjectResponseArray.prototype.data = undefined;
  ProjectResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/ProjectResponseData.js
var require_ProjectResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectResponse = require_ProjectResponse();
  var ProjectResponseData = function() {
    function ProjectResponseData2(data) {
      _classCallCheck(this, ProjectResponseData2);
      this.data = data;
    }
    _createClass(ProjectResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectResponse.ProjectResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectResponseData2;
  }();
  exports.ProjectResponseData = ProjectResponseData;
  ProjectResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectSectionInsertRequest.js
var require_ProjectSectionInsertRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectSectionInsertRequest = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectSectionInsertRequest = function() {
    function ProjectSectionInsertRequest2(section) {
      _classCallCheck(this, ProjectSectionInsertRequest2);
      this.section = section;
    }
    _createClass(ProjectSectionInsertRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectSectionInsertRequest2;
          if (data.hasOwnProperty("section"))
            obj.section = _ApiClient.ApiClient.convertToType(data["section"], "String");
          if (data.hasOwnProperty("before_section"))
            obj.before_section = _ApiClient.ApiClient.convertToType(data["before_section"], "String");
          if (data.hasOwnProperty("after_section"))
            obj.after_section = _ApiClient.ApiClient.convertToType(data["after_section"], "String");
        }
        return obj;
      }
    }]);
    return ProjectSectionInsertRequest2;
  }();
  exports.ProjectSectionInsertRequest = ProjectSectionInsertRequest;
  ProjectSectionInsertRequest.prototype.section = undefined;
  ProjectSectionInsertRequest.prototype.before_section = undefined;
  ProjectSectionInsertRequest.prototype.after_section = undefined;
});

// node_modules/asana/dist/model/ProjectStatusBase.js
var require_ProjectStatusBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectStatusBase = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectStatusBase = function() {
    function ProjectStatusBase2(text, color) {
      _classCallCheck(this, ProjectStatusBase2);
      this.text = text;
      this.color = color;
    }
    _createClass(ProjectStatusBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectStatusBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
          if (data.hasOwnProperty("html_text"))
            obj.html_text = _ApiClient.ApiClient.convertToType(data["html_text"], "String");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
        }
        return obj;
      }
    }]);
    return ProjectStatusBase2;
  }();
  exports.ProjectStatusBase = ProjectStatusBase;
  ProjectStatusBase.prototype.gid = undefined;
  ProjectStatusBase.prototype.resource_type = undefined;
  ProjectStatusBase.prototype.title = undefined;
  ProjectStatusBase.prototype.text = undefined;
  ProjectStatusBase.prototype.html_text = undefined;
  ProjectStatusBase.ColorEnum = {
    green: "green",
    yellow: "yellow",
    red: "red",
    blue: "blue"
  };
  ProjectStatusBase.prototype.color = undefined;
});

// node_modules/asana/dist/model/ProjectStatusCompact.js
var require_ProjectStatusCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectStatusCompact = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectStatusCompact = function() {
    function ProjectStatusCompact2() {
      _classCallCheck(this, ProjectStatusCompact2);
    }
    _createClass(ProjectStatusCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectStatusCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
        }
        return obj;
      }
    }]);
    return ProjectStatusCompact2;
  }();
  exports.ProjectStatusCompact = ProjectStatusCompact;
  ProjectStatusCompact.prototype.gid = undefined;
  ProjectStatusCompact.prototype.resource_type = undefined;
  ProjectStatusCompact.prototype.title = undefined;
});

// node_modules/asana/dist/model/ProjectStatusResponse.js
var require_ProjectStatusResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectStatusResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var ProjectStatusResponse = function() {
    function ProjectStatusResponse2(text, color) {
      _classCallCheck(this, ProjectStatusResponse2);
      this.text = text;
      this.color = color;
    }
    _createClass(ProjectStatusResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectStatusResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
          if (data.hasOwnProperty("html_text"))
            obj.html_text = _ApiClient.ApiClient.convertToType(data["html_text"], "String");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
          if (data.hasOwnProperty("author"))
            obj.author = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["author"]);
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["created_by"]);
          if (data.hasOwnProperty("modified_at"))
            obj.modified_at = _ApiClient.ApiClient.convertToType(data["modified_at"], "Date");
        }
        return obj;
      }
    }]);
    return ProjectStatusResponse2;
  }();
  exports.ProjectStatusResponse = ProjectStatusResponse;
  ProjectStatusResponse.prototype.gid = undefined;
  ProjectStatusResponse.prototype.resource_type = undefined;
  ProjectStatusResponse.prototype.title = undefined;
  ProjectStatusResponse.prototype.text = undefined;
  ProjectStatusResponse.prototype.html_text = undefined;
  ProjectStatusResponse.ColorEnum = {
    green: "green",
    yellow: "yellow",
    red: "red",
    blue: "blue"
  };
  ProjectStatusResponse.prototype.color = undefined;
  ProjectStatusResponse.prototype.author = undefined;
  ProjectStatusResponse.prototype.created_at = undefined;
  ProjectStatusResponse.prototype.created_by = undefined;
  ProjectStatusResponse.prototype.modified_at = undefined;
});

// node_modules/asana/dist/model/ProjectStatusResponseArray.js
var require_ProjectStatusResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectStatusResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _ProjectStatusResponse = require_ProjectStatusResponse();
  var ProjectStatusResponseArray = function() {
    function ProjectStatusResponseArray2(data) {
      _classCallCheck(this, ProjectStatusResponseArray2);
      this.data = data;
    }
    _createClass(ProjectStatusResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectStatusResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_ProjectStatusResponse.ProjectStatusResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return ProjectStatusResponseArray2;
  }();
  exports.ProjectStatusResponseArray = ProjectStatusResponseArray;
  ProjectStatusResponseArray.prototype.data = undefined;
  ProjectStatusResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/ProjectStatusResponseData.js
var require_ProjectStatusResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectStatusResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectStatusResponse = require_ProjectStatusResponse();
  var ProjectStatusResponseData = function() {
    function ProjectStatusResponseData2(data) {
      _classCallCheck(this, ProjectStatusResponseData2);
      this.data = data;
    }
    _createClass(ProjectStatusResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectStatusResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectStatusResponse.ProjectStatusResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectStatusResponseData2;
  }();
  exports.ProjectStatusResponseData = ProjectStatusResponseData;
  ProjectStatusResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectTemplateBaseRequestedDates.js
var require_ProjectTemplateBaseRequestedDates = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectTemplateBaseRequestedDates = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectTemplateBaseRequestedDates = function() {
    function ProjectTemplateBaseRequestedDates2() {
      _classCallCheck(this, ProjectTemplateBaseRequestedDates2);
    }
    _createClass(ProjectTemplateBaseRequestedDates2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectTemplateBaseRequestedDates2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("description"))
            obj.description = _ApiClient.ApiClient.convertToType(data["description"], "String");
        }
        return obj;
      }
    }]);
    return ProjectTemplateBaseRequestedDates2;
  }();
  exports.ProjectTemplateBaseRequestedDates = ProjectTemplateBaseRequestedDates;
  ProjectTemplateBaseRequestedDates.prototype.gid = undefined;
  ProjectTemplateBaseRequestedDates.prototype.name = undefined;
  ProjectTemplateBaseRequestedDates.prototype.description = undefined;
});

// node_modules/asana/dist/model/ProjectTemplateBaseRequestedRoles.js
var require_ProjectTemplateBaseRequestedRoles = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectTemplateBaseRequestedRoles = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectTemplateBaseRequestedRoles = function() {
    function ProjectTemplateBaseRequestedRoles2() {
      _classCallCheck(this, ProjectTemplateBaseRequestedRoles2);
    }
    _createClass(ProjectTemplateBaseRequestedRoles2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectTemplateBaseRequestedRoles2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return ProjectTemplateBaseRequestedRoles2;
  }();
  exports.ProjectTemplateBaseRequestedRoles = ProjectTemplateBaseRequestedRoles;
  ProjectTemplateBaseRequestedRoles.prototype.gid = undefined;
  ProjectTemplateBaseRequestedRoles.prototype.resource_type = undefined;
  ProjectTemplateBaseRequestedRoles.prototype.name = undefined;
});

// node_modules/asana/dist/model/ProjectTemplateBaseTeam.js
var require_ProjectTemplateBaseTeam = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectTemplateBaseTeam = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectTemplateBaseTeam = function() {
    function ProjectTemplateBaseTeam2() {
      _classCallCheck(this, ProjectTemplateBaseTeam2);
    }
    _createClass(ProjectTemplateBaseTeam2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectTemplateBaseTeam2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return ProjectTemplateBaseTeam2;
  }();
  exports.ProjectTemplateBaseTeam = ProjectTemplateBaseTeam;
  ProjectTemplateBaseTeam.prototype.gid = undefined;
  ProjectTemplateBaseTeam.prototype.resource_type = undefined;
  ProjectTemplateBaseTeam.prototype.name = undefined;
});

// node_modules/asana/dist/model/ProjectTemplateBase.js
var require_ProjectTemplateBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectTemplateBase = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectTemplateBaseRequestedDates = require_ProjectTemplateBaseRequestedDates();
  var _ProjectTemplateBaseRequestedRoles = require_ProjectTemplateBaseRequestedRoles();
  var _ProjectTemplateBaseTeam = require_ProjectTemplateBaseTeam();
  var ProjectTemplateBase = function() {
    function ProjectTemplateBase2() {
      _classCallCheck(this, ProjectTemplateBase2);
    }
    _createClass(ProjectTemplateBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectTemplateBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("description"))
            obj.description = _ApiClient.ApiClient.convertToType(data["description"], "String");
          if (data.hasOwnProperty("html_description"))
            obj.html_description = _ApiClient.ApiClient.convertToType(data["html_description"], "String");
          if (data.hasOwnProperty("public"))
            obj._public = _ApiClient.ApiClient.convertToType(data["public"], "Boolean");
          if (data.hasOwnProperty("owner"))
            obj.owner = _ApiClient.ApiClient.convertToType(data["owner"], Object);
          if (data.hasOwnProperty("team"))
            obj.team = _ProjectTemplateBaseTeam.ProjectTemplateBaseTeam.constructFromObject(data["team"]);
          if (data.hasOwnProperty("requested_dates"))
            obj.requested_dates = _ApiClient.ApiClient.convertToType(data["requested_dates"], [_ProjectTemplateBaseRequestedDates.ProjectTemplateBaseRequestedDates]);
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
          if (data.hasOwnProperty("requested_roles"))
            obj.requested_roles = _ApiClient.ApiClient.convertToType(data["requested_roles"], [_ProjectTemplateBaseRequestedRoles.ProjectTemplateBaseRequestedRoles]);
        }
        return obj;
      }
    }]);
    return ProjectTemplateBase2;
  }();
  exports.ProjectTemplateBase = ProjectTemplateBase;
  ProjectTemplateBase.prototype.gid = undefined;
  ProjectTemplateBase.prototype.resource_type = undefined;
  ProjectTemplateBase.prototype.name = undefined;
  ProjectTemplateBase.prototype.description = undefined;
  ProjectTemplateBase.prototype.html_description = undefined;
  ProjectTemplateBase.prototype._public = undefined;
  ProjectTemplateBase.prototype.owner = undefined;
  ProjectTemplateBase.prototype.team = undefined;
  ProjectTemplateBase.prototype.requested_dates = undefined;
  ProjectTemplateBase.ColorEnum = {
    dark_pink: "dark-pink",
    dark_green: "dark-green",
    dark_blue: "dark-blue",
    dark_red: "dark-red",
    dark_teal: "dark-teal",
    dark_brown: "dark-brown",
    dark_orange: "dark-orange",
    dark_purple: "dark-purple",
    dark_warm_gray: "dark-warm-gray",
    light_pink: "light-pink",
    light_green: "light-green",
    light_blue: "light-blue",
    light_red: "light-red",
    light_teal: "light-teal",
    light_brown: "light-brown",
    light_orange: "light-orange",
    light_purple: "light-purple",
    light_warm_gray: "light-warm-gray",
    _null: "null"
  };
  ProjectTemplateBase.prototype.color = undefined;
  ProjectTemplateBase.prototype.requested_roles = undefined;
});

// node_modules/asana/dist/model/ProjectTemplateCompact.js
var require_ProjectTemplateCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectTemplateCompact = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectTemplateCompact = function() {
    function ProjectTemplateCompact2() {
      _classCallCheck(this, ProjectTemplateCompact2);
    }
    _createClass(ProjectTemplateCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectTemplateCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return ProjectTemplateCompact2;
  }();
  exports.ProjectTemplateCompact = ProjectTemplateCompact;
  ProjectTemplateCompact.prototype.gid = undefined;
  ProjectTemplateCompact.prototype.resource_type = undefined;
  ProjectTemplateCompact.prototype.name = undefined;
});

// node_modules/asana/dist/model/ProjectTemplateInstantiateProjectRequestRequestedDates.js
var require_ProjectTemplateInstantiateProjectRequestRequestedDates = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectTemplateInstantiateProjectRequestRequestedDates = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectTemplateInstantiateProjectRequestRequestedDates = function() {
    function ProjectTemplateInstantiateProjectRequestRequestedDates2() {
      _classCallCheck(this, ProjectTemplateInstantiateProjectRequestRequestedDates2);
    }
    _createClass(ProjectTemplateInstantiateProjectRequestRequestedDates2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectTemplateInstantiateProjectRequestRequestedDates2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("value"))
            obj.value = _ApiClient.ApiClient.convertToType(data["value"], "Date");
        }
        return obj;
      }
    }]);
    return ProjectTemplateInstantiateProjectRequestRequestedDates2;
  }();
  exports.ProjectTemplateInstantiateProjectRequestRequestedDates = ProjectTemplateInstantiateProjectRequestRequestedDates;
  ProjectTemplateInstantiateProjectRequestRequestedDates.prototype.gid = undefined;
  ProjectTemplateInstantiateProjectRequestRequestedDates.prototype.value = undefined;
});

// node_modules/asana/dist/model/ProjectTemplateInstantiateProjectRequestRequestedRoles.js
var require_ProjectTemplateInstantiateProjectRequestRequestedRoles = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectTemplateInstantiateProjectRequestRequestedRoles = undefined;
  var _ApiClient = require_ApiClient();
  var ProjectTemplateInstantiateProjectRequestRequestedRoles = function() {
    function ProjectTemplateInstantiateProjectRequestRequestedRoles2() {
      _classCallCheck(this, ProjectTemplateInstantiateProjectRequestRequestedRoles2);
    }
    _createClass(ProjectTemplateInstantiateProjectRequestRequestedRoles2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectTemplateInstantiateProjectRequestRequestedRoles2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("value"))
            obj.value = _ApiClient.ApiClient.convertToType(data["value"], "String");
        }
        return obj;
      }
    }]);
    return ProjectTemplateInstantiateProjectRequestRequestedRoles2;
  }();
  exports.ProjectTemplateInstantiateProjectRequestRequestedRoles = ProjectTemplateInstantiateProjectRequestRequestedRoles;
  ProjectTemplateInstantiateProjectRequestRequestedRoles.prototype.gid = undefined;
  ProjectTemplateInstantiateProjectRequestRequestedRoles.prototype.value = undefined;
});

// node_modules/asana/dist/model/ProjectTemplateInstantiateProjectRequest.js
var require_ProjectTemplateInstantiateProjectRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectTemplateInstantiateProjectRequest = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectTemplateInstantiateProjectRequestRequestedDates = require_ProjectTemplateInstantiateProjectRequestRequestedDates();
  var _ProjectTemplateInstantiateProjectRequestRequestedRoles = require_ProjectTemplateInstantiateProjectRequestRequestedRoles();
  var ProjectTemplateInstantiateProjectRequest = function() {
    function ProjectTemplateInstantiateProjectRequest2(name) {
      _classCallCheck(this, ProjectTemplateInstantiateProjectRequest2);
      this.name = name;
    }
    _createClass(ProjectTemplateInstantiateProjectRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectTemplateInstantiateProjectRequest2;
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("team"))
            obj.team = _ApiClient.ApiClient.convertToType(data["team"], "String");
          if (data.hasOwnProperty("public"))
            obj._public = _ApiClient.ApiClient.convertToType(data["public"], "Boolean");
          if (data.hasOwnProperty("is_strict"))
            obj.is_strict = _ApiClient.ApiClient.convertToType(data["is_strict"], "Boolean");
          if (data.hasOwnProperty("requested_dates"))
            obj.requested_dates = _ApiClient.ApiClient.convertToType(data["requested_dates"], [_ProjectTemplateInstantiateProjectRequestRequestedDates.ProjectTemplateInstantiateProjectRequestRequestedDates]);
          if (data.hasOwnProperty("requested_roles"))
            obj.requested_roles = _ApiClient.ApiClient.convertToType(data["requested_roles"], [_ProjectTemplateInstantiateProjectRequestRequestedRoles.ProjectTemplateInstantiateProjectRequestRequestedRoles]);
        }
        return obj;
      }
    }]);
    return ProjectTemplateInstantiateProjectRequest2;
  }();
  exports.ProjectTemplateInstantiateProjectRequest = ProjectTemplateInstantiateProjectRequest;
  ProjectTemplateInstantiateProjectRequest.prototype.name = undefined;
  ProjectTemplateInstantiateProjectRequest.prototype.team = undefined;
  ProjectTemplateInstantiateProjectRequest.prototype._public = undefined;
  ProjectTemplateInstantiateProjectRequest.prototype.is_strict = undefined;
  ProjectTemplateInstantiateProjectRequest.prototype.requested_dates = undefined;
  ProjectTemplateInstantiateProjectRequest.prototype.requested_roles = undefined;
});

// node_modules/asana/dist/model/ProjectTemplateGidInstantiateProjectBody.js
var require_ProjectTemplateGidInstantiateProjectBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectTemplateGidInstantiateProjectBody = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectTemplateInstantiateProjectRequest = require_ProjectTemplateInstantiateProjectRequest();
  var ProjectTemplateGidInstantiateProjectBody = function() {
    function ProjectTemplateGidInstantiateProjectBody2() {
      _classCallCheck(this, ProjectTemplateGidInstantiateProjectBody2);
    }
    _createClass(ProjectTemplateGidInstantiateProjectBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectTemplateGidInstantiateProjectBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectTemplateInstantiateProjectRequest.ProjectTemplateInstantiateProjectRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectTemplateGidInstantiateProjectBody2;
  }();
  exports.ProjectTemplateGidInstantiateProjectBody = ProjectTemplateGidInstantiateProjectBody;
  ProjectTemplateGidInstantiateProjectBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectTemplateResponse.js
var require_ProjectTemplateResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectTemplateResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectTemplateBaseRequestedDates = require_ProjectTemplateBaseRequestedDates();
  var _ProjectTemplateBaseRequestedRoles = require_ProjectTemplateBaseRequestedRoles();
  var _ProjectTemplateBaseTeam = require_ProjectTemplateBaseTeam();
  var ProjectTemplateResponse = function() {
    function ProjectTemplateResponse2() {
      _classCallCheck(this, ProjectTemplateResponse2);
    }
    _createClass(ProjectTemplateResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectTemplateResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("description"))
            obj.description = _ApiClient.ApiClient.convertToType(data["description"], "String");
          if (data.hasOwnProperty("html_description"))
            obj.html_description = _ApiClient.ApiClient.convertToType(data["html_description"], "String");
          if (data.hasOwnProperty("public"))
            obj._public = _ApiClient.ApiClient.convertToType(data["public"], "Boolean");
          if (data.hasOwnProperty("owner"))
            obj.owner = _ApiClient.ApiClient.convertToType(data["owner"], Object);
          if (data.hasOwnProperty("team"))
            obj.team = _ProjectTemplateBaseTeam.ProjectTemplateBaseTeam.constructFromObject(data["team"]);
          if (data.hasOwnProperty("requested_dates"))
            obj.requested_dates = _ApiClient.ApiClient.convertToType(data["requested_dates"], [_ProjectTemplateBaseRequestedDates.ProjectTemplateBaseRequestedDates]);
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
          if (data.hasOwnProperty("requested_roles"))
            obj.requested_roles = _ApiClient.ApiClient.convertToType(data["requested_roles"], [_ProjectTemplateBaseRequestedRoles.ProjectTemplateBaseRequestedRoles]);
        }
        return obj;
      }
    }]);
    return ProjectTemplateResponse2;
  }();
  exports.ProjectTemplateResponse = ProjectTemplateResponse;
  ProjectTemplateResponse.prototype.gid = undefined;
  ProjectTemplateResponse.prototype.resource_type = undefined;
  ProjectTemplateResponse.prototype.name = undefined;
  ProjectTemplateResponse.prototype.description = undefined;
  ProjectTemplateResponse.prototype.html_description = undefined;
  ProjectTemplateResponse.prototype._public = undefined;
  ProjectTemplateResponse.prototype.owner = undefined;
  ProjectTemplateResponse.prototype.team = undefined;
  ProjectTemplateResponse.prototype.requested_dates = undefined;
  ProjectTemplateResponse.ColorEnum = {
    dark_pink: "dark-pink",
    dark_green: "dark-green",
    dark_blue: "dark-blue",
    dark_red: "dark-red",
    dark_teal: "dark-teal",
    dark_brown: "dark-brown",
    dark_orange: "dark-orange",
    dark_purple: "dark-purple",
    dark_warm_gray: "dark-warm-gray",
    light_pink: "light-pink",
    light_green: "light-green",
    light_blue: "light-blue",
    light_red: "light-red",
    light_teal: "light-teal",
    light_brown: "light-brown",
    light_orange: "light-orange",
    light_purple: "light-purple",
    light_warm_gray: "light-warm-gray",
    _null: "null"
  };
  ProjectTemplateResponse.prototype.color = undefined;
  ProjectTemplateResponse.prototype.requested_roles = undefined;
});

// node_modules/asana/dist/model/ProjectTemplateResponseArray.js
var require_ProjectTemplateResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectTemplateResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _ProjectTemplateResponse = require_ProjectTemplateResponse();
  var ProjectTemplateResponseArray = function() {
    function ProjectTemplateResponseArray2(data) {
      _classCallCheck(this, ProjectTemplateResponseArray2);
      this.data = data;
    }
    _createClass(ProjectTemplateResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectTemplateResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_ProjectTemplateResponse.ProjectTemplateResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return ProjectTemplateResponseArray2;
  }();
  exports.ProjectTemplateResponseArray = ProjectTemplateResponseArray;
  ProjectTemplateResponseArray.prototype.data = undefined;
  ProjectTemplateResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/ProjectTemplateResponseData.js
var require_ProjectTemplateResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectTemplateResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectTemplateResponse = require_ProjectTemplateResponse();
  var ProjectTemplateResponseData = function() {
    function ProjectTemplateResponseData2(data) {
      _classCallCheck(this, ProjectTemplateResponseData2);
      this.data = data;
    }
    _createClass(ProjectTemplateResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectTemplateResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectTemplateResponse.ProjectTemplateResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectTemplateResponseData2;
  }();
  exports.ProjectTemplateResponseData = ProjectTemplateResponseData;
  ProjectTemplateResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectUpdateRequest.js
var require_ProjectUpdateRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectUpdateRequest = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _PortfolioResponseCustomFieldSettings = require_PortfolioResponseCustomFieldSettings();
  var _ProjectBaseCurrentStatus = require_ProjectBaseCurrentStatus();
  var _ProjectBaseCurrentStatusUpdate = require_ProjectBaseCurrentStatusUpdate();
  var ProjectUpdateRequest = function() {
    function ProjectUpdateRequest2() {
      _classCallCheck(this, ProjectUpdateRequest2);
    }
    _createClass(ProjectUpdateRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectUpdateRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("archived"))
            obj.archived = _ApiClient.ApiClient.convertToType(data["archived"], "Boolean");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("current_status"))
            obj.current_status = _ProjectBaseCurrentStatus.ProjectBaseCurrentStatus.constructFromObject(data["current_status"]);
          if (data.hasOwnProperty("current_status_update"))
            obj.current_status_update = _ProjectBaseCurrentStatusUpdate.ProjectBaseCurrentStatusUpdate.constructFromObject(data["current_status_update"]);
          if (data.hasOwnProperty("custom_field_settings"))
            obj.custom_field_settings = _ApiClient.ApiClient.convertToType(data["custom_field_settings"], [_PortfolioResponseCustomFieldSettings.PortfolioResponseCustomFieldSettings]);
          if (data.hasOwnProperty("default_view"))
            obj.default_view = _ApiClient.ApiClient.convertToType(data["default_view"], "String");
          if (data.hasOwnProperty("due_date"))
            obj.due_date = _ApiClient.ApiClient.convertToType(data["due_date"], "Date");
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "Date");
          if (data.hasOwnProperty("html_notes"))
            obj.html_notes = _ApiClient.ApiClient.convertToType(data["html_notes"], "String");
          if (data.hasOwnProperty("members"))
            obj.members = _ApiClient.ApiClient.convertToType(data["members"], [_CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue]);
          if (data.hasOwnProperty("modified_at"))
            obj.modified_at = _ApiClient.ApiClient.convertToType(data["modified_at"], "Date");
          if (data.hasOwnProperty("notes"))
            obj.notes = _ApiClient.ApiClient.convertToType(data["notes"], "String");
          if (data.hasOwnProperty("public"))
            obj._public = _ApiClient.ApiClient.convertToType(data["public"], "Boolean");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "Date");
          if (data.hasOwnProperty("default_access_level"))
            obj.default_access_level = _ApiClient.ApiClient.convertToType(data["default_access_level"], "String");
          if (data.hasOwnProperty("custom_fields"))
            obj.custom_fields = _ApiClient.ApiClient.convertToType(data["custom_fields"], {
              String: "String"
            });
          if (data.hasOwnProperty("followers"))
            obj.followers = _ApiClient.ApiClient.convertToType(data["followers"], "String");
          if (data.hasOwnProperty("owner"))
            obj.owner = _ApiClient.ApiClient.convertToType(data["owner"], "String");
          if (data.hasOwnProperty("team"))
            obj.team = _ApiClient.ApiClient.convertToType(data["team"], "String");
        }
        return obj;
      }
    }]);
    return ProjectUpdateRequest2;
  }();
  exports.ProjectUpdateRequest = ProjectUpdateRequest;
  ProjectUpdateRequest.prototype.gid = undefined;
  ProjectUpdateRequest.prototype.resource_type = undefined;
  ProjectUpdateRequest.prototype.name = undefined;
  ProjectUpdateRequest.prototype.archived = undefined;
  ProjectUpdateRequest.ColorEnum = {
    dark_pink: "dark-pink",
    dark_green: "dark-green",
    dark_blue: "dark-blue",
    dark_red: "dark-red",
    dark_teal: "dark-teal",
    dark_brown: "dark-brown",
    dark_orange: "dark-orange",
    dark_purple: "dark-purple",
    dark_warm_gray: "dark-warm-gray",
    light_pink: "light-pink",
    light_green: "light-green",
    light_blue: "light-blue",
    light_red: "light-red",
    light_teal: "light-teal",
    light_brown: "light-brown",
    light_orange: "light-orange",
    light_purple: "light-purple",
    light_warm_gray: "light-warm-gray",
    none: "none",
    _null: "null"
  };
  ProjectUpdateRequest.prototype.color = undefined;
  ProjectUpdateRequest.prototype.created_at = undefined;
  ProjectUpdateRequest.prototype.current_status = undefined;
  ProjectUpdateRequest.prototype.current_status_update = undefined;
  ProjectUpdateRequest.prototype.custom_field_settings = undefined;
  ProjectUpdateRequest.DefaultViewEnum = {
    list: "list",
    board: "board",
    calendar: "calendar",
    timeline: "timeline"
  };
  ProjectUpdateRequest.prototype.default_view = undefined;
  ProjectUpdateRequest.prototype.due_date = undefined;
  ProjectUpdateRequest.prototype.due_on = undefined;
  ProjectUpdateRequest.prototype.html_notes = undefined;
  ProjectUpdateRequest.prototype.members = undefined;
  ProjectUpdateRequest.prototype.modified_at = undefined;
  ProjectUpdateRequest.prototype.notes = undefined;
  ProjectUpdateRequest.prototype._public = undefined;
  ProjectUpdateRequest.prototype.start_on = undefined;
  ProjectUpdateRequest.DefaultAccessLevelEnum = {
    admin: "admin",
    editor: "editor",
    commenter: "commenter",
    viewer: "viewer"
  };
  ProjectUpdateRequest.prototype.default_access_level = undefined;
  ProjectUpdateRequest.prototype.custom_fields = undefined;
  ProjectUpdateRequest.prototype.followers = undefined;
  ProjectUpdateRequest.prototype.owner = undefined;
  ProjectUpdateRequest.prototype.team = undefined;
});

// node_modules/asana/dist/model/ProjectsBody.js
var require_ProjectsBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectsBody = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectRequest = require_ProjectRequest();
  var ProjectsBody = function() {
    function ProjectsBody2() {
      _classCallCheck(this, ProjectsBody2);
    }
    _createClass(ProjectsBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectsBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectRequest.ProjectRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectsBody2;
  }();
  exports.ProjectsBody = ProjectsBody;
  ProjectsBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/ProjectsProjectGidBody.js
var require_ProjectsProjectGidBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectsProjectGidBody = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectUpdateRequest = require_ProjectUpdateRequest();
  var ProjectsProjectGidBody = function() {
    function ProjectsProjectGidBody2() {
      _classCallCheck(this, ProjectsProjectGidBody2);
    }
    _createClass(ProjectsProjectGidBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new ProjectsProjectGidBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectUpdateRequest.ProjectUpdateRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return ProjectsProjectGidBody2;
  }();
  exports.ProjectsProjectGidBody = ProjectsProjectGidBody;
  ProjectsProjectGidBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/RequestedRoleRequest.js
var require_RequestedRoleRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RequestedRoleRequest = undefined;
  var _ApiClient = require_ApiClient();
  var RequestedRoleRequest = function() {
    function RequestedRoleRequest2() {
      _classCallCheck(this, RequestedRoleRequest2);
    }
    _createClass(RequestedRoleRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new RequestedRoleRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("value"))
            obj.value = _ApiClient.ApiClient.convertToType(data["value"], "String");
        }
        return obj;
      }
    }]);
    return RequestedRoleRequest2;
  }();
  exports.RequestedRoleRequest = RequestedRoleRequest;
  RequestedRoleRequest.prototype.gid = undefined;
  RequestedRoleRequest.prototype.value = undefined;
});

// node_modules/asana/dist/model/RuleTriggerRequest.js
var require_RuleTriggerRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RuleTriggerRequest = undefined;
  var _ApiClient = require_ApiClient();
  var RuleTriggerRequest = function() {
    function RuleTriggerRequest2(resource, action_data) {
      _classCallCheck(this, RuleTriggerRequest2);
      this.resource = resource;
      this.action_data = action_data;
    }
    _createClass(RuleTriggerRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new RuleTriggerRequest2;
          if (data.hasOwnProperty("resource"))
            obj.resource = _ApiClient.ApiClient.convertToType(data["resource"], "String");
          if (data.hasOwnProperty("action_data"))
            obj.action_data = _ApiClient.ApiClient.convertToType(data["action_data"], {
              String: Object
            });
        }
        return obj;
      }
    }]);
    return RuleTriggerRequest2;
  }();
  exports.RuleTriggerRequest = RuleTriggerRequest;
  RuleTriggerRequest.prototype.resource = undefined;
  RuleTriggerRequest.prototype.action_data = undefined;
});

// node_modules/asana/dist/model/RuleTriggerGidRunBody.js
var require_RuleTriggerGidRunBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RuleTriggerGidRunBody = undefined;
  var _ApiClient = require_ApiClient();
  var _RuleTriggerRequest = require_RuleTriggerRequest();
  var RuleTriggerGidRunBody = function() {
    function RuleTriggerGidRunBody2() {
      _classCallCheck(this, RuleTriggerGidRunBody2);
    }
    _createClass(RuleTriggerGidRunBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new RuleTriggerGidRunBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _RuleTriggerRequest.RuleTriggerRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return RuleTriggerGidRunBody2;
  }();
  exports.RuleTriggerGidRunBody = RuleTriggerGidRunBody;
  RuleTriggerGidRunBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/RuleTriggerResponse.js
var require_RuleTriggerResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RuleTriggerResponse = undefined;
  var _ApiClient = require_ApiClient();
  var RuleTriggerResponse = function() {
    function RuleTriggerResponse2() {
      _classCallCheck(this, RuleTriggerResponse2);
    }
    _createClass(RuleTriggerResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new RuleTriggerResponse2;
          if (data.hasOwnProperty("message"))
            obj.message = _ApiClient.ApiClient.convertToType(data["message"], "String");
        }
        return obj;
      }
    }]);
    return RuleTriggerResponse2;
  }();
  exports.RuleTriggerResponse = RuleTriggerResponse;
  RuleTriggerResponse.prototype.message = undefined;
});

// node_modules/asana/dist/model/RuleTriggerResponseData.js
var require_RuleTriggerResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RuleTriggerResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _RuleTriggerResponse = require_RuleTriggerResponse();
  var RuleTriggerResponseData = function() {
    function RuleTriggerResponseData2(data) {
      _classCallCheck(this, RuleTriggerResponseData2);
      this.data = data;
    }
    _createClass(RuleTriggerResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new RuleTriggerResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _RuleTriggerResponse.RuleTriggerResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return RuleTriggerResponseData2;
  }();
  exports.RuleTriggerResponseData = RuleTriggerResponseData;
  RuleTriggerResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/SectionBase.js
var require_SectionBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SectionBase = undefined;
  var _ApiClient = require_ApiClient();
  var SectionBase = function() {
    function SectionBase2() {
      _classCallCheck(this, SectionBase2);
    }
    _createClass(SectionBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new SectionBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return SectionBase2;
  }();
  exports.SectionBase = SectionBase;
  SectionBase.prototype.gid = undefined;
  SectionBase.prototype.resource_type = undefined;
  SectionBase.prototype.name = undefined;
});

// node_modules/asana/dist/model/SectionCompact.js
var require_SectionCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SectionCompact = undefined;
  var _ApiClient = require_ApiClient();
  var SectionCompact = function() {
    function SectionCompact2() {
      _classCallCheck(this, SectionCompact2);
    }
    _createClass(SectionCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new SectionCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return SectionCompact2;
  }();
  exports.SectionCompact = SectionCompact;
  SectionCompact.prototype.gid = undefined;
  SectionCompact.prototype.resource_type = undefined;
  SectionCompact.prototype.name = undefined;
});

// node_modules/asana/dist/model/SectionTaskInsertRequest.js
var require_SectionTaskInsertRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SectionTaskInsertRequest = undefined;
  var _ApiClient = require_ApiClient();
  var SectionTaskInsertRequest = function() {
    function SectionTaskInsertRequest2(task) {
      _classCallCheck(this, SectionTaskInsertRequest2);
      this.task = task;
    }
    _createClass(SectionTaskInsertRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new SectionTaskInsertRequest2;
          if (data.hasOwnProperty("task"))
            obj.task = _ApiClient.ApiClient.convertToType(data["task"], "String");
          if (data.hasOwnProperty("insert_before"))
            obj.insert_before = _ApiClient.ApiClient.convertToType(data["insert_before"], "String");
          if (data.hasOwnProperty("insert_after"))
            obj.insert_after = _ApiClient.ApiClient.convertToType(data["insert_after"], "String");
        }
        return obj;
      }
    }]);
    return SectionTaskInsertRequest2;
  }();
  exports.SectionTaskInsertRequest = SectionTaskInsertRequest;
  SectionTaskInsertRequest.prototype.task = undefined;
  SectionTaskInsertRequest.prototype.insert_before = undefined;
  SectionTaskInsertRequest.prototype.insert_after = undefined;
});

// node_modules/asana/dist/model/SectionGidAddTaskBody.js
var require_SectionGidAddTaskBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SectionGidAddTaskBody = undefined;
  var _ApiClient = require_ApiClient();
  var _SectionTaskInsertRequest = require_SectionTaskInsertRequest();
  var SectionGidAddTaskBody = function() {
    function SectionGidAddTaskBody2() {
      _classCallCheck(this, SectionGidAddTaskBody2);
    }
    _createClass(SectionGidAddTaskBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new SectionGidAddTaskBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _SectionTaskInsertRequest.SectionTaskInsertRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return SectionGidAddTaskBody2;
  }();
  exports.SectionGidAddTaskBody = SectionGidAddTaskBody;
  SectionGidAddTaskBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/SectionResponse.js
var require_SectionResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SectionResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _JobBaseNewProject = require_JobBaseNewProject();
  var SectionResponse = function() {
    function SectionResponse2() {
      _classCallCheck(this, SectionResponse2);
    }
    _createClass(SectionResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new SectionResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("project"))
            obj.project = _JobBaseNewProject.JobBaseNewProject.constructFromObject(data["project"]);
          if (data.hasOwnProperty("projects"))
            obj.projects = _ApiClient.ApiClient.convertToType(data["projects"], [_JobBaseNewProject.JobBaseNewProject]);
        }
        return obj;
      }
    }]);
    return SectionResponse2;
  }();
  exports.SectionResponse = SectionResponse;
  SectionResponse.prototype.gid = undefined;
  SectionResponse.prototype.resource_type = undefined;
  SectionResponse.prototype.name = undefined;
  SectionResponse.prototype.created_at = undefined;
  SectionResponse.prototype.project = undefined;
  SectionResponse.prototype.projects = undefined;
});

// node_modules/asana/dist/model/SectionResponseArray.js
var require_SectionResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SectionResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _SectionResponse = require_SectionResponse();
  var SectionResponseArray = function() {
    function SectionResponseArray2(data) {
      _classCallCheck(this, SectionResponseArray2);
      this.data = data;
    }
    _createClass(SectionResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new SectionResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_SectionResponse.SectionResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return SectionResponseArray2;
  }();
  exports.SectionResponseArray = SectionResponseArray;
  SectionResponseArray.prototype.data = undefined;
  SectionResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/SectionResponseData.js
var require_SectionResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SectionResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _SectionResponse = require_SectionResponse();
  var SectionResponseData = function() {
    function SectionResponseData2(data) {
      _classCallCheck(this, SectionResponseData2);
      this.data = data;
    }
    _createClass(SectionResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new SectionResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _SectionResponse.SectionResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return SectionResponseData2;
  }();
  exports.SectionResponseData = SectionResponseData;
  SectionResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/SectionsInsertBody.js
var require_SectionsInsertBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SectionsInsertBody = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectSectionInsertRequest = require_ProjectSectionInsertRequest();
  var SectionsInsertBody = function() {
    function SectionsInsertBody2() {
      _classCallCheck(this, SectionsInsertBody2);
    }
    _createClass(SectionsInsertBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new SectionsInsertBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectSectionInsertRequest.ProjectSectionInsertRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return SectionsInsertBody2;
  }();
  exports.SectionsInsertBody = SectionsInsertBody;
  SectionsInsertBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/SectionsSectionGidBody.js
var require_SectionsSectionGidBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SectionsSectionGidBody = undefined;
  var _ApiClient = require_ApiClient();
  var _SectionRequest = require_SectionRequest();
  var SectionsSectionGidBody = function() {
    function SectionsSectionGidBody2() {
      _classCallCheck(this, SectionsSectionGidBody2);
    }
    _createClass(SectionsSectionGidBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new SectionsSectionGidBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _SectionRequest.SectionRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return SectionsSectionGidBody2;
  }();
  exports.SectionsSectionGidBody = SectionsSectionGidBody;
  SectionsSectionGidBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/StatusUpdateBase.js
var require_StatusUpdateBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StatusUpdateBase = undefined;
  var _ApiClient = require_ApiClient();
  var StatusUpdateBase = function() {
    function StatusUpdateBase2(text, status_type) {
      _classCallCheck(this, StatusUpdateBase2);
      this.text = text;
      this.status_type = status_type;
    }
    _createClass(StatusUpdateBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StatusUpdateBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
          if (data.hasOwnProperty("html_text"))
            obj.html_text = _ApiClient.ApiClient.convertToType(data["html_text"], "String");
          if (data.hasOwnProperty("status_type"))
            obj.status_type = _ApiClient.ApiClient.convertToType(data["status_type"], "String");
        }
        return obj;
      }
    }]);
    return StatusUpdateBase2;
  }();
  exports.StatusUpdateBase = StatusUpdateBase;
  StatusUpdateBase.prototype.gid = undefined;
  StatusUpdateBase.prototype.resource_type = undefined;
  StatusUpdateBase.prototype.title = undefined;
  StatusUpdateBase.ResourceSubtypeEnum = {
    project_status_update: "project_status_update",
    portfolio_status_update: "portfolio_status_update",
    goal_status_update: "goal_status_update"
  };
  StatusUpdateBase.prototype.resource_subtype = undefined;
  StatusUpdateBase.prototype.text = undefined;
  StatusUpdateBase.prototype.html_text = undefined;
  StatusUpdateBase.StatusTypeEnum = {
    on_track: "on_track",
    at_risk: "at_risk",
    off_track: "off_track",
    on_hold: "on_hold",
    complete: "complete",
    achieved: "achieved",
    partial: "partial",
    missed: "missed",
    dropped: "dropped"
  };
  StatusUpdateBase.prototype.status_type = undefined;
});

// node_modules/asana/dist/model/StatusUpdateCompact.js
var require_StatusUpdateCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StatusUpdateCompact = undefined;
  var _ApiClient = require_ApiClient();
  var StatusUpdateCompact = function() {
    function StatusUpdateCompact2() {
      _classCallCheck(this, StatusUpdateCompact2);
    }
    _createClass(StatusUpdateCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StatusUpdateCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
        }
        return obj;
      }
    }]);
    return StatusUpdateCompact2;
  }();
  exports.StatusUpdateCompact = StatusUpdateCompact;
  StatusUpdateCompact.prototype.gid = undefined;
  StatusUpdateCompact.prototype.resource_type = undefined;
  StatusUpdateCompact.prototype.title = undefined;
  StatusUpdateCompact.ResourceSubtypeEnum = {
    project_status_update: "project_status_update",
    portfolio_status_update: "portfolio_status_update",
    goal_status_update: "goal_status_update"
  };
  StatusUpdateCompact.prototype.resource_subtype = undefined;
});

// node_modules/asana/dist/model/StatusUpdateRequest.js
var require_StatusUpdateRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StatusUpdateRequest = undefined;
  var _ApiClient = require_ApiClient();
  var StatusUpdateRequest = function() {
    function StatusUpdateRequest2(text, status_type, parent) {
      _classCallCheck(this, StatusUpdateRequest2);
      this.text = text;
      this.status_type = status_type;
      this.parent = parent;
    }
    _createClass(StatusUpdateRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StatusUpdateRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
          if (data.hasOwnProperty("html_text"))
            obj.html_text = _ApiClient.ApiClient.convertToType(data["html_text"], "String");
          if (data.hasOwnProperty("status_type"))
            obj.status_type = _ApiClient.ApiClient.convertToType(data["status_type"], "String");
          if (data.hasOwnProperty("parent"))
            obj.parent = _ApiClient.ApiClient.convertToType(data["parent"], "String");
        }
        return obj;
      }
    }]);
    return StatusUpdateRequest2;
  }();
  exports.StatusUpdateRequest = StatusUpdateRequest;
  StatusUpdateRequest.prototype.gid = undefined;
  StatusUpdateRequest.prototype.resource_type = undefined;
  StatusUpdateRequest.prototype.title = undefined;
  StatusUpdateRequest.ResourceSubtypeEnum = {
    project_status_update: "project_status_update",
    portfolio_status_update: "portfolio_status_update",
    goal_status_update: "goal_status_update"
  };
  StatusUpdateRequest.prototype.resource_subtype = undefined;
  StatusUpdateRequest.prototype.text = undefined;
  StatusUpdateRequest.prototype.html_text = undefined;
  StatusUpdateRequest.StatusTypeEnum = {
    on_track: "on_track",
    at_risk: "at_risk",
    off_track: "off_track",
    on_hold: "on_hold",
    complete: "complete",
    achieved: "achieved",
    partial: "partial",
    missed: "missed",
    dropped: "dropped"
  };
  StatusUpdateRequest.prototype.status_type = undefined;
  StatusUpdateRequest.prototype.parent = undefined;
});

// node_modules/asana/dist/model/StatusUpdateResponseParent.js
var require_StatusUpdateResponseParent = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StatusUpdateResponseParent = undefined;
  var _ApiClient = require_ApiClient();
  var StatusUpdateResponseParent = function() {
    function StatusUpdateResponseParent2() {
      _classCallCheck(this, StatusUpdateResponseParent2);
    }
    _createClass(StatusUpdateResponseParent2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StatusUpdateResponseParent2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return StatusUpdateResponseParent2;
  }();
  exports.StatusUpdateResponseParent = StatusUpdateResponseParent;
  StatusUpdateResponseParent.prototype.gid = undefined;
  StatusUpdateResponseParent.prototype.resource_type = undefined;
  StatusUpdateResponseParent.prototype.name = undefined;
});

// node_modules/asana/dist/model/StatusUpdateResponse.js
var require_StatusUpdateResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StatusUpdateResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _GoalResponseLikes = require_GoalResponseLikes();
  var _StatusUpdateResponseParent = require_StatusUpdateResponseParent();
  var StatusUpdateResponse = function() {
    function StatusUpdateResponse2(text, status_type) {
      _classCallCheck(this, StatusUpdateResponse2);
      this.text = text;
      this.status_type = status_type;
    }
    _createClass(StatusUpdateResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StatusUpdateResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
          if (data.hasOwnProperty("html_text"))
            obj.html_text = _ApiClient.ApiClient.convertToType(data["html_text"], "String");
          if (data.hasOwnProperty("status_type"))
            obj.status_type = _ApiClient.ApiClient.convertToType(data["status_type"], "String");
          if (data.hasOwnProperty("author"))
            obj.author = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["author"]);
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["created_by"]);
          if (data.hasOwnProperty("hearted"))
            obj.hearted = _ApiClient.ApiClient.convertToType(data["hearted"], "Boolean");
          if (data.hasOwnProperty("hearts"))
            obj.hearts = _ApiClient.ApiClient.convertToType(data["hearts"], [_GoalResponseLikes.GoalResponseLikes]);
          if (data.hasOwnProperty("liked"))
            obj.liked = _ApiClient.ApiClient.convertToType(data["liked"], "Boolean");
          if (data.hasOwnProperty("likes"))
            obj.likes = _ApiClient.ApiClient.convertToType(data["likes"], [_GoalResponseLikes.GoalResponseLikes]);
          if (data.hasOwnProperty("modified_at"))
            obj.modified_at = _ApiClient.ApiClient.convertToType(data["modified_at"], "Date");
          if (data.hasOwnProperty("num_hearts"))
            obj.num_hearts = _ApiClient.ApiClient.convertToType(data["num_hearts"], "Number");
          if (data.hasOwnProperty("num_likes"))
            obj.num_likes = _ApiClient.ApiClient.convertToType(data["num_likes"], "Number");
          if (data.hasOwnProperty("parent"))
            obj.parent = _StatusUpdateResponseParent.StatusUpdateResponseParent.constructFromObject(data["parent"]);
        }
        return obj;
      }
    }]);
    return StatusUpdateResponse2;
  }();
  exports.StatusUpdateResponse = StatusUpdateResponse;
  StatusUpdateResponse.prototype.gid = undefined;
  StatusUpdateResponse.prototype.resource_type = undefined;
  StatusUpdateResponse.prototype.title = undefined;
  StatusUpdateResponse.ResourceSubtypeEnum = {
    project_status_update: "project_status_update",
    portfolio_status_update: "portfolio_status_update",
    goal_status_update: "goal_status_update"
  };
  StatusUpdateResponse.prototype.resource_subtype = undefined;
  StatusUpdateResponse.prototype.text = undefined;
  StatusUpdateResponse.prototype.html_text = undefined;
  StatusUpdateResponse.StatusTypeEnum = {
    on_track: "on_track",
    at_risk: "at_risk",
    off_track: "off_track",
    on_hold: "on_hold",
    complete: "complete",
    achieved: "achieved",
    partial: "partial",
    missed: "missed",
    dropped: "dropped"
  };
  StatusUpdateResponse.prototype.status_type = undefined;
  StatusUpdateResponse.prototype.author = undefined;
  StatusUpdateResponse.prototype.created_at = undefined;
  StatusUpdateResponse.prototype.created_by = undefined;
  StatusUpdateResponse.prototype.hearted = undefined;
  StatusUpdateResponse.prototype.hearts = undefined;
  StatusUpdateResponse.prototype.liked = undefined;
  StatusUpdateResponse.prototype.likes = undefined;
  StatusUpdateResponse.prototype.modified_at = undefined;
  StatusUpdateResponse.prototype.num_hearts = undefined;
  StatusUpdateResponse.prototype.num_likes = undefined;
  StatusUpdateResponse.prototype.parent = undefined;
});

// node_modules/asana/dist/model/StatusUpdateResponseArray.js
var require_StatusUpdateResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StatusUpdateResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _StatusUpdateResponse = require_StatusUpdateResponse();
  var StatusUpdateResponseArray = function() {
    function StatusUpdateResponseArray2(data) {
      _classCallCheck(this, StatusUpdateResponseArray2);
      this.data = data;
    }
    _createClass(StatusUpdateResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StatusUpdateResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_StatusUpdateResponse.StatusUpdateResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return StatusUpdateResponseArray2;
  }();
  exports.StatusUpdateResponseArray = StatusUpdateResponseArray;
  StatusUpdateResponseArray.prototype.data = undefined;
  StatusUpdateResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/StatusUpdateResponseData.js
var require_StatusUpdateResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StatusUpdateResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _StatusUpdateResponse = require_StatusUpdateResponse();
  var StatusUpdateResponseData = function() {
    function StatusUpdateResponseData2(data) {
      _classCallCheck(this, StatusUpdateResponseData2);
      this.data = data;
    }
    _createClass(StatusUpdateResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StatusUpdateResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _StatusUpdateResponse.StatusUpdateResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return StatusUpdateResponseData2;
  }();
  exports.StatusUpdateResponseData = StatusUpdateResponseData;
  StatusUpdateResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/StatusUpdatesBody.js
var require_StatusUpdatesBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StatusUpdatesBody = undefined;
  var _ApiClient = require_ApiClient();
  var _StatusUpdateRequest = require_StatusUpdateRequest();
  var StatusUpdatesBody = function() {
    function StatusUpdatesBody2() {
      _classCallCheck(this, StatusUpdatesBody2);
    }
    _createClass(StatusUpdatesBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StatusUpdatesBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _StatusUpdateRequest.StatusUpdateRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return StatusUpdatesBody2;
  }();
  exports.StatusUpdatesBody = StatusUpdatesBody;
  StatusUpdatesBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/StoryRequest.js
var require_StoryRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryRequest = undefined;
  var _ApiClient = require_ApiClient();
  var StoryRequest = function() {
    function StoryRequest2() {
      _classCallCheck(this, StoryRequest2);
    }
    _createClass(StoryRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
          if (data.hasOwnProperty("html_text"))
            obj.html_text = _ApiClient.ApiClient.convertToType(data["html_text"], "String");
          if (data.hasOwnProperty("is_pinned"))
            obj.is_pinned = _ApiClient.ApiClient.convertToType(data["is_pinned"], "Boolean");
          if (data.hasOwnProperty("sticker_name"))
            obj.sticker_name = _ApiClient.ApiClient.convertToType(data["sticker_name"], "String");
        }
        return obj;
      }
    }]);
    return StoryRequest2;
  }();
  exports.StoryRequest = StoryRequest;
  StoryRequest.prototype.gid = undefined;
  StoryRequest.prototype.resource_type = undefined;
  StoryRequest.prototype.created_at = undefined;
  StoryRequest.prototype.resource_subtype = undefined;
  StoryRequest.prototype.text = undefined;
  StoryRequest.prototype.html_text = undefined;
  StoryRequest.prototype.is_pinned = undefined;
  StoryRequest.StickerNameEnum = {
    green_checkmark: "green_checkmark",
    people_dancing: "people_dancing",
    dancing_unicorn: "dancing_unicorn",
    heart: "heart",
    party_popper: "party_popper",
    people_waving_flags: "people_waving_flags",
    splashing_narwhal: "splashing_narwhal",
    trophy: "trophy",
    yeti_riding_unicorn: "yeti_riding_unicorn",
    celebrating_people: "celebrating_people",
    determined_climbers: "determined_climbers",
    phoenix_spreading_love: "phoenix_spreading_love"
  };
  StoryRequest.prototype.sticker_name = undefined;
});

// node_modules/asana/dist/model/StoriesStoryGidBody.js
var require_StoriesStoryGidBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoriesStoryGidBody = undefined;
  var _ApiClient = require_ApiClient();
  var _StoryRequest = require_StoryRequest();
  var StoriesStoryGidBody = function() {
    function StoriesStoryGidBody2() {
      _classCallCheck(this, StoriesStoryGidBody2);
    }
    _createClass(StoriesStoryGidBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoriesStoryGidBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _StoryRequest.StoryRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return StoriesStoryGidBody2;
  }();
  exports.StoriesStoryGidBody = StoriesStoryGidBody;
  StoriesStoryGidBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/StoryBase.js
var require_StoryBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryBase = undefined;
  var _ApiClient = require_ApiClient();
  var StoryBase = function() {
    function StoryBase2() {
      _classCallCheck(this, StoryBase2);
    }
    _createClass(StoryBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
          if (data.hasOwnProperty("html_text"))
            obj.html_text = _ApiClient.ApiClient.convertToType(data["html_text"], "String");
          if (data.hasOwnProperty("is_pinned"))
            obj.is_pinned = _ApiClient.ApiClient.convertToType(data["is_pinned"], "Boolean");
          if (data.hasOwnProperty("sticker_name"))
            obj.sticker_name = _ApiClient.ApiClient.convertToType(data["sticker_name"], "String");
        }
        return obj;
      }
    }]);
    return StoryBase2;
  }();
  exports.StoryBase = StoryBase;
  StoryBase.prototype.gid = undefined;
  StoryBase.prototype.resource_type = undefined;
  StoryBase.prototype.created_at = undefined;
  StoryBase.prototype.resource_subtype = undefined;
  StoryBase.prototype.text = undefined;
  StoryBase.prototype.html_text = undefined;
  StoryBase.prototype.is_pinned = undefined;
  StoryBase.StickerNameEnum = {
    green_checkmark: "green_checkmark",
    people_dancing: "people_dancing",
    dancing_unicorn: "dancing_unicorn",
    heart: "heart",
    party_popper: "party_popper",
    people_waving_flags: "people_waving_flags",
    splashing_narwhal: "splashing_narwhal",
    trophy: "trophy",
    yeti_riding_unicorn: "yeti_riding_unicorn",
    celebrating_people: "celebrating_people",
    determined_climbers: "determined_climbers",
    phoenix_spreading_love: "phoenix_spreading_love"
  };
  StoryBase.prototype.sticker_name = undefined;
});

// node_modules/asana/dist/model/StoryCompact.js
var require_StoryCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryCompact = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var StoryCompact = function() {
    function StoryCompact2() {
      _classCallCheck(this, StoryCompact2);
    }
    _createClass(StoryCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["created_by"]);
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
        }
        return obj;
      }
    }]);
    return StoryCompact2;
  }();
  exports.StoryCompact = StoryCompact;
  StoryCompact.prototype.gid = undefined;
  StoryCompact.prototype.resource_type = undefined;
  StoryCompact.prototype.created_at = undefined;
  StoryCompact.prototype.created_by = undefined;
  StoryCompact.prototype.resource_subtype = undefined;
  StoryCompact.prototype.text = undefined;
});

// node_modules/asana/dist/model/StoryResponseAssignee.js
var require_StoryResponseAssignee = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryResponseAssignee = undefined;
  var _ApiClient = require_ApiClient();
  var StoryResponseAssignee = function() {
    function StoryResponseAssignee2() {
      _classCallCheck(this, StoryResponseAssignee2);
    }
    _createClass(StoryResponseAssignee2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryResponseAssignee2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return StoryResponseAssignee2;
  }();
  exports.StoryResponseAssignee = StoryResponseAssignee;
  StoryResponseAssignee.prototype.gid = undefined;
  StoryResponseAssignee.prototype.resource_type = undefined;
  StoryResponseAssignee.prototype.name = undefined;
});

// node_modules/asana/dist/model/StoryResponseCustomField.js
var require_StoryResponseCustomField = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryResponseCustomField = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldBaseDateValue = require_CustomFieldBaseDateValue();
  var _CustomFieldBaseEnumOptions = require_CustomFieldBaseEnumOptions();
  var _CustomFieldBaseEnumValue = require_CustomFieldBaseEnumValue();
  var StoryResponseCustomField = function() {
    function StoryResponseCustomField2() {
      _classCallCheck(this, StoryResponseCustomField2);
    }
    _createClass(StoryResponseCustomField2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryResponseCustomField2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("type"))
            obj.type = _ApiClient.ApiClient.convertToType(data["type"], "String");
          if (data.hasOwnProperty("enum_options"))
            obj.enum_options = _ApiClient.ApiClient.convertToType(data["enum_options"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("enabled"))
            obj.enabled = _ApiClient.ApiClient.convertToType(data["enabled"], "Boolean");
          if (data.hasOwnProperty("is_formula_field"))
            obj.is_formula_field = _ApiClient.ApiClient.convertToType(data["is_formula_field"], "Boolean");
          if (data.hasOwnProperty("date_value"))
            obj.date_value = _CustomFieldBaseDateValue.CustomFieldBaseDateValue.constructFromObject(data["date_value"]);
          if (data.hasOwnProperty("enum_value"))
            obj.enum_value = _CustomFieldBaseEnumValue.CustomFieldBaseEnumValue.constructFromObject(data["enum_value"]);
          if (data.hasOwnProperty("multi_enum_values"))
            obj.multi_enum_values = _ApiClient.ApiClient.convertToType(data["multi_enum_values"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("number_value"))
            obj.number_value = _ApiClient.ApiClient.convertToType(data["number_value"], "Number");
          if (data.hasOwnProperty("text_value"))
            obj.text_value = _ApiClient.ApiClient.convertToType(data["text_value"], "String");
          if (data.hasOwnProperty("display_value"))
            obj.display_value = _ApiClient.ApiClient.convertToType(data["display_value"], "String");
        }
        return obj;
      }
    }]);
    return StoryResponseCustomField2;
  }();
  exports.StoryResponseCustomField = StoryResponseCustomField;
  StoryResponseCustomField.prototype.gid = undefined;
  StoryResponseCustomField.prototype.resource_type = undefined;
  StoryResponseCustomField.prototype.name = undefined;
  StoryResponseCustomField.ResourceSubtypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  StoryResponseCustomField.prototype.resource_subtype = undefined;
  StoryResponseCustomField.TypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  StoryResponseCustomField.prototype.type = undefined;
  StoryResponseCustomField.prototype.enum_options = undefined;
  StoryResponseCustomField.prototype.enabled = undefined;
  StoryResponseCustomField.prototype.is_formula_field = undefined;
  StoryResponseCustomField.prototype.date_value = undefined;
  StoryResponseCustomField.prototype.enum_value = undefined;
  StoryResponseCustomField.prototype.multi_enum_values = undefined;
  StoryResponseCustomField.prototype.number_value = undefined;
  StoryResponseCustomField.prototype.text_value = undefined;
  StoryResponseCustomField.prototype.display_value = undefined;
});

// node_modules/asana/dist/model/StoryResponseOldDates.js
var require_StoryResponseOldDates = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryResponseOldDates = undefined;
  var _ApiClient = require_ApiClient();
  var StoryResponseOldDates = function() {
    function StoryResponseOldDates2() {
      _classCallCheck(this, StoryResponseOldDates2);
    }
    _createClass(StoryResponseOldDates2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryResponseOldDates2;
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "Date");
          if (data.hasOwnProperty("due_at"))
            obj.due_at = _ApiClient.ApiClient.convertToType(data["due_at"], "Date");
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "Date");
        }
        return obj;
      }
    }]);
    return StoryResponseOldDates2;
  }();
  exports.StoryResponseOldDates = StoryResponseOldDates;
  StoryResponseOldDates.prototype.start_on = undefined;
  StoryResponseOldDates.prototype.due_at = undefined;
  StoryResponseOldDates.prototype.due_on = undefined;
});

// node_modules/asana/dist/model/StoryResponseOldEnumValue.js
var require_StoryResponseOldEnumValue = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryResponseOldEnumValue = undefined;
  var _ApiClient = require_ApiClient();
  var StoryResponseOldEnumValue = function() {
    function StoryResponseOldEnumValue2() {
      _classCallCheck(this, StoryResponseOldEnumValue2);
    }
    _createClass(StoryResponseOldEnumValue2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryResponseOldEnumValue2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("enabled"))
            obj.enabled = _ApiClient.ApiClient.convertToType(data["enabled"], "Boolean");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
        }
        return obj;
      }
    }]);
    return StoryResponseOldEnumValue2;
  }();
  exports.StoryResponseOldEnumValue = StoryResponseOldEnumValue;
  StoryResponseOldEnumValue.prototype.gid = undefined;
  StoryResponseOldEnumValue.prototype.resource_type = undefined;
  StoryResponseOldEnumValue.prototype.name = undefined;
  StoryResponseOldEnumValue.prototype.enabled = undefined;
  StoryResponseOldEnumValue.prototype.color = undefined;
});

// node_modules/asana/dist/model/StoryResponseOldSection.js
var require_StoryResponseOldSection = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryResponseOldSection = undefined;
  var _ApiClient = require_ApiClient();
  var StoryResponseOldSection = function() {
    function StoryResponseOldSection2() {
      _classCallCheck(this, StoryResponseOldSection2);
    }
    _createClass(StoryResponseOldSection2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryResponseOldSection2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return StoryResponseOldSection2;
  }();
  exports.StoryResponseOldSection = StoryResponseOldSection;
  StoryResponseOldSection.prototype.gid = undefined;
  StoryResponseOldSection.prototype.resource_type = undefined;
  StoryResponseOldSection.prototype.name = undefined;
});

// node_modules/asana/dist/model/StoryResponsePreviews.js
var require_StoryResponsePreviews = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryResponsePreviews = undefined;
  var _ApiClient = require_ApiClient();
  var StoryResponsePreviews = function() {
    function StoryResponsePreviews2() {
      _classCallCheck(this, StoryResponsePreviews2);
    }
    _createClass(StoryResponsePreviews2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryResponsePreviews2;
          if (data.hasOwnProperty("fallback"))
            obj.fallback = _ApiClient.ApiClient.convertToType(data["fallback"], "String");
          if (data.hasOwnProperty("footer"))
            obj.footer = _ApiClient.ApiClient.convertToType(data["footer"], "String");
          if (data.hasOwnProperty("header"))
            obj.header = _ApiClient.ApiClient.convertToType(data["header"], "String");
          if (data.hasOwnProperty("header_link"))
            obj.header_link = _ApiClient.ApiClient.convertToType(data["header_link"], "String");
          if (data.hasOwnProperty("html_text"))
            obj.html_text = _ApiClient.ApiClient.convertToType(data["html_text"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
          if (data.hasOwnProperty("title"))
            obj.title = _ApiClient.ApiClient.convertToType(data["title"], "String");
          if (data.hasOwnProperty("title_link"))
            obj.title_link = _ApiClient.ApiClient.convertToType(data["title_link"], "String");
        }
        return obj;
      }
    }]);
    return StoryResponsePreviews2;
  }();
  exports.StoryResponsePreviews = StoryResponsePreviews;
  StoryResponsePreviews.prototype.fallback = undefined;
  StoryResponsePreviews.prototype.footer = undefined;
  StoryResponsePreviews.prototype.header = undefined;
  StoryResponsePreviews.prototype.header_link = undefined;
  StoryResponsePreviews.prototype.html_text = undefined;
  StoryResponsePreviews.prototype.text = undefined;
  StoryResponsePreviews.prototype.title = undefined;
  StoryResponsePreviews.prototype.title_link = undefined;
});

// node_modules/asana/dist/model/StoryResponseProject.js
var require_StoryResponseProject = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryResponseProject = undefined;
  var _ApiClient = require_ApiClient();
  var StoryResponseProject = function() {
    function StoryResponseProject2() {
      _classCallCheck(this, StoryResponseProject2);
    }
    _createClass(StoryResponseProject2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryResponseProject2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return StoryResponseProject2;
  }();
  exports.StoryResponseProject = StoryResponseProject;
  StoryResponseProject.prototype.gid = undefined;
  StoryResponseProject.prototype.resource_type = undefined;
  StoryResponseProject.prototype.name = undefined;
});

// node_modules/asana/dist/model/StoryResponseStory.js
var require_StoryResponseStory = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryResponseStory = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var StoryResponseStory = function() {
    function StoryResponseStory2() {
      _classCallCheck(this, StoryResponseStory2);
    }
    _createClass(StoryResponseStory2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryResponseStory2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["created_by"]);
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
        }
        return obj;
      }
    }]);
    return StoryResponseStory2;
  }();
  exports.StoryResponseStory = StoryResponseStory;
  StoryResponseStory.prototype.gid = undefined;
  StoryResponseStory.prototype.resource_type = undefined;
  StoryResponseStory.prototype.created_at = undefined;
  StoryResponseStory.prototype.created_by = undefined;
  StoryResponseStory.prototype.resource_subtype = undefined;
  StoryResponseStory.prototype.text = undefined;
});

// node_modules/asana/dist/model/StoryResponseTag.js
var require_StoryResponseTag = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryResponseTag = undefined;
  var _ApiClient = require_ApiClient();
  var StoryResponseTag = function() {
    function StoryResponseTag2() {
      _classCallCheck(this, StoryResponseTag2);
    }
    _createClass(StoryResponseTag2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryResponseTag2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return StoryResponseTag2;
  }();
  exports.StoryResponseTag = StoryResponseTag;
  StoryResponseTag.prototype.gid = undefined;
  StoryResponseTag.prototype.resource_type = undefined;
  StoryResponseTag.prototype.name = undefined;
});

// node_modules/asana/dist/model/StoryResponseTarget.js
var require_StoryResponseTarget = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryResponseTarget = undefined;
  var _ApiClient = require_ApiClient();
  var _AttachmentResponseParentCreatedBy = require_AttachmentResponseParentCreatedBy();
  var StoryResponseTarget = function() {
    function StoryResponseTarget2() {
      _classCallCheck(this, StoryResponseTarget2);
    }
    _createClass(StoryResponseTarget2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryResponseTarget2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _AttachmentResponseParentCreatedBy.AttachmentResponseParentCreatedBy.constructFromObject(data["created_by"]);
        }
        return obj;
      }
    }]);
    return StoryResponseTarget2;
  }();
  exports.StoryResponseTarget = StoryResponseTarget;
  StoryResponseTarget.prototype.gid = undefined;
  StoryResponseTarget.prototype.resource_type = undefined;
  StoryResponseTarget.prototype.name = undefined;
  StoryResponseTarget.ResourceSubtypeEnum = {
    default_task: "default_task",
    milestone: "milestone",
    section: "section",
    approval: "approval"
  };
  StoryResponseTarget.prototype.resource_subtype = undefined;
  StoryResponseTarget.prototype.created_by = undefined;
});

// node_modules/asana/dist/model/StoryResponseTask.js
var require_StoryResponseTask = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryResponseTask = undefined;
  var _ApiClient = require_ApiClient();
  var _AttachmentResponseParentCreatedBy = require_AttachmentResponseParentCreatedBy();
  var StoryResponseTask = function() {
    function StoryResponseTask2() {
      _classCallCheck(this, StoryResponseTask2);
    }
    _createClass(StoryResponseTask2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryResponseTask2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _AttachmentResponseParentCreatedBy.AttachmentResponseParentCreatedBy.constructFromObject(data["created_by"]);
        }
        return obj;
      }
    }]);
    return StoryResponseTask2;
  }();
  exports.StoryResponseTask = StoryResponseTask;
  StoryResponseTask.prototype.gid = undefined;
  StoryResponseTask.prototype.resource_type = undefined;
  StoryResponseTask.prototype.name = undefined;
  StoryResponseTask.ResourceSubtypeEnum = {
    default_task: "default_task",
    milestone: "milestone",
    section: "section",
    approval: "approval"
  };
  StoryResponseTask.prototype.resource_subtype = undefined;
  StoryResponseTask.prototype.created_by = undefined;
});

// node_modules/asana/dist/model/StoryResponse.js
var require_StoryResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldBaseEnumOptions = require_CustomFieldBaseEnumOptions();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _GoalResponseLikes = require_GoalResponseLikes();
  var _StoryResponseAssignee = require_StoryResponseAssignee();
  var _StoryResponseCustomField = require_StoryResponseCustomField();
  var _StoryResponseOldDates = require_StoryResponseOldDates();
  var _StoryResponseOldEnumValue = require_StoryResponseOldEnumValue();
  var _StoryResponseOldSection = require_StoryResponseOldSection();
  var _StoryResponsePreviews = require_StoryResponsePreviews();
  var _StoryResponseProject = require_StoryResponseProject();
  var _StoryResponseStory = require_StoryResponseStory();
  var _StoryResponseTag = require_StoryResponseTag();
  var _StoryResponseTarget = require_StoryResponseTarget();
  var _StoryResponseTask = require_StoryResponseTask();
  var StoryResponse = function() {
    function StoryResponse2() {
      _classCallCheck(this, StoryResponse2);
    }
    _createClass(StoryResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("text"))
            obj.text = _ApiClient.ApiClient.convertToType(data["text"], "String");
          if (data.hasOwnProperty("html_text"))
            obj.html_text = _ApiClient.ApiClient.convertToType(data["html_text"], "String");
          if (data.hasOwnProperty("is_pinned"))
            obj.is_pinned = _ApiClient.ApiClient.convertToType(data["is_pinned"], "Boolean");
          if (data.hasOwnProperty("sticker_name"))
            obj.sticker_name = _ApiClient.ApiClient.convertToType(data["sticker_name"], "String");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["created_by"]);
          if (data.hasOwnProperty("type"))
            obj.type = _ApiClient.ApiClient.convertToType(data["type"], "String");
          if (data.hasOwnProperty("is_editable"))
            obj.is_editable = _ApiClient.ApiClient.convertToType(data["is_editable"], "Boolean");
          if (data.hasOwnProperty("is_edited"))
            obj.is_edited = _ApiClient.ApiClient.convertToType(data["is_edited"], "Boolean");
          if (data.hasOwnProperty("hearted"))
            obj.hearted = _ApiClient.ApiClient.convertToType(data["hearted"], "Boolean");
          if (data.hasOwnProperty("hearts"))
            obj.hearts = _ApiClient.ApiClient.convertToType(data["hearts"], [_GoalResponseLikes.GoalResponseLikes]);
          if (data.hasOwnProperty("num_hearts"))
            obj.num_hearts = _ApiClient.ApiClient.convertToType(data["num_hearts"], "Number");
          if (data.hasOwnProperty("liked"))
            obj.liked = _ApiClient.ApiClient.convertToType(data["liked"], "Boolean");
          if (data.hasOwnProperty("likes"))
            obj.likes = _ApiClient.ApiClient.convertToType(data["likes"], [_GoalResponseLikes.GoalResponseLikes]);
          if (data.hasOwnProperty("num_likes"))
            obj.num_likes = _ApiClient.ApiClient.convertToType(data["num_likes"], "Number");
          if (data.hasOwnProperty("previews"))
            obj.previews = _ApiClient.ApiClient.convertToType(data["previews"], [_StoryResponsePreviews.StoryResponsePreviews]);
          if (data.hasOwnProperty("old_name"))
            obj.old_name = _ApiClient.ApiClient.convertToType(data["old_name"], "String");
          if (data.hasOwnProperty("new_name"))
            obj.new_name = _ApiClient.ApiClient.convertToType(data["new_name"], "String");
          if (data.hasOwnProperty("old_dates"))
            obj.old_dates = _StoryResponseOldDates.StoryResponseOldDates.constructFromObject(data["old_dates"]);
          if (data.hasOwnProperty("new_dates"))
            obj.new_dates = _StoryResponseOldDates.StoryResponseOldDates.constructFromObject(data["new_dates"]);
          if (data.hasOwnProperty("old_resource_subtype"))
            obj.old_resource_subtype = _ApiClient.ApiClient.convertToType(data["old_resource_subtype"], "String");
          if (data.hasOwnProperty("new_resource_subtype"))
            obj.new_resource_subtype = _ApiClient.ApiClient.convertToType(data["new_resource_subtype"], "String");
          if (data.hasOwnProperty("story"))
            obj.story = _StoryResponseStory.StoryResponseStory.constructFromObject(data["story"]);
          if (data.hasOwnProperty("assignee"))
            obj.assignee = _StoryResponseAssignee.StoryResponseAssignee.constructFromObject(data["assignee"]);
          if (data.hasOwnProperty("follower"))
            obj.follower = _StoryResponseAssignee.StoryResponseAssignee.constructFromObject(data["follower"]);
          if (data.hasOwnProperty("old_section"))
            obj.old_section = _StoryResponseOldSection.StoryResponseOldSection.constructFromObject(data["old_section"]);
          if (data.hasOwnProperty("new_section"))
            obj.new_section = _StoryResponseOldSection.StoryResponseOldSection.constructFromObject(data["new_section"]);
          if (data.hasOwnProperty("task"))
            obj.task = _StoryResponseTask.StoryResponseTask.constructFromObject(data["task"]);
          if (data.hasOwnProperty("project"))
            obj.project = _StoryResponseProject.StoryResponseProject.constructFromObject(data["project"]);
          if (data.hasOwnProperty("tag"))
            obj.tag = _StoryResponseTag.StoryResponseTag.constructFromObject(data["tag"]);
          if (data.hasOwnProperty("custom_field"))
            obj.custom_field = _StoryResponseCustomField.StoryResponseCustomField.constructFromObject(data["custom_field"]);
          if (data.hasOwnProperty("old_text_value"))
            obj.old_text_value = _ApiClient.ApiClient.convertToType(data["old_text_value"], "String");
          if (data.hasOwnProperty("new_text_value"))
            obj.new_text_value = _ApiClient.ApiClient.convertToType(data["new_text_value"], "String");
          if (data.hasOwnProperty("old_number_value"))
            obj.old_number_value = _ApiClient.ApiClient.convertToType(data["old_number_value"], "Number");
          if (data.hasOwnProperty("new_number_value"))
            obj.new_number_value = _ApiClient.ApiClient.convertToType(data["new_number_value"], "Number");
          if (data.hasOwnProperty("old_enum_value"))
            obj.old_enum_value = _StoryResponseOldEnumValue.StoryResponseOldEnumValue.constructFromObject(data["old_enum_value"]);
          if (data.hasOwnProperty("new_enum_value"))
            obj.new_enum_value = _StoryResponseOldEnumValue.StoryResponseOldEnumValue.constructFromObject(data["new_enum_value"]);
          if (data.hasOwnProperty("old_date_value"))
            obj.old_date_value = _ApiClient.ApiClient.convertToType(data["old_date_value"], Object);
          if (data.hasOwnProperty("new_date_value"))
            obj.new_date_value = _ApiClient.ApiClient.convertToType(data["new_date_value"], Object);
          if (data.hasOwnProperty("old_people_value"))
            obj.old_people_value = _ApiClient.ApiClient.convertToType(data["old_people_value"], [_CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue]);
          if (data.hasOwnProperty("new_people_value"))
            obj.new_people_value = _ApiClient.ApiClient.convertToType(data["new_people_value"], [_CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue]);
          if (data.hasOwnProperty("old_multi_enum_values"))
            obj.old_multi_enum_values = _ApiClient.ApiClient.convertToType(data["old_multi_enum_values"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("new_multi_enum_values"))
            obj.new_multi_enum_values = _ApiClient.ApiClient.convertToType(data["new_multi_enum_values"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("new_approval_status"))
            obj.new_approval_status = _ApiClient.ApiClient.convertToType(data["new_approval_status"], "String");
          if (data.hasOwnProperty("old_approval_status"))
            obj.old_approval_status = _ApiClient.ApiClient.convertToType(data["old_approval_status"], "String");
          if (data.hasOwnProperty("duplicate_of"))
            obj.duplicate_of = _StoryResponseTask.StoryResponseTask.constructFromObject(data["duplicate_of"]);
          if (data.hasOwnProperty("duplicated_from"))
            obj.duplicated_from = _StoryResponseTask.StoryResponseTask.constructFromObject(data["duplicated_from"]);
          if (data.hasOwnProperty("dependency"))
            obj.dependency = _StoryResponseTask.StoryResponseTask.constructFromObject(data["dependency"]);
          if (data.hasOwnProperty("source"))
            obj.source = _ApiClient.ApiClient.convertToType(data["source"], "String");
          if (data.hasOwnProperty("target"))
            obj.target = _StoryResponseTarget.StoryResponseTarget.constructFromObject(data["target"]);
        }
        return obj;
      }
    }]);
    return StoryResponse2;
  }();
  exports.StoryResponse = StoryResponse;
  StoryResponse.prototype.gid = undefined;
  StoryResponse.prototype.resource_type = undefined;
  StoryResponse.prototype.created_at = undefined;
  StoryResponse.prototype.resource_subtype = undefined;
  StoryResponse.prototype.text = undefined;
  StoryResponse.prototype.html_text = undefined;
  StoryResponse.prototype.is_pinned = undefined;
  StoryResponse.StickerNameEnum = {
    green_checkmark: "green_checkmark",
    people_dancing: "people_dancing",
    dancing_unicorn: "dancing_unicorn",
    heart: "heart",
    party_popper: "party_popper",
    people_waving_flags: "people_waving_flags",
    splashing_narwhal: "splashing_narwhal",
    trophy: "trophy",
    yeti_riding_unicorn: "yeti_riding_unicorn",
    celebrating_people: "celebrating_people",
    determined_climbers: "determined_climbers",
    phoenix_spreading_love: "phoenix_spreading_love"
  };
  StoryResponse.prototype.sticker_name = undefined;
  StoryResponse.prototype.created_by = undefined;
  StoryResponse.TypeEnum = {
    comment: "comment",
    system: "system"
  };
  StoryResponse.prototype.type = undefined;
  StoryResponse.prototype.is_editable = undefined;
  StoryResponse.prototype.is_edited = undefined;
  StoryResponse.prototype.hearted = undefined;
  StoryResponse.prototype.hearts = undefined;
  StoryResponse.prototype.num_hearts = undefined;
  StoryResponse.prototype.liked = undefined;
  StoryResponse.prototype.likes = undefined;
  StoryResponse.prototype.num_likes = undefined;
  StoryResponse.prototype.previews = undefined;
  StoryResponse.prototype.old_name = undefined;
  StoryResponse.prototype.new_name = undefined;
  StoryResponse.prototype.old_dates = undefined;
  StoryResponse.prototype.new_dates = undefined;
  StoryResponse.prototype.old_resource_subtype = undefined;
  StoryResponse.prototype.new_resource_subtype = undefined;
  StoryResponse.prototype.story = undefined;
  StoryResponse.prototype.assignee = undefined;
  StoryResponse.prototype.follower = undefined;
  StoryResponse.prototype.old_section = undefined;
  StoryResponse.prototype.new_section = undefined;
  StoryResponse.prototype.task = undefined;
  StoryResponse.prototype.project = undefined;
  StoryResponse.prototype.tag = undefined;
  StoryResponse.prototype.custom_field = undefined;
  StoryResponse.prototype.old_text_value = undefined;
  StoryResponse.prototype.new_text_value = undefined;
  StoryResponse.prototype.old_number_value = undefined;
  StoryResponse.prototype.new_number_value = undefined;
  StoryResponse.prototype.old_enum_value = undefined;
  StoryResponse.prototype.new_enum_value = undefined;
  StoryResponse.prototype.old_date_value = undefined;
  StoryResponse.prototype.new_date_value = undefined;
  StoryResponse.prototype.old_people_value = undefined;
  StoryResponse.prototype.new_people_value = undefined;
  StoryResponse.prototype.old_multi_enum_values = undefined;
  StoryResponse.prototype.new_multi_enum_values = undefined;
  StoryResponse.prototype.new_approval_status = undefined;
  StoryResponse.prototype.old_approval_status = undefined;
  StoryResponse.prototype.duplicate_of = undefined;
  StoryResponse.prototype.duplicated_from = undefined;
  StoryResponse.prototype.dependency = undefined;
  StoryResponse.SourceEnum = {
    web: "web",
    email: "email",
    mobile: "mobile",
    api: "api",
    unknown: "unknown"
  };
  StoryResponse.prototype.source = undefined;
  StoryResponse.prototype.target = undefined;
});

// node_modules/asana/dist/model/StoryResponseArray.js
var require_StoryResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _StoryResponse = require_StoryResponse();
  var StoryResponseArray = function() {
    function StoryResponseArray2(data) {
      _classCallCheck(this, StoryResponseArray2);
      this.data = data;
    }
    _createClass(StoryResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_StoryResponse.StoryResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return StoryResponseArray2;
  }();
  exports.StoryResponseArray = StoryResponseArray;
  StoryResponseArray.prototype.data = undefined;
  StoryResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/StoryResponseData.js
var require_StoryResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _StoryResponse = require_StoryResponse();
  var StoryResponseData = function() {
    function StoryResponseData2(data) {
      _classCallCheck(this, StoryResponseData2);
      this.data = data;
    }
    _createClass(StoryResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _StoryResponse.StoryResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return StoryResponseData2;
  }();
  exports.StoryResponseData = StoryResponseData;
  StoryResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/StoryResponseDates.js
var require_StoryResponseDates = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoryResponseDates = undefined;
  var _ApiClient = require_ApiClient();
  var StoryResponseDates = function() {
    function StoryResponseDates2() {
      _classCallCheck(this, StoryResponseDates2);
    }
    _createClass(StoryResponseDates2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new StoryResponseDates2;
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "Date");
          if (data.hasOwnProperty("due_at"))
            obj.due_at = _ApiClient.ApiClient.convertToType(data["due_at"], "Date");
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "Date");
        }
        return obj;
      }
    }]);
    return StoryResponseDates2;
  }();
  exports.StoryResponseDates = StoryResponseDates;
  StoryResponseDates.prototype.start_on = undefined;
  StoryResponseDates.prototype.due_at = undefined;
  StoryResponseDates.prototype.due_on = undefined;
});

// node_modules/asana/dist/model/TagBase.js
var require_TagBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TagBase = undefined;
  var _ApiClient = require_ApiClient();
  var TagBase = function() {
    function TagBase2() {
      _classCallCheck(this, TagBase2);
    }
    _createClass(TagBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TagBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
          if (data.hasOwnProperty("notes"))
            obj.notes = _ApiClient.ApiClient.convertToType(data["notes"], "String");
        }
        return obj;
      }
    }]);
    return TagBase2;
  }();
  exports.TagBase = TagBase;
  TagBase.prototype.gid = undefined;
  TagBase.prototype.resource_type = undefined;
  TagBase.prototype.name = undefined;
  TagBase.ColorEnum = {
    dark_pink: "dark-pink",
    dark_green: "dark-green",
    dark_blue: "dark-blue",
    dark_red: "dark-red",
    dark_teal: "dark-teal",
    dark_brown: "dark-brown",
    dark_orange: "dark-orange",
    dark_purple: "dark-purple",
    dark_warm_gray: "dark-warm-gray",
    light_pink: "light-pink",
    light_green: "light-green",
    light_blue: "light-blue",
    light_red: "light-red",
    light_teal: "light-teal",
    light_brown: "light-brown",
    light_orange: "light-orange",
    light_purple: "light-purple",
    light_warm_gray: "light-warm-gray",
    _null: "null"
  };
  TagBase.prototype.color = undefined;
  TagBase.prototype.notes = undefined;
});

// node_modules/asana/dist/model/TagCompact.js
var require_TagCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TagCompact = undefined;
  var _ApiClient = require_ApiClient();
  var TagCompact = function() {
    function TagCompact2() {
      _classCallCheck(this, TagCompact2);
    }
    _createClass(TagCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TagCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return TagCompact2;
  }();
  exports.TagCompact = TagCompact;
  TagCompact.prototype.gid = undefined;
  TagCompact.prototype.resource_type = undefined;
  TagCompact.prototype.name = undefined;
});

// node_modules/asana/dist/model/TagRequest.js
var require_TagRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TagRequest = undefined;
  var _ApiClient = require_ApiClient();
  var TagRequest = function() {
    function TagRequest2() {
      _classCallCheck(this, TagRequest2);
    }
    _createClass(TagRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TagRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
          if (data.hasOwnProperty("notes"))
            obj.notes = _ApiClient.ApiClient.convertToType(data["notes"], "String");
          if (data.hasOwnProperty("followers"))
            obj.followers = _ApiClient.ApiClient.convertToType(data["followers"], ["String"]);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _ApiClient.ApiClient.convertToType(data["workspace"], "String");
        }
        return obj;
      }
    }]);
    return TagRequest2;
  }();
  exports.TagRequest = TagRequest;
  TagRequest.prototype.gid = undefined;
  TagRequest.prototype.resource_type = undefined;
  TagRequest.prototype.name = undefined;
  TagRequest.ColorEnum = {
    dark_pink: "dark-pink",
    dark_green: "dark-green",
    dark_blue: "dark-blue",
    dark_red: "dark-red",
    dark_teal: "dark-teal",
    dark_brown: "dark-brown",
    dark_orange: "dark-orange",
    dark_purple: "dark-purple",
    dark_warm_gray: "dark-warm-gray",
    light_pink: "light-pink",
    light_green: "light-green",
    light_blue: "light-blue",
    light_red: "light-red",
    light_teal: "light-teal",
    light_brown: "light-brown",
    light_orange: "light-orange",
    light_purple: "light-purple",
    light_warm_gray: "light-warm-gray",
    _null: "null"
  };
  TagRequest.prototype.color = undefined;
  TagRequest.prototype.notes = undefined;
  TagRequest.prototype.followers = undefined;
  TagRequest.prototype.workspace = undefined;
});

// node_modules/asana/dist/model/TagResponse.js
var require_TagResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TagResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _GoalResponseWorkspace = require_GoalResponseWorkspace();
  var TagResponse = function() {
    function TagResponse2() {
      _classCallCheck(this, TagResponse2);
    }
    _createClass(TagResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TagResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("color"))
            obj.color = _ApiClient.ApiClient.convertToType(data["color"], "String");
          if (data.hasOwnProperty("notes"))
            obj.notes = _ApiClient.ApiClient.convertToType(data["notes"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("followers"))
            obj.followers = _ApiClient.ApiClient.convertToType(data["followers"], [_CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue]);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _GoalResponseWorkspace.GoalResponseWorkspace.constructFromObject(data["workspace"]);
          if (data.hasOwnProperty("permalink_url"))
            obj.permalink_url = _ApiClient.ApiClient.convertToType(data["permalink_url"], "String");
        }
        return obj;
      }
    }]);
    return TagResponse2;
  }();
  exports.TagResponse = TagResponse;
  TagResponse.prototype.gid = undefined;
  TagResponse.prototype.resource_type = undefined;
  TagResponse.prototype.name = undefined;
  TagResponse.ColorEnum = {
    dark_pink: "dark-pink",
    dark_green: "dark-green",
    dark_blue: "dark-blue",
    dark_red: "dark-red",
    dark_teal: "dark-teal",
    dark_brown: "dark-brown",
    dark_orange: "dark-orange",
    dark_purple: "dark-purple",
    dark_warm_gray: "dark-warm-gray",
    light_pink: "light-pink",
    light_green: "light-green",
    light_blue: "light-blue",
    light_red: "light-red",
    light_teal: "light-teal",
    light_brown: "light-brown",
    light_orange: "light-orange",
    light_purple: "light-purple",
    light_warm_gray: "light-warm-gray",
    _null: "null"
  };
  TagResponse.prototype.color = undefined;
  TagResponse.prototype.notes = undefined;
  TagResponse.prototype.created_at = undefined;
  TagResponse.prototype.followers = undefined;
  TagResponse.prototype.workspace = undefined;
  TagResponse.prototype.permalink_url = undefined;
});

// node_modules/asana/dist/model/TagResponseArray.js
var require_TagResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TagResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _TagResponse = require_TagResponse();
  var TagResponseArray = function() {
    function TagResponseArray2(data) {
      _classCallCheck(this, TagResponseArray2);
      this.data = data;
    }
    _createClass(TagResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TagResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_TagResponse.TagResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return TagResponseArray2;
  }();
  exports.TagResponseArray = TagResponseArray;
  TagResponseArray.prototype.data = undefined;
  TagResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/TagResponseData.js
var require_TagResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TagResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _TagResponse = require_TagResponse();
  var TagResponseData = function() {
    function TagResponseData2(data) {
      _classCallCheck(this, TagResponseData2);
      this.data = data;
    }
    _createClass(TagResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TagResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _TagResponse.TagResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TagResponseData2;
  }();
  exports.TagResponseData = TagResponseData;
  TagResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/TagsBody.js
var require_TagsBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TagsBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TagRequest = require_TagRequest();
  var TagsBody = function() {
    function TagsBody2() {
      _classCallCheck(this, TagsBody2);
    }
    _createClass(TagsBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TagsBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TagRequest.TagRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TagsBody2;
  }();
  exports.TagsBody = TagsBody;
  TagsBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskAddProjectRequest.js
var require_TaskAddProjectRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskAddProjectRequest = undefined;
  var _ApiClient = require_ApiClient();
  var TaskAddProjectRequest = function() {
    function TaskAddProjectRequest2(project) {
      _classCallCheck(this, TaskAddProjectRequest2);
      this.project = project;
    }
    _createClass(TaskAddProjectRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskAddProjectRequest2;
          if (data.hasOwnProperty("project"))
            obj.project = _ApiClient.ApiClient.convertToType(data["project"], "String");
          if (data.hasOwnProperty("insert_after"))
            obj.insert_after = _ApiClient.ApiClient.convertToType(data["insert_after"], "String");
          if (data.hasOwnProperty("insert_before"))
            obj.insert_before = _ApiClient.ApiClient.convertToType(data["insert_before"], "String");
          if (data.hasOwnProperty("section"))
            obj.section = _ApiClient.ApiClient.convertToType(data["section"], "String");
        }
        return obj;
      }
    }]);
    return TaskAddProjectRequest2;
  }();
  exports.TaskAddProjectRequest = TaskAddProjectRequest;
  TaskAddProjectRequest.prototype.project = undefined;
  TaskAddProjectRequest.prototype.insert_after = undefined;
  TaskAddProjectRequest.prototype.insert_before = undefined;
  TaskAddProjectRequest.prototype.section = undefined;
});

// node_modules/asana/dist/model/TaskAddTagRequest.js
var require_TaskAddTagRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskAddTagRequest = undefined;
  var _ApiClient = require_ApiClient();
  var TaskAddTagRequest = function() {
    function TaskAddTagRequest2(tag) {
      _classCallCheck(this, TaskAddTagRequest2);
      this.tag = tag;
    }
    _createClass(TaskAddTagRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskAddTagRequest2;
          if (data.hasOwnProperty("tag"))
            obj.tag = _ApiClient.ApiClient.convertToType(data["tag"], "String");
        }
        return obj;
      }
    }]);
    return TaskAddTagRequest2;
  }();
  exports.TaskAddTagRequest = TaskAddTagRequest;
  TaskAddTagRequest.prototype.tag = undefined;
});

// node_modules/asana/dist/model/TaskBaseCompletedBy.js
var require_TaskBaseCompletedBy = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskBaseCompletedBy = undefined;
  var _ApiClient = require_ApiClient();
  var TaskBaseCompletedBy = function() {
    function TaskBaseCompletedBy2() {
      _classCallCheck(this, TaskBaseCompletedBy2);
    }
    _createClass(TaskBaseCompletedBy2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskBaseCompletedBy2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return TaskBaseCompletedBy2;
  }();
  exports.TaskBaseCompletedBy = TaskBaseCompletedBy;
  TaskBaseCompletedBy.prototype.gid = undefined;
  TaskBaseCompletedBy.prototype.resource_type = undefined;
  TaskBaseCompletedBy.prototype.name = undefined;
});

// node_modules/asana/dist/model/TaskBaseDependencies.js
var require_TaskBaseDependencies = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskBaseDependencies = undefined;
  var _ApiClient = require_ApiClient();
  var TaskBaseDependencies = function() {
    function TaskBaseDependencies2() {
      _classCallCheck(this, TaskBaseDependencies2);
    }
    _createClass(TaskBaseDependencies2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskBaseDependencies2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
        }
        return obj;
      }
    }]);
    return TaskBaseDependencies2;
  }();
  exports.TaskBaseDependencies = TaskBaseDependencies;
  TaskBaseDependencies.prototype.gid = undefined;
  TaskBaseDependencies.prototype.resource_type = undefined;
});

// node_modules/asana/dist/model/TaskBaseExternal.js
var require_TaskBaseExternal = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskBaseExternal = undefined;
  var _ApiClient = require_ApiClient();
  var TaskBaseExternal = function() {
    function TaskBaseExternal2() {
      _classCallCheck(this, TaskBaseExternal2);
    }
    _createClass(TaskBaseExternal2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskBaseExternal2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], "String");
        }
        return obj;
      }
    }]);
    return TaskBaseExternal2;
  }();
  exports.TaskBaseExternal = TaskBaseExternal;
  TaskBaseExternal.prototype.gid = undefined;
  TaskBaseExternal.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskBaseSection.js
var require_TaskBaseSection = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskBaseSection = undefined;
  var _ApiClient = require_ApiClient();
  var TaskBaseSection = function() {
    function TaskBaseSection2() {
      _classCallCheck(this, TaskBaseSection2);
    }
    _createClass(TaskBaseSection2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskBaseSection2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return TaskBaseSection2;
  }();
  exports.TaskBaseSection = TaskBaseSection;
  TaskBaseSection.prototype.gid = undefined;
  TaskBaseSection.prototype.resource_type = undefined;
  TaskBaseSection.prototype.name = undefined;
});

// node_modules/asana/dist/model/TaskBaseMemberships.js
var require_TaskBaseMemberships = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskBaseMemberships = undefined;
  var _ApiClient = require_ApiClient();
  var _JobBaseNewProject = require_JobBaseNewProject();
  var _TaskBaseSection = require_TaskBaseSection();
  var TaskBaseMemberships = function() {
    function TaskBaseMemberships2() {
      _classCallCheck(this, TaskBaseMemberships2);
    }
    _createClass(TaskBaseMemberships2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskBaseMemberships2;
          if (data.hasOwnProperty("project"))
            obj.project = _JobBaseNewProject.JobBaseNewProject.constructFromObject(data["project"]);
          if (data.hasOwnProperty("section"))
            obj.section = _TaskBaseSection.TaskBaseSection.constructFromObject(data["section"]);
        }
        return obj;
      }
    }]);
    return TaskBaseMemberships2;
  }();
  exports.TaskBaseMemberships = TaskBaseMemberships;
  TaskBaseMemberships.prototype.project = undefined;
  TaskBaseMemberships.prototype.section = undefined;
});

// node_modules/asana/dist/model/TaskBase.js
var require_TaskBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskBase = undefined;
  var _ApiClient = require_ApiClient();
  var _AttachmentResponseParentCreatedBy = require_AttachmentResponseParentCreatedBy();
  var _GoalResponseLikes = require_GoalResponseLikes();
  var _TaskBaseCompletedBy = require_TaskBaseCompletedBy();
  var _TaskBaseDependencies = require_TaskBaseDependencies();
  var _TaskBaseExternal = require_TaskBaseExternal();
  var _TaskBaseMemberships = require_TaskBaseMemberships();
  var TaskBase = function() {
    function TaskBase2() {
      _classCallCheck(this, TaskBase2);
    }
    _createClass(TaskBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _AttachmentResponseParentCreatedBy.AttachmentResponseParentCreatedBy.constructFromObject(data["created_by"]);
          if (data.hasOwnProperty("approval_status"))
            obj.approval_status = _ApiClient.ApiClient.convertToType(data["approval_status"], "String");
          if (data.hasOwnProperty("assignee_status"))
            obj.assignee_status = _ApiClient.ApiClient.convertToType(data["assignee_status"], "String");
          if (data.hasOwnProperty("completed"))
            obj.completed = _ApiClient.ApiClient.convertToType(data["completed"], "Boolean");
          if (data.hasOwnProperty("completed_at"))
            obj.completed_at = _ApiClient.ApiClient.convertToType(data["completed_at"], "Date");
          if (data.hasOwnProperty("completed_by"))
            obj.completed_by = _TaskBaseCompletedBy.TaskBaseCompletedBy.constructFromObject(data["completed_by"]);
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("dependencies"))
            obj.dependencies = _ApiClient.ApiClient.convertToType(data["dependencies"], [_TaskBaseDependencies.TaskBaseDependencies]);
          if (data.hasOwnProperty("dependents"))
            obj.dependents = _ApiClient.ApiClient.convertToType(data["dependents"], [_TaskBaseDependencies.TaskBaseDependencies]);
          if (data.hasOwnProperty("due_at"))
            obj.due_at = _ApiClient.ApiClient.convertToType(data["due_at"], "Date");
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "Date");
          if (data.hasOwnProperty("external"))
            obj.external = _TaskBaseExternal.TaskBaseExternal.constructFromObject(data["external"]);
          if (data.hasOwnProperty("html_notes"))
            obj.html_notes = _ApiClient.ApiClient.convertToType(data["html_notes"], "String");
          if (data.hasOwnProperty("hearted"))
            obj.hearted = _ApiClient.ApiClient.convertToType(data["hearted"], "Boolean");
          if (data.hasOwnProperty("hearts"))
            obj.hearts = _ApiClient.ApiClient.convertToType(data["hearts"], [_GoalResponseLikes.GoalResponseLikes]);
          if (data.hasOwnProperty("is_rendered_as_separator"))
            obj.is_rendered_as_separator = _ApiClient.ApiClient.convertToType(data["is_rendered_as_separator"], "Boolean");
          if (data.hasOwnProperty("liked"))
            obj.liked = _ApiClient.ApiClient.convertToType(data["liked"], "Boolean");
          if (data.hasOwnProperty("likes"))
            obj.likes = _ApiClient.ApiClient.convertToType(data["likes"], [_GoalResponseLikes.GoalResponseLikes]);
          if (data.hasOwnProperty("memberships"))
            obj.memberships = _ApiClient.ApiClient.convertToType(data["memberships"], [_TaskBaseMemberships.TaskBaseMemberships]);
          if (data.hasOwnProperty("modified_at"))
            obj.modified_at = _ApiClient.ApiClient.convertToType(data["modified_at"], "Date");
          if (data.hasOwnProperty("notes"))
            obj.notes = _ApiClient.ApiClient.convertToType(data["notes"], "String");
          if (data.hasOwnProperty("num_hearts"))
            obj.num_hearts = _ApiClient.ApiClient.convertToType(data["num_hearts"], "Number");
          if (data.hasOwnProperty("num_likes"))
            obj.num_likes = _ApiClient.ApiClient.convertToType(data["num_likes"], "Number");
          if (data.hasOwnProperty("num_subtasks"))
            obj.num_subtasks = _ApiClient.ApiClient.convertToType(data["num_subtasks"], "Number");
          if (data.hasOwnProperty("start_at"))
            obj.start_at = _ApiClient.ApiClient.convertToType(data["start_at"], "Date");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "Date");
          if (data.hasOwnProperty("actual_time_minutes"))
            obj.actual_time_minutes = _ApiClient.ApiClient.convertToType(data["actual_time_minutes"], "Number");
        }
        return obj;
      }
    }]);
    return TaskBase2;
  }();
  exports.TaskBase = TaskBase;
  TaskBase.prototype.gid = undefined;
  TaskBase.prototype.resource_type = undefined;
  TaskBase.prototype.name = undefined;
  TaskBase.ResourceSubtypeEnum = {
    default_task: "default_task",
    milestone: "milestone",
    section: "section",
    approval: "approval"
  };
  TaskBase.prototype.resource_subtype = undefined;
  TaskBase.prototype.created_by = undefined;
  TaskBase.ApprovalStatusEnum = {
    pending: "pending",
    approved: "approved",
    rejected: "rejected",
    changes_requested: "changes_requested"
  };
  TaskBase.prototype.approval_status = undefined;
  TaskBase.AssigneeStatusEnum = {
    today: "today",
    upcoming: "upcoming",
    later: "later",
    _new: "new",
    inbox: "inbox"
  };
  TaskBase.prototype.assignee_status = undefined;
  TaskBase.prototype.completed = undefined;
  TaskBase.prototype.completed_at = undefined;
  TaskBase.prototype.completed_by = undefined;
  TaskBase.prototype.created_at = undefined;
  TaskBase.prototype.dependencies = undefined;
  TaskBase.prototype.dependents = undefined;
  TaskBase.prototype.due_at = undefined;
  TaskBase.prototype.due_on = undefined;
  TaskBase.prototype.external = undefined;
  TaskBase.prototype.html_notes = undefined;
  TaskBase.prototype.hearted = undefined;
  TaskBase.prototype.hearts = undefined;
  TaskBase.prototype.is_rendered_as_separator = undefined;
  TaskBase.prototype.liked = undefined;
  TaskBase.prototype.likes = undefined;
  TaskBase.prototype.memberships = undefined;
  TaskBase.prototype.modified_at = undefined;
  TaskBase.prototype.notes = undefined;
  TaskBase.prototype.num_hearts = undefined;
  TaskBase.prototype.num_likes = undefined;
  TaskBase.prototype.num_subtasks = undefined;
  TaskBase.prototype.start_at = undefined;
  TaskBase.prototype.start_on = undefined;
  TaskBase.prototype.actual_time_minutes = undefined;
});

// node_modules/asana/dist/model/TaskCompact.js
var require_TaskCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskCompact = undefined;
  var _ApiClient = require_ApiClient();
  var _AttachmentResponseParentCreatedBy = require_AttachmentResponseParentCreatedBy();
  var TaskCompact = function() {
    function TaskCompact2() {
      _classCallCheck(this, TaskCompact2);
    }
    _createClass(TaskCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _AttachmentResponseParentCreatedBy.AttachmentResponseParentCreatedBy.constructFromObject(data["created_by"]);
        }
        return obj;
      }
    }]);
    return TaskCompact2;
  }();
  exports.TaskCompact = TaskCompact;
  TaskCompact.prototype.gid = undefined;
  TaskCompact.prototype.resource_type = undefined;
  TaskCompact.prototype.name = undefined;
  TaskCompact.ResourceSubtypeEnum = {
    default_task: "default_task",
    milestone: "milestone",
    section: "section",
    approval: "approval"
  };
  TaskCompact.prototype.resource_subtype = undefined;
  TaskCompact.prototype.created_by = undefined;
});

// node_modules/asana/dist/model/TaskCountResponse.js
var require_TaskCountResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskCountResponse = undefined;
  var _ApiClient = require_ApiClient();
  var TaskCountResponse = function() {
    function TaskCountResponse2() {
      _classCallCheck(this, TaskCountResponse2);
    }
    _createClass(TaskCountResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskCountResponse2;
          if (data.hasOwnProperty("num_tasks"))
            obj.num_tasks = _ApiClient.ApiClient.convertToType(data["num_tasks"], "Number");
          if (data.hasOwnProperty("num_incomplete_tasks"))
            obj.num_incomplete_tasks = _ApiClient.ApiClient.convertToType(data["num_incomplete_tasks"], "Number");
          if (data.hasOwnProperty("num_completed_tasks"))
            obj.num_completed_tasks = _ApiClient.ApiClient.convertToType(data["num_completed_tasks"], "Number");
          if (data.hasOwnProperty("num_milestones"))
            obj.num_milestones = _ApiClient.ApiClient.convertToType(data["num_milestones"], "Number");
          if (data.hasOwnProperty("num_incomplete_milestones"))
            obj.num_incomplete_milestones = _ApiClient.ApiClient.convertToType(data["num_incomplete_milestones"], "Number");
          if (data.hasOwnProperty("num_completed_milestones"))
            obj.num_completed_milestones = _ApiClient.ApiClient.convertToType(data["num_completed_milestones"], "Number");
        }
        return obj;
      }
    }]);
    return TaskCountResponse2;
  }();
  exports.TaskCountResponse = TaskCountResponse;
  TaskCountResponse.prototype.num_tasks = undefined;
  TaskCountResponse.prototype.num_incomplete_tasks = undefined;
  TaskCountResponse.prototype.num_completed_tasks = undefined;
  TaskCountResponse.prototype.num_milestones = undefined;
  TaskCountResponse.prototype.num_incomplete_milestones = undefined;
  TaskCountResponse.prototype.num_completed_milestones = undefined;
});

// node_modules/asana/dist/model/TaskCountResponseData.js
var require_TaskCountResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskCountResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _TaskCountResponse = require_TaskCountResponse();
  var TaskCountResponseData = function() {
    function TaskCountResponseData2(data) {
      _classCallCheck(this, TaskCountResponseData2);
      this.data = data;
    }
    _createClass(TaskCountResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskCountResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _TaskCountResponse.TaskCountResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskCountResponseData2;
  }();
  exports.TaskCountResponseData = TaskCountResponseData;
  TaskCountResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskDuplicateRequest.js
var require_TaskDuplicateRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskDuplicateRequest = undefined;
  var _ApiClient = require_ApiClient();
  var TaskDuplicateRequest = function() {
    function TaskDuplicateRequest2() {
      _classCallCheck(this, TaskDuplicateRequest2);
    }
    _createClass(TaskDuplicateRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskDuplicateRequest2;
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("include"))
            obj.include = _ApiClient.ApiClient.convertToType(data["include"], "String");
        }
        return obj;
      }
    }]);
    return TaskDuplicateRequest2;
  }();
  exports.TaskDuplicateRequest = TaskDuplicateRequest;
  TaskDuplicateRequest.prototype.name = undefined;
  TaskDuplicateRequest.prototype.include = undefined;
});

// node_modules/asana/dist/model/TaskGidAddDependenciesBody.js
var require_TaskGidAddDependenciesBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskGidAddDependenciesBody = undefined;
  var _ApiClient = require_ApiClient();
  var _ModifyDependenciesRequest = require_ModifyDependenciesRequest();
  var TaskGidAddDependenciesBody = function() {
    function TaskGidAddDependenciesBody2() {
      _classCallCheck(this, TaskGidAddDependenciesBody2);
    }
    _createClass(TaskGidAddDependenciesBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskGidAddDependenciesBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _ModifyDependenciesRequest.ModifyDependenciesRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskGidAddDependenciesBody2;
  }();
  exports.TaskGidAddDependenciesBody = TaskGidAddDependenciesBody;
  TaskGidAddDependenciesBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskGidAddDependentsBody.js
var require_TaskGidAddDependentsBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskGidAddDependentsBody = undefined;
  var _ApiClient = require_ApiClient();
  var _ModifyDependentsRequest = require_ModifyDependentsRequest();
  var TaskGidAddDependentsBody = function() {
    function TaskGidAddDependentsBody2() {
      _classCallCheck(this, TaskGidAddDependentsBody2);
    }
    _createClass(TaskGidAddDependentsBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskGidAddDependentsBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _ModifyDependentsRequest.ModifyDependentsRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskGidAddDependentsBody2;
  }();
  exports.TaskGidAddDependentsBody = TaskGidAddDependentsBody;
  TaskGidAddDependentsBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskGidAddFollowersBody.js
var require_TaskGidAddFollowersBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskGidAddFollowersBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TaskAddFollowersRequest = require_TaskAddFollowersRequest();
  var TaskGidAddFollowersBody = function() {
    function TaskGidAddFollowersBody2() {
      _classCallCheck(this, TaskGidAddFollowersBody2);
    }
    _createClass(TaskGidAddFollowersBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskGidAddFollowersBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TaskAddFollowersRequest.TaskAddFollowersRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskGidAddFollowersBody2;
  }();
  exports.TaskGidAddFollowersBody = TaskGidAddFollowersBody;
  TaskGidAddFollowersBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskGidAddProjectBody.js
var require_TaskGidAddProjectBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskGidAddProjectBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TaskAddProjectRequest = require_TaskAddProjectRequest();
  var TaskGidAddProjectBody = function() {
    function TaskGidAddProjectBody2() {
      _classCallCheck(this, TaskGidAddProjectBody2);
    }
    _createClass(TaskGidAddProjectBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskGidAddProjectBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TaskAddProjectRequest.TaskAddProjectRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskGidAddProjectBody2;
  }();
  exports.TaskGidAddProjectBody = TaskGidAddProjectBody;
  TaskGidAddProjectBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskGidAddTagBody.js
var require_TaskGidAddTagBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskGidAddTagBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TaskAddTagRequest = require_TaskAddTagRequest();
  var TaskGidAddTagBody = function() {
    function TaskGidAddTagBody2() {
      _classCallCheck(this, TaskGidAddTagBody2);
    }
    _createClass(TaskGidAddTagBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskGidAddTagBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TaskAddTagRequest.TaskAddTagRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskGidAddTagBody2;
  }();
  exports.TaskGidAddTagBody = TaskGidAddTagBody;
  TaskGidAddTagBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskGidDuplicateBody.js
var require_TaskGidDuplicateBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskGidDuplicateBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TaskDuplicateRequest = require_TaskDuplicateRequest();
  var TaskGidDuplicateBody = function() {
    function TaskGidDuplicateBody2() {
      _classCallCheck(this, TaskGidDuplicateBody2);
    }
    _createClass(TaskGidDuplicateBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskGidDuplicateBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TaskDuplicateRequest.TaskDuplicateRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskGidDuplicateBody2;
  }();
  exports.TaskGidDuplicateBody = TaskGidDuplicateBody;
  TaskGidDuplicateBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskGidRemoveDependenciesBody.js
var require_TaskGidRemoveDependenciesBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskGidRemoveDependenciesBody = undefined;
  var _ApiClient = require_ApiClient();
  var _ModifyDependenciesRequest = require_ModifyDependenciesRequest();
  var TaskGidRemoveDependenciesBody = function() {
    function TaskGidRemoveDependenciesBody2() {
      _classCallCheck(this, TaskGidRemoveDependenciesBody2);
    }
    _createClass(TaskGidRemoveDependenciesBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskGidRemoveDependenciesBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _ModifyDependenciesRequest.ModifyDependenciesRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskGidRemoveDependenciesBody2;
  }();
  exports.TaskGidRemoveDependenciesBody = TaskGidRemoveDependenciesBody;
  TaskGidRemoveDependenciesBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskGidRemoveDependentsBody.js
var require_TaskGidRemoveDependentsBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskGidRemoveDependentsBody = undefined;
  var _ApiClient = require_ApiClient();
  var _ModifyDependentsRequest = require_ModifyDependentsRequest();
  var TaskGidRemoveDependentsBody = function() {
    function TaskGidRemoveDependentsBody2() {
      _classCallCheck(this, TaskGidRemoveDependentsBody2);
    }
    _createClass(TaskGidRemoveDependentsBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskGidRemoveDependentsBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _ModifyDependentsRequest.ModifyDependentsRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskGidRemoveDependentsBody2;
  }();
  exports.TaskGidRemoveDependentsBody = TaskGidRemoveDependentsBody;
  TaskGidRemoveDependentsBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskRemoveFollowersRequest.js
var require_TaskRemoveFollowersRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskRemoveFollowersRequest = undefined;
  var _ApiClient = require_ApiClient();
  var TaskRemoveFollowersRequest = function() {
    function TaskRemoveFollowersRequest2(followers) {
      _classCallCheck(this, TaskRemoveFollowersRequest2);
      this.followers = followers;
    }
    _createClass(TaskRemoveFollowersRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskRemoveFollowersRequest2;
          if (data.hasOwnProperty("followers"))
            obj.followers = _ApiClient.ApiClient.convertToType(data["followers"], ["String"]);
        }
        return obj;
      }
    }]);
    return TaskRemoveFollowersRequest2;
  }();
  exports.TaskRemoveFollowersRequest = TaskRemoveFollowersRequest;
  TaskRemoveFollowersRequest.prototype.followers = undefined;
});

// node_modules/asana/dist/model/TaskGidRemoveFollowersBody.js
var require_TaskGidRemoveFollowersBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskGidRemoveFollowersBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TaskRemoveFollowersRequest = require_TaskRemoveFollowersRequest();
  var TaskGidRemoveFollowersBody = function() {
    function TaskGidRemoveFollowersBody2() {
      _classCallCheck(this, TaskGidRemoveFollowersBody2);
    }
    _createClass(TaskGidRemoveFollowersBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskGidRemoveFollowersBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TaskRemoveFollowersRequest.TaskRemoveFollowersRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskGidRemoveFollowersBody2;
  }();
  exports.TaskGidRemoveFollowersBody = TaskGidRemoveFollowersBody;
  TaskGidRemoveFollowersBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskRemoveProjectRequest.js
var require_TaskRemoveProjectRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskRemoveProjectRequest = undefined;
  var _ApiClient = require_ApiClient();
  var TaskRemoveProjectRequest = function() {
    function TaskRemoveProjectRequest2(project) {
      _classCallCheck(this, TaskRemoveProjectRequest2);
      this.project = project;
    }
    _createClass(TaskRemoveProjectRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskRemoveProjectRequest2;
          if (data.hasOwnProperty("project"))
            obj.project = _ApiClient.ApiClient.convertToType(data["project"], "String");
        }
        return obj;
      }
    }]);
    return TaskRemoveProjectRequest2;
  }();
  exports.TaskRemoveProjectRequest = TaskRemoveProjectRequest;
  TaskRemoveProjectRequest.prototype.project = undefined;
});

// node_modules/asana/dist/model/TaskGidRemoveProjectBody.js
var require_TaskGidRemoveProjectBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskGidRemoveProjectBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TaskRemoveProjectRequest = require_TaskRemoveProjectRequest();
  var TaskGidRemoveProjectBody = function() {
    function TaskGidRemoveProjectBody2() {
      _classCallCheck(this, TaskGidRemoveProjectBody2);
    }
    _createClass(TaskGidRemoveProjectBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskGidRemoveProjectBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TaskRemoveProjectRequest.TaskRemoveProjectRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskGidRemoveProjectBody2;
  }();
  exports.TaskGidRemoveProjectBody = TaskGidRemoveProjectBody;
  TaskGidRemoveProjectBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskRemoveTagRequest.js
var require_TaskRemoveTagRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskRemoveTagRequest = undefined;
  var _ApiClient = require_ApiClient();
  var TaskRemoveTagRequest = function() {
    function TaskRemoveTagRequest2(tag) {
      _classCallCheck(this, TaskRemoveTagRequest2);
      this.tag = tag;
    }
    _createClass(TaskRemoveTagRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskRemoveTagRequest2;
          if (data.hasOwnProperty("tag"))
            obj.tag = _ApiClient.ApiClient.convertToType(data["tag"], "String");
        }
        return obj;
      }
    }]);
    return TaskRemoveTagRequest2;
  }();
  exports.TaskRemoveTagRequest = TaskRemoveTagRequest;
  TaskRemoveTagRequest.prototype.tag = undefined;
});

// node_modules/asana/dist/model/TaskGidRemoveTagBody.js
var require_TaskGidRemoveTagBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskGidRemoveTagBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TaskRemoveTagRequest = require_TaskRemoveTagRequest();
  var TaskGidRemoveTagBody = function() {
    function TaskGidRemoveTagBody2() {
      _classCallCheck(this, TaskGidRemoveTagBody2);
    }
    _createClass(TaskGidRemoveTagBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskGidRemoveTagBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TaskRemoveTagRequest.TaskRemoveTagRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskGidRemoveTagBody2;
  }();
  exports.TaskGidRemoveTagBody = TaskGidRemoveTagBody;
  TaskGidRemoveTagBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskSetParentRequest.js
var require_TaskSetParentRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskSetParentRequest = undefined;
  var _ApiClient = require_ApiClient();
  var TaskSetParentRequest = function() {
    function TaskSetParentRequest2(parent) {
      _classCallCheck(this, TaskSetParentRequest2);
      this.parent = parent;
    }
    _createClass(TaskSetParentRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskSetParentRequest2;
          if (data.hasOwnProperty("parent"))
            obj.parent = _ApiClient.ApiClient.convertToType(data["parent"], "String");
          if (data.hasOwnProperty("insert_after"))
            obj.insert_after = _ApiClient.ApiClient.convertToType(data["insert_after"], "String");
          if (data.hasOwnProperty("insert_before"))
            obj.insert_before = _ApiClient.ApiClient.convertToType(data["insert_before"], "String");
        }
        return obj;
      }
    }]);
    return TaskSetParentRequest2;
  }();
  exports.TaskSetParentRequest = TaskSetParentRequest;
  TaskSetParentRequest.prototype.parent = undefined;
  TaskSetParentRequest.prototype.insert_after = undefined;
  TaskSetParentRequest.prototype.insert_before = undefined;
});

// node_modules/asana/dist/model/TaskGidSetParentBody.js
var require_TaskGidSetParentBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskGidSetParentBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TaskSetParentRequest = require_TaskSetParentRequest();
  var TaskGidSetParentBody = function() {
    function TaskGidSetParentBody2() {
      _classCallCheck(this, TaskGidSetParentBody2);
    }
    _createClass(TaskGidSetParentBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskGidSetParentBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TaskSetParentRequest.TaskSetParentRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskGidSetParentBody2;
  }();
  exports.TaskGidSetParentBody = TaskGidSetParentBody;
  TaskGidSetParentBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskGidStoriesBody.js
var require_TaskGidStoriesBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskGidStoriesBody = undefined;
  var _ApiClient = require_ApiClient();
  var _StoryRequest = require_StoryRequest();
  var TaskGidStoriesBody = function() {
    function TaskGidStoriesBody2() {
      _classCallCheck(this, TaskGidStoriesBody2);
    }
    _createClass(TaskGidStoriesBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskGidStoriesBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _StoryRequest.StoryRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskGidStoriesBody2;
  }();
  exports.TaskGidStoriesBody = TaskGidStoriesBody;
  TaskGidStoriesBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskRequest.js
var require_TaskRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskRequest = undefined;
  var _ApiClient = require_ApiClient();
  var _AttachmentResponseParentCreatedBy = require_AttachmentResponseParentCreatedBy();
  var _GoalResponseLikes = require_GoalResponseLikes();
  var _TaskBaseCompletedBy = require_TaskBaseCompletedBy();
  var _TaskBaseDependencies = require_TaskBaseDependencies();
  var _TaskBaseExternal = require_TaskBaseExternal();
  var _TaskBaseMemberships = require_TaskBaseMemberships();
  var TaskRequest = function() {
    function TaskRequest2() {
      _classCallCheck(this, TaskRequest2);
    }
    _createClass(TaskRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _AttachmentResponseParentCreatedBy.AttachmentResponseParentCreatedBy.constructFromObject(data["created_by"]);
          if (data.hasOwnProperty("approval_status"))
            obj.approval_status = _ApiClient.ApiClient.convertToType(data["approval_status"], "String");
          if (data.hasOwnProperty("assignee_status"))
            obj.assignee_status = _ApiClient.ApiClient.convertToType(data["assignee_status"], "String");
          if (data.hasOwnProperty("completed"))
            obj.completed = _ApiClient.ApiClient.convertToType(data["completed"], "Boolean");
          if (data.hasOwnProperty("completed_at"))
            obj.completed_at = _ApiClient.ApiClient.convertToType(data["completed_at"], "Date");
          if (data.hasOwnProperty("completed_by"))
            obj.completed_by = _TaskBaseCompletedBy.TaskBaseCompletedBy.constructFromObject(data["completed_by"]);
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("dependencies"))
            obj.dependencies = _ApiClient.ApiClient.convertToType(data["dependencies"], [_TaskBaseDependencies.TaskBaseDependencies]);
          if (data.hasOwnProperty("dependents"))
            obj.dependents = _ApiClient.ApiClient.convertToType(data["dependents"], [_TaskBaseDependencies.TaskBaseDependencies]);
          if (data.hasOwnProperty("due_at"))
            obj.due_at = _ApiClient.ApiClient.convertToType(data["due_at"], "Date");
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "Date");
          if (data.hasOwnProperty("external"))
            obj.external = _TaskBaseExternal.TaskBaseExternal.constructFromObject(data["external"]);
          if (data.hasOwnProperty("html_notes"))
            obj.html_notes = _ApiClient.ApiClient.convertToType(data["html_notes"], "String");
          if (data.hasOwnProperty("hearted"))
            obj.hearted = _ApiClient.ApiClient.convertToType(data["hearted"], "Boolean");
          if (data.hasOwnProperty("hearts"))
            obj.hearts = _ApiClient.ApiClient.convertToType(data["hearts"], [_GoalResponseLikes.GoalResponseLikes]);
          if (data.hasOwnProperty("is_rendered_as_separator"))
            obj.is_rendered_as_separator = _ApiClient.ApiClient.convertToType(data["is_rendered_as_separator"], "Boolean");
          if (data.hasOwnProperty("liked"))
            obj.liked = _ApiClient.ApiClient.convertToType(data["liked"], "Boolean");
          if (data.hasOwnProperty("likes"))
            obj.likes = _ApiClient.ApiClient.convertToType(data["likes"], [_GoalResponseLikes.GoalResponseLikes]);
          if (data.hasOwnProperty("memberships"))
            obj.memberships = _ApiClient.ApiClient.convertToType(data["memberships"], [_TaskBaseMemberships.TaskBaseMemberships]);
          if (data.hasOwnProperty("modified_at"))
            obj.modified_at = _ApiClient.ApiClient.convertToType(data["modified_at"], "Date");
          if (data.hasOwnProperty("notes"))
            obj.notes = _ApiClient.ApiClient.convertToType(data["notes"], "String");
          if (data.hasOwnProperty("num_hearts"))
            obj.num_hearts = _ApiClient.ApiClient.convertToType(data["num_hearts"], "Number");
          if (data.hasOwnProperty("num_likes"))
            obj.num_likes = _ApiClient.ApiClient.convertToType(data["num_likes"], "Number");
          if (data.hasOwnProperty("num_subtasks"))
            obj.num_subtasks = _ApiClient.ApiClient.convertToType(data["num_subtasks"], "Number");
          if (data.hasOwnProperty("start_at"))
            obj.start_at = _ApiClient.ApiClient.convertToType(data["start_at"], "Date");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "Date");
          if (data.hasOwnProperty("actual_time_minutes"))
            obj.actual_time_minutes = _ApiClient.ApiClient.convertToType(data["actual_time_minutes"], "Number");
          if (data.hasOwnProperty("assignee"))
            obj.assignee = _ApiClient.ApiClient.convertToType(data["assignee"], "String");
          if (data.hasOwnProperty("assignee_section"))
            obj.assignee_section = _ApiClient.ApiClient.convertToType(data["assignee_section"], "String");
          if (data.hasOwnProperty("custom_fields"))
            obj.custom_fields = _ApiClient.ApiClient.convertToType(data["custom_fields"], {
              String: "String"
            });
          if (data.hasOwnProperty("followers"))
            obj.followers = _ApiClient.ApiClient.convertToType(data["followers"], ["String"]);
          if (data.hasOwnProperty("parent"))
            obj.parent = _ApiClient.ApiClient.convertToType(data["parent"], "String");
          if (data.hasOwnProperty("projects"))
            obj.projects = _ApiClient.ApiClient.convertToType(data["projects"], ["String"]);
          if (data.hasOwnProperty("tags"))
            obj.tags = _ApiClient.ApiClient.convertToType(data["tags"], ["String"]);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _ApiClient.ApiClient.convertToType(data["workspace"], "String");
        }
        return obj;
      }
    }]);
    return TaskRequest2;
  }();
  exports.TaskRequest = TaskRequest;
  TaskRequest.prototype.gid = undefined;
  TaskRequest.prototype.resource_type = undefined;
  TaskRequest.prototype.name = undefined;
  TaskRequest.ResourceSubtypeEnum = {
    default_task: "default_task",
    milestone: "milestone",
    section: "section",
    approval: "approval"
  };
  TaskRequest.prototype.resource_subtype = undefined;
  TaskRequest.prototype.created_by = undefined;
  TaskRequest.ApprovalStatusEnum = {
    pending: "pending",
    approved: "approved",
    rejected: "rejected",
    changes_requested: "changes_requested"
  };
  TaskRequest.prototype.approval_status = undefined;
  TaskRequest.AssigneeStatusEnum = {
    today: "today",
    upcoming: "upcoming",
    later: "later",
    _new: "new",
    inbox: "inbox"
  };
  TaskRequest.prototype.assignee_status = undefined;
  TaskRequest.prototype.completed = undefined;
  TaskRequest.prototype.completed_at = undefined;
  TaskRequest.prototype.completed_by = undefined;
  TaskRequest.prototype.created_at = undefined;
  TaskRequest.prototype.dependencies = undefined;
  TaskRequest.prototype.dependents = undefined;
  TaskRequest.prototype.due_at = undefined;
  TaskRequest.prototype.due_on = undefined;
  TaskRequest.prototype.external = undefined;
  TaskRequest.prototype.html_notes = undefined;
  TaskRequest.prototype.hearted = undefined;
  TaskRequest.prototype.hearts = undefined;
  TaskRequest.prototype.is_rendered_as_separator = undefined;
  TaskRequest.prototype.liked = undefined;
  TaskRequest.prototype.likes = undefined;
  TaskRequest.prototype.memberships = undefined;
  TaskRequest.prototype.modified_at = undefined;
  TaskRequest.prototype.notes = undefined;
  TaskRequest.prototype.num_hearts = undefined;
  TaskRequest.prototype.num_likes = undefined;
  TaskRequest.prototype.num_subtasks = undefined;
  TaskRequest.prototype.start_at = undefined;
  TaskRequest.prototype.start_on = undefined;
  TaskRequest.prototype.actual_time_minutes = undefined;
  TaskRequest.prototype.assignee = undefined;
  TaskRequest.prototype.assignee_section = undefined;
  TaskRequest.prototype.custom_fields = undefined;
  TaskRequest.prototype.followers = undefined;
  TaskRequest.prototype.parent = undefined;
  TaskRequest.prototype.projects = undefined;
  TaskRequest.prototype.tags = undefined;
  TaskRequest.prototype.workspace = undefined;
});

// node_modules/asana/dist/model/TaskGidSubtasksBody.js
var require_TaskGidSubtasksBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskGidSubtasksBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TaskRequest = require_TaskRequest();
  var TaskGidSubtasksBody = function() {
    function TaskGidSubtasksBody2() {
      _classCallCheck(this, TaskGidSubtasksBody2);
    }
    _createClass(TaskGidSubtasksBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskGidSubtasksBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TaskRequest.TaskRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskGidSubtasksBody2;
  }();
  exports.TaskGidSubtasksBody = TaskGidSubtasksBody;
  TaskGidSubtasksBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskGidTimeTrackingEntriesBody.js
var require_TaskGidTimeTrackingEntriesBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskGidTimeTrackingEntriesBody = undefined;
  var _ApiClient = require_ApiClient();
  var _CreateTimeTrackingEntryRequest = require_CreateTimeTrackingEntryRequest();
  var TaskGidTimeTrackingEntriesBody = function() {
    function TaskGidTimeTrackingEntriesBody2() {
      _classCallCheck(this, TaskGidTimeTrackingEntriesBody2);
    }
    _createClass(TaskGidTimeTrackingEntriesBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskGidTimeTrackingEntriesBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _CreateTimeTrackingEntryRequest.CreateTimeTrackingEntryRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskGidTimeTrackingEntriesBody2;
  }();
  exports.TaskGidTimeTrackingEntriesBody = TaskGidTimeTrackingEntriesBody;
  TaskGidTimeTrackingEntriesBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TaskResponseAssigneeSection.js
var require_TaskResponseAssigneeSection = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskResponseAssigneeSection = undefined;
  var _ApiClient = require_ApiClient();
  var TaskResponseAssigneeSection = function() {
    function TaskResponseAssigneeSection2() {
      _classCallCheck(this, TaskResponseAssigneeSection2);
    }
    _createClass(TaskResponseAssigneeSection2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskResponseAssigneeSection2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return TaskResponseAssigneeSection2;
  }();
  exports.TaskResponseAssigneeSection = TaskResponseAssigneeSection;
  TaskResponseAssigneeSection.prototype.gid = undefined;
  TaskResponseAssigneeSection.prototype.resource_type = undefined;
  TaskResponseAssigneeSection.prototype.name = undefined;
});

// node_modules/asana/dist/model/TaskResponseCustomFields.js
var require_TaskResponseCustomFields = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskResponseCustomFields = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldBaseDateValue = require_CustomFieldBaseDateValue();
  var _CustomFieldBaseEnumOptions = require_CustomFieldBaseEnumOptions();
  var _CustomFieldBaseEnumValue = require_CustomFieldBaseEnumValue();
  var _CustomFieldResponseCreatedBy = require_CustomFieldResponseCreatedBy();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var TaskResponseCustomFields = function() {
    function TaskResponseCustomFields2() {
      _classCallCheck(this, TaskResponseCustomFields2);
    }
    _createClass(TaskResponseCustomFields2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskResponseCustomFields2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("type"))
            obj.type = _ApiClient.ApiClient.convertToType(data["type"], "String");
          if (data.hasOwnProperty("enum_options"))
            obj.enum_options = _ApiClient.ApiClient.convertToType(data["enum_options"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("enabled"))
            obj.enabled = _ApiClient.ApiClient.convertToType(data["enabled"], "Boolean");
          if (data.hasOwnProperty("is_formula_field"))
            obj.is_formula_field = _ApiClient.ApiClient.convertToType(data["is_formula_field"], "Boolean");
          if (data.hasOwnProperty("date_value"))
            obj.date_value = _CustomFieldBaseDateValue.CustomFieldBaseDateValue.constructFromObject(data["date_value"]);
          if (data.hasOwnProperty("enum_value"))
            obj.enum_value = _CustomFieldBaseEnumValue.CustomFieldBaseEnumValue.constructFromObject(data["enum_value"]);
          if (data.hasOwnProperty("multi_enum_values"))
            obj.multi_enum_values = _ApiClient.ApiClient.convertToType(data["multi_enum_values"], [_CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions]);
          if (data.hasOwnProperty("number_value"))
            obj.number_value = _ApiClient.ApiClient.convertToType(data["number_value"], "Number");
          if (data.hasOwnProperty("text_value"))
            obj.text_value = _ApiClient.ApiClient.convertToType(data["text_value"], "String");
          if (data.hasOwnProperty("display_value"))
            obj.display_value = _ApiClient.ApiClient.convertToType(data["display_value"], "String");
          if (data.hasOwnProperty("description"))
            obj.description = _ApiClient.ApiClient.convertToType(data["description"], "String");
          if (data.hasOwnProperty("precision"))
            obj.precision = _ApiClient.ApiClient.convertToType(data["precision"], "Number");
          if (data.hasOwnProperty("format"))
            obj.format = _ApiClient.ApiClient.convertToType(data["format"], "String");
          if (data.hasOwnProperty("currency_code"))
            obj.currency_code = _ApiClient.ApiClient.convertToType(data["currency_code"], "String");
          if (data.hasOwnProperty("custom_label"))
            obj.custom_label = _ApiClient.ApiClient.convertToType(data["custom_label"], "String");
          if (data.hasOwnProperty("custom_label_position"))
            obj.custom_label_position = _ApiClient.ApiClient.convertToType(data["custom_label_position"], "String");
          if (data.hasOwnProperty("is_global_to_workspace"))
            obj.is_global_to_workspace = _ApiClient.ApiClient.convertToType(data["is_global_to_workspace"], "Boolean");
          if (data.hasOwnProperty("has_notifications_enabled"))
            obj.has_notifications_enabled = _ApiClient.ApiClient.convertToType(data["has_notifications_enabled"], "Boolean");
          if (data.hasOwnProperty("asana_created_field"))
            obj.asana_created_field = _ApiClient.ApiClient.convertToType(data["asana_created_field"], "String");
          if (data.hasOwnProperty("is_value_read_only"))
            obj.is_value_read_only = _ApiClient.ApiClient.convertToType(data["is_value_read_only"], "Boolean");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _CustomFieldResponseCreatedBy.CustomFieldResponseCreatedBy.constructFromObject(data["created_by"]);
          if (data.hasOwnProperty("people_value"))
            obj.people_value = _ApiClient.ApiClient.convertToType(data["people_value"], [_CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue]);
        }
        return obj;
      }
    }]);
    return TaskResponseCustomFields2;
  }();
  exports.TaskResponseCustomFields = TaskResponseCustomFields;
  TaskResponseCustomFields.prototype.gid = undefined;
  TaskResponseCustomFields.prototype.resource_type = undefined;
  TaskResponseCustomFields.prototype.name = undefined;
  TaskResponseCustomFields.ResourceSubtypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  TaskResponseCustomFields.prototype.resource_subtype = undefined;
  TaskResponseCustomFields.TypeEnum = {
    text: "text",
    _enum: "enum",
    multi_enum: "multi_enum",
    _number: "number",
    _date: "date",
    people: "people"
  };
  TaskResponseCustomFields.prototype.type = undefined;
  TaskResponseCustomFields.prototype.enum_options = undefined;
  TaskResponseCustomFields.prototype.enabled = undefined;
  TaskResponseCustomFields.prototype.is_formula_field = undefined;
  TaskResponseCustomFields.prototype.date_value = undefined;
  TaskResponseCustomFields.prototype.enum_value = undefined;
  TaskResponseCustomFields.prototype.multi_enum_values = undefined;
  TaskResponseCustomFields.prototype.number_value = undefined;
  TaskResponseCustomFields.prototype.text_value = undefined;
  TaskResponseCustomFields.prototype.display_value = undefined;
  TaskResponseCustomFields.prototype.description = undefined;
  TaskResponseCustomFields.prototype.precision = undefined;
  TaskResponseCustomFields.FormatEnum = {
    currency: "currency",
    identifier: "identifier",
    percentage: "percentage",
    custom: "custom",
    duration: "duration",
    none: "none"
  };
  TaskResponseCustomFields.prototype.format = undefined;
  TaskResponseCustomFields.prototype.currency_code = undefined;
  TaskResponseCustomFields.prototype.custom_label = undefined;
  TaskResponseCustomFields.CustomLabelPositionEnum = {
    prefix: "prefix",
    suffix: "suffix",
    _null: "null"
  };
  TaskResponseCustomFields.prototype.custom_label_position = undefined;
  TaskResponseCustomFields.prototype.is_global_to_workspace = undefined;
  TaskResponseCustomFields.prototype.has_notifications_enabled = undefined;
  TaskResponseCustomFields.AsanaCreatedFieldEnum = {
    a_v_requirements: "a_v_requirements",
    account_name: "account_name",
    actionable: "actionable",
    align_shipping_link: "align_shipping_link",
    align_status: "align_status",
    allotted_time: "allotted_time",
    appointment: "appointment",
    approval_stage: "approval_stage",
    approved: "approved",
    article_series: "article_series",
    board_committee: "board_committee",
    browser: "browser",
    campaign_audience: "campaign_audience",
    campaign_project_status: "campaign_project_status",
    campaign_regions: "campaign_regions",
    channel_primary: "channel_primary",
    client_topic_type: "client_topic_type",
    complete_by: "complete_by",
    contact: "contact",
    contact_email_address: "contact_email_address",
    content_channels: "content_channels",
    content_channels_needed: "content_channels_needed",
    content_stage: "content_stage",
    content_type: "content_type",
    contract: "contract",
    contract_status: "contract_status",
    cost: "cost",
    creation_stage: "creation_stage",
    creative_channel: "creative_channel",
    creative_needed: "creative_needed",
    creative_needs: "creative_needs",
    data_sensitivity: "data_sensitivity",
    deal_size: "deal_size",
    delivery_appt: "delivery_appt",
    delivery_appt_date: "delivery_appt_date",
    department: "department",
    department_responsible: "department_responsible",
    design_request_needed: "design_request_needed",
    design_request_type: "design_request_type",
    discussion_category: "discussion_category",
    do_this_task: "do_this_task",
    editorial_content_status: "editorial_content_status",
    editorial_content_tag: "editorial_content_tag",
    editorial_content_type: "editorial_content_type",
    effort: "effort",
    effort_level: "effort_level",
    est_completion_date: "est_completion_date",
    estimated_time: "estimated_time",
    estimated_value: "estimated_value",
    expected_cost: "expected_cost",
    external_steps_needed: "external_steps_needed",
    favorite_idea: "favorite_idea",
    feedback_type: "feedback_type",
    financial: "financial",
    funding_amount: "funding_amount",
    grant_application_process: "grant_application_process",
    hiring_candidate_status: "hiring_candidate_status",
    idea_status: "idea_status",
    ids_link: "ids_link",
    ids_patient_link: "ids_patient_link",
    implementation_stage: "implementation_stage",
    insurance: "insurance",
    interview_area: "interview_area",
    interview_question_score: "interview_question_score",
    itero_scan_link: "itero_scan_link",
    job_s_applied_to: "job_s_applied_to",
    lab: "lab",
    launch_status: "launch_status",
    lead_status: "lead_status",
    localization_language: "localization_language",
    localization_market_team: "localization_market_team",
    localization_status: "localization_status",
    meeting_minutes: "meeting_minutes",
    meeting_needed: "meeting_needed",
    minutes: "minutes",
    mrr: "mrr",
    must_localize: "must_localize",
    name_of_foundation: "name_of_foundation",
    need_to_follow_up: "need_to_follow_up",
    next_appointment: "next_appointment",
    next_steps_sales: "next_steps_sales",
    num_people: "num_people",
    number_of_user_reports: "number_of_user_reports",
    office_location: "office_location",
    onboarding_activity: "onboarding_activity",
    owner: "owner",
    participants_needed: "participants_needed",
    patient_date_of_birth: "patient_date_of_birth",
    patient_email: "patient_email",
    patient_phone: "patient_phone",
    patient_status: "patient_status",
    phone_number: "phone_number",
    planning_category: "planning_category",
    point_of_contact: "point_of_contact",
    position: "position",
    post_format: "post_format",
    prescription: "prescription",
    priority: "priority",
    priority_level: "priority_level",
    product: "product",
    product_stage: "product_stage",
    progress: "progress",
    project_size: "project_size",
    project_status: "project_status",
    proposed_budget: "proposed_budget",
    publish_status: "publish_status",
    reason_for_scan: "reason_for_scan",
    referral: "referral",
    request_type: "request_type",
    research_status: "research_status",
    responsible_department: "responsible_department",
    responsible_team: "responsible_team",
    risk_assessment_status: "risk_assessment_status",
    room_name: "room_name",
    sales_counterpart: "sales_counterpart",
    sentiment: "sentiment",
    shipping_link: "shipping_link",
    social_channels: "social_channels",
    stage: "stage",
    status: "status",
    status_design: "status_design",
    status_of_initiative: "status_of_initiative",
    system_setup: "system_setup",
    task_progress: "task_progress",
    team: "team",
    team_marketing: "team_marketing",
    team_responsible: "team_responsible",
    time_it_takes_to_complete_tasks: "time_it_takes_to_complete_tasks",
    timeframe: "timeframe",
    treatment_type: "treatment_type",
    type_work_requests_it: "type_work_requests_it",
    use_agency: "use_agency",
    user_name: "user_name",
    vendor_category: "vendor_category",
    vendor_type: "vendor_type",
    word_count: "word_count",
    _null: "null"
  };
  TaskResponseCustomFields.prototype.asana_created_field = undefined;
  TaskResponseCustomFields.prototype.is_value_read_only = undefined;
  TaskResponseCustomFields.prototype.created_by = undefined;
  TaskResponseCustomFields.prototype.people_value = undefined;
});

// node_modules/asana/dist/model/TaskResponseParent.js
var require_TaskResponseParent = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskResponseParent = undefined;
  var _ApiClient = require_ApiClient();
  var _AttachmentResponseParentCreatedBy = require_AttachmentResponseParentCreatedBy();
  var TaskResponseParent = function() {
    function TaskResponseParent2() {
      _classCallCheck(this, TaskResponseParent2);
    }
    _createClass(TaskResponseParent2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskResponseParent2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _AttachmentResponseParentCreatedBy.AttachmentResponseParentCreatedBy.constructFromObject(data["created_by"]);
        }
        return obj;
      }
    }]);
    return TaskResponseParent2;
  }();
  exports.TaskResponseParent = TaskResponseParent;
  TaskResponseParent.prototype.gid = undefined;
  TaskResponseParent.prototype.resource_type = undefined;
  TaskResponseParent.prototype.name = undefined;
  TaskResponseParent.ResourceSubtypeEnum = {
    default_task: "default_task",
    milestone: "milestone",
    section: "section",
    approval: "approval"
  };
  TaskResponseParent.prototype.resource_subtype = undefined;
  TaskResponseParent.prototype.created_by = undefined;
});

// node_modules/asana/dist/model/TaskResponseTags.js
var require_TaskResponseTags = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskResponseTags = undefined;
  var _ApiClient = require_ApiClient();
  var TaskResponseTags = function() {
    function TaskResponseTags2() {
      _classCallCheck(this, TaskResponseTags2);
    }
    _createClass(TaskResponseTags2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskResponseTags2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return TaskResponseTags2;
  }();
  exports.TaskResponseTags = TaskResponseTags;
  TaskResponseTags.prototype.gid = undefined;
  TaskResponseTags.prototype.resource_type = undefined;
  TaskResponseTags.prototype.name = undefined;
});

// node_modules/asana/dist/model/TaskResponseWorkspace.js
var require_TaskResponseWorkspace = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskResponseWorkspace = undefined;
  var _ApiClient = require_ApiClient();
  var TaskResponseWorkspace = function() {
    function TaskResponseWorkspace2() {
      _classCallCheck(this, TaskResponseWorkspace2);
    }
    _createClass(TaskResponseWorkspace2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskResponseWorkspace2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return TaskResponseWorkspace2;
  }();
  exports.TaskResponseWorkspace = TaskResponseWorkspace;
  TaskResponseWorkspace.prototype.gid = undefined;
  TaskResponseWorkspace.prototype.resource_type = undefined;
  TaskResponseWorkspace.prototype.name = undefined;
});

// node_modules/asana/dist/model/TaskResponse.js
var require_TaskResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _AttachmentResponseParentCreatedBy = require_AttachmentResponseParentCreatedBy();
  var _CustomFieldResponseCreatedBy = require_CustomFieldResponseCreatedBy();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _GoalResponseLikes = require_GoalResponseLikes();
  var _JobBaseNewProject = require_JobBaseNewProject();
  var _TaskBaseCompletedBy = require_TaskBaseCompletedBy();
  var _TaskBaseDependencies = require_TaskBaseDependencies();
  var _TaskBaseExternal = require_TaskBaseExternal();
  var _TaskBaseMemberships = require_TaskBaseMemberships();
  var _TaskResponseAssigneeSection = require_TaskResponseAssigneeSection();
  var _TaskResponseCustomFields = require_TaskResponseCustomFields();
  var _TaskResponseParent = require_TaskResponseParent();
  var _TaskResponseTags = require_TaskResponseTags();
  var _TaskResponseWorkspace = require_TaskResponseWorkspace();
  var TaskResponse = function() {
    function TaskResponse2() {
      _classCallCheck(this, TaskResponse2);
    }
    _createClass(TaskResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _AttachmentResponseParentCreatedBy.AttachmentResponseParentCreatedBy.constructFromObject(data["created_by"]);
          if (data.hasOwnProperty("approval_status"))
            obj.approval_status = _ApiClient.ApiClient.convertToType(data["approval_status"], "String");
          if (data.hasOwnProperty("assignee_status"))
            obj.assignee_status = _ApiClient.ApiClient.convertToType(data["assignee_status"], "String");
          if (data.hasOwnProperty("completed"))
            obj.completed = _ApiClient.ApiClient.convertToType(data["completed"], "Boolean");
          if (data.hasOwnProperty("completed_at"))
            obj.completed_at = _ApiClient.ApiClient.convertToType(data["completed_at"], "Date");
          if (data.hasOwnProperty("completed_by"))
            obj.completed_by = _TaskBaseCompletedBy.TaskBaseCompletedBy.constructFromObject(data["completed_by"]);
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("dependencies"))
            obj.dependencies = _ApiClient.ApiClient.convertToType(data["dependencies"], [_TaskBaseDependencies.TaskBaseDependencies]);
          if (data.hasOwnProperty("dependents"))
            obj.dependents = _ApiClient.ApiClient.convertToType(data["dependents"], [_TaskBaseDependencies.TaskBaseDependencies]);
          if (data.hasOwnProperty("due_at"))
            obj.due_at = _ApiClient.ApiClient.convertToType(data["due_at"], "Date");
          if (data.hasOwnProperty("due_on"))
            obj.due_on = _ApiClient.ApiClient.convertToType(data["due_on"], "Date");
          if (data.hasOwnProperty("external"))
            obj.external = _TaskBaseExternal.TaskBaseExternal.constructFromObject(data["external"]);
          if (data.hasOwnProperty("html_notes"))
            obj.html_notes = _ApiClient.ApiClient.convertToType(data["html_notes"], "String");
          if (data.hasOwnProperty("hearted"))
            obj.hearted = _ApiClient.ApiClient.convertToType(data["hearted"], "Boolean");
          if (data.hasOwnProperty("hearts"))
            obj.hearts = _ApiClient.ApiClient.convertToType(data["hearts"], [_GoalResponseLikes.GoalResponseLikes]);
          if (data.hasOwnProperty("is_rendered_as_separator"))
            obj.is_rendered_as_separator = _ApiClient.ApiClient.convertToType(data["is_rendered_as_separator"], "Boolean");
          if (data.hasOwnProperty("liked"))
            obj.liked = _ApiClient.ApiClient.convertToType(data["liked"], "Boolean");
          if (data.hasOwnProperty("likes"))
            obj.likes = _ApiClient.ApiClient.convertToType(data["likes"], [_GoalResponseLikes.GoalResponseLikes]);
          if (data.hasOwnProperty("memberships"))
            obj.memberships = _ApiClient.ApiClient.convertToType(data["memberships"], [_TaskBaseMemberships.TaskBaseMemberships]);
          if (data.hasOwnProperty("modified_at"))
            obj.modified_at = _ApiClient.ApiClient.convertToType(data["modified_at"], "Date");
          if (data.hasOwnProperty("notes"))
            obj.notes = _ApiClient.ApiClient.convertToType(data["notes"], "String");
          if (data.hasOwnProperty("num_hearts"))
            obj.num_hearts = _ApiClient.ApiClient.convertToType(data["num_hearts"], "Number");
          if (data.hasOwnProperty("num_likes"))
            obj.num_likes = _ApiClient.ApiClient.convertToType(data["num_likes"], "Number");
          if (data.hasOwnProperty("num_subtasks"))
            obj.num_subtasks = _ApiClient.ApiClient.convertToType(data["num_subtasks"], "Number");
          if (data.hasOwnProperty("start_at"))
            obj.start_at = _ApiClient.ApiClient.convertToType(data["start_at"], "Date");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "Date");
          if (data.hasOwnProperty("actual_time_minutes"))
            obj.actual_time_minutes = _ApiClient.ApiClient.convertToType(data["actual_time_minutes"], "Number");
          if (data.hasOwnProperty("assignee"))
            obj.assignee = _CustomFieldResponseCreatedBy.CustomFieldResponseCreatedBy.constructFromObject(data["assignee"]);
          if (data.hasOwnProperty("assignee_section"))
            obj.assignee_section = _TaskResponseAssigneeSection.TaskResponseAssigneeSection.constructFromObject(data["assignee_section"]);
          if (data.hasOwnProperty("custom_fields"))
            obj.custom_fields = _ApiClient.ApiClient.convertToType(data["custom_fields"], [_TaskResponseCustomFields.TaskResponseCustomFields]);
          if (data.hasOwnProperty("followers"))
            obj.followers = _ApiClient.ApiClient.convertToType(data["followers"], [_CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue]);
          if (data.hasOwnProperty("parent"))
            obj.parent = _TaskResponseParent.TaskResponseParent.constructFromObject(data["parent"]);
          if (data.hasOwnProperty("projects"))
            obj.projects = _ApiClient.ApiClient.convertToType(data["projects"], [_JobBaseNewProject.JobBaseNewProject]);
          if (data.hasOwnProperty("tags"))
            obj.tags = _ApiClient.ApiClient.convertToType(data["tags"], [_TaskResponseTags.TaskResponseTags]);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _TaskResponseWorkspace.TaskResponseWorkspace.constructFromObject(data["workspace"]);
          if (data.hasOwnProperty("permalink_url"))
            obj.permalink_url = _ApiClient.ApiClient.convertToType(data["permalink_url"], "String");
        }
        return obj;
      }
    }]);
    return TaskResponse2;
  }();
  exports.TaskResponse = TaskResponse;
  TaskResponse.prototype.gid = undefined;
  TaskResponse.prototype.resource_type = undefined;
  TaskResponse.prototype.name = undefined;
  TaskResponse.ResourceSubtypeEnum = {
    default_task: "default_task",
    milestone: "milestone",
    section: "section",
    approval: "approval"
  };
  TaskResponse.prototype.resource_subtype = undefined;
  TaskResponse.prototype.created_by = undefined;
  TaskResponse.ApprovalStatusEnum = {
    pending: "pending",
    approved: "approved",
    rejected: "rejected",
    changes_requested: "changes_requested"
  };
  TaskResponse.prototype.approval_status = undefined;
  TaskResponse.AssigneeStatusEnum = {
    today: "today",
    upcoming: "upcoming",
    later: "later",
    _new: "new",
    inbox: "inbox"
  };
  TaskResponse.prototype.assignee_status = undefined;
  TaskResponse.prototype.completed = undefined;
  TaskResponse.prototype.completed_at = undefined;
  TaskResponse.prototype.completed_by = undefined;
  TaskResponse.prototype.created_at = undefined;
  TaskResponse.prototype.dependencies = undefined;
  TaskResponse.prototype.dependents = undefined;
  TaskResponse.prototype.due_at = undefined;
  TaskResponse.prototype.due_on = undefined;
  TaskResponse.prototype.external = undefined;
  TaskResponse.prototype.html_notes = undefined;
  TaskResponse.prototype.hearted = undefined;
  TaskResponse.prototype.hearts = undefined;
  TaskResponse.prototype.is_rendered_as_separator = undefined;
  TaskResponse.prototype.liked = undefined;
  TaskResponse.prototype.likes = undefined;
  TaskResponse.prototype.memberships = undefined;
  TaskResponse.prototype.modified_at = undefined;
  TaskResponse.prototype.notes = undefined;
  TaskResponse.prototype.num_hearts = undefined;
  TaskResponse.prototype.num_likes = undefined;
  TaskResponse.prototype.num_subtasks = undefined;
  TaskResponse.prototype.start_at = undefined;
  TaskResponse.prototype.start_on = undefined;
  TaskResponse.prototype.actual_time_minutes = undefined;
  TaskResponse.prototype.assignee = undefined;
  TaskResponse.prototype.assignee_section = undefined;
  TaskResponse.prototype.custom_fields = undefined;
  TaskResponse.prototype.followers = undefined;
  TaskResponse.prototype.parent = undefined;
  TaskResponse.prototype.projects = undefined;
  TaskResponse.prototype.tags = undefined;
  TaskResponse.prototype.workspace = undefined;
  TaskResponse.prototype.permalink_url = undefined;
});

// node_modules/asana/dist/model/TaskResponseArray.js
var require_TaskResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _TaskResponse = require_TaskResponse();
  var TaskResponseArray = function() {
    function TaskResponseArray2(data) {
      _classCallCheck(this, TaskResponseArray2);
      this.data = data;
    }
    _createClass(TaskResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_TaskResponse.TaskResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return TaskResponseArray2;
  }();
  exports.TaskResponseArray = TaskResponseArray;
  TaskResponseArray.prototype.data = undefined;
  TaskResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/TaskResponseData.js
var require_TaskResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TaskResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _TaskResponse = require_TaskResponse();
  var TaskResponseData = function() {
    function TaskResponseData2(data) {
      _classCallCheck(this, TaskResponseData2);
      this.data = data;
    }
    _createClass(TaskResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TaskResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _TaskResponse.TaskResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TaskResponseData2;
  }();
  exports.TaskResponseData = TaskResponseData;
  TaskResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/TasksBody.js
var require_TasksBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TasksBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TaskRequest = require_TaskRequest();
  var TasksBody = function() {
    function TasksBody2() {
      _classCallCheck(this, TasksBody2);
    }
    _createClass(TasksBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TasksBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TaskRequest.TaskRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TasksBody2;
  }();
  exports.TasksBody = TasksBody;
  TasksBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TasksTaskGidBody.js
var require_TasksTaskGidBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TasksTaskGidBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TaskRequest = require_TaskRequest();
  var TasksTaskGidBody = function() {
    function TasksTaskGidBody2() {
      _classCallCheck(this, TasksTaskGidBody2);
    }
    _createClass(TasksTaskGidBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TasksTaskGidBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TaskRequest.TaskRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TasksTaskGidBody2;
  }();
  exports.TasksTaskGidBody = TasksTaskGidBody;
  TasksTaskGidBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TeamAddUserRequest.js
var require_TeamAddUserRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamAddUserRequest = undefined;
  var _ApiClient = require_ApiClient();
  var TeamAddUserRequest = function() {
    function TeamAddUserRequest2() {
      _classCallCheck(this, TeamAddUserRequest2);
    }
    _createClass(TeamAddUserRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamAddUserRequest2;
          if (data.hasOwnProperty("user"))
            obj.user = _ApiClient.ApiClient.convertToType(data["user"], "String");
        }
        return obj;
      }
    }]);
    return TeamAddUserRequest2;
  }();
  exports.TeamAddUserRequest = TeamAddUserRequest;
  TeamAddUserRequest.prototype.user = undefined;
});

// node_modules/asana/dist/model/TeamBase.js
var require_TeamBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamBase = undefined;
  var _ApiClient = require_ApiClient();
  var TeamBase = function() {
    function TeamBase2() {
      _classCallCheck(this, TeamBase2);
    }
    _createClass(TeamBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return TeamBase2;
  }();
  exports.TeamBase = TeamBase;
  TeamBase.prototype.gid = undefined;
  TeamBase.prototype.resource_type = undefined;
  TeamBase.prototype.name = undefined;
});

// node_modules/asana/dist/model/TeamCompact.js
var require_TeamCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamCompact = undefined;
  var _ApiClient = require_ApiClient();
  var TeamCompact = function() {
    function TeamCompact2() {
      _classCallCheck(this, TeamCompact2);
    }
    _createClass(TeamCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return TeamCompact2;
  }();
  exports.TeamCompact = TeamCompact;
  TeamCompact.prototype.gid = undefined;
  TeamCompact.prototype.resource_type = undefined;
  TeamCompact.prototype.name = undefined;
});

// node_modules/asana/dist/model/TeamGidAddUserBody.js
var require_TeamGidAddUserBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamGidAddUserBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TeamAddUserRequest = require_TeamAddUserRequest();
  var TeamGidAddUserBody = function() {
    function TeamGidAddUserBody2() {
      _classCallCheck(this, TeamGidAddUserBody2);
    }
    _createClass(TeamGidAddUserBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamGidAddUserBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TeamAddUserRequest.TeamAddUserRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TeamGidAddUserBody2;
  }();
  exports.TeamGidAddUserBody = TeamGidAddUserBody;
  TeamGidAddUserBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TeamGidProjectsBody.js
var require_TeamGidProjectsBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamGidProjectsBody = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectRequest = require_ProjectRequest();
  var TeamGidProjectsBody = function() {
    function TeamGidProjectsBody2() {
      _classCallCheck(this, TeamGidProjectsBody2);
    }
    _createClass(TeamGidProjectsBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamGidProjectsBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectRequest.ProjectRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TeamGidProjectsBody2;
  }();
  exports.TeamGidProjectsBody = TeamGidProjectsBody;
  TeamGidProjectsBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TeamRemoveUserRequest.js
var require_TeamRemoveUserRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamRemoveUserRequest = undefined;
  var _ApiClient = require_ApiClient();
  var TeamRemoveUserRequest = function() {
    function TeamRemoveUserRequest2() {
      _classCallCheck(this, TeamRemoveUserRequest2);
    }
    _createClass(TeamRemoveUserRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamRemoveUserRequest2;
          if (data.hasOwnProperty("user"))
            obj.user = _ApiClient.ApiClient.convertToType(data["user"], "String");
        }
        return obj;
      }
    }]);
    return TeamRemoveUserRequest2;
  }();
  exports.TeamRemoveUserRequest = TeamRemoveUserRequest;
  TeamRemoveUserRequest.prototype.user = undefined;
});

// node_modules/asana/dist/model/TeamGidRemoveUserBody.js
var require_TeamGidRemoveUserBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamGidRemoveUserBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TeamRemoveUserRequest = require_TeamRemoveUserRequest();
  var TeamGidRemoveUserBody = function() {
    function TeamGidRemoveUserBody2() {
      _classCallCheck(this, TeamGidRemoveUserBody2);
    }
    _createClass(TeamGidRemoveUserBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamGidRemoveUserBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TeamRemoveUserRequest.TeamRemoveUserRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TeamGidRemoveUserBody2;
  }();
  exports.TeamGidRemoveUserBody = TeamGidRemoveUserBody;
  TeamGidRemoveUserBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TeamMembershipBase.js
var require_TeamMembershipBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamMembershipBase = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _ProjectTemplateBaseTeam = require_ProjectTemplateBaseTeam();
  var TeamMembershipBase = function() {
    function TeamMembershipBase2() {
      _classCallCheck(this, TeamMembershipBase2);
    }
    _createClass(TeamMembershipBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamMembershipBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
          if (data.hasOwnProperty("team"))
            obj.team = _ProjectTemplateBaseTeam.ProjectTemplateBaseTeam.constructFromObject(data["team"]);
          if (data.hasOwnProperty("is_guest"))
            obj.is_guest = _ApiClient.ApiClient.convertToType(data["is_guest"], "Boolean");
          if (data.hasOwnProperty("is_limited_access"))
            obj.is_limited_access = _ApiClient.ApiClient.convertToType(data["is_limited_access"], "Boolean");
          if (data.hasOwnProperty("is_admin"))
            obj.is_admin = _ApiClient.ApiClient.convertToType(data["is_admin"], "Boolean");
        }
        return obj;
      }
    }]);
    return TeamMembershipBase2;
  }();
  exports.TeamMembershipBase = TeamMembershipBase;
  TeamMembershipBase.prototype.gid = undefined;
  TeamMembershipBase.prototype.resource_type = undefined;
  TeamMembershipBase.prototype.user = undefined;
  TeamMembershipBase.prototype.team = undefined;
  TeamMembershipBase.prototype.is_guest = undefined;
  TeamMembershipBase.prototype.is_limited_access = undefined;
  TeamMembershipBase.prototype.is_admin = undefined;
});

// node_modules/asana/dist/model/TeamMembershipCompact.js
var require_TeamMembershipCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamMembershipCompact = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _ProjectTemplateBaseTeam = require_ProjectTemplateBaseTeam();
  var TeamMembershipCompact = function() {
    function TeamMembershipCompact2() {
      _classCallCheck(this, TeamMembershipCompact2);
    }
    _createClass(TeamMembershipCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamMembershipCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
          if (data.hasOwnProperty("team"))
            obj.team = _ProjectTemplateBaseTeam.ProjectTemplateBaseTeam.constructFromObject(data["team"]);
          if (data.hasOwnProperty("is_guest"))
            obj.is_guest = _ApiClient.ApiClient.convertToType(data["is_guest"], "Boolean");
          if (data.hasOwnProperty("is_limited_access"))
            obj.is_limited_access = _ApiClient.ApiClient.convertToType(data["is_limited_access"], "Boolean");
          if (data.hasOwnProperty("is_admin"))
            obj.is_admin = _ApiClient.ApiClient.convertToType(data["is_admin"], "Boolean");
        }
        return obj;
      }
    }]);
    return TeamMembershipCompact2;
  }();
  exports.TeamMembershipCompact = TeamMembershipCompact;
  TeamMembershipCompact.prototype.gid = undefined;
  TeamMembershipCompact.prototype.resource_type = undefined;
  TeamMembershipCompact.prototype.user = undefined;
  TeamMembershipCompact.prototype.team = undefined;
  TeamMembershipCompact.prototype.is_guest = undefined;
  TeamMembershipCompact.prototype.is_limited_access = undefined;
  TeamMembershipCompact.prototype.is_admin = undefined;
});

// node_modules/asana/dist/model/TeamMembershipResponse.js
var require_TeamMembershipResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamMembershipResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _ProjectTemplateBaseTeam = require_ProjectTemplateBaseTeam();
  var TeamMembershipResponse = function() {
    function TeamMembershipResponse2() {
      _classCallCheck(this, TeamMembershipResponse2);
    }
    _createClass(TeamMembershipResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamMembershipResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
          if (data.hasOwnProperty("team"))
            obj.team = _ProjectTemplateBaseTeam.ProjectTemplateBaseTeam.constructFromObject(data["team"]);
          if (data.hasOwnProperty("is_guest"))
            obj.is_guest = _ApiClient.ApiClient.convertToType(data["is_guest"], "Boolean");
          if (data.hasOwnProperty("is_limited_access"))
            obj.is_limited_access = _ApiClient.ApiClient.convertToType(data["is_limited_access"], "Boolean");
          if (data.hasOwnProperty("is_admin"))
            obj.is_admin = _ApiClient.ApiClient.convertToType(data["is_admin"], "Boolean");
        }
        return obj;
      }
    }]);
    return TeamMembershipResponse2;
  }();
  exports.TeamMembershipResponse = TeamMembershipResponse;
  TeamMembershipResponse.prototype.gid = undefined;
  TeamMembershipResponse.prototype.resource_type = undefined;
  TeamMembershipResponse.prototype.user = undefined;
  TeamMembershipResponse.prototype.team = undefined;
  TeamMembershipResponse.prototype.is_guest = undefined;
  TeamMembershipResponse.prototype.is_limited_access = undefined;
  TeamMembershipResponse.prototype.is_admin = undefined;
});

// node_modules/asana/dist/model/TeamMembershipResponseArray.js
var require_TeamMembershipResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamMembershipResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _TeamMembershipResponse = require_TeamMembershipResponse();
  var TeamMembershipResponseArray = function() {
    function TeamMembershipResponseArray2(data) {
      _classCallCheck(this, TeamMembershipResponseArray2);
      this.data = data;
    }
    _createClass(TeamMembershipResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamMembershipResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_TeamMembershipResponse.TeamMembershipResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return TeamMembershipResponseArray2;
  }();
  exports.TeamMembershipResponseArray = TeamMembershipResponseArray;
  TeamMembershipResponseArray.prototype.data = undefined;
  TeamMembershipResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/TeamMembershipResponseData.js
var require_TeamMembershipResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamMembershipResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _TeamMembershipResponse = require_TeamMembershipResponse();
  var TeamMembershipResponseData = function() {
    function TeamMembershipResponseData2(data) {
      _classCallCheck(this, TeamMembershipResponseData2);
      this.data = data;
    }
    _createClass(TeamMembershipResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamMembershipResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _TeamMembershipResponse.TeamMembershipResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TeamMembershipResponseData2;
  }();
  exports.TeamMembershipResponseData = TeamMembershipResponseData;
  TeamMembershipResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/TeamRequest.js
var require_TeamRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamRequest = undefined;
  var _ApiClient = require_ApiClient();
  var TeamRequest = function() {
    function TeamRequest2() {
      _classCallCheck(this, TeamRequest2);
    }
    _createClass(TeamRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("description"))
            obj.description = _ApiClient.ApiClient.convertToType(data["description"], "String");
          if (data.hasOwnProperty("html_description"))
            obj.html_description = _ApiClient.ApiClient.convertToType(data["html_description"], "String");
          if (data.hasOwnProperty("organization"))
            obj.organization = _ApiClient.ApiClient.convertToType(data["organization"], "String");
          if (data.hasOwnProperty("visibility"))
            obj.visibility = _ApiClient.ApiClient.convertToType(data["visibility"], "String");
          if (data.hasOwnProperty("edit_team_name_or_description_access_level"))
            obj.edit_team_name_or_description_access_level = _ApiClient.ApiClient.convertToType(data["edit_team_name_or_description_access_level"], "String");
          if (data.hasOwnProperty("edit_team_visibility_or_trash_team_access_level"))
            obj.edit_team_visibility_or_trash_team_access_level = _ApiClient.ApiClient.convertToType(data["edit_team_visibility_or_trash_team_access_level"], "String");
          if (data.hasOwnProperty("member_invite_management_access_level"))
            obj.member_invite_management_access_level = _ApiClient.ApiClient.convertToType(data["member_invite_management_access_level"], "String");
          if (data.hasOwnProperty("guest_invite_management_access_level"))
            obj.guest_invite_management_access_level = _ApiClient.ApiClient.convertToType(data["guest_invite_management_access_level"], "String");
          if (data.hasOwnProperty("join_request_management_access_level"))
            obj.join_request_management_access_level = _ApiClient.ApiClient.convertToType(data["join_request_management_access_level"], "String");
          if (data.hasOwnProperty("team_member_removal_access_level"))
            obj.team_member_removal_access_level = _ApiClient.ApiClient.convertToType(data["team_member_removal_access_level"], "String");
        }
        return obj;
      }
    }]);
    return TeamRequest2;
  }();
  exports.TeamRequest = TeamRequest;
  TeamRequest.prototype.gid = undefined;
  TeamRequest.prototype.resource_type = undefined;
  TeamRequest.prototype.name = undefined;
  TeamRequest.prototype.description = undefined;
  TeamRequest.prototype.html_description = undefined;
  TeamRequest.prototype.organization = undefined;
  TeamRequest.VisibilityEnum = {
    secret: "secret",
    request_to_join: "request_to_join",
    _public: "public"
  };
  TeamRequest.prototype.visibility = undefined;
  TeamRequest.EditTeamNameOrDescriptionAccessLevelEnum = {
    all_team_members: "all_team_members",
    only_team_admins: "only_team_admins"
  };
  TeamRequest.prototype.edit_team_name_or_description_access_level = undefined;
  TeamRequest.EditTeamVisibilityOrTrashTeamAccessLevelEnum = {
    all_team_members: "all_team_members",
    only_team_admins: "only_team_admins"
  };
  TeamRequest.prototype.edit_team_visibility_or_trash_team_access_level = undefined;
  TeamRequest.MemberInviteManagementAccessLevelEnum = {
    all_team_members: "all_team_members",
    only_team_admins: "only_team_admins"
  };
  TeamRequest.prototype.member_invite_management_access_level = undefined;
  TeamRequest.GuestInviteManagementAccessLevelEnum = {
    all_team_members: "all_team_members",
    only_team_admins: "only_team_admins"
  };
  TeamRequest.prototype.guest_invite_management_access_level = undefined;
  TeamRequest.JoinRequestManagementAccessLevelEnum = {
    all_team_members: "all_team_members",
    only_team_admins: "only_team_admins"
  };
  TeamRequest.prototype.join_request_management_access_level = undefined;
  TeamRequest.TeamMemberRemovalAccessLevelEnum = {
    all_team_members: "all_team_members",
    only_team_admins: "only_team_admins"
  };
  TeamRequest.prototype.team_member_removal_access_level = undefined;
});

// node_modules/asana/dist/model/TeamResponseOrganization.js
var require_TeamResponseOrganization = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamResponseOrganization = undefined;
  var _ApiClient = require_ApiClient();
  var TeamResponseOrganization = function() {
    function TeamResponseOrganization2() {
      _classCallCheck(this, TeamResponseOrganization2);
    }
    _createClass(TeamResponseOrganization2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamResponseOrganization2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return TeamResponseOrganization2;
  }();
  exports.TeamResponseOrganization = TeamResponseOrganization;
  TeamResponseOrganization.prototype.gid = undefined;
  TeamResponseOrganization.prototype.resource_type = undefined;
  TeamResponseOrganization.prototype.name = undefined;
});

// node_modules/asana/dist/model/TeamResponse.js
var require_TeamResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _TeamResponseOrganization = require_TeamResponseOrganization();
  var TeamResponse = function() {
    function TeamResponse2() {
      _classCallCheck(this, TeamResponse2);
    }
    _createClass(TeamResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("description"))
            obj.description = _ApiClient.ApiClient.convertToType(data["description"], "String");
          if (data.hasOwnProperty("html_description"))
            obj.html_description = _ApiClient.ApiClient.convertToType(data["html_description"], "String");
          if (data.hasOwnProperty("organization"))
            obj.organization = _TeamResponseOrganization.TeamResponseOrganization.constructFromObject(data["organization"]);
          if (data.hasOwnProperty("permalink_url"))
            obj.permalink_url = _ApiClient.ApiClient.convertToType(data["permalink_url"], "String");
          if (data.hasOwnProperty("visibility"))
            obj.visibility = _ApiClient.ApiClient.convertToType(data["visibility"], "String");
          if (data.hasOwnProperty("edit_team_name_or_description_access_level"))
            obj.edit_team_name_or_description_access_level = _ApiClient.ApiClient.convertToType(data["edit_team_name_or_description_access_level"], "String");
          if (data.hasOwnProperty("edit_team_visibility_or_trash_team_access_level"))
            obj.edit_team_visibility_or_trash_team_access_level = _ApiClient.ApiClient.convertToType(data["edit_team_visibility_or_trash_team_access_level"], "String");
          if (data.hasOwnProperty("member_invite_management_access_level"))
            obj.member_invite_management_access_level = _ApiClient.ApiClient.convertToType(data["member_invite_management_access_level"], "String");
          if (data.hasOwnProperty("guest_invite_management_access_level"))
            obj.guest_invite_management_access_level = _ApiClient.ApiClient.convertToType(data["guest_invite_management_access_level"], "String");
          if (data.hasOwnProperty("join_request_management_access_level"))
            obj.join_request_management_access_level = _ApiClient.ApiClient.convertToType(data["join_request_management_access_level"], "String");
          if (data.hasOwnProperty("team_member_removal_access_level"))
            obj.team_member_removal_access_level = _ApiClient.ApiClient.convertToType(data["team_member_removal_access_level"], "String");
        }
        return obj;
      }
    }]);
    return TeamResponse2;
  }();
  exports.TeamResponse = TeamResponse;
  TeamResponse.prototype.gid = undefined;
  TeamResponse.prototype.resource_type = undefined;
  TeamResponse.prototype.name = undefined;
  TeamResponse.prototype.description = undefined;
  TeamResponse.prototype.html_description = undefined;
  TeamResponse.prototype.organization = undefined;
  TeamResponse.prototype.permalink_url = undefined;
  TeamResponse.VisibilityEnum = {
    secret: "secret",
    request_to_join: "request_to_join",
    _public: "public"
  };
  TeamResponse.prototype.visibility = undefined;
  TeamResponse.EditTeamNameOrDescriptionAccessLevelEnum = {
    all_team_members: "all_team_members",
    only_team_admins: "only_team_admins"
  };
  TeamResponse.prototype.edit_team_name_or_description_access_level = undefined;
  TeamResponse.EditTeamVisibilityOrTrashTeamAccessLevelEnum = {
    all_team_members: "all_team_members",
    only_team_admins: "only_team_admins"
  };
  TeamResponse.prototype.edit_team_visibility_or_trash_team_access_level = undefined;
  TeamResponse.MemberInviteManagementAccessLevelEnum = {
    all_team_members: "all_team_members",
    only_team_admins: "only_team_admins"
  };
  TeamResponse.prototype.member_invite_management_access_level = undefined;
  TeamResponse.GuestInviteManagementAccessLevelEnum = {
    all_team_members: "all_team_members",
    only_team_admins: "only_team_admins"
  };
  TeamResponse.prototype.guest_invite_management_access_level = undefined;
  TeamResponse.JoinRequestManagementAccessLevelEnum = {
    all_team_members: "all_team_members",
    only_team_admins: "only_team_admins"
  };
  TeamResponse.prototype.join_request_management_access_level = undefined;
  TeamResponse.TeamMemberRemovalAccessLevelEnum = {
    all_team_members: "all_team_members",
    only_team_admins: "only_team_admins"
  };
  TeamResponse.prototype.team_member_removal_access_level = undefined;
});

// node_modules/asana/dist/model/TeamResponseArray.js
var require_TeamResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _TeamResponse = require_TeamResponse();
  var TeamResponseArray = function() {
    function TeamResponseArray2(data) {
      _classCallCheck(this, TeamResponseArray2);
      this.data = data;
    }
    _createClass(TeamResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_TeamResponse.TeamResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return TeamResponseArray2;
  }();
  exports.TeamResponseArray = TeamResponseArray;
  TeamResponseArray.prototype.data = undefined;
  TeamResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/TeamResponseData.js
var require_TeamResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _TeamResponse = require_TeamResponse();
  var TeamResponseData = function() {
    function TeamResponseData2(data) {
      _classCallCheck(this, TeamResponseData2);
      this.data = data;
    }
    _createClass(TeamResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _TeamResponse.TeamResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TeamResponseData2;
  }();
  exports.TeamResponseData = TeamResponseData;
  TeamResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/TeamsBody.js
var require_TeamsBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamsBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TeamRequest = require_TeamRequest();
  var TeamsBody = function() {
    function TeamsBody2() {
      _classCallCheck(this, TeamsBody2);
    }
    _createClass(TeamsBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamsBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TeamRequest.TeamRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TeamsBody2;
  }();
  exports.TeamsBody = TeamsBody;
  TeamsBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TeamsTeamGidBody.js
var require_TeamsTeamGidBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamsTeamGidBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TeamRequest = require_TeamRequest();
  var TeamsTeamGidBody = function() {
    function TeamsTeamGidBody2() {
      _classCallCheck(this, TeamsTeamGidBody2);
    }
    _createClass(TeamsTeamGidBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TeamsTeamGidBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TeamRequest.TeamRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TeamsTeamGidBody2;
  }();
  exports.TeamsTeamGidBody = TeamsTeamGidBody;
  TeamsTeamGidBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TemplateRole.js
var require_TemplateRole = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TemplateRole = undefined;
  var _ApiClient = require_ApiClient();
  var TemplateRole = function() {
    function TemplateRole2() {
      _classCallCheck(this, TemplateRole2);
    }
    _createClass(TemplateRole2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TemplateRole2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return TemplateRole2;
  }();
  exports.TemplateRole = TemplateRole;
  TemplateRole.prototype.gid = undefined;
  TemplateRole.prototype.resource_type = undefined;
  TemplateRole.prototype.name = undefined;
});

// node_modules/asana/dist/model/TimePeriodBase.js
var require_TimePeriodBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TimePeriodBase = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalResponseTimePeriod = require_GoalResponseTimePeriod();
  var TimePeriodBase = function() {
    function TimePeriodBase2() {
      _classCallCheck(this, TimePeriodBase2);
    }
    _createClass(TimePeriodBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TimePeriodBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("end_on"))
            obj.end_on = _ApiClient.ApiClient.convertToType(data["end_on"], "String");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "String");
          if (data.hasOwnProperty("period"))
            obj.period = _ApiClient.ApiClient.convertToType(data["period"], "String");
          if (data.hasOwnProperty("display_name"))
            obj.display_name = _ApiClient.ApiClient.convertToType(data["display_name"], "String");
          if (data.hasOwnProperty("parent"))
            obj.parent = _GoalResponseTimePeriod.GoalResponseTimePeriod.constructFromObject(data["parent"]);
        }
        return obj;
      }
    }]);
    return TimePeriodBase2;
  }();
  exports.TimePeriodBase = TimePeriodBase;
  TimePeriodBase.prototype.gid = undefined;
  TimePeriodBase.prototype.resource_type = undefined;
  TimePeriodBase.prototype.end_on = undefined;
  TimePeriodBase.prototype.start_on = undefined;
  TimePeriodBase.PeriodEnum = {
    FY: "FY",
    H1: "H1",
    H2: "H2",
    Q1: "Q1",
    Q2: "Q2",
    Q3: "Q3",
    Q4: "Q4"
  };
  TimePeriodBase.prototype.period = undefined;
  TimePeriodBase.prototype.display_name = undefined;
  TimePeriodBase.prototype.parent = undefined;
});

// node_modules/asana/dist/model/TimePeriodCompact.js
var require_TimePeriodCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TimePeriodCompact = undefined;
  var _ApiClient = require_ApiClient();
  var TimePeriodCompact = function() {
    function TimePeriodCompact2() {
      _classCallCheck(this, TimePeriodCompact2);
    }
    _createClass(TimePeriodCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TimePeriodCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("end_on"))
            obj.end_on = _ApiClient.ApiClient.convertToType(data["end_on"], "String");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "String");
          if (data.hasOwnProperty("period"))
            obj.period = _ApiClient.ApiClient.convertToType(data["period"], "String");
          if (data.hasOwnProperty("display_name"))
            obj.display_name = _ApiClient.ApiClient.convertToType(data["display_name"], "String");
        }
        return obj;
      }
    }]);
    return TimePeriodCompact2;
  }();
  exports.TimePeriodCompact = TimePeriodCompact;
  TimePeriodCompact.prototype.gid = undefined;
  TimePeriodCompact.prototype.resource_type = undefined;
  TimePeriodCompact.prototype.end_on = undefined;
  TimePeriodCompact.prototype.start_on = undefined;
  TimePeriodCompact.PeriodEnum = {
    FY: "FY",
    H1: "H1",
    H2: "H2",
    Q1: "Q1",
    Q2: "Q2",
    Q3: "Q3",
    Q4: "Q4"
  };
  TimePeriodCompact.prototype.period = undefined;
  TimePeriodCompact.prototype.display_name = undefined;
});

// node_modules/asana/dist/model/TimePeriodResponse.js
var require_TimePeriodResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TimePeriodResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalResponseTimePeriod = require_GoalResponseTimePeriod();
  var TimePeriodResponse = function() {
    function TimePeriodResponse2() {
      _classCallCheck(this, TimePeriodResponse2);
    }
    _createClass(TimePeriodResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TimePeriodResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("end_on"))
            obj.end_on = _ApiClient.ApiClient.convertToType(data["end_on"], "String");
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "String");
          if (data.hasOwnProperty("period"))
            obj.period = _ApiClient.ApiClient.convertToType(data["period"], "String");
          if (data.hasOwnProperty("display_name"))
            obj.display_name = _ApiClient.ApiClient.convertToType(data["display_name"], "String");
          if (data.hasOwnProperty("parent"))
            obj.parent = _GoalResponseTimePeriod.GoalResponseTimePeriod.constructFromObject(data["parent"]);
        }
        return obj;
      }
    }]);
    return TimePeriodResponse2;
  }();
  exports.TimePeriodResponse = TimePeriodResponse;
  TimePeriodResponse.prototype.gid = undefined;
  TimePeriodResponse.prototype.resource_type = undefined;
  TimePeriodResponse.prototype.end_on = undefined;
  TimePeriodResponse.prototype.start_on = undefined;
  TimePeriodResponse.PeriodEnum = {
    FY: "FY",
    H1: "H1",
    H2: "H2",
    Q1: "Q1",
    Q2: "Q2",
    Q3: "Q3",
    Q4: "Q4"
  };
  TimePeriodResponse.prototype.period = undefined;
  TimePeriodResponse.prototype.display_name = undefined;
  TimePeriodResponse.prototype.parent = undefined;
});

// node_modules/asana/dist/model/TimePeriodResponseArray.js
var require_TimePeriodResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TimePeriodResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _TimePeriodResponse = require_TimePeriodResponse();
  var TimePeriodResponseArray = function() {
    function TimePeriodResponseArray2(data) {
      _classCallCheck(this, TimePeriodResponseArray2);
      this.data = data;
    }
    _createClass(TimePeriodResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TimePeriodResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_TimePeriodResponse.TimePeriodResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return TimePeriodResponseArray2;
  }();
  exports.TimePeriodResponseArray = TimePeriodResponseArray;
  TimePeriodResponseArray.prototype.data = undefined;
  TimePeriodResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/TimePeriodResponseData.js
var require_TimePeriodResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TimePeriodResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _TimePeriodResponse = require_TimePeriodResponse();
  var TimePeriodResponseData = function() {
    function TimePeriodResponseData2(data) {
      _classCallCheck(this, TimePeriodResponseData2);
      this.data = data;
    }
    _createClass(TimePeriodResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TimePeriodResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _TimePeriodResponse.TimePeriodResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TimePeriodResponseData2;
  }();
  exports.TimePeriodResponseData = TimePeriodResponseData;
  TimePeriodResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/UpdateTimeTrackingEntryRequest.js
var require_UpdateTimeTrackingEntryRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UpdateTimeTrackingEntryRequest = undefined;
  var _ApiClient = require_ApiClient();
  var UpdateTimeTrackingEntryRequest = function() {
    function UpdateTimeTrackingEntryRequest2() {
      _classCallCheck(this, UpdateTimeTrackingEntryRequest2);
    }
    _createClass(UpdateTimeTrackingEntryRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new UpdateTimeTrackingEntryRequest2;
          if (data.hasOwnProperty("duration_minutes"))
            obj.duration_minutes = _ApiClient.ApiClient.convertToType(data["duration_minutes"], "Number");
          if (data.hasOwnProperty("entered_on"))
            obj.entered_on = _ApiClient.ApiClient.convertToType(data["entered_on"], "Date");
        }
        return obj;
      }
    }]);
    return UpdateTimeTrackingEntryRequest2;
  }();
  exports.UpdateTimeTrackingEntryRequest = UpdateTimeTrackingEntryRequest;
  UpdateTimeTrackingEntryRequest.prototype.duration_minutes = undefined;
  UpdateTimeTrackingEntryRequest.prototype.entered_on = undefined;
});

// node_modules/asana/dist/model/TimeTrackingEntriesTimeTrackingEntryGidBody.js
var require_TimeTrackingEntriesTimeTrackingEntryGidBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TimeTrackingEntriesTimeTrackingEntryGidBody = undefined;
  var _ApiClient = require_ApiClient();
  var _UpdateTimeTrackingEntryRequest = require_UpdateTimeTrackingEntryRequest();
  var TimeTrackingEntriesTimeTrackingEntryGidBody = function() {
    function TimeTrackingEntriesTimeTrackingEntryGidBody2() {
      _classCallCheck(this, TimeTrackingEntriesTimeTrackingEntryGidBody2);
    }
    _createClass(TimeTrackingEntriesTimeTrackingEntryGidBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TimeTrackingEntriesTimeTrackingEntryGidBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _UpdateTimeTrackingEntryRequest.UpdateTimeTrackingEntryRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TimeTrackingEntriesTimeTrackingEntryGidBody2;
  }();
  exports.TimeTrackingEntriesTimeTrackingEntryGidBody = TimeTrackingEntriesTimeTrackingEntryGidBody;
  TimeTrackingEntriesTimeTrackingEntryGidBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/TimeTrackingEntryBase.js
var require_TimeTrackingEntryBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TimeTrackingEntryBase = undefined;
  var _ApiClient = require_ApiClient();
  var _StoryResponseAssignee = require_StoryResponseAssignee();
  var _StoryResponseTask = require_StoryResponseTask();
  var TimeTrackingEntryBase = function() {
    function TimeTrackingEntryBase2() {
      _classCallCheck(this, TimeTrackingEntryBase2);
    }
    _createClass(TimeTrackingEntryBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TimeTrackingEntryBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("duration_minutes"))
            obj.duration_minutes = _ApiClient.ApiClient.convertToType(data["duration_minutes"], "Number");
          if (data.hasOwnProperty("entered_on"))
            obj.entered_on = _ApiClient.ApiClient.convertToType(data["entered_on"], "Date");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _StoryResponseAssignee.StoryResponseAssignee.constructFromObject(data["created_by"]);
          if (data.hasOwnProperty("task"))
            obj.task = _StoryResponseTask.StoryResponseTask.constructFromObject(data["task"]);
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
        }
        return obj;
      }
    }]);
    return TimeTrackingEntryBase2;
  }();
  exports.TimeTrackingEntryBase = TimeTrackingEntryBase;
  TimeTrackingEntryBase.prototype.gid = undefined;
  TimeTrackingEntryBase.prototype.resource_type = undefined;
  TimeTrackingEntryBase.prototype.duration_minutes = undefined;
  TimeTrackingEntryBase.prototype.entered_on = undefined;
  TimeTrackingEntryBase.prototype.created_by = undefined;
  TimeTrackingEntryBase.prototype.task = undefined;
  TimeTrackingEntryBase.prototype.created_at = undefined;
});

// node_modules/asana/dist/model/TimeTrackingEntryBaseData.js
var require_TimeTrackingEntryBaseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TimeTrackingEntryBaseData = undefined;
  var _ApiClient = require_ApiClient();
  var _TimeTrackingEntryBase = require_TimeTrackingEntryBase();
  var TimeTrackingEntryBaseData = function() {
    function TimeTrackingEntryBaseData2(data) {
      _classCallCheck(this, TimeTrackingEntryBaseData2);
      this.data = data;
    }
    _createClass(TimeTrackingEntryBaseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TimeTrackingEntryBaseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _TimeTrackingEntryBase.TimeTrackingEntryBase.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return TimeTrackingEntryBaseData2;
  }();
  exports.TimeTrackingEntryBaseData = TimeTrackingEntryBaseData;
  TimeTrackingEntryBaseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/TimeTrackingEntryCompact.js
var require_TimeTrackingEntryCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TimeTrackingEntryCompact = undefined;
  var _ApiClient = require_ApiClient();
  var _StoryResponseAssignee = require_StoryResponseAssignee();
  var TimeTrackingEntryCompact = function() {
    function TimeTrackingEntryCompact2() {
      _classCallCheck(this, TimeTrackingEntryCompact2);
    }
    _createClass(TimeTrackingEntryCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TimeTrackingEntryCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("duration_minutes"))
            obj.duration_minutes = _ApiClient.ApiClient.convertToType(data["duration_minutes"], "Number");
          if (data.hasOwnProperty("entered_on"))
            obj.entered_on = _ApiClient.ApiClient.convertToType(data["entered_on"], "Date");
          if (data.hasOwnProperty("created_by"))
            obj.created_by = _StoryResponseAssignee.StoryResponseAssignee.constructFromObject(data["created_by"]);
        }
        return obj;
      }
    }]);
    return TimeTrackingEntryCompact2;
  }();
  exports.TimeTrackingEntryCompact = TimeTrackingEntryCompact;
  TimeTrackingEntryCompact.prototype.gid = undefined;
  TimeTrackingEntryCompact.prototype.resource_type = undefined;
  TimeTrackingEntryCompact.prototype.duration_minutes = undefined;
  TimeTrackingEntryCompact.prototype.entered_on = undefined;
  TimeTrackingEntryCompact.prototype.created_by = undefined;
});

// node_modules/asana/dist/model/TimeTrackingEntryCompactArray.js
var require_TimeTrackingEntryCompactArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TimeTrackingEntryCompactArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _TimeTrackingEntryCompact = require_TimeTrackingEntryCompact();
  var TimeTrackingEntryCompactArray = function() {
    function TimeTrackingEntryCompactArray2(data) {
      _classCallCheck(this, TimeTrackingEntryCompactArray2);
      this.data = data;
    }
    _createClass(TimeTrackingEntryCompactArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new TimeTrackingEntryCompactArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_TimeTrackingEntryCompact.TimeTrackingEntryCompact]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return TimeTrackingEntryCompactArray2;
  }();
  exports.TimeTrackingEntryCompactArray = TimeTrackingEntryCompactArray;
  TimeTrackingEntryCompactArray.prototype.data = undefined;
  TimeTrackingEntryCompactArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/UserBase.js
var require_UserBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UserBase = undefined;
  var _ApiClient = require_ApiClient();
  var UserBase = function() {
    function UserBase2() {
      _classCallCheck(this, UserBase2);
    }
    _createClass(UserBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new UserBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return UserBase2;
  }();
  exports.UserBase = UserBase;
  UserBase.prototype.gid = undefined;
  UserBase.prototype.resource_type = undefined;
  UserBase.prototype.name = undefined;
});

// node_modules/asana/dist/model/UserBaseResponsePhoto.js
var require_UserBaseResponsePhoto = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UserBaseResponsePhoto = undefined;
  var _ApiClient = require_ApiClient();
  var UserBaseResponsePhoto = function() {
    function UserBaseResponsePhoto2() {
      _classCallCheck(this, UserBaseResponsePhoto2);
    }
    _createClass(UserBaseResponsePhoto2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new UserBaseResponsePhoto2;
          if (data.hasOwnProperty("image_21x21"))
            obj.image_21x21 = _ApiClient.ApiClient.convertToType(data["image_21x21"], "String");
          if (data.hasOwnProperty("image_27x27"))
            obj.image_27x27 = _ApiClient.ApiClient.convertToType(data["image_27x27"], "String");
          if (data.hasOwnProperty("image_36x36"))
            obj.image_36x36 = _ApiClient.ApiClient.convertToType(data["image_36x36"], "String");
          if (data.hasOwnProperty("image_60x60"))
            obj.image_60x60 = _ApiClient.ApiClient.convertToType(data["image_60x60"], "String");
          if (data.hasOwnProperty("image_128x128"))
            obj.image_128x128 = _ApiClient.ApiClient.convertToType(data["image_128x128"], "String");
          if (data.hasOwnProperty("image_1024x1024"))
            obj.image_1024x1024 = _ApiClient.ApiClient.convertToType(data["image_1024x1024"], "String");
        }
        return obj;
      }
    }]);
    return UserBaseResponsePhoto2;
  }();
  exports.UserBaseResponsePhoto = UserBaseResponsePhoto;
  UserBaseResponsePhoto.prototype.image_21x21 = undefined;
  UserBaseResponsePhoto.prototype.image_27x27 = undefined;
  UserBaseResponsePhoto.prototype.image_36x36 = undefined;
  UserBaseResponsePhoto.prototype.image_60x60 = undefined;
  UserBaseResponsePhoto.prototype.image_128x128 = undefined;
  UserBaseResponsePhoto.prototype.image_1024x1024 = undefined;
});

// node_modules/asana/dist/model/UserBaseResponse.js
var require_UserBaseResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UserBaseResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _UserBaseResponsePhoto = require_UserBaseResponsePhoto();
  var UserBaseResponse = function() {
    function UserBaseResponse2() {
      _classCallCheck(this, UserBaseResponse2);
    }
    _createClass(UserBaseResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new UserBaseResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("email"))
            obj.email = _ApiClient.ApiClient.convertToType(data["email"], "String");
          if (data.hasOwnProperty("photo"))
            obj.photo = _UserBaseResponsePhoto.UserBaseResponsePhoto.constructFromObject(data["photo"]);
        }
        return obj;
      }
    }]);
    return UserBaseResponse2;
  }();
  exports.UserBaseResponse = UserBaseResponse;
  UserBaseResponse.prototype.gid = undefined;
  UserBaseResponse.prototype.resource_type = undefined;
  UserBaseResponse.prototype.name = undefined;
  UserBaseResponse.prototype.email = undefined;
  UserBaseResponse.prototype.photo = undefined;
});

// node_modules/asana/dist/model/UserBaseResponseData.js
var require_UserBaseResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UserBaseResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _UserBaseResponse = require_UserBaseResponse();
  var UserBaseResponseData = function() {
    function UserBaseResponseData2(data) {
      _classCallCheck(this, UserBaseResponseData2);
      this.data = data;
    }
    _createClass(UserBaseResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new UserBaseResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _UserBaseResponse.UserBaseResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return UserBaseResponseData2;
  }();
  exports.UserBaseResponseData = UserBaseResponseData;
  UserBaseResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/UserCompact.js
var require_UserCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UserCompact = undefined;
  var _ApiClient = require_ApiClient();
  var UserCompact = function() {
    function UserCompact2() {
      _classCallCheck(this, UserCompact2);
    }
    _createClass(UserCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new UserCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return UserCompact2;
  }();
  exports.UserCompact = UserCompact;
  UserCompact.prototype.gid = undefined;
  UserCompact.prototype.resource_type = undefined;
  UserCompact.prototype.name = undefined;
});

// node_modules/asana/dist/model/UserRequest.js
var require_UserRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UserRequest = undefined;
  var _ApiClient = require_ApiClient();
  var UserRequest = function() {
    function UserRequest2() {
      _classCallCheck(this, UserRequest2);
    }
    _createClass(UserRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new UserRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return UserRequest2;
  }();
  exports.UserRequest = UserRequest;
  UserRequest.prototype.gid = undefined;
  UserRequest.prototype.resource_type = undefined;
  UserRequest.prototype.name = undefined;
});

// node_modules/asana/dist/model/UserResponse.js
var require_UserResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UserResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _GoalResponseWorkspace = require_GoalResponseWorkspace();
  var _UserBaseResponsePhoto = require_UserBaseResponsePhoto();
  var UserResponse = function() {
    function UserResponse2() {
      _classCallCheck(this, UserResponse2);
    }
    _createClass(UserResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new UserResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("email"))
            obj.email = _ApiClient.ApiClient.convertToType(data["email"], "String");
          if (data.hasOwnProperty("photo"))
            obj.photo = _UserBaseResponsePhoto.UserBaseResponsePhoto.constructFromObject(data["photo"]);
          if (data.hasOwnProperty("workspaces"))
            obj.workspaces = _ApiClient.ApiClient.convertToType(data["workspaces"], [_GoalResponseWorkspace.GoalResponseWorkspace]);
        }
        return obj;
      }
    }]);
    return UserResponse2;
  }();
  exports.UserResponse = UserResponse;
  UserResponse.prototype.gid = undefined;
  UserResponse.prototype.resource_type = undefined;
  UserResponse.prototype.name = undefined;
  UserResponse.prototype.email = undefined;
  UserResponse.prototype.photo = undefined;
  UserResponse.prototype.workspaces = undefined;
});

// node_modules/asana/dist/model/UserResponseArray.js
var require_UserResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UserResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _UserResponse = require_UserResponse();
  var UserResponseArray = function() {
    function UserResponseArray2(data) {
      _classCallCheck(this, UserResponseArray2);
      this.data = data;
    }
    _createClass(UserResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new UserResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_UserResponse.UserResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return UserResponseArray2;
  }();
  exports.UserResponseArray = UserResponseArray;
  UserResponseArray.prototype.data = undefined;
  UserResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/UserResponseData.js
var require_UserResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UserResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _UserResponse = require_UserResponse();
  var UserResponseData = function() {
    function UserResponseData2(data) {
      _classCallCheck(this, UserResponseData2);
      this.data = data;
    }
    _createClass(UserResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new UserResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _UserResponse.UserResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return UserResponseData2;
  }();
  exports.UserResponseData = UserResponseData;
  UserResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/UserTaskListBase.js
var require_UserTaskListBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UserTaskListBase = undefined;
  var _ApiClient = require_ApiClient();
  var UserTaskListBase = function() {
    function UserTaskListBase2() {
      _classCallCheck(this, UserTaskListBase2);
    }
    _createClass(UserTaskListBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new UserTaskListBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("owner"))
            obj.owner = _ApiClient.ApiClient.convertToType(data["owner"], Object);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _ApiClient.ApiClient.convertToType(data["workspace"], Object);
        }
        return obj;
      }
    }]);
    return UserTaskListBase2;
  }();
  exports.UserTaskListBase = UserTaskListBase;
  UserTaskListBase.prototype.gid = undefined;
  UserTaskListBase.prototype.resource_type = undefined;
  UserTaskListBase.prototype.name = undefined;
  UserTaskListBase.prototype.owner = undefined;
  UserTaskListBase.prototype.workspace = undefined;
});

// node_modules/asana/dist/model/UserTaskListCompact.js
var require_UserTaskListCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UserTaskListCompact = undefined;
  var _ApiClient = require_ApiClient();
  var UserTaskListCompact = function() {
    function UserTaskListCompact2() {
      _classCallCheck(this, UserTaskListCompact2);
    }
    _createClass(UserTaskListCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new UserTaskListCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("owner"))
            obj.owner = _ApiClient.ApiClient.convertToType(data["owner"], Object);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _ApiClient.ApiClient.convertToType(data["workspace"], Object);
        }
        return obj;
      }
    }]);
    return UserTaskListCompact2;
  }();
  exports.UserTaskListCompact = UserTaskListCompact;
  UserTaskListCompact.prototype.gid = undefined;
  UserTaskListCompact.prototype.resource_type = undefined;
  UserTaskListCompact.prototype.name = undefined;
  UserTaskListCompact.prototype.owner = undefined;
  UserTaskListCompact.prototype.workspace = undefined;
});

// node_modules/asana/dist/model/UserTaskListRequest.js
var require_UserTaskListRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UserTaskListRequest = undefined;
  var _ApiClient = require_ApiClient();
  var UserTaskListRequest = function() {
    function UserTaskListRequest2() {
      _classCallCheck(this, UserTaskListRequest2);
    }
    _createClass(UserTaskListRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new UserTaskListRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("owner"))
            obj.owner = _ApiClient.ApiClient.convertToType(data["owner"], Object);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _ApiClient.ApiClient.convertToType(data["workspace"], Object);
        }
        return obj;
      }
    }]);
    return UserTaskListRequest2;
  }();
  exports.UserTaskListRequest = UserTaskListRequest;
  UserTaskListRequest.prototype.gid = undefined;
  UserTaskListRequest.prototype.resource_type = undefined;
  UserTaskListRequest.prototype.name = undefined;
  UserTaskListRequest.prototype.owner = undefined;
  UserTaskListRequest.prototype.workspace = undefined;
});

// node_modules/asana/dist/model/UserTaskListResponse.js
var require_UserTaskListResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UserTaskListResponse = undefined;
  var _ApiClient = require_ApiClient();
  var UserTaskListResponse = function() {
    function UserTaskListResponse2() {
      _classCallCheck(this, UserTaskListResponse2);
    }
    _createClass(UserTaskListResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new UserTaskListResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("owner"))
            obj.owner = _ApiClient.ApiClient.convertToType(data["owner"], Object);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _ApiClient.ApiClient.convertToType(data["workspace"], Object);
        }
        return obj;
      }
    }]);
    return UserTaskListResponse2;
  }();
  exports.UserTaskListResponse = UserTaskListResponse;
  UserTaskListResponse.prototype.gid = undefined;
  UserTaskListResponse.prototype.resource_type = undefined;
  UserTaskListResponse.prototype.name = undefined;
  UserTaskListResponse.prototype.owner = undefined;
  UserTaskListResponse.prototype.workspace = undefined;
});

// node_modules/asana/dist/model/UserTaskListResponseData.js
var require_UserTaskListResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UserTaskListResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _UserTaskListResponse = require_UserTaskListResponse();
  var UserTaskListResponseData = function() {
    function UserTaskListResponseData2(data) {
      _classCallCheck(this, UserTaskListResponseData2);
      this.data = data;
    }
    _createClass(UserTaskListResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new UserTaskListResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _UserTaskListResponse.UserTaskListResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return UserTaskListResponseData2;
  }();
  exports.UserTaskListResponseData = UserTaskListResponseData;
  UserTaskListResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/WebhookCompactResource.js
var require_WebhookCompactResource = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WebhookCompactResource = undefined;
  var _ApiClient = require_ApiClient();
  var WebhookCompactResource = function() {
    function WebhookCompactResource2() {
      _classCallCheck(this, WebhookCompactResource2);
    }
    _createClass(WebhookCompactResource2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WebhookCompactResource2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return WebhookCompactResource2;
  }();
  exports.WebhookCompactResource = WebhookCompactResource;
  WebhookCompactResource.prototype.gid = undefined;
  WebhookCompactResource.prototype.resource_type = undefined;
  WebhookCompactResource.prototype.name = undefined;
});

// node_modules/asana/dist/model/WebhookCompact.js
var require_WebhookCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WebhookCompact = undefined;
  var _ApiClient = require_ApiClient();
  var _WebhookCompactResource = require_WebhookCompactResource();
  var WebhookCompact = function() {
    function WebhookCompact2() {
      _classCallCheck(this, WebhookCompact2);
    }
    _createClass(WebhookCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WebhookCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("active"))
            obj.active = _ApiClient.ApiClient.convertToType(data["active"], "Boolean");
          if (data.hasOwnProperty("resource"))
            obj.resource = _WebhookCompactResource.WebhookCompactResource.constructFromObject(data["resource"]);
          if (data.hasOwnProperty("target"))
            obj.target = _ApiClient.ApiClient.convertToType(data["target"], "String");
        }
        return obj;
      }
    }]);
    return WebhookCompact2;
  }();
  exports.WebhookCompact = WebhookCompact;
  WebhookCompact.prototype.gid = undefined;
  WebhookCompact.prototype.resource_type = undefined;
  WebhookCompact.prototype.active = undefined;
  WebhookCompact.prototype.resource = undefined;
  WebhookCompact.prototype.target = undefined;
});

// node_modules/asana/dist/model/WebhookFilter.js
var require_WebhookFilter = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WebhookFilter = undefined;
  var _ApiClient = require_ApiClient();
  var WebhookFilter = function() {
    function WebhookFilter2() {
      _classCallCheck(this, WebhookFilter2);
    }
    _createClass(WebhookFilter2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WebhookFilter2;
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("action"))
            obj.action = _ApiClient.ApiClient.convertToType(data["action"], "String");
          if (data.hasOwnProperty("fields"))
            obj.fields = _ApiClient.ApiClient.convertToType(data["fields"], ["String"]);
        }
        return obj;
      }
    }]);
    return WebhookFilter2;
  }();
  exports.WebhookFilter = WebhookFilter;
  WebhookFilter.prototype.resource_type = undefined;
  WebhookFilter.prototype.resource_subtype = undefined;
  WebhookFilter.prototype.action = undefined;
  WebhookFilter.prototype.fields = undefined;
});

// node_modules/asana/dist/model/WebhookRequestFilters.js
var require_WebhookRequestFilters = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WebhookRequestFilters = undefined;
  var _ApiClient = require_ApiClient();
  var WebhookRequestFilters = function() {
    function WebhookRequestFilters2() {
      _classCallCheck(this, WebhookRequestFilters2);
    }
    _createClass(WebhookRequestFilters2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WebhookRequestFilters2;
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("resource_subtype"))
            obj.resource_subtype = _ApiClient.ApiClient.convertToType(data["resource_subtype"], "String");
          if (data.hasOwnProperty("action"))
            obj.action = _ApiClient.ApiClient.convertToType(data["action"], "String");
          if (data.hasOwnProperty("fields"))
            obj.fields = _ApiClient.ApiClient.convertToType(data["fields"], ["String"]);
        }
        return obj;
      }
    }]);
    return WebhookRequestFilters2;
  }();
  exports.WebhookRequestFilters = WebhookRequestFilters;
  WebhookRequestFilters.prototype.resource_type = undefined;
  WebhookRequestFilters.prototype.resource_subtype = undefined;
  WebhookRequestFilters.prototype.action = undefined;
  WebhookRequestFilters.prototype.fields = undefined;
});

// node_modules/asana/dist/model/WebhookRequest.js
var require_WebhookRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WebhookRequest = undefined;
  var _ApiClient = require_ApiClient();
  var _WebhookRequestFilters = require_WebhookRequestFilters();
  var WebhookRequest = function() {
    function WebhookRequest2(resource, target) {
      _classCallCheck(this, WebhookRequest2);
      this.resource = resource;
      this.target = target;
    }
    _createClass(WebhookRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WebhookRequest2;
          if (data.hasOwnProperty("resource"))
            obj.resource = _ApiClient.ApiClient.convertToType(data["resource"], "String");
          if (data.hasOwnProperty("target"))
            obj.target = _ApiClient.ApiClient.convertToType(data["target"], "String");
          if (data.hasOwnProperty("filters"))
            obj.filters = _ApiClient.ApiClient.convertToType(data["filters"], [_WebhookRequestFilters.WebhookRequestFilters]);
        }
        return obj;
      }
    }]);
    return WebhookRequest2;
  }();
  exports.WebhookRequest = WebhookRequest;
  WebhookRequest.prototype.resource = undefined;
  WebhookRequest.prototype.target = undefined;
  WebhookRequest.prototype.filters = undefined;
});

// node_modules/asana/dist/model/WebhookResponse.js
var require_WebhookResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WebhookResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _WebhookCompactResource = require_WebhookCompactResource();
  var _WebhookRequestFilters = require_WebhookRequestFilters();
  var WebhookResponse = function() {
    function WebhookResponse2() {
      _classCallCheck(this, WebhookResponse2);
    }
    _createClass(WebhookResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WebhookResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("active"))
            obj.active = _ApiClient.ApiClient.convertToType(data["active"], "Boolean");
          if (data.hasOwnProperty("resource"))
            obj.resource = _WebhookCompactResource.WebhookCompactResource.constructFromObject(data["resource"]);
          if (data.hasOwnProperty("target"))
            obj.target = _ApiClient.ApiClient.convertToType(data["target"], "String");
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
          if (data.hasOwnProperty("last_failure_at"))
            obj.last_failure_at = _ApiClient.ApiClient.convertToType(data["last_failure_at"], "Date");
          if (data.hasOwnProperty("last_failure_content"))
            obj.last_failure_content = _ApiClient.ApiClient.convertToType(data["last_failure_content"], "String");
          if (data.hasOwnProperty("last_success_at"))
            obj.last_success_at = _ApiClient.ApiClient.convertToType(data["last_success_at"], "Date");
          if (data.hasOwnProperty("filters"))
            obj.filters = _ApiClient.ApiClient.convertToType(data["filters"], [_WebhookRequestFilters.WebhookRequestFilters]);
        }
        return obj;
      }
    }]);
    return WebhookResponse2;
  }();
  exports.WebhookResponse = WebhookResponse;
  WebhookResponse.prototype.gid = undefined;
  WebhookResponse.prototype.resource_type = undefined;
  WebhookResponse.prototype.active = undefined;
  WebhookResponse.prototype.resource = undefined;
  WebhookResponse.prototype.target = undefined;
  WebhookResponse.prototype.created_at = undefined;
  WebhookResponse.prototype.last_failure_at = undefined;
  WebhookResponse.prototype.last_failure_content = undefined;
  WebhookResponse.prototype.last_success_at = undefined;
  WebhookResponse.prototype.filters = undefined;
});

// node_modules/asana/dist/model/WebhookResponseArray.js
var require_WebhookResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WebhookResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _WebhookResponse = require_WebhookResponse();
  var WebhookResponseArray = function() {
    function WebhookResponseArray2(data) {
      _classCallCheck(this, WebhookResponseArray2);
      this.data = data;
    }
    _createClass(WebhookResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WebhookResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_WebhookResponse.WebhookResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return WebhookResponseArray2;
  }();
  exports.WebhookResponseArray = WebhookResponseArray;
  WebhookResponseArray.prototype.data = undefined;
  WebhookResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/WebhookResponseData.js
var require_WebhookResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WebhookResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _WebhookResponse = require_WebhookResponse();
  var WebhookResponseData = function() {
    function WebhookResponseData2(data) {
      _classCallCheck(this, WebhookResponseData2);
      this.data = data;
    }
    _createClass(WebhookResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WebhookResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _WebhookResponse.WebhookResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return WebhookResponseData2;
  }();
  exports.WebhookResponseData = WebhookResponseData;
  WebhookResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/WebhookUpdateRequest.js
var require_WebhookUpdateRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WebhookUpdateRequest = undefined;
  var _ApiClient = require_ApiClient();
  var _WebhookRequestFilters = require_WebhookRequestFilters();
  var WebhookUpdateRequest = function() {
    function WebhookUpdateRequest2() {
      _classCallCheck(this, WebhookUpdateRequest2);
    }
    _createClass(WebhookUpdateRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WebhookUpdateRequest2;
          if (data.hasOwnProperty("filters"))
            obj.filters = _ApiClient.ApiClient.convertToType(data["filters"], [_WebhookRequestFilters.WebhookRequestFilters]);
        }
        return obj;
      }
    }]);
    return WebhookUpdateRequest2;
  }();
  exports.WebhookUpdateRequest = WebhookUpdateRequest;
  WebhookUpdateRequest.prototype.filters = undefined;
});

// node_modules/asana/dist/model/WebhooksBody.js
var require_WebhooksBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WebhooksBody = undefined;
  var _ApiClient = require_ApiClient();
  var _WebhookRequest = require_WebhookRequest();
  var WebhooksBody = function() {
    function WebhooksBody2() {
      _classCallCheck(this, WebhooksBody2);
    }
    _createClass(WebhooksBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WebhooksBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _WebhookRequest.WebhookRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return WebhooksBody2;
  }();
  exports.WebhooksBody = WebhooksBody;
  WebhooksBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/WebhooksWebhookGidBody.js
var require_WebhooksWebhookGidBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WebhooksWebhookGidBody = undefined;
  var _ApiClient = require_ApiClient();
  var _WebhookUpdateRequest = require_WebhookUpdateRequest();
  var WebhooksWebhookGidBody = function() {
    function WebhooksWebhookGidBody2() {
      _classCallCheck(this, WebhooksWebhookGidBody2);
    }
    _createClass(WebhooksWebhookGidBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WebhooksWebhookGidBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _WebhookUpdateRequest.WebhookUpdateRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return WebhooksWebhookGidBody2;
  }();
  exports.WebhooksWebhookGidBody = WebhooksWebhookGidBody;
  WebhooksWebhookGidBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/WorkspaceAddUserRequest.js
var require_WorkspaceAddUserRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceAddUserRequest = undefined;
  var _ApiClient = require_ApiClient();
  var WorkspaceAddUserRequest = function() {
    function WorkspaceAddUserRequest2() {
      _classCallCheck(this, WorkspaceAddUserRequest2);
    }
    _createClass(WorkspaceAddUserRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceAddUserRequest2;
          if (data.hasOwnProperty("user"))
            obj.user = _ApiClient.ApiClient.convertToType(data["user"], "String");
        }
        return obj;
      }
    }]);
    return WorkspaceAddUserRequest2;
  }();
  exports.WorkspaceAddUserRequest = WorkspaceAddUserRequest;
  WorkspaceAddUserRequest.prototype.user = undefined;
});

// node_modules/asana/dist/model/WorkspaceBase.js
var require_WorkspaceBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceBase = undefined;
  var _ApiClient = require_ApiClient();
  var WorkspaceBase = function() {
    function WorkspaceBase2() {
      _classCallCheck(this, WorkspaceBase2);
    }
    _createClass(WorkspaceBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return WorkspaceBase2;
  }();
  exports.WorkspaceBase = WorkspaceBase;
  WorkspaceBase.prototype.gid = undefined;
  WorkspaceBase.prototype.resource_type = undefined;
  WorkspaceBase.prototype.name = undefined;
});

// node_modules/asana/dist/model/WorkspaceCompact.js
var require_WorkspaceCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceCompact = undefined;
  var _ApiClient = require_ApiClient();
  var WorkspaceCompact = function() {
    function WorkspaceCompact2() {
      _classCallCheck(this, WorkspaceCompact2);
    }
    _createClass(WorkspaceCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return WorkspaceCompact2;
  }();
  exports.WorkspaceCompact = WorkspaceCompact;
  WorkspaceCompact.prototype.gid = undefined;
  WorkspaceCompact.prototype.resource_type = undefined;
  WorkspaceCompact.prototype.name = undefined;
});

// node_modules/asana/dist/model/WorkspaceGidAddUserBody.js
var require_WorkspaceGidAddUserBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceGidAddUserBody = undefined;
  var _ApiClient = require_ApiClient();
  var _WorkspaceAddUserRequest = require_WorkspaceAddUserRequest();
  var WorkspaceGidAddUserBody = function() {
    function WorkspaceGidAddUserBody2() {
      _classCallCheck(this, WorkspaceGidAddUserBody2);
    }
    _createClass(WorkspaceGidAddUserBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceGidAddUserBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _WorkspaceAddUserRequest.WorkspaceAddUserRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return WorkspaceGidAddUserBody2;
  }();
  exports.WorkspaceGidAddUserBody = WorkspaceGidAddUserBody;
  WorkspaceGidAddUserBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/WorkspaceGidProjectsBody.js
var require_WorkspaceGidProjectsBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceGidProjectsBody = undefined;
  var _ApiClient = require_ApiClient();
  var _ProjectRequest = require_ProjectRequest();
  var WorkspaceGidProjectsBody = function() {
    function WorkspaceGidProjectsBody2() {
      _classCallCheck(this, WorkspaceGidProjectsBody2);
    }
    _createClass(WorkspaceGidProjectsBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceGidProjectsBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _ProjectRequest.ProjectRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return WorkspaceGidProjectsBody2;
  }();
  exports.WorkspaceGidProjectsBody = WorkspaceGidProjectsBody;
  WorkspaceGidProjectsBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/WorkspaceRemoveUserRequest.js
var require_WorkspaceRemoveUserRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceRemoveUserRequest = undefined;
  var _ApiClient = require_ApiClient();
  var WorkspaceRemoveUserRequest = function() {
    function WorkspaceRemoveUserRequest2() {
      _classCallCheck(this, WorkspaceRemoveUserRequest2);
    }
    _createClass(WorkspaceRemoveUserRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceRemoveUserRequest2;
          if (data.hasOwnProperty("user"))
            obj.user = _ApiClient.ApiClient.convertToType(data["user"], "String");
        }
        return obj;
      }
    }]);
    return WorkspaceRemoveUserRequest2;
  }();
  exports.WorkspaceRemoveUserRequest = WorkspaceRemoveUserRequest;
  WorkspaceRemoveUserRequest.prototype.user = undefined;
});

// node_modules/asana/dist/model/WorkspaceGidRemoveUserBody.js
var require_WorkspaceGidRemoveUserBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceGidRemoveUserBody = undefined;
  var _ApiClient = require_ApiClient();
  var _WorkspaceRemoveUserRequest = require_WorkspaceRemoveUserRequest();
  var WorkspaceGidRemoveUserBody = function() {
    function WorkspaceGidRemoveUserBody2() {
      _classCallCheck(this, WorkspaceGidRemoveUserBody2);
    }
    _createClass(WorkspaceGidRemoveUserBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceGidRemoveUserBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _WorkspaceRemoveUserRequest.WorkspaceRemoveUserRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return WorkspaceGidRemoveUserBody2;
  }();
  exports.WorkspaceGidRemoveUserBody = WorkspaceGidRemoveUserBody;
  WorkspaceGidRemoveUserBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/WorkspaceGidTagsBody.js
var require_WorkspaceGidTagsBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceGidTagsBody = undefined;
  var _ApiClient = require_ApiClient();
  var _TagResponse = require_TagResponse();
  var WorkspaceGidTagsBody = function() {
    function WorkspaceGidTagsBody2() {
      _classCallCheck(this, WorkspaceGidTagsBody2);
    }
    _createClass(WorkspaceGidTagsBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceGidTagsBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _TagResponse.TagResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return WorkspaceGidTagsBody2;
  }();
  exports.WorkspaceGidTagsBody = WorkspaceGidTagsBody;
  WorkspaceGidTagsBody.prototype.data = undefined;
});

// node_modules/asana/dist/model/WorkspaceMembershipBase.js
var require_WorkspaceMembershipBase = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceMembershipBase = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _GoalResponseWorkspace = require_GoalResponseWorkspace();
  var WorkspaceMembershipBase = function() {
    function WorkspaceMembershipBase2() {
      _classCallCheck(this, WorkspaceMembershipBase2);
    }
    _createClass(WorkspaceMembershipBase2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceMembershipBase2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _GoalResponseWorkspace.GoalResponseWorkspace.constructFromObject(data["workspace"]);
        }
        return obj;
      }
    }]);
    return WorkspaceMembershipBase2;
  }();
  exports.WorkspaceMembershipBase = WorkspaceMembershipBase;
  WorkspaceMembershipBase.prototype.gid = undefined;
  WorkspaceMembershipBase.prototype.resource_type = undefined;
  WorkspaceMembershipBase.prototype.user = undefined;
  WorkspaceMembershipBase.prototype.workspace = undefined;
});

// node_modules/asana/dist/model/WorkspaceMembershipCompact.js
var require_WorkspaceMembershipCompact = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceMembershipCompact = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _GoalResponseWorkspace = require_GoalResponseWorkspace();
  var WorkspaceMembershipCompact = function() {
    function WorkspaceMembershipCompact2() {
      _classCallCheck(this, WorkspaceMembershipCompact2);
    }
    _createClass(WorkspaceMembershipCompact2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceMembershipCompact2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _GoalResponseWorkspace.GoalResponseWorkspace.constructFromObject(data["workspace"]);
        }
        return obj;
      }
    }]);
    return WorkspaceMembershipCompact2;
  }();
  exports.WorkspaceMembershipCompact = WorkspaceMembershipCompact;
  WorkspaceMembershipCompact.prototype.gid = undefined;
  WorkspaceMembershipCompact.prototype.resource_type = undefined;
  WorkspaceMembershipCompact.prototype.user = undefined;
  WorkspaceMembershipCompact.prototype.workspace = undefined;
});

// node_modules/asana/dist/model/WorkspaceMembershipRequest.js
var require_WorkspaceMembershipRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceMembershipRequest = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _GoalResponseWorkspace = require_GoalResponseWorkspace();
  var WorkspaceMembershipRequest = function() {
    function WorkspaceMembershipRequest2() {
      _classCallCheck(this, WorkspaceMembershipRequest2);
    }
    _createClass(WorkspaceMembershipRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceMembershipRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _GoalResponseWorkspace.GoalResponseWorkspace.constructFromObject(data["workspace"]);
        }
        return obj;
      }
    }]);
    return WorkspaceMembershipRequest2;
  }();
  exports.WorkspaceMembershipRequest = WorkspaceMembershipRequest;
  WorkspaceMembershipRequest.prototype.gid = undefined;
  WorkspaceMembershipRequest.prototype.resource_type = undefined;
  WorkspaceMembershipRequest.prototype.user = undefined;
  WorkspaceMembershipRequest.prototype.workspace = undefined;
});

// node_modules/asana/dist/model/WorkspaceMembershipResponseUserTaskList.js
var require_WorkspaceMembershipResponseUserTaskList = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceMembershipResponseUserTaskList = undefined;
  var _ApiClient = require_ApiClient();
  var WorkspaceMembershipResponseUserTaskList = function() {
    function WorkspaceMembershipResponseUserTaskList2() {
      _classCallCheck(this, WorkspaceMembershipResponseUserTaskList2);
    }
    _createClass(WorkspaceMembershipResponseUserTaskList2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceMembershipResponseUserTaskList2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("owner"))
            obj.owner = _ApiClient.ApiClient.convertToType(data["owner"], Object);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _ApiClient.ApiClient.convertToType(data["workspace"], Object);
        }
        return obj;
      }
    }]);
    return WorkspaceMembershipResponseUserTaskList2;
  }();
  exports.WorkspaceMembershipResponseUserTaskList = WorkspaceMembershipResponseUserTaskList;
  WorkspaceMembershipResponseUserTaskList.prototype.gid = undefined;
  WorkspaceMembershipResponseUserTaskList.prototype.resource_type = undefined;
  WorkspaceMembershipResponseUserTaskList.prototype.name = undefined;
  WorkspaceMembershipResponseUserTaskList.prototype.owner = undefined;
  WorkspaceMembershipResponseUserTaskList.prototype.workspace = undefined;
});

// node_modules/asana/dist/model/WorkspaceMembershipResponseVacationDates.js
var require_WorkspaceMembershipResponseVacationDates = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceMembershipResponseVacationDates = undefined;
  var _ApiClient = require_ApiClient();
  var WorkspaceMembershipResponseVacationDates = function() {
    function WorkspaceMembershipResponseVacationDates2() {
      _classCallCheck(this, WorkspaceMembershipResponseVacationDates2);
    }
    _createClass(WorkspaceMembershipResponseVacationDates2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceMembershipResponseVacationDates2;
          if (data.hasOwnProperty("start_on"))
            obj.start_on = _ApiClient.ApiClient.convertToType(data["start_on"], "String");
          if (data.hasOwnProperty("end_on"))
            obj.end_on = _ApiClient.ApiClient.convertToType(data["end_on"], "String");
        }
        return obj;
      }
    }]);
    return WorkspaceMembershipResponseVacationDates2;
  }();
  exports.WorkspaceMembershipResponseVacationDates = WorkspaceMembershipResponseVacationDates;
  WorkspaceMembershipResponseVacationDates.prototype.start_on = undefined;
  WorkspaceMembershipResponseVacationDates.prototype.end_on = undefined;
});

// node_modules/asana/dist/model/WorkspaceMembershipResponse.js
var require_WorkspaceMembershipResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceMembershipResponse = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _GoalResponseWorkspace = require_GoalResponseWorkspace();
  var _WorkspaceMembershipResponseUserTaskList = require_WorkspaceMembershipResponseUserTaskList();
  var _WorkspaceMembershipResponseVacationDates = require_WorkspaceMembershipResponseVacationDates();
  var WorkspaceMembershipResponse = function() {
    function WorkspaceMembershipResponse2() {
      _classCallCheck(this, WorkspaceMembershipResponse2);
    }
    _createClass(WorkspaceMembershipResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceMembershipResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("user"))
            obj.user = _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue.constructFromObject(data["user"]);
          if (data.hasOwnProperty("workspace"))
            obj.workspace = _GoalResponseWorkspace.GoalResponseWorkspace.constructFromObject(data["workspace"]);
          if (data.hasOwnProperty("user_task_list"))
            obj.user_task_list = _WorkspaceMembershipResponseUserTaskList.WorkspaceMembershipResponseUserTaskList.constructFromObject(data["user_task_list"]);
          if (data.hasOwnProperty("is_active"))
            obj.is_active = _ApiClient.ApiClient.convertToType(data["is_active"], "Boolean");
          if (data.hasOwnProperty("is_admin"))
            obj.is_admin = _ApiClient.ApiClient.convertToType(data["is_admin"], "Boolean");
          if (data.hasOwnProperty("is_guest"))
            obj.is_guest = _ApiClient.ApiClient.convertToType(data["is_guest"], "Boolean");
          if (data.hasOwnProperty("vacation_dates"))
            obj.vacation_dates = _WorkspaceMembershipResponseVacationDates.WorkspaceMembershipResponseVacationDates.constructFromObject(data["vacation_dates"]);
          if (data.hasOwnProperty("created_at"))
            obj.created_at = _ApiClient.ApiClient.convertToType(data["created_at"], "Date");
        }
        return obj;
      }
    }]);
    return WorkspaceMembershipResponse2;
  }();
  exports.WorkspaceMembershipResponse = WorkspaceMembershipResponse;
  WorkspaceMembershipResponse.prototype.gid = undefined;
  WorkspaceMembershipResponse.prototype.resource_type = undefined;
  WorkspaceMembershipResponse.prototype.user = undefined;
  WorkspaceMembershipResponse.prototype.workspace = undefined;
  WorkspaceMembershipResponse.prototype.user_task_list = undefined;
  WorkspaceMembershipResponse.prototype.is_active = undefined;
  WorkspaceMembershipResponse.prototype.is_admin = undefined;
  WorkspaceMembershipResponse.prototype.is_guest = undefined;
  WorkspaceMembershipResponse.prototype.vacation_dates = undefined;
  WorkspaceMembershipResponse.prototype.created_at = undefined;
});

// node_modules/asana/dist/model/WorkspaceMembershipResponseArray.js
var require_WorkspaceMembershipResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceMembershipResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _WorkspaceMembershipResponse = require_WorkspaceMembershipResponse();
  var WorkspaceMembershipResponseArray = function() {
    function WorkspaceMembershipResponseArray2(data) {
      _classCallCheck(this, WorkspaceMembershipResponseArray2);
      this.data = data;
    }
    _createClass(WorkspaceMembershipResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceMembershipResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_WorkspaceMembershipResponse.WorkspaceMembershipResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return WorkspaceMembershipResponseArray2;
  }();
  exports.WorkspaceMembershipResponseArray = WorkspaceMembershipResponseArray;
  WorkspaceMembershipResponseArray.prototype.data = undefined;
  WorkspaceMembershipResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/WorkspaceMembershipResponseData.js
var require_WorkspaceMembershipResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceMembershipResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _WorkspaceMembershipResponse = require_WorkspaceMembershipResponse();
  var WorkspaceMembershipResponseData = function() {
    function WorkspaceMembershipResponseData2(data) {
      _classCallCheck(this, WorkspaceMembershipResponseData2);
      this.data = data;
    }
    _createClass(WorkspaceMembershipResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceMembershipResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _WorkspaceMembershipResponse.WorkspaceMembershipResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return WorkspaceMembershipResponseData2;
  }();
  exports.WorkspaceMembershipResponseData = WorkspaceMembershipResponseData;
  WorkspaceMembershipResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/WorkspaceRequest.js
var require_WorkspaceRequest = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceRequest = undefined;
  var _ApiClient = require_ApiClient();
  var WorkspaceRequest = function() {
    function WorkspaceRequest2() {
      _classCallCheck(this, WorkspaceRequest2);
    }
    _createClass(WorkspaceRequest2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceRequest2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
        }
        return obj;
      }
    }]);
    return WorkspaceRequest2;
  }();
  exports.WorkspaceRequest = WorkspaceRequest;
  WorkspaceRequest.prototype.gid = undefined;
  WorkspaceRequest.prototype.resource_type = undefined;
  WorkspaceRequest.prototype.name = undefined;
});

// node_modules/asana/dist/model/WorkspaceResponse.js
var require_WorkspaceResponse = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceResponse = undefined;
  var _ApiClient = require_ApiClient();
  var WorkspaceResponse = function() {
    function WorkspaceResponse2() {
      _classCallCheck(this, WorkspaceResponse2);
    }
    _createClass(WorkspaceResponse2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceResponse2;
          if (data.hasOwnProperty("gid"))
            obj.gid = _ApiClient.ApiClient.convertToType(data["gid"], "String");
          if (data.hasOwnProperty("resource_type"))
            obj.resource_type = _ApiClient.ApiClient.convertToType(data["resource_type"], "String");
          if (data.hasOwnProperty("name"))
            obj.name = _ApiClient.ApiClient.convertToType(data["name"], "String");
          if (data.hasOwnProperty("email_domains"))
            obj.email_domains = _ApiClient.ApiClient.convertToType(data["email_domains"], ["String"]);
          if (data.hasOwnProperty("is_organization"))
            obj.is_organization = _ApiClient.ApiClient.convertToType(data["is_organization"], "Boolean");
        }
        return obj;
      }
    }]);
    return WorkspaceResponse2;
  }();
  exports.WorkspaceResponse = WorkspaceResponse;
  WorkspaceResponse.prototype.gid = undefined;
  WorkspaceResponse.prototype.resource_type = undefined;
  WorkspaceResponse.prototype.name = undefined;
  WorkspaceResponse.prototype.email_domains = undefined;
  WorkspaceResponse.prototype.is_organization = undefined;
});

// node_modules/asana/dist/model/WorkspaceResponseArray.js
var require_WorkspaceResponseArray = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceResponseArray = undefined;
  var _ApiClient = require_ApiClient();
  var _NextPage = require_NextPage();
  var _WorkspaceResponse = require_WorkspaceResponse();
  var WorkspaceResponseArray = function() {
    function WorkspaceResponseArray2(data) {
      _classCallCheck(this, WorkspaceResponseArray2);
      this.data = data;
    }
    _createClass(WorkspaceResponseArray2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceResponseArray2;
          if (data.hasOwnProperty("data"))
            obj.data = _ApiClient.ApiClient.convertToType(data["data"], [_WorkspaceResponse.WorkspaceResponse]);
          if (data.hasOwnProperty("next_page"))
            obj.next_page = _NextPage.NextPage.constructFromObject(data["next_page"]);
        }
        return obj;
      }
    }]);
    return WorkspaceResponseArray2;
  }();
  exports.WorkspaceResponseArray = WorkspaceResponseArray;
  WorkspaceResponseArray.prototype.data = undefined;
  WorkspaceResponseArray.prototype.next_page = undefined;
});

// node_modules/asana/dist/model/WorkspaceResponseData.js
var require_WorkspaceResponseData = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceResponseData = undefined;
  var _ApiClient = require_ApiClient();
  var _WorkspaceResponse = require_WorkspaceResponse();
  var WorkspaceResponseData = function() {
    function WorkspaceResponseData2(data) {
      _classCallCheck(this, WorkspaceResponseData2);
      this.data = data;
    }
    _createClass(WorkspaceResponseData2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspaceResponseData2;
          if (data.hasOwnProperty("data"))
            obj.data = _WorkspaceResponse.WorkspaceResponse.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return WorkspaceResponseData2;
  }();
  exports.WorkspaceResponseData = WorkspaceResponseData;
  WorkspaceResponseData.prototype.data = undefined;
});

// node_modules/asana/dist/model/WorkspacesWorkspaceGidBody.js
var require_WorkspacesWorkspaceGidBody = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspacesWorkspaceGidBody = undefined;
  var _ApiClient = require_ApiClient();
  var _WorkspaceRequest = require_WorkspaceRequest();
  var WorkspacesWorkspaceGidBody = function() {
    function WorkspacesWorkspaceGidBody2() {
      _classCallCheck(this, WorkspacesWorkspaceGidBody2);
    }
    _createClass(WorkspacesWorkspaceGidBody2, null, [{
      key: "constructFromObject",
      value: function constructFromObject(data, obj) {
        if (data) {
          obj = obj || new WorkspacesWorkspaceGidBody2;
          if (data.hasOwnProperty("data"))
            obj.data = _WorkspaceRequest.WorkspaceRequest.constructFromObject(data["data"]);
        }
        return obj;
      }
    }]);
    return WorkspacesWorkspaceGidBody2;
  }();
  exports.WorkspacesWorkspaceGidBody = WorkspacesWorkspaceGidBody;
  WorkspacesWorkspaceGidBody.prototype.data = undefined;
});

// node_modules/asana/dist/api/AttachmentsApi.js
var require_AttachmentsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AttachmentsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _AttachmentResponseArray = require_AttachmentResponseArray();
  var _AttachmentResponseData = require_AttachmentResponseData();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var AttachmentsApi = function() {
    function AttachmentsApi2(apiClient) {
      _classCallCheck(this, AttachmentsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(AttachmentsApi2, [{
      key: "createAttachmentForObject",
      value: function createAttachmentForObject(opts, callback) {
        opts = opts || {};
        var postBody = null;
        var pathParams = {};
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {
          resource_subtype: opts["resource_subtype"],
          file: opts["file"],
          parent: opts["parent"],
          url: opts["url"],
          name: opts["name"],
          connect_to_app: opts["connect_to_app"]
        };
        var authNames = ["oauth2"];
        var contentTypes = ["multipart/form-data"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _AttachmentResponseData.AttachmentResponseData;
        return this.apiClient.callApi("/attachments", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "deleteAttachment",
      value: function deleteAttachment(attachment_gid, callback) {
        var postBody = null;
        if (attachment_gid === undefined || attachment_gid === null) {
          throw new Error("Missing the required parameter 'attachment_gid' when calling deleteAttachment");
        }
        var pathParams = {
          attachment_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/attachments/{attachment_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getAttachment",
      value: function getAttachment(attachment_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (attachment_gid === undefined || attachment_gid === null) {
          throw new Error("Missing the required parameter 'attachment_gid' when calling getAttachment");
        }
        var pathParams = {
          attachment_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _AttachmentResponseData.AttachmentResponseData;
        return this.apiClient.callApi("/attachments/{attachment_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getAttachmentsForObject",
      value: function getAttachmentsForObject(parent, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (parent === undefined || parent === null) {
          throw new Error("Missing the required parameter 'parent' when calling getAttachmentsForObject");
        }
        var pathParams = {};
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          parent,
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _AttachmentResponseArray.AttachmentResponseArray;
        return this.apiClient.callApi("/attachments", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return AttachmentsApi2;
  }();
  exports.AttachmentsApi = AttachmentsApi;
});

// node_modules/asana/dist/api/AuditLogAPIApi.js
var require_AuditLogAPIApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AuditLogAPIApi = undefined;
  var _ApiClient = require_ApiClient();
  var _AuditLogEventArray = require_AuditLogEventArray();
  var _ErrorResponse = require_ErrorResponse();
  var AuditLogAPIApi = function() {
    function AuditLogAPIApi2(apiClient) {
      _classCallCheck(this, AuditLogAPIApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(AuditLogAPIApi2, [{
      key: "getAuditLogEvents",
      value: function getAuditLogEvents(workspace_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (workspace_gid === undefined || workspace_gid === null) {
          throw new Error("Missing the required parameter 'workspace_gid' when calling getAuditLogEvents");
        }
        var pathParams = {
          workspace_gid
        };
        var queryParams = {
          start_at: opts["start_at"],
          end_at: opts["end_at"],
          event_type: opts["event_type"],
          actor_type: opts["actor_type"],
          actor_gid: opts["actor_gid"],
          resource_gid: opts["resource_gid"],
          limit: opts["limit"],
          offset: opts["offset"]
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _AuditLogEventArray.AuditLogEventArray;
        return this.apiClient.callApi("/workspaces/{workspace_gid}/audit_log_events", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return AuditLogAPIApi2;
  }();
  exports.AuditLogAPIApi = AuditLogAPIApi;
});

// node_modules/asana/dist/api/BatchAPIApi.js
var require_BatchAPIApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.BatchAPIApi = undefined;
  var _ApiClient = require_ApiClient();
  var _BatchBody = require_BatchBody();
  var _BatchResponseArray = require_BatchResponseArray();
  var _ErrorResponse = require_ErrorResponse();
  var BatchAPIApi = function() {
    function BatchAPIApi2(apiClient) {
      _classCallCheck(this, BatchAPIApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(BatchAPIApi2, [{
      key: "createBatchRequest",
      value: function createBatchRequest(body, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createBatchRequest");
        }
        var pathParams = {};
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _BatchResponseArray.BatchResponseArray;
        return this.apiClient.callApi("/batch", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return BatchAPIApi2;
  }();
  exports.BatchAPIApi = BatchAPIApi;
});

// node_modules/asana/dist/api/CustomFieldSettingsApi.js
var require_CustomFieldSettingsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldSettingsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldSettingResponseArray = require_CustomFieldSettingResponseArray();
  var _ErrorResponse = require_ErrorResponse();
  var CustomFieldSettingsApi = function() {
    function CustomFieldSettingsApi2(apiClient) {
      _classCallCheck(this, CustomFieldSettingsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(CustomFieldSettingsApi2, [{
      key: "getCustomFieldSettingsForPortfolio",
      value: function getCustomFieldSettingsForPortfolio(portfolio_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (portfolio_gid === undefined || portfolio_gid === null) {
          throw new Error("Missing the required parameter 'portfolio_gid' when calling getCustomFieldSettingsForPortfolio");
        }
        var pathParams = {
          portfolio_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _CustomFieldSettingResponseArray.CustomFieldSettingResponseArray;
        return this.apiClient.callApi("/portfolios/{portfolio_gid}/custom_field_settings", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getCustomFieldSettingsForProject",
      value: function getCustomFieldSettingsForProject(project_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling getCustomFieldSettingsForProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _CustomFieldSettingResponseArray.CustomFieldSettingResponseArray;
        return this.apiClient.callApi("/projects/{project_gid}/custom_field_settings", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return CustomFieldSettingsApi2;
  }();
  exports.CustomFieldSettingsApi = CustomFieldSettingsApi;
});

// node_modules/asana/dist/api/CustomFieldsApi.js
var require_CustomFieldsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CustomFieldsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldGidEnumOptionsBody = require_CustomFieldGidEnumOptionsBody();
  var _CustomFieldResponseArray = require_CustomFieldResponseArray();
  var _CustomFieldResponseData = require_CustomFieldResponseData();
  var _CustomFieldsBody = require_CustomFieldsBody();
  var _CustomFieldsCustomFieldGidBody = require_CustomFieldsCustomFieldGidBody();
  var _EmptyResponseData = require_EmptyResponseData();
  var _EnumOptionData = require_EnumOptionData();
  var _EnumOptionsEnumOptionGidBody = require_EnumOptionsEnumOptionGidBody();
  var _EnumOptionsInsertBody = require_EnumOptionsInsertBody();
  var _ErrorResponse = require_ErrorResponse();
  var CustomFieldsApi = function() {
    function CustomFieldsApi2(apiClient) {
      _classCallCheck(this, CustomFieldsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(CustomFieldsApi2, [{
      key: "createCustomField",
      value: function createCustomField(body, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createCustomField");
        }
        var pathParams = {};
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _CustomFieldResponseData.CustomFieldResponseData;
        return this.apiClient.callApi("/custom_fields", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "createEnumOptionForCustomField",
      value: function createEnumOptionForCustomField(custom_field_gid, opts, callback) {
        opts = opts || {};
        var postBody = opts["body"];
        if (custom_field_gid === undefined || custom_field_gid === null) {
          throw new Error("Missing the required parameter 'custom_field_gid' when calling createEnumOptionForCustomField");
        }
        var pathParams = {
          custom_field_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EnumOptionData.EnumOptionData;
        return this.apiClient.callApi("/custom_fields/{custom_field_gid}/enum_options", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "deleteCustomField",
      value: function deleteCustomField(custom_field_gid, callback) {
        var postBody = null;
        if (custom_field_gid === undefined || custom_field_gid === null) {
          throw new Error("Missing the required parameter 'custom_field_gid' when calling deleteCustomField");
        }
        var pathParams = {
          custom_field_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/custom_fields/{custom_field_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getCustomField",
      value: function getCustomField(custom_field_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (custom_field_gid === undefined || custom_field_gid === null) {
          throw new Error("Missing the required parameter 'custom_field_gid' when calling getCustomField");
        }
        var pathParams = {
          custom_field_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _CustomFieldResponseData.CustomFieldResponseData;
        return this.apiClient.callApi("/custom_fields/{custom_field_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getCustomFieldsForWorkspace",
      value: function getCustomFieldsForWorkspace(workspace_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (workspace_gid === undefined || workspace_gid === null) {
          throw new Error("Missing the required parameter 'workspace_gid' when calling getCustomFieldsForWorkspace");
        }
        var pathParams = {
          workspace_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _CustomFieldResponseArray.CustomFieldResponseArray;
        return this.apiClient.callApi("/workspaces/{workspace_gid}/custom_fields", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "insertEnumOptionForCustomField",
      value: function insertEnumOptionForCustomField(custom_field_gid, opts, callback) {
        opts = opts || {};
        var postBody = opts["body"];
        if (custom_field_gid === undefined || custom_field_gid === null) {
          throw new Error("Missing the required parameter 'custom_field_gid' when calling insertEnumOptionForCustomField");
        }
        var pathParams = {
          custom_field_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EnumOptionData.EnumOptionData;
        return this.apiClient.callApi("/custom_fields/{custom_field_gid}/enum_options/insert", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updateCustomField",
      value: function updateCustomField(custom_field_gid, opts, callback) {
        opts = opts || {};
        var postBody = opts["body"];
        if (custom_field_gid === undefined || custom_field_gid === null) {
          throw new Error("Missing the required parameter 'custom_field_gid' when calling updateCustomField");
        }
        var pathParams = {
          custom_field_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _CustomFieldResponseData.CustomFieldResponseData;
        return this.apiClient.callApi("/custom_fields/{custom_field_gid}", "PUT", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updateEnumOption",
      value: function updateEnumOption(enum_option_gid, opts, callback) {
        opts = opts || {};
        var postBody = opts["body"];
        if (enum_option_gid === undefined || enum_option_gid === null) {
          throw new Error("Missing the required parameter 'enum_option_gid' when calling updateEnumOption");
        }
        var pathParams = {
          enum_option_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EnumOptionData.EnumOptionData;
        return this.apiClient.callApi("/enum_options/{enum_option_gid}", "PUT", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return CustomFieldsApi2;
  }();
  exports.CustomFieldsApi = CustomFieldsApi;
});

// node_modules/asana/dist/api/EventsApi.js
var require_EventsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EventsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _ErrorResponse = require_ErrorResponse();
  var _EventResponseArray = require_EventResponseArray();
  var _InlineResponse = require_InlineResponse412();
  var EventsApi = function() {
    function EventsApi2(apiClient) {
      _classCallCheck(this, EventsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(EventsApi2, [{
      key: "getEvents",
      value: function getEvents(resource, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (resource === undefined || resource === null) {
          throw new Error("Missing the required parameter 'resource' when calling getEvents");
        }
        var pathParams = {};
        var queryParams = {
          resource,
          sync: opts["sync"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EventResponseArray.EventResponseArray;
        return this.apiClient.callApi("/events", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return EventsApi2;
  }();
  exports.EventsApi = EventsApi;
});

// node_modules/asana/dist/api/GoalRelationshipsApi.js
var require_GoalRelationshipsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalRelationshipsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _GoalGidAddSupportingRelationshipBody = require_GoalGidAddSupportingRelationshipBody();
  var _GoalGidRemoveSupportingRelationshipBody = require_GoalGidRemoveSupportingRelationshipBody();
  var _GoalRelationshipResponseArray = require_GoalRelationshipResponseArray();
  var _GoalRelationshipResponseData = require_GoalRelationshipResponseData();
  var _GoalRelationshipsGoalRelationshipGidBody = require_GoalRelationshipsGoalRelationshipGidBody();
  var GoalRelationshipsApi = function() {
    function GoalRelationshipsApi2(apiClient) {
      _classCallCheck(this, GoalRelationshipsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(GoalRelationshipsApi2, [{
      key: "addSupportingRelationship",
      value: function addSupportingRelationship(body, goal_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling addSupportingRelationship");
        }
        if (goal_gid === undefined || goal_gid === null) {
          throw new Error("Missing the required parameter 'goal_gid' when calling addSupportingRelationship");
        }
        var pathParams = {
          goal_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _GoalRelationshipResponseData.GoalRelationshipResponseData;
        return this.apiClient.callApi("/goals/{goal_gid}/addSupportingRelationship", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getGoalRelationship",
      value: function getGoalRelationship(goal_relationship_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (goal_relationship_gid === undefined || goal_relationship_gid === null) {
          throw new Error("Missing the required parameter 'goal_relationship_gid' when calling getGoalRelationship");
        }
        var pathParams = {
          goal_relationship_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _GoalRelationshipResponseData.GoalRelationshipResponseData;
        return this.apiClient.callApi("/goal_relationships/{goal_relationship_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getGoalRelationships",
      value: function getGoalRelationships(supported_goal, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (supported_goal === undefined || supported_goal === null) {
          throw new Error("Missing the required parameter 'supported_goal' when calling getGoalRelationships");
        }
        var pathParams = {};
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          supported_goal,
          resource_subtype: opts["resource_subtype"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _GoalRelationshipResponseArray.GoalRelationshipResponseArray;
        return this.apiClient.callApi("/goal_relationships", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "removeSupportingRelationship",
      value: function removeSupportingRelationship(body, goal_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling removeSupportingRelationship");
        }
        if (goal_gid === undefined || goal_gid === null) {
          throw new Error("Missing the required parameter 'goal_gid' when calling removeSupportingRelationship");
        }
        var pathParams = {
          goal_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/goals/{goal_gid}/removeSupportingRelationship", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updateGoalRelationship",
      value: function updateGoalRelationship(body, goal_relationship_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling updateGoalRelationship");
        }
        if (goal_relationship_gid === undefined || goal_relationship_gid === null) {
          throw new Error("Missing the required parameter 'goal_relationship_gid' when calling updateGoalRelationship");
        }
        var pathParams = {
          goal_relationship_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _GoalRelationshipResponseData.GoalRelationshipResponseData;
        return this.apiClient.callApi("/goal_relationships/{goal_relationship_gid}", "PUT", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return GoalRelationshipsApi2;
  }();
  exports.GoalRelationshipsApi = GoalRelationshipsApi;
});

// node_modules/asana/dist/api/GoalsApi.js
var require_GoalsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.GoalsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _GoalGidAddFollowersBody = require_GoalGidAddFollowersBody();
  var _GoalGidRemoveFollowersBody = require_GoalGidRemoveFollowersBody();
  var _GoalGidSetMetricBody = require_GoalGidSetMetricBody();
  var _GoalGidSetMetricCurrentValueBody = require_GoalGidSetMetricCurrentValueBody();
  var _GoalResponseArray = require_GoalResponseArray();
  var _GoalResponseData = require_GoalResponseData();
  var _GoalsBody = require_GoalsBody();
  var _GoalsGoalGidBody = require_GoalsGoalGidBody();
  var GoalsApi = function() {
    function GoalsApi2(apiClient) {
      _classCallCheck(this, GoalsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(GoalsApi2, [{
      key: "addFollowers",
      value: function addFollowers(body, goal_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling addFollowers");
        }
        if (goal_gid === undefined || goal_gid === null) {
          throw new Error("Missing the required parameter 'goal_gid' when calling addFollowers");
        }
        var pathParams = {
          goal_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _GoalResponseData.GoalResponseData;
        return this.apiClient.callApi("/goals/{goal_gid}/addFollowers", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "createGoal",
      value: function createGoal(body, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createGoal");
        }
        var pathParams = {};
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _GoalResponseData.GoalResponseData;
        return this.apiClient.callApi("/goals", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "createGoalMetric",
      value: function createGoalMetric(body, goal_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createGoalMetric");
        }
        if (goal_gid === undefined || goal_gid === null) {
          throw new Error("Missing the required parameter 'goal_gid' when calling createGoalMetric");
        }
        var pathParams = {
          goal_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _GoalResponseData.GoalResponseData;
        return this.apiClient.callApi("/goals/{goal_gid}/setMetric", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "deleteGoal",
      value: function deleteGoal(goal_gid, callback) {
        var postBody = null;
        if (goal_gid === undefined || goal_gid === null) {
          throw new Error("Missing the required parameter 'goal_gid' when calling deleteGoal");
        }
        var pathParams = {
          goal_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/goals/{goal_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getGoal",
      value: function getGoal(goal_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (goal_gid === undefined || goal_gid === null) {
          throw new Error("Missing the required parameter 'goal_gid' when calling getGoal");
        }
        var pathParams = {
          goal_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _GoalResponseData.GoalResponseData;
        return this.apiClient.callApi("/goals/{goal_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getGoals",
      value: function getGoals(opts, callback) {
        opts = opts || {};
        var postBody = null;
        var pathParams = {};
        var queryParams = {
          portfolio: opts["portfolio"],
          project: opts["project"],
          is_workspace_level: opts["is_workspace_level"],
          team: opts["team"],
          workspace: opts["workspace"],
          time_periods: this.apiClient.buildCollectionParam(opts["time_periods"], "multi"),
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _GoalResponseArray.GoalResponseArray;
        return this.apiClient.callApi("/goals", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getParentGoalsForGoal",
      value: function getParentGoalsForGoal(goal_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (goal_gid === undefined || goal_gid === null) {
          throw new Error("Missing the required parameter 'goal_gid' when calling getParentGoalsForGoal");
        }
        var pathParams = {
          goal_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _GoalResponseArray.GoalResponseArray;
        return this.apiClient.callApi("/goals/{goal_gid}/parentGoals", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "removeFollowers",
      value: function removeFollowers(body, goal_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling removeFollowers");
        }
        if (goal_gid === undefined || goal_gid === null) {
          throw new Error("Missing the required parameter 'goal_gid' when calling removeFollowers");
        }
        var pathParams = {
          goal_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _GoalResponseData.GoalResponseData;
        return this.apiClient.callApi("/goals/{goal_gid}/removeFollowers", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updateGoal",
      value: function updateGoal(body, goal_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling updateGoal");
        }
        if (goal_gid === undefined || goal_gid === null) {
          throw new Error("Missing the required parameter 'goal_gid' when calling updateGoal");
        }
        var pathParams = {
          goal_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _GoalResponseData.GoalResponseData;
        return this.apiClient.callApi("/goals/{goal_gid}", "PUT", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updateGoalMetric",
      value: function updateGoalMetric(body, goal_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling updateGoalMetric");
        }
        if (goal_gid === undefined || goal_gid === null) {
          throw new Error("Missing the required parameter 'goal_gid' when calling updateGoalMetric");
        }
        var pathParams = {
          goal_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _GoalResponseData.GoalResponseData;
        return this.apiClient.callApi("/goals/{goal_gid}/setMetricCurrentValue", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return GoalsApi2;
  }();
  exports.GoalsApi = GoalsApi;
});

// node_modules/asana/dist/api/JobsApi.js
var require_JobsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.JobsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _ErrorResponse = require_ErrorResponse();
  var _JobResponseData = require_JobResponseData();
  var JobsApi = function() {
    function JobsApi2(apiClient) {
      _classCallCheck(this, JobsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(JobsApi2, [{
      key: "getJob",
      value: function getJob(job_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (job_gid === undefined || job_gid === null) {
          throw new Error("Missing the required parameter 'job_gid' when calling getJob");
        }
        var pathParams = {
          job_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _JobResponseData.JobResponseData;
        return this.apiClient.callApi("/jobs/{job_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return JobsApi2;
  }();
  exports.JobsApi = JobsApi;
});

// node_modules/asana/dist/api/MembershipsApi.js
var require_MembershipsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MembershipsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _MembershipResponseArray = require_MembershipResponseArray();
  var _MembershipResponseData = require_MembershipResponseData();
  var _MembershipsBody = require_MembershipsBody();
  var MembershipsApi = function() {
    function MembershipsApi2(apiClient) {
      _classCallCheck(this, MembershipsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(MembershipsApi2, [{
      key: "createMembership",
      value: function createMembership(opts, callback) {
        opts = opts || {};
        var postBody = opts["body"];
        var pathParams = {};
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _MembershipResponseData.MembershipResponseData;
        return this.apiClient.callApi("/memberships", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "deleteMembership",
      value: function deleteMembership(membership_gid, callback) {
        var postBody = null;
        if (membership_gid === undefined || membership_gid === null) {
          throw new Error("Missing the required parameter 'membership_gid' when calling deleteMembership");
        }
        var pathParams = {
          membership_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/memberships/{membership_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getMemberships",
      value: function getMemberships(opts, callback) {
        opts = opts || {};
        var postBody = null;
        var pathParams = {};
        var queryParams = {
          parent: opts["parent"],
          member: opts["member"],
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _MembershipResponseArray.MembershipResponseArray;
        return this.apiClient.callApi("/memberships", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return MembershipsApi2;
  }();
  exports.MembershipsApi = MembershipsApi;
});

// node_modules/asana/dist/api/OrganizationExportsApi.js
var require_OrganizationExportsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.OrganizationExportsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _ErrorResponse = require_ErrorResponse();
  var _OrganizationExportResponseData = require_OrganizationExportResponseData();
  var _OrganizationExportsBody = require_OrganizationExportsBody();
  var OrganizationExportsApi = function() {
    function OrganizationExportsApi2(apiClient) {
      _classCallCheck(this, OrganizationExportsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(OrganizationExportsApi2, [{
      key: "createOrganizationExport",
      value: function createOrganizationExport(body, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createOrganizationExport");
        }
        var pathParams = {};
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _OrganizationExportResponseData.OrganizationExportResponseData;
        return this.apiClient.callApi("/organization_exports", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getOrganizationExport",
      value: function getOrganizationExport(organization_export_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (organization_export_gid === undefined || organization_export_gid === null) {
          throw new Error("Missing the required parameter 'organization_export_gid' when calling getOrganizationExport");
        }
        var pathParams = {
          organization_export_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _OrganizationExportResponseData.OrganizationExportResponseData;
        return this.apiClient.callApi("/organization_exports/{organization_export_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return OrganizationExportsApi2;
  }();
  exports.OrganizationExportsApi = OrganizationExportsApi;
});

// node_modules/asana/dist/api/PortfolioMembershipsApi.js
var require_PortfolioMembershipsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfolioMembershipsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _ErrorResponse = require_ErrorResponse();
  var _PortfolioMembershipResponseArray = require_PortfolioMembershipResponseArray();
  var _PortfolioMembershipResponseData = require_PortfolioMembershipResponseData();
  var PortfolioMembershipsApi = function() {
    function PortfolioMembershipsApi2(apiClient) {
      _classCallCheck(this, PortfolioMembershipsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(PortfolioMembershipsApi2, [{
      key: "getPortfolioMembership",
      value: function getPortfolioMembership(portfolio_membership_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (portfolio_membership_gid === undefined || portfolio_membership_gid === null) {
          throw new Error("Missing the required parameter 'portfolio_membership_gid' when calling getPortfolioMembership");
        }
        var pathParams = {
          portfolio_membership_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _PortfolioMembershipResponseData.PortfolioMembershipResponseData;
        return this.apiClient.callApi("/portfolio_memberships/{portfolio_membership_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getPortfolioMemberships",
      value: function getPortfolioMemberships(opts, callback) {
        opts = opts || {};
        var postBody = null;
        var pathParams = {};
        var queryParams = {
          portfolio: opts["portfolio"],
          workspace: opts["workspace"],
          user: opts["user"],
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _PortfolioMembershipResponseArray.PortfolioMembershipResponseArray;
        return this.apiClient.callApi("/portfolio_memberships", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getPortfolioMembershipsForPortfolio",
      value: function getPortfolioMembershipsForPortfolio(portfolio_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (portfolio_gid === undefined || portfolio_gid === null) {
          throw new Error("Missing the required parameter 'portfolio_gid' when calling getPortfolioMembershipsForPortfolio");
        }
        var pathParams = {
          portfolio_gid
        };
        var queryParams = {
          user: opts["user"],
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _PortfolioMembershipResponseArray.PortfolioMembershipResponseArray;
        return this.apiClient.callApi("/portfolios/{portfolio_gid}/portfolio_memberships", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return PortfolioMembershipsApi2;
  }();
  exports.PortfolioMembershipsApi = PortfolioMembershipsApi;
});

// node_modules/asana/dist/api/PortfoliosApi.js
var require_PortfoliosApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PortfoliosApi = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldSettingResponseData = require_CustomFieldSettingResponseData();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _PortfolioGidAddCustomFieldSettingBody = require_PortfolioGidAddCustomFieldSettingBody();
  var _PortfolioGidAddItemBody = require_PortfolioGidAddItemBody();
  var _PortfolioGidAddMembersBody = require_PortfolioGidAddMembersBody();
  var _PortfolioGidRemoveCustomFieldSettingBody = require_PortfolioGidRemoveCustomFieldSettingBody();
  var _PortfolioGidRemoveItemBody = require_PortfolioGidRemoveItemBody();
  var _PortfolioGidRemoveMembersBody = require_PortfolioGidRemoveMembersBody();
  var _PortfolioResponseArray = require_PortfolioResponseArray();
  var _PortfolioResponseData = require_PortfolioResponseData();
  var _PortfoliosBody = require_PortfoliosBody();
  var _PortfoliosPortfolioGidBody = require_PortfoliosPortfolioGidBody();
  var _ProjectResponseArray = require_ProjectResponseArray();
  var PortfoliosApi = function() {
    function PortfoliosApi2(apiClient) {
      _classCallCheck(this, PortfoliosApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(PortfoliosApi2, [{
      key: "addCustomFieldSettingForPortfolio",
      value: function addCustomFieldSettingForPortfolio(body, portfolio_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling addCustomFieldSettingForPortfolio");
        }
        if (portfolio_gid === undefined || portfolio_gid === null) {
          throw new Error("Missing the required parameter 'portfolio_gid' when calling addCustomFieldSettingForPortfolio");
        }
        var pathParams = {
          portfolio_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _CustomFieldSettingResponseData.CustomFieldSettingResponseData;
        return this.apiClient.callApi("/portfolios/{portfolio_gid}/addCustomFieldSetting", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "addItemForPortfolio",
      value: function addItemForPortfolio(body, portfolio_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling addItemForPortfolio");
        }
        if (portfolio_gid === undefined || portfolio_gid === null) {
          throw new Error("Missing the required parameter 'portfolio_gid' when calling addItemForPortfolio");
        }
        var pathParams = {
          portfolio_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/portfolios/{portfolio_gid}/addItem", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "addMembersForPortfolio",
      value: function addMembersForPortfolio(body, portfolio_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling addMembersForPortfolio");
        }
        if (portfolio_gid === undefined || portfolio_gid === null) {
          throw new Error("Missing the required parameter 'portfolio_gid' when calling addMembersForPortfolio");
        }
        var pathParams = {
          portfolio_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _PortfolioResponseData.PortfolioResponseData;
        return this.apiClient.callApi("/portfolios/{portfolio_gid}/addMembers", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "createPortfolio",
      value: function createPortfolio(body, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createPortfolio");
        }
        var pathParams = {};
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _PortfolioResponseData.PortfolioResponseData;
        return this.apiClient.callApi("/portfolios", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "deletePortfolio",
      value: function deletePortfolio(portfolio_gid, callback) {
        var postBody = null;
        if (portfolio_gid === undefined || portfolio_gid === null) {
          throw new Error("Missing the required parameter 'portfolio_gid' when calling deletePortfolio");
        }
        var pathParams = {
          portfolio_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/portfolios/{portfolio_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getItemsForPortfolio",
      value: function getItemsForPortfolio(portfolio_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (portfolio_gid === undefined || portfolio_gid === null) {
          throw new Error("Missing the required parameter 'portfolio_gid' when calling getItemsForPortfolio");
        }
        var pathParams = {
          portfolio_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectResponseArray.ProjectResponseArray;
        return this.apiClient.callApi("/portfolios/{portfolio_gid}/items", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getPortfolio",
      value: function getPortfolio(portfolio_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (portfolio_gid === undefined || portfolio_gid === null) {
          throw new Error("Missing the required parameter 'portfolio_gid' when calling getPortfolio");
        }
        var pathParams = {
          portfolio_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _PortfolioResponseData.PortfolioResponseData;
        return this.apiClient.callApi("/portfolios/{portfolio_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getPortfolios",
      value: function getPortfolios(workspace, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (workspace === undefined || workspace === null) {
          throw new Error("Missing the required parameter 'workspace' when calling getPortfolios");
        }
        var pathParams = {};
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          workspace,
          owner: opts["owner"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _PortfolioResponseArray.PortfolioResponseArray;
        return this.apiClient.callApi("/portfolios", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "removeCustomFieldSettingForPortfolio",
      value: function removeCustomFieldSettingForPortfolio(body, portfolio_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling removeCustomFieldSettingForPortfolio");
        }
        if (portfolio_gid === undefined || portfolio_gid === null) {
          throw new Error("Missing the required parameter 'portfolio_gid' when calling removeCustomFieldSettingForPortfolio");
        }
        var pathParams = {
          portfolio_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/portfolios/{portfolio_gid}/removeCustomFieldSetting", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "removeItemForPortfolio",
      value: function removeItemForPortfolio(body, portfolio_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling removeItemForPortfolio");
        }
        if (portfolio_gid === undefined || portfolio_gid === null) {
          throw new Error("Missing the required parameter 'portfolio_gid' when calling removeItemForPortfolio");
        }
        var pathParams = {
          portfolio_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/portfolios/{portfolio_gid}/removeItem", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "removeMembersForPortfolio",
      value: function removeMembersForPortfolio(body, portfolio_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling removeMembersForPortfolio");
        }
        if (portfolio_gid === undefined || portfolio_gid === null) {
          throw new Error("Missing the required parameter 'portfolio_gid' when calling removeMembersForPortfolio");
        }
        var pathParams = {
          portfolio_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _PortfolioResponseData.PortfolioResponseData;
        return this.apiClient.callApi("/portfolios/{portfolio_gid}/removeMembers", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updatePortfolio",
      value: function updatePortfolio(body, portfolio_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling updatePortfolio");
        }
        if (portfolio_gid === undefined || portfolio_gid === null) {
          throw new Error("Missing the required parameter 'portfolio_gid' when calling updatePortfolio");
        }
        var pathParams = {
          portfolio_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _PortfolioResponseData.PortfolioResponseData;
        return this.apiClient.callApi("/portfolios/{portfolio_gid}", "PUT", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return PortfoliosApi2;
  }();
  exports.PortfoliosApi = PortfoliosApi;
});

// node_modules/asana/dist/api/ProjectBriefsApi.js
var require_ProjectBriefsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectBriefsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _ProjectBriefResponseData = require_ProjectBriefResponseData();
  var _ProjectBriefsProjectBriefGidBody = require_ProjectBriefsProjectBriefGidBody();
  var _ProjectGidProjectBriefsBody = require_ProjectGidProjectBriefsBody();
  var ProjectBriefsApi = function() {
    function ProjectBriefsApi2(apiClient) {
      _classCallCheck(this, ProjectBriefsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(ProjectBriefsApi2, [{
      key: "createProjectBrief",
      value: function createProjectBrief(body, project_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createProjectBrief");
        }
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling createProjectBrief");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectBriefResponseData.ProjectBriefResponseData;
        return this.apiClient.callApi("/projects/{project_gid}/project_briefs", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "deleteProjectBrief",
      value: function deleteProjectBrief(project_brief_gid, callback) {
        var postBody = null;
        if (project_brief_gid === undefined || project_brief_gid === null) {
          throw new Error("Missing the required parameter 'project_brief_gid' when calling deleteProjectBrief");
        }
        var pathParams = {
          project_brief_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/project_briefs/{project_brief_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getProjectBrief",
      value: function getProjectBrief(project_brief_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (project_brief_gid === undefined || project_brief_gid === null) {
          throw new Error("Missing the required parameter 'project_brief_gid' when calling getProjectBrief");
        }
        var pathParams = {
          project_brief_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectBriefResponseData.ProjectBriefResponseData;
        return this.apiClient.callApi("/project_briefs/{project_brief_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updateProjectBrief",
      value: function updateProjectBrief(body, project_brief_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling updateProjectBrief");
        }
        if (project_brief_gid === undefined || project_brief_gid === null) {
          throw new Error("Missing the required parameter 'project_brief_gid' when calling updateProjectBrief");
        }
        var pathParams = {
          project_brief_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectBriefResponseData.ProjectBriefResponseData;
        return this.apiClient.callApi("/project_briefs/{project_brief_gid}", "PUT", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return ProjectBriefsApi2;
  }();
  exports.ProjectBriefsApi = ProjectBriefsApi;
});

// node_modules/asana/dist/api/ProjectMembershipsApi.js
var require_ProjectMembershipsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectMembershipsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _ErrorResponse = require_ErrorResponse();
  var _ProjectMembershipCompactArray = require_ProjectMembershipCompactArray();
  var _ProjectMembershipNormalResponseData = require_ProjectMembershipNormalResponseData();
  var ProjectMembershipsApi = function() {
    function ProjectMembershipsApi2(apiClient) {
      _classCallCheck(this, ProjectMembershipsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(ProjectMembershipsApi2, [{
      key: "getProjectMembership",
      value: function getProjectMembership(project_membership_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (project_membership_gid === undefined || project_membership_gid === null) {
          throw new Error("Missing the required parameter 'project_membership_gid' when calling getProjectMembership");
        }
        var pathParams = {
          project_membership_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectMembershipNormalResponseData.ProjectMembershipNormalResponseData;
        return this.apiClient.callApi("/project_memberships/{project_membership_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getProjectMembershipsForProject",
      value: function getProjectMembershipsForProject(project_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling getProjectMembershipsForProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          user: opts["user"],
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectMembershipCompactArray.ProjectMembershipCompactArray;
        return this.apiClient.callApi("/projects/{project_gid}/project_memberships", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return ProjectMembershipsApi2;
  }();
  exports.ProjectMembershipsApi = ProjectMembershipsApi;
});

// node_modules/asana/dist/api/ProjectStatusesApi.js
var require_ProjectStatusesApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectStatusesApi = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _ProjectGidProjectStatusesBody = require_ProjectGidProjectStatusesBody();
  var _ProjectStatusResponseArray = require_ProjectStatusResponseArray();
  var _ProjectStatusResponseData = require_ProjectStatusResponseData();
  var ProjectStatusesApi = function() {
    function ProjectStatusesApi2(apiClient) {
      _classCallCheck(this, ProjectStatusesApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(ProjectStatusesApi2, [{
      key: "createProjectStatusForProject",
      value: function createProjectStatusForProject(body, project_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createProjectStatusForProject");
        }
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling createProjectStatusForProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectStatusResponseData.ProjectStatusResponseData;
        return this.apiClient.callApi("/projects/{project_gid}/project_statuses", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "deleteProjectStatus",
      value: function deleteProjectStatus(project_status_gid, callback) {
        var postBody = null;
        if (project_status_gid === undefined || project_status_gid === null) {
          throw new Error("Missing the required parameter 'project_status_gid' when calling deleteProjectStatus");
        }
        var pathParams = {
          project_status_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/project_statuses/{project_status_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getProjectStatus",
      value: function getProjectStatus(project_status_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (project_status_gid === undefined || project_status_gid === null) {
          throw new Error("Missing the required parameter 'project_status_gid' when calling getProjectStatus");
        }
        var pathParams = {
          project_status_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectStatusResponseData.ProjectStatusResponseData;
        return this.apiClient.callApi("/project_statuses/{project_status_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getProjectStatusesForProject",
      value: function getProjectStatusesForProject(project_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling getProjectStatusesForProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectStatusResponseArray.ProjectStatusResponseArray;
        return this.apiClient.callApi("/projects/{project_gid}/project_statuses", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return ProjectStatusesApi2;
  }();
  exports.ProjectStatusesApi = ProjectStatusesApi;
});

// node_modules/asana/dist/api/ProjectTemplatesApi.js
var require_ProjectTemplatesApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectTemplatesApi = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _JobResponseData = require_JobResponseData();
  var _ProjectTemplateGidInstantiateProjectBody = require_ProjectTemplateGidInstantiateProjectBody();
  var _ProjectTemplateResponseArray = require_ProjectTemplateResponseArray();
  var _ProjectTemplateResponseData = require_ProjectTemplateResponseData();
  var ProjectTemplatesApi = function() {
    function ProjectTemplatesApi2(apiClient) {
      _classCallCheck(this, ProjectTemplatesApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(ProjectTemplatesApi2, [{
      key: "deleteProjectTemplate",
      value: function deleteProjectTemplate(project_template_gid, callback) {
        var postBody = null;
        if (project_template_gid === undefined || project_template_gid === null) {
          throw new Error("Missing the required parameter 'project_template_gid' when calling deleteProjectTemplate");
        }
        var pathParams = {
          project_template_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/project_templates/{project_template_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getProjectTemplate",
      value: function getProjectTemplate(project_template_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (project_template_gid === undefined || project_template_gid === null) {
          throw new Error("Missing the required parameter 'project_template_gid' when calling getProjectTemplate");
        }
        var pathParams = {
          project_template_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectTemplateResponseData.ProjectTemplateResponseData;
        return this.apiClient.callApi("/project_templates/{project_template_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getProjectTemplates",
      value: function getProjectTemplates(opts, callback) {
        opts = opts || {};
        var postBody = null;
        var pathParams = {};
        var queryParams = {
          workspace: opts["workspace"],
          team: opts["team"],
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectTemplateResponseArray.ProjectTemplateResponseArray;
        return this.apiClient.callApi("/project_templates", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getProjectTemplatesForTeam",
      value: function getProjectTemplatesForTeam(team_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (team_gid === undefined || team_gid === null) {
          throw new Error("Missing the required parameter 'team_gid' when calling getProjectTemplatesForTeam");
        }
        var pathParams = {
          team_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectTemplateResponseArray.ProjectTemplateResponseArray;
        return this.apiClient.callApi("/teams/{team_gid}/project_templates", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "instantiateProject",
      value: function instantiateProject(project_template_gid, opts, callback) {
        opts = opts || {};
        var postBody = opts["body"];
        if (project_template_gid === undefined || project_template_gid === null) {
          throw new Error("Missing the required parameter 'project_template_gid' when calling instantiateProject");
        }
        var pathParams = {
          project_template_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _JobResponseData.JobResponseData;
        return this.apiClient.callApi("/project_templates/{project_template_gid}/instantiateProject", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return ProjectTemplatesApi2;
  }();
  exports.ProjectTemplatesApi = ProjectTemplatesApi;
});

// node_modules/asana/dist/api/ProjectsApi.js
var require_ProjectsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ProjectsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _CustomFieldSettingResponseData = require_CustomFieldSettingResponseData();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _JobResponseData = require_JobResponseData();
  var _ProjectGidAddCustomFieldSettingBody = require_ProjectGidAddCustomFieldSettingBody();
  var _ProjectGidAddFollowersBody = require_ProjectGidAddFollowersBody();
  var _ProjectGidAddMembersBody = require_ProjectGidAddMembersBody();
  var _ProjectGidDuplicateBody = require_ProjectGidDuplicateBody();
  var _ProjectGidRemoveCustomFieldSettingBody = require_ProjectGidRemoveCustomFieldSettingBody();
  var _ProjectGidRemoveFollowersBody = require_ProjectGidRemoveFollowersBody();
  var _ProjectGidRemoveMembersBody = require_ProjectGidRemoveMembersBody();
  var _ProjectGidSaveAsTemplateBody = require_ProjectGidSaveAsTemplateBody();
  var _ProjectResponseArray = require_ProjectResponseArray();
  var _ProjectResponseData = require_ProjectResponseData();
  var _ProjectsBody = require_ProjectsBody();
  var _ProjectsProjectGidBody = require_ProjectsProjectGidBody();
  var _TaskCountResponseData = require_TaskCountResponseData();
  var _TeamGidProjectsBody = require_TeamGidProjectsBody();
  var _WorkspaceGidProjectsBody = require_WorkspaceGidProjectsBody();
  var ProjectsApi = function() {
    function ProjectsApi2(apiClient) {
      _classCallCheck(this, ProjectsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(ProjectsApi2, [{
      key: "addCustomFieldSettingForProject",
      value: function addCustomFieldSettingForProject(body, project_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling addCustomFieldSettingForProject");
        }
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling addCustomFieldSettingForProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _CustomFieldSettingResponseData.CustomFieldSettingResponseData;
        return this.apiClient.callApi("/projects/{project_gid}/addCustomFieldSetting", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "addFollowersForProject",
      value: function addFollowersForProject(body, project_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling addFollowersForProject");
        }
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling addFollowersForProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectResponseData.ProjectResponseData;
        return this.apiClient.callApi("/projects/{project_gid}/addFollowers", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "addMembersForProject",
      value: function addMembersForProject(body, project_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling addMembersForProject");
        }
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling addMembersForProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectResponseData.ProjectResponseData;
        return this.apiClient.callApi("/projects/{project_gid}/addMembers", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "createProject",
      value: function createProject(body, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createProject");
        }
        var pathParams = {};
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectResponseData.ProjectResponseData;
        return this.apiClient.callApi("/projects", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "createProjectForTeam",
      value: function createProjectForTeam(body, team_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createProjectForTeam");
        }
        if (team_gid === undefined || team_gid === null) {
          throw new Error("Missing the required parameter 'team_gid' when calling createProjectForTeam");
        }
        var pathParams = {
          team_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectResponseData.ProjectResponseData;
        return this.apiClient.callApi("/teams/{team_gid}/projects", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "createProjectForWorkspace",
      value: function createProjectForWorkspace(body, workspace_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createProjectForWorkspace");
        }
        if (workspace_gid === undefined || workspace_gid === null) {
          throw new Error("Missing the required parameter 'workspace_gid' when calling createProjectForWorkspace");
        }
        var pathParams = {
          workspace_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectResponseData.ProjectResponseData;
        return this.apiClient.callApi("/workspaces/{workspace_gid}/projects", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "deleteProject",
      value: function deleteProject(project_gid, callback) {
        var postBody = null;
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling deleteProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/projects/{project_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "duplicateProject",
      value: function duplicateProject(project_gid, opts, callback) {
        opts = opts || {};
        var postBody = opts["body"];
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling duplicateProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _JobResponseData.JobResponseData;
        return this.apiClient.callApi("/projects/{project_gid}/duplicate", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getProject",
      value: function getProject(project_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling getProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectResponseData.ProjectResponseData;
        return this.apiClient.callApi("/projects/{project_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getProjects",
      value: function getProjects(opts, callback) {
        opts = opts || {};
        var postBody = null;
        var pathParams = {};
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          workspace: opts["workspace"],
          team: opts["team"],
          archived: opts["archived"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectResponseArray.ProjectResponseArray;
        return this.apiClient.callApi("/projects", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getProjectsForTask",
      value: function getProjectsForTask(task_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling getProjectsForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectResponseArray.ProjectResponseArray;
        return this.apiClient.callApi("/tasks/{task_gid}/projects", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getProjectsForTeam",
      value: function getProjectsForTeam(team_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (team_gid === undefined || team_gid === null) {
          throw new Error("Missing the required parameter 'team_gid' when calling getProjectsForTeam");
        }
        var pathParams = {
          team_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          archived: opts["archived"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectResponseArray.ProjectResponseArray;
        return this.apiClient.callApi("/teams/{team_gid}/projects", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getProjectsForWorkspace",
      value: function getProjectsForWorkspace(workspace_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (workspace_gid === undefined || workspace_gid === null) {
          throw new Error("Missing the required parameter 'workspace_gid' when calling getProjectsForWorkspace");
        }
        var pathParams = {
          workspace_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          archived: opts["archived"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectResponseArray.ProjectResponseArray;
        return this.apiClient.callApi("/workspaces/{workspace_gid}/projects", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTaskCountsForProject",
      value: function getTaskCountsForProject(project_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling getTaskCountsForProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskCountResponseData.TaskCountResponseData;
        return this.apiClient.callApi("/projects/{project_gid}/task_counts", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "projectSaveAsTemplate",
      value: function projectSaveAsTemplate(body, project_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling projectSaveAsTemplate");
        }
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling projectSaveAsTemplate");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _JobResponseData.JobResponseData;
        return this.apiClient.callApi("/projects/{project_gid}/saveAsTemplate", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "removeCustomFieldSettingForProject",
      value: function removeCustomFieldSettingForProject(body, project_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling removeCustomFieldSettingForProject");
        }
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling removeCustomFieldSettingForProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/projects/{project_gid}/removeCustomFieldSetting", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "removeFollowersForProject",
      value: function removeFollowersForProject(body, project_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling removeFollowersForProject");
        }
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling removeFollowersForProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectResponseData.ProjectResponseData;
        return this.apiClient.callApi("/projects/{project_gid}/removeFollowers", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "removeMembersForProject",
      value: function removeMembersForProject(body, project_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling removeMembersForProject");
        }
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling removeMembersForProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectResponseData.ProjectResponseData;
        return this.apiClient.callApi("/projects/{project_gid}/removeMembers", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updateProject",
      value: function updateProject(body, project_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling updateProject");
        }
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling updateProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _ProjectResponseData.ProjectResponseData;
        return this.apiClient.callApi("/projects/{project_gid}", "PUT", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return ProjectsApi2;
  }();
  exports.ProjectsApi = ProjectsApi;
});

// node_modules/asana/dist/api/RulesApi.js
var require_RulesApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RulesApi = undefined;
  var _ApiClient = require_ApiClient();
  var _ErrorResponse = require_ErrorResponse();
  var _RuleTriggerGidRunBody = require_RuleTriggerGidRunBody();
  var _RuleTriggerResponseData = require_RuleTriggerResponseData();
  var RulesApi = function() {
    function RulesApi2(apiClient) {
      _classCallCheck(this, RulesApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(RulesApi2, [{
      key: "triggerRule",
      value: function triggerRule(body, rule_trigger_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling triggerRule");
        }
        if (rule_trigger_gid === undefined || rule_trigger_gid === null) {
          throw new Error("Missing the required parameter 'rule_trigger_gid' when calling triggerRule");
        }
        var pathParams = {
          rule_trigger_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _RuleTriggerResponseData.RuleTriggerResponseData;
        return this.apiClient.callApi("/rule_triggers/{rule_trigger_gid}/run", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return RulesApi2;
  }();
  exports.RulesApi = RulesApi;
});

// node_modules/asana/dist/api/SectionsApi.js
var require_SectionsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SectionsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _ProjectGidSectionsBody = require_ProjectGidSectionsBody();
  var _SectionGidAddTaskBody = require_SectionGidAddTaskBody();
  var _SectionResponseArray = require_SectionResponseArray();
  var _SectionResponseData = require_SectionResponseData();
  var _SectionsInsertBody = require_SectionsInsertBody();
  var _SectionsSectionGidBody = require_SectionsSectionGidBody();
  var SectionsApi = function() {
    function SectionsApi2(apiClient) {
      _classCallCheck(this, SectionsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(SectionsApi2, [{
      key: "addTaskForSection",
      value: function addTaskForSection(section_gid, opts, callback) {
        opts = opts || {};
        var postBody = opts["body"];
        if (section_gid === undefined || section_gid === null) {
          throw new Error("Missing the required parameter 'section_gid' when calling addTaskForSection");
        }
        var pathParams = {
          section_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/sections/{section_gid}/addTask", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "createSectionForProject",
      value: function createSectionForProject(project_gid, opts, callback) {
        opts = opts || {};
        var postBody = opts["body"];
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling createSectionForProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _SectionResponseData.SectionResponseData;
        return this.apiClient.callApi("/projects/{project_gid}/sections", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "deleteSection",
      value: function deleteSection(section_gid, callback) {
        var postBody = null;
        if (section_gid === undefined || section_gid === null) {
          throw new Error("Missing the required parameter 'section_gid' when calling deleteSection");
        }
        var pathParams = {
          section_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/sections/{section_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getSection",
      value: function getSection(section_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (section_gid === undefined || section_gid === null) {
          throw new Error("Missing the required parameter 'section_gid' when calling getSection");
        }
        var pathParams = {
          section_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _SectionResponseData.SectionResponseData;
        return this.apiClient.callApi("/sections/{section_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getSectionsForProject",
      value: function getSectionsForProject(project_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling getSectionsForProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _SectionResponseArray.SectionResponseArray;
        return this.apiClient.callApi("/projects/{project_gid}/sections", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "insertSectionForProject",
      value: function insertSectionForProject(project_gid, opts, callback) {
        opts = opts || {};
        var postBody = opts["body"];
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling insertSectionForProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/projects/{project_gid}/sections/insert", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updateSection",
      value: function updateSection(section_gid, opts, callback) {
        opts = opts || {};
        var postBody = opts["body"];
        if (section_gid === undefined || section_gid === null) {
          throw new Error("Missing the required parameter 'section_gid' when calling updateSection");
        }
        var pathParams = {
          section_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _SectionResponseData.SectionResponseData;
        return this.apiClient.callApi("/sections/{section_gid}", "PUT", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return SectionsApi2;
  }();
  exports.SectionsApi = SectionsApi;
});

// node_modules/asana/dist/api/StatusUpdatesApi.js
var require_StatusUpdatesApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StatusUpdatesApi = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _StatusUpdateResponseArray = require_StatusUpdateResponseArray();
  var _StatusUpdateResponseData = require_StatusUpdateResponseData();
  var _StatusUpdatesBody = require_StatusUpdatesBody();
  var StatusUpdatesApi = function() {
    function StatusUpdatesApi2(apiClient) {
      _classCallCheck(this, StatusUpdatesApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(StatusUpdatesApi2, [{
      key: "createStatusForObject",
      value: function createStatusForObject(body, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createStatusForObject");
        }
        var pathParams = {};
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _StatusUpdateResponseData.StatusUpdateResponseData;
        return this.apiClient.callApi("/status_updates", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "deleteStatus",
      value: function deleteStatus(status_update_gid, callback) {
        var postBody = null;
        if (status_update_gid === undefined || status_update_gid === null) {
          throw new Error("Missing the required parameter 'status_update_gid' when calling deleteStatus");
        }
        var pathParams = {
          status_update_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/status_updates/{status_update_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getStatus",
      value: function getStatus(status_update_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (status_update_gid === undefined || status_update_gid === null) {
          throw new Error("Missing the required parameter 'status_update_gid' when calling getStatus");
        }
        var pathParams = {
          status_update_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _StatusUpdateResponseData.StatusUpdateResponseData;
        return this.apiClient.callApi("/status_updates/{status_update_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getStatusesForObject",
      value: function getStatusesForObject(parent, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (parent === undefined || parent === null) {
          throw new Error("Missing the required parameter 'parent' when calling getStatusesForObject");
        }
        var pathParams = {};
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          parent,
          created_since: opts["created_since"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _StatusUpdateResponseArray.StatusUpdateResponseArray;
        return this.apiClient.callApi("/status_updates", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return StatusUpdatesApi2;
  }();
  exports.StatusUpdatesApi = StatusUpdatesApi;
});

// node_modules/asana/dist/api/StoriesApi.js
var require_StoriesApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StoriesApi = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _StoriesStoryGidBody = require_StoriesStoryGidBody();
  var _StoryResponseArray = require_StoryResponseArray();
  var _StoryResponseData = require_StoryResponseData();
  var _TaskGidStoriesBody = require_TaskGidStoriesBody();
  var StoriesApi = function() {
    function StoriesApi2(apiClient) {
      _classCallCheck(this, StoriesApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(StoriesApi2, [{
      key: "createStoryForTask",
      value: function createStoryForTask(body, task_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createStoryForTask");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling createStoryForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _StoryResponseData.StoryResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}/stories", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "deleteStory",
      value: function deleteStory(story_gid, callback) {
        var postBody = null;
        if (story_gid === undefined || story_gid === null) {
          throw new Error("Missing the required parameter 'story_gid' when calling deleteStory");
        }
        var pathParams = {
          story_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/stories/{story_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getStoriesForTask",
      value: function getStoriesForTask(task_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling getStoriesForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _StoryResponseArray.StoryResponseArray;
        return this.apiClient.callApi("/tasks/{task_gid}/stories", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getStory",
      value: function getStory(story_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (story_gid === undefined || story_gid === null) {
          throw new Error("Missing the required parameter 'story_gid' when calling getStory");
        }
        var pathParams = {
          story_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _StoryResponseData.StoryResponseData;
        return this.apiClient.callApi("/stories/{story_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updateStory",
      value: function updateStory(body, story_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling updateStory");
        }
        if (story_gid === undefined || story_gid === null) {
          throw new Error("Missing the required parameter 'story_gid' when calling updateStory");
        }
        var pathParams = {
          story_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _StoryResponseData.StoryResponseData;
        return this.apiClient.callApi("/stories/{story_gid}", "PUT", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return StoriesApi2;
  }();
  exports.StoriesApi = StoriesApi;
});

// node_modules/asana/dist/api/TagsApi.js
var require_TagsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TagsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _TagResponseArray = require_TagResponseArray();
  var _TagResponseData = require_TagResponseData();
  var _TagsBody = require_TagsBody();
  var _WorkspaceGidTagsBody = require_WorkspaceGidTagsBody();
  var TagsApi = function() {
    function TagsApi2(apiClient) {
      _classCallCheck(this, TagsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(TagsApi2, [{
      key: "createTag",
      value: function createTag(body, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createTag");
        }
        var pathParams = {};
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TagResponseData.TagResponseData;
        return this.apiClient.callApi("/tags", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "createTagForWorkspace",
      value: function createTagForWorkspace(body, workspace_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createTagForWorkspace");
        }
        if (workspace_gid === undefined || workspace_gid === null) {
          throw new Error("Missing the required parameter 'workspace_gid' when calling createTagForWorkspace");
        }
        var pathParams = {
          workspace_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TagResponseData.TagResponseData;
        return this.apiClient.callApi("/workspaces/{workspace_gid}/tags", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "deleteTag",
      value: function deleteTag(tag_gid, callback) {
        var postBody = null;
        if (tag_gid === undefined || tag_gid === null) {
          throw new Error("Missing the required parameter 'tag_gid' when calling deleteTag");
        }
        var pathParams = {
          tag_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/tags/{tag_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTag",
      value: function getTag(tag_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (tag_gid === undefined || tag_gid === null) {
          throw new Error("Missing the required parameter 'tag_gid' when calling getTag");
        }
        var pathParams = {
          tag_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TagResponseData.TagResponseData;
        return this.apiClient.callApi("/tags/{tag_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTags",
      value: function getTags(opts, callback) {
        opts = opts || {};
        var postBody = null;
        var pathParams = {};
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          workspace: opts["workspace"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TagResponseArray.TagResponseArray;
        return this.apiClient.callApi("/tags", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTagsForTask",
      value: function getTagsForTask(task_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling getTagsForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TagResponseArray.TagResponseArray;
        return this.apiClient.callApi("/tasks/{task_gid}/tags", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTagsForWorkspace",
      value: function getTagsForWorkspace(workspace_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (workspace_gid === undefined || workspace_gid === null) {
          throw new Error("Missing the required parameter 'workspace_gid' when calling getTagsForWorkspace");
        }
        var pathParams = {
          workspace_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TagResponseArray.TagResponseArray;
        return this.apiClient.callApi("/workspaces/{workspace_gid}/tags", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updateTag",
      value: function updateTag(tag_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (tag_gid === undefined || tag_gid === null) {
          throw new Error("Missing the required parameter 'tag_gid' when calling updateTag");
        }
        var pathParams = {
          tag_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TagResponseData.TagResponseData;
        return this.apiClient.callApi("/tags/{tag_gid}", "PUT", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return TagsApi2;
  }();
  exports.TagsApi = TagsApi;
});

// node_modules/asana/dist/api/TasksApi.js
var require_TasksApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TasksApi = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _JobResponseData = require_JobResponseData();
  var _TaskGidAddDependenciesBody = require_TaskGidAddDependenciesBody();
  var _TaskGidAddDependentsBody = require_TaskGidAddDependentsBody();
  var _TaskGidAddFollowersBody = require_TaskGidAddFollowersBody();
  var _TaskGidAddProjectBody = require_TaskGidAddProjectBody();
  var _TaskGidAddTagBody = require_TaskGidAddTagBody();
  var _TaskGidDuplicateBody = require_TaskGidDuplicateBody();
  var _TaskGidRemoveDependenciesBody = require_TaskGidRemoveDependenciesBody();
  var _TaskGidRemoveDependentsBody = require_TaskGidRemoveDependentsBody();
  var _TaskGidRemoveFollowersBody = require_TaskGidRemoveFollowersBody();
  var _TaskGidRemoveProjectBody = require_TaskGidRemoveProjectBody();
  var _TaskGidRemoveTagBody = require_TaskGidRemoveTagBody();
  var _TaskGidSetParentBody = require_TaskGidSetParentBody();
  var _TaskGidSubtasksBody = require_TaskGidSubtasksBody();
  var _TaskResponseArray = require_TaskResponseArray();
  var _TaskResponseData = require_TaskResponseData();
  var _TasksBody = require_TasksBody();
  var _TasksTaskGidBody = require_TasksTaskGidBody();
  var TasksApi = function() {
    function TasksApi2(apiClient) {
      _classCallCheck(this, TasksApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(TasksApi2, [{
      key: "addDependenciesForTask",
      value: function addDependenciesForTask(body, task_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling addDependenciesForTask");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling addDependenciesForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}/addDependencies", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "addDependentsForTask",
      value: function addDependentsForTask(body, task_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling addDependentsForTask");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling addDependentsForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}/addDependents", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "addFollowersForTask",
      value: function addFollowersForTask(body, task_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling addFollowersForTask");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling addFollowersForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseData.TaskResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}/addFollowers", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "addProjectForTask",
      value: function addProjectForTask(body, task_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling addProjectForTask");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling addProjectForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}/addProject", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "addTagForTask",
      value: function addTagForTask(body, task_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling addTagForTask");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling addTagForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}/addTag", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "createSubtaskForTask",
      value: function createSubtaskForTask(body, task_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createSubtaskForTask");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling createSubtaskForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseData.TaskResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}/subtasks", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "createTask",
      value: function createTask(body, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createTask");
        }
        var pathParams = {};
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseData.TaskResponseData;
        return this.apiClient.callApi("/tasks", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "deleteTask",
      value: function deleteTask(task_gid, callback) {
        var postBody = null;
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling deleteTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "duplicateTask",
      value: function duplicateTask(body, task_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling duplicateTask");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling duplicateTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _JobResponseData.JobResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}/duplicate", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getDependenciesForTask",
      value: function getDependenciesForTask(task_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling getDependenciesForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseArray.TaskResponseArray;
        return this.apiClient.callApi("/tasks/{task_gid}/dependencies", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getDependentsForTask",
      value: function getDependentsForTask(task_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling getDependentsForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseArray.TaskResponseArray;
        return this.apiClient.callApi("/tasks/{task_gid}/dependents", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getSubtasksForTask",
      value: function getSubtasksForTask(task_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling getSubtasksForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseArray.TaskResponseArray;
        return this.apiClient.callApi("/tasks/{task_gid}/subtasks", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTask",
      value: function getTask(task_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling getTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseData.TaskResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTasks",
      value: function getTasks(opts, callback) {
        opts = opts || {};
        var postBody = null;
        var pathParams = {};
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          assignee: opts["assignee"],
          project: opts["project"],
          section: opts["section"],
          workspace: opts["workspace"],
          completed_since: opts["completed_since"],
          modified_since: opts["modified_since"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseArray.TaskResponseArray;
        return this.apiClient.callApi("/tasks", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTasksForProject",
      value: function getTasksForProject(project_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (project_gid === undefined || project_gid === null) {
          throw new Error("Missing the required parameter 'project_gid' when calling getTasksForProject");
        }
        var pathParams = {
          project_gid
        };
        var queryParams = {
          completed_since: opts["completed_since"],
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseArray.TaskResponseArray;
        return this.apiClient.callApi("/projects/{project_gid}/tasks", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTasksForSection",
      value: function getTasksForSection(section_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (section_gid === undefined || section_gid === null) {
          throw new Error("Missing the required parameter 'section_gid' when calling getTasksForSection");
        }
        var pathParams = {
          section_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseArray.TaskResponseArray;
        return this.apiClient.callApi("/sections/{section_gid}/tasks", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTasksForTag",
      value: function getTasksForTag(tag_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (tag_gid === undefined || tag_gid === null) {
          throw new Error("Missing the required parameter 'tag_gid' when calling getTasksForTag");
        }
        var pathParams = {
          tag_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseArray.TaskResponseArray;
        return this.apiClient.callApi("/tags/{tag_gid}/tasks", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTasksForUserTaskList",
      value: function getTasksForUserTaskList(user_task_list_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (user_task_list_gid === undefined || user_task_list_gid === null) {
          throw new Error("Missing the required parameter 'user_task_list_gid' when calling getTasksForUserTaskList");
        }
        var pathParams = {
          user_task_list_gid
        };
        var queryParams = {
          completed_since: opts["completed_since"],
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseArray.TaskResponseArray;
        return this.apiClient.callApi("/user_task_lists/{user_task_list_gid}/tasks", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "removeDependenciesForTask",
      value: function removeDependenciesForTask(body, task_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling removeDependenciesForTask");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling removeDependenciesForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}/removeDependencies", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "removeDependentsForTask",
      value: function removeDependentsForTask(body, task_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling removeDependentsForTask");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling removeDependentsForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}/removeDependents", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "removeFollowerForTask",
      value: function removeFollowerForTask(body, task_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling removeFollowerForTask");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling removeFollowerForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseData.TaskResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}/removeFollowers", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "removeProjectForTask",
      value: function removeProjectForTask(body, task_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling removeProjectForTask");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling removeProjectForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}/removeProject", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "removeTagForTask",
      value: function removeTagForTask(body, task_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling removeTagForTask");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling removeTagForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}/removeTag", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "searchTasksForWorkspace",
      value: function searchTasksForWorkspace(workspace_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (workspace_gid === undefined || workspace_gid === null) {
          throw new Error("Missing the required parameter 'workspace_gid' when calling searchTasksForWorkspace");
        }
        var pathParams = {
          workspace_gid
        };
        var queryParams = {
          text: opts["text"],
          resource_subtype: opts["resource_subtype"],
          "assignee.any": opts["assignee_any"],
          "assignee.not": opts["assignee_not"],
          "portfolios.any": opts["portfolios_any"],
          "projects.any": opts["projects_any"],
          "projects.not": opts["projects_not"],
          "projects.all": opts["projects_all"],
          "sections.any": opts["sections_any"],
          "sections.not": opts["sections_not"],
          "sections.all": opts["sections_all"],
          "tags.any": opts["tags_any"],
          "tags.not": opts["tags_not"],
          "tags.all": opts["tags_all"],
          "teams.any": opts["teams_any"],
          "followers.not": opts["followers_not"],
          "created_by.any": opts["created_by_any"],
          "created_by.not": opts["created_by_not"],
          "assigned_by.any": opts["assigned_by_any"],
          "assigned_by.not": opts["assigned_by_not"],
          "liked_by.not": opts["liked_by_not"],
          "commented_on_by.not": opts["commented_on_by_not"],
          "due_on.before": opts["due_on_before"],
          "due_on.after": opts["due_on_after"],
          due_on: opts["due_on"],
          "due_at.before": opts["due_at_before"],
          "due_at.after": opts["due_at_after"],
          "start_on.before": opts["start_on_before"],
          "start_on.after": opts["start_on_after"],
          start_on: opts["start_on"],
          "created_on.before": opts["created_on_before"],
          "created_on.after": opts["created_on_after"],
          created_on: opts["created_on"],
          "created_at.before": opts["created_at_before"],
          "created_at.after": opts["created_at_after"],
          "completed_on.before": opts["completed_on_before"],
          "completed_on.after": opts["completed_on_after"],
          completed_on: opts["completed_on"],
          "completed_at.before": opts["completed_at_before"],
          "completed_at.after": opts["completed_at_after"],
          "modified_on.before": opts["modified_on_before"],
          "modified_on.after": opts["modified_on_after"],
          modified_on: opts["modified_on"],
          "modified_at.before": opts["modified_at_before"],
          "modified_at.after": opts["modified_at_after"],
          is_blocking: opts["is_blocking"],
          is_blocked: opts["is_blocked"],
          has_attachment: opts["has_attachment"],
          completed: opts["completed"],
          is_subtask: opts["is_subtask"],
          sort_by: opts["sort_by"],
          sort_ascending: opts["sort_ascending"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseArray.TaskResponseArray;
        return this.apiClient.callApi("/workspaces/{workspace_gid}/tasks/search", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "setParentForTask",
      value: function setParentForTask(body, task_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling setParentForTask");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling setParentForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseData.TaskResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}/setParent", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updateTask",
      value: function updateTask(body, task_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling updateTask");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling updateTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TaskResponseData.TaskResponseData;
        return this.apiClient.callApi("/tasks/{task_gid}", "PUT", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return TasksApi2;
  }();
  exports.TasksApi = TasksApi;
});

// node_modules/asana/dist/api/TeamMembershipsApi.js
var require_TeamMembershipsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamMembershipsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _ErrorResponse = require_ErrorResponse();
  var _TeamMembershipResponseArray = require_TeamMembershipResponseArray();
  var _TeamMembershipResponseData = require_TeamMembershipResponseData();
  var TeamMembershipsApi = function() {
    function TeamMembershipsApi2(apiClient) {
      _classCallCheck(this, TeamMembershipsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(TeamMembershipsApi2, [{
      key: "getTeamMembership",
      value: function getTeamMembership(team_membership_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (team_membership_gid === undefined || team_membership_gid === null) {
          throw new Error("Missing the required parameter 'team_membership_gid' when calling getTeamMembership");
        }
        var pathParams = {
          team_membership_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TeamMembershipResponseData.TeamMembershipResponseData;
        return this.apiClient.callApi("/team_memberships/{team_membership_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTeamMemberships",
      value: function getTeamMemberships(opts, callback) {
        opts = opts || {};
        var postBody = null;
        var pathParams = {};
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          team: opts["team"],
          user: opts["user"],
          workspace: opts["workspace"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TeamMembershipResponseArray.TeamMembershipResponseArray;
        return this.apiClient.callApi("/team_memberships", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTeamMembershipsForTeam",
      value: function getTeamMembershipsForTeam(team_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (team_gid === undefined || team_gid === null) {
          throw new Error("Missing the required parameter 'team_gid' when calling getTeamMembershipsForTeam");
        }
        var pathParams = {
          team_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TeamMembershipResponseArray.TeamMembershipResponseArray;
        return this.apiClient.callApi("/teams/{team_gid}/team_memberships", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTeamMembershipsForUser",
      value: function getTeamMembershipsForUser(user_gid, workspace, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (user_gid === undefined || user_gid === null) {
          throw new Error("Missing the required parameter 'user_gid' when calling getTeamMembershipsForUser");
        }
        if (workspace === undefined || workspace === null) {
          throw new Error("Missing the required parameter 'workspace' when calling getTeamMembershipsForUser");
        }
        var pathParams = {
          user_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          workspace,
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TeamMembershipResponseArray.TeamMembershipResponseArray;
        return this.apiClient.callApi("/users/{user_gid}/team_memberships", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return TeamMembershipsApi2;
  }();
  exports.TeamMembershipsApi = TeamMembershipsApi;
});

// node_modules/asana/dist/api/TeamsApi.js
var require_TeamsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TeamsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _TeamGidAddUserBody = require_TeamGidAddUserBody();
  var _TeamGidRemoveUserBody = require_TeamGidRemoveUserBody();
  var _TeamMembershipResponseData = require_TeamMembershipResponseData();
  var _TeamResponseArray = require_TeamResponseArray();
  var _TeamResponseData = require_TeamResponseData();
  var _TeamsBody = require_TeamsBody();
  var _TeamsTeamGidBody = require_TeamsTeamGidBody();
  var TeamsApi = function() {
    function TeamsApi2(apiClient) {
      _classCallCheck(this, TeamsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(TeamsApi2, [{
      key: "addUserForTeam",
      value: function addUserForTeam(body, team_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling addUserForTeam");
        }
        if (team_gid === undefined || team_gid === null) {
          throw new Error("Missing the required parameter 'team_gid' when calling addUserForTeam");
        }
        var pathParams = {
          team_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TeamMembershipResponseData.TeamMembershipResponseData;
        return this.apiClient.callApi("/teams/{team_gid}/addUser", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "createTeam",
      value: function createTeam(body, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createTeam");
        }
        var pathParams = {};
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TeamResponseData.TeamResponseData;
        return this.apiClient.callApi("/teams", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTeam",
      value: function getTeam(team_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (team_gid === undefined || team_gid === null) {
          throw new Error("Missing the required parameter 'team_gid' when calling getTeam");
        }
        var pathParams = {
          team_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TeamResponseData.TeamResponseData;
        return this.apiClient.callApi("/teams/{team_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTeamsForUser",
      value: function getTeamsForUser(user_gid, organization, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (user_gid === undefined || user_gid === null) {
          throw new Error("Missing the required parameter 'user_gid' when calling getTeamsForUser");
        }
        if (organization === undefined || organization === null) {
          throw new Error("Missing the required parameter 'organization' when calling getTeamsForUser");
        }
        var pathParams = {
          user_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          organization,
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TeamResponseArray.TeamResponseArray;
        return this.apiClient.callApi("/users/{user_gid}/teams", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTeamsForWorkspace",
      value: function getTeamsForWorkspace(workspace_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (workspace_gid === undefined || workspace_gid === null) {
          throw new Error("Missing the required parameter 'workspace_gid' when calling getTeamsForWorkspace");
        }
        var pathParams = {
          workspace_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TeamResponseArray.TeamResponseArray;
        return this.apiClient.callApi("/workspaces/{workspace_gid}/teams", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "removeUserForTeam",
      value: function removeUserForTeam(body, team_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling removeUserForTeam");
        }
        if (team_gid === undefined || team_gid === null) {
          throw new Error("Missing the required parameter 'team_gid' when calling removeUserForTeam");
        }
        var pathParams = {
          team_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/teams/{team_gid}/removeUser", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updateTeam",
      value: function updateTeam(body, team_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling updateTeam");
        }
        if (team_gid === undefined || team_gid === null) {
          throw new Error("Missing the required parameter 'team_gid' when calling updateTeam");
        }
        var pathParams = {
          team_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TeamResponseData.TeamResponseData;
        return this.apiClient.callApi("/teams/{team_gid}", "PUT", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return TeamsApi2;
  }();
  exports.TeamsApi = TeamsApi;
});

// node_modules/asana/dist/api/TimePeriodsApi.js
var require_TimePeriodsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TimePeriodsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _ErrorResponse = require_ErrorResponse();
  var _TimePeriodResponseArray = require_TimePeriodResponseArray();
  var _TimePeriodResponseData = require_TimePeriodResponseData();
  var TimePeriodsApi = function() {
    function TimePeriodsApi2(apiClient) {
      _classCallCheck(this, TimePeriodsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(TimePeriodsApi2, [{
      key: "getTimePeriod",
      value: function getTimePeriod(time_period_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (time_period_gid === undefined || time_period_gid === null) {
          throw new Error("Missing the required parameter 'time_period_gid' when calling getTimePeriod");
        }
        var pathParams = {
          time_period_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TimePeriodResponseData.TimePeriodResponseData;
        return this.apiClient.callApi("/time_periods/{time_period_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTimePeriods",
      value: function getTimePeriods(workspace, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (workspace === undefined || workspace === null) {
          throw new Error("Missing the required parameter 'workspace' when calling getTimePeriods");
        }
        var pathParams = {};
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          start_on: opts["start_on"],
          end_on: opts["end_on"],
          workspace,
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TimePeriodResponseArray.TimePeriodResponseArray;
        return this.apiClient.callApi("/time_periods", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return TimePeriodsApi2;
  }();
  exports.TimePeriodsApi = TimePeriodsApi;
});

// node_modules/asana/dist/api/TimeTrackingEntriesApi.js
var require_TimeTrackingEntriesApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TimeTrackingEntriesApi = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _TaskGidTimeTrackingEntriesBody = require_TaskGidTimeTrackingEntriesBody();
  var _TimeTrackingEntriesTimeTrackingEntryGidBody = require_TimeTrackingEntriesTimeTrackingEntryGidBody();
  var _TimeTrackingEntryBaseData = require_TimeTrackingEntryBaseData();
  var _TimeTrackingEntryCompactArray = require_TimeTrackingEntryCompactArray();
  var TimeTrackingEntriesApi = function() {
    function TimeTrackingEntriesApi2(apiClient) {
      _classCallCheck(this, TimeTrackingEntriesApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(TimeTrackingEntriesApi2, [{
      key: "createTimeTrackingEntry",
      value: function createTimeTrackingEntry(body, task_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createTimeTrackingEntry");
        }
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling createTimeTrackingEntry");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TimeTrackingEntryBaseData.TimeTrackingEntryBaseData;
        return this.apiClient.callApi("/tasks/{task_gid}/time_tracking_entries", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "deleteTimeTrackingEntry",
      value: function deleteTimeTrackingEntry(time_tracking_entry_gid, callback) {
        var postBody = null;
        if (time_tracking_entry_gid === undefined || time_tracking_entry_gid === null) {
          throw new Error("Missing the required parameter 'time_tracking_entry_gid' when calling deleteTimeTrackingEntry");
        }
        var pathParams = {
          time_tracking_entry_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/time_tracking_entries/{time_tracking_entry_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTimeTrackingEntriesForTask",
      value: function getTimeTrackingEntriesForTask(task_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (task_gid === undefined || task_gid === null) {
          throw new Error("Missing the required parameter 'task_gid' when calling getTimeTrackingEntriesForTask");
        }
        var pathParams = {
          task_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TimeTrackingEntryCompactArray.TimeTrackingEntryCompactArray;
        return this.apiClient.callApi("/tasks/{task_gid}/time_tracking_entries", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getTimeTrackingEntry",
      value: function getTimeTrackingEntry(time_tracking_entry_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (time_tracking_entry_gid === undefined || time_tracking_entry_gid === null) {
          throw new Error("Missing the required parameter 'time_tracking_entry_gid' when calling getTimeTrackingEntry");
        }
        var pathParams = {
          time_tracking_entry_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TimeTrackingEntryBaseData.TimeTrackingEntryBaseData;
        return this.apiClient.callApi("/time_tracking_entries/{time_tracking_entry_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updateTimeTrackingEntry",
      value: function updateTimeTrackingEntry(body, time_tracking_entry_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling updateTimeTrackingEntry");
        }
        if (time_tracking_entry_gid === undefined || time_tracking_entry_gid === null) {
          throw new Error("Missing the required parameter 'time_tracking_entry_gid' when calling updateTimeTrackingEntry");
        }
        var pathParams = {
          time_tracking_entry_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _TimeTrackingEntryBaseData.TimeTrackingEntryBaseData;
        return this.apiClient.callApi("/time_tracking_entries/{time_tracking_entry_gid}", "PUT", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return TimeTrackingEntriesApi2;
  }();
  exports.TimeTrackingEntriesApi = TimeTrackingEntriesApi;
});

// node_modules/asana/dist/api/TypeaheadApi.js
var require_TypeaheadApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.TypeaheadApi = undefined;
  var _ApiClient = require_ApiClient();
  var _AsanaNamedResourceArray = require_AsanaNamedResourceArray();
  var _ErrorResponse = require_ErrorResponse();
  var TypeaheadApi = function() {
    function TypeaheadApi2(apiClient) {
      _classCallCheck(this, TypeaheadApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(TypeaheadApi2, [{
      key: "typeaheadForWorkspace",
      value: function typeaheadForWorkspace(workspace_gid, resource_type, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (workspace_gid === undefined || workspace_gid === null) {
          throw new Error("Missing the required parameter 'workspace_gid' when calling typeaheadForWorkspace");
        }
        if (resource_type === undefined || resource_type === null) {
          throw new Error("Missing the required parameter 'resource_type' when calling typeaheadForWorkspace");
        }
        var pathParams = {
          workspace_gid
        };
        var queryParams = {
          resource_type,
          type: opts["type"],
          query: opts["query"],
          count: opts["count"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _AsanaNamedResourceArray.AsanaNamedResourceArray;
        return this.apiClient.callApi("/workspaces/{workspace_gid}/typeahead", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return TypeaheadApi2;
  }();
  exports.TypeaheadApi = TypeaheadApi;
});

// node_modules/asana/dist/api/UserTaskListsApi.js
var require_UserTaskListsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UserTaskListsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _ErrorResponse = require_ErrorResponse();
  var _UserTaskListResponseData = require_UserTaskListResponseData();
  var UserTaskListsApi = function() {
    function UserTaskListsApi2(apiClient) {
      _classCallCheck(this, UserTaskListsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(UserTaskListsApi2, [{
      key: "getUserTaskList",
      value: function getUserTaskList(user_task_list_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (user_task_list_gid === undefined || user_task_list_gid === null) {
          throw new Error("Missing the required parameter 'user_task_list_gid' when calling getUserTaskList");
        }
        var pathParams = {
          user_task_list_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _UserTaskListResponseData.UserTaskListResponseData;
        return this.apiClient.callApi("/user_task_lists/{user_task_list_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getUserTaskListForUser",
      value: function getUserTaskListForUser(user_gid, workspace, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (user_gid === undefined || user_gid === null) {
          throw new Error("Missing the required parameter 'user_gid' when calling getUserTaskListForUser");
        }
        if (workspace === undefined || workspace === null) {
          throw new Error("Missing the required parameter 'workspace' when calling getUserTaskListForUser");
        }
        var pathParams = {
          user_gid
        };
        var queryParams = {
          workspace,
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _UserTaskListResponseData.UserTaskListResponseData;
        return this.apiClient.callApi("/users/{user_gid}/user_task_list", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return UserTaskListsApi2;
  }();
  exports.UserTaskListsApi = UserTaskListsApi;
});

// node_modules/asana/dist/api/UsersApi.js
var require_UsersApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.UsersApi = undefined;
  var _ApiClient = require_ApiClient();
  var _AsanaNamedResourceArray = require_AsanaNamedResourceArray();
  var _ErrorResponse = require_ErrorResponse();
  var _UserResponseArray = require_UserResponseArray();
  var _UserResponseData = require_UserResponseData();
  var UsersApi = function() {
    function UsersApi2(apiClient) {
      _classCallCheck(this, UsersApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(UsersApi2, [{
      key: "getFavoritesForUser",
      value: function getFavoritesForUser(user_gid, resource_type, workspace, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (user_gid === undefined || user_gid === null) {
          throw new Error("Missing the required parameter 'user_gid' when calling getFavoritesForUser");
        }
        if (resource_type === undefined || resource_type === null) {
          throw new Error("Missing the required parameter 'resource_type' when calling getFavoritesForUser");
        }
        if (workspace === undefined || workspace === null) {
          throw new Error("Missing the required parameter 'workspace' when calling getFavoritesForUser");
        }
        var pathParams = {
          user_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          resource_type,
          workspace,
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _AsanaNamedResourceArray.AsanaNamedResourceArray;
        return this.apiClient.callApi("/users/{user_gid}/favorites", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getUser",
      value: function getUser(user_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (user_gid === undefined || user_gid === null) {
          throw new Error("Missing the required parameter 'user_gid' when calling getUser");
        }
        var pathParams = {
          user_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _UserResponseData.UserResponseData;
        return this.apiClient.callApi("/users/{user_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getUsers",
      value: function getUsers(opts, callback) {
        opts = opts || {};
        var postBody = null;
        var pathParams = {};
        var queryParams = {
          workspace: opts["workspace"],
          team: opts["team"],
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _UserResponseArray.UserResponseArray;
        return this.apiClient.callApi("/users", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getUsersForTeam",
      value: function getUsersForTeam(team_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (team_gid === undefined || team_gid === null) {
          throw new Error("Missing the required parameter 'team_gid' when calling getUsersForTeam");
        }
        var pathParams = {
          team_gid
        };
        var queryParams = {
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _UserResponseArray.UserResponseArray;
        return this.apiClient.callApi("/teams/{team_gid}/users", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getUsersForWorkspace",
      value: function getUsersForWorkspace(workspace_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (workspace_gid === undefined || workspace_gid === null) {
          throw new Error("Missing the required parameter 'workspace_gid' when calling getUsersForWorkspace");
        }
        var pathParams = {
          workspace_gid
        };
        var queryParams = {
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _UserResponseArray.UserResponseArray;
        return this.apiClient.callApi("/workspaces/{workspace_gid}/users", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return UsersApi2;
  }();
  exports.UsersApi = UsersApi;
});

// node_modules/asana/dist/api/WebhooksApi.js
var require_WebhooksApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WebhooksApi = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _WebhookResponseArray = require_WebhookResponseArray();
  var _WebhookResponseData = require_WebhookResponseData();
  var _WebhooksBody = require_WebhooksBody();
  var _WebhooksWebhookGidBody = require_WebhooksWebhookGidBody();
  var WebhooksApi = function() {
    function WebhooksApi2(apiClient) {
      _classCallCheck(this, WebhooksApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(WebhooksApi2, [{
      key: "createWebhook",
      value: function createWebhook(body, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling createWebhook");
        }
        var pathParams = {};
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _WebhookResponseData.WebhookResponseData;
        return this.apiClient.callApi("/webhooks", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "deleteWebhook",
      value: function deleteWebhook(webhook_gid, callback) {
        var postBody = null;
        if (webhook_gid === undefined || webhook_gid === null) {
          throw new Error("Missing the required parameter 'webhook_gid' when calling deleteWebhook");
        }
        var pathParams = {
          webhook_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/webhooks/{webhook_gid}", "DELETE", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getWebhook",
      value: function getWebhook(webhook_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (webhook_gid === undefined || webhook_gid === null) {
          throw new Error("Missing the required parameter 'webhook_gid' when calling getWebhook");
        }
        var pathParams = {
          webhook_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _WebhookResponseData.WebhookResponseData;
        return this.apiClient.callApi("/webhooks/{webhook_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getWebhooks",
      value: function getWebhooks(workspace, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (workspace === undefined || workspace === null) {
          throw new Error("Missing the required parameter 'workspace' when calling getWebhooks");
        }
        var pathParams = {};
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          workspace,
          resource: opts["resource"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _WebhookResponseArray.WebhookResponseArray;
        return this.apiClient.callApi("/webhooks", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updateWebhook",
      value: function updateWebhook(body, webhook_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling updateWebhook");
        }
        if (webhook_gid === undefined || webhook_gid === null) {
          throw new Error("Missing the required parameter 'webhook_gid' when calling updateWebhook");
        }
        var pathParams = {
          webhook_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _WebhookResponseData.WebhookResponseData;
        return this.apiClient.callApi("/webhooks/{webhook_gid}", "PUT", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return WebhooksApi2;
  }();
  exports.WebhooksApi = WebhooksApi;
});

// node_modules/asana/dist/api/WorkspaceMembershipsApi.js
var require_WorkspaceMembershipsApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspaceMembershipsApi = undefined;
  var _ApiClient = require_ApiClient();
  var _ErrorResponse = require_ErrorResponse();
  var _WorkspaceMembershipResponseArray = require_WorkspaceMembershipResponseArray();
  var _WorkspaceMembershipResponseData = require_WorkspaceMembershipResponseData();
  var WorkspaceMembershipsApi = function() {
    function WorkspaceMembershipsApi2(apiClient) {
      _classCallCheck(this, WorkspaceMembershipsApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(WorkspaceMembershipsApi2, [{
      key: "getWorkspaceMembership",
      value: function getWorkspaceMembership(workspace_membership_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (workspace_membership_gid === undefined || workspace_membership_gid === null) {
          throw new Error("Missing the required parameter 'workspace_membership_gid' when calling getWorkspaceMembership");
        }
        var pathParams = {
          workspace_membership_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _WorkspaceMembershipResponseData.WorkspaceMembershipResponseData;
        return this.apiClient.callApi("/workspace_memberships/{workspace_membership_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getWorkspaceMembershipsForUser",
      value: function getWorkspaceMembershipsForUser(user_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (user_gid === undefined || user_gid === null) {
          throw new Error("Missing the required parameter 'user_gid' when calling getWorkspaceMembershipsForUser");
        }
        var pathParams = {
          user_gid
        };
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _WorkspaceMembershipResponseArray.WorkspaceMembershipResponseArray;
        return this.apiClient.callApi("/users/{user_gid}/workspace_memberships", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getWorkspaceMembershipsForWorkspace",
      value: function getWorkspaceMembershipsForWorkspace(workspace_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (workspace_gid === undefined || workspace_gid === null) {
          throw new Error("Missing the required parameter 'workspace_gid' when calling getWorkspaceMembershipsForWorkspace");
        }
        var pathParams = {
          workspace_gid
        };
        var queryParams = {
          user: opts["user"],
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _WorkspaceMembershipResponseArray.WorkspaceMembershipResponseArray;
        return this.apiClient.callApi("/workspaces/{workspace_gid}/workspace_memberships", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return WorkspaceMembershipsApi2;
  }();
  exports.WorkspaceMembershipsApi = WorkspaceMembershipsApi;
});

// node_modules/asana/dist/api/WorkspacesApi.js
var require_WorkspacesApi = __commonJS((exports) => {
  var _typeof = function(obj) {
    return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
      return typeof obj2;
    } : function(obj2) {
      return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
  };
  var _classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var _defineProperties = function(target, props) {
    for (var i = 0;i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  };
  var _createClass = function(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  };
  var _toPropertyKey = function(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
  };
  var _toPrimitive = function(input, hint) {
    if (_typeof(input) !== "object" || input === null)
      return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof(res) !== "object")
        return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  };
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.WorkspacesApi = undefined;
  var _ApiClient = require_ApiClient();
  var _EmptyResponseData = require_EmptyResponseData();
  var _ErrorResponse = require_ErrorResponse();
  var _UserBaseResponseData = require_UserBaseResponseData();
  var _WorkspaceGidAddUserBody = require_WorkspaceGidAddUserBody();
  var _WorkspaceGidRemoveUserBody = require_WorkspaceGidRemoveUserBody();
  var _WorkspaceResponseArray = require_WorkspaceResponseArray();
  var _WorkspaceResponseData = require_WorkspaceResponseData();
  var _WorkspacesWorkspaceGidBody = require_WorkspacesWorkspaceGidBody();
  var WorkspacesApi = function() {
    function WorkspacesApi2(apiClient) {
      _classCallCheck(this, WorkspacesApi2);
      this.apiClient = apiClient || _ApiClient.ApiClient.instance;
    }
    _createClass(WorkspacesApi2, [{
      key: "addUserForWorkspace",
      value: function addUserForWorkspace(body, workspace_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling addUserForWorkspace");
        }
        if (workspace_gid === undefined || workspace_gid === null) {
          throw new Error("Missing the required parameter 'workspace_gid' when calling addUserForWorkspace");
        }
        var pathParams = {
          workspace_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _UserBaseResponseData.UserBaseResponseData;
        return this.apiClient.callApi("/workspaces/{workspace_gid}/addUser", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getWorkspace",
      value: function getWorkspace(workspace_gid, opts, callback) {
        opts = opts || {};
        var postBody = null;
        if (workspace_gid === undefined || workspace_gid === null) {
          throw new Error("Missing the required parameter 'workspace_gid' when calling getWorkspace");
        }
        var pathParams = {
          workspace_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _WorkspaceResponseData.WorkspaceResponseData;
        return this.apiClient.callApi("/workspaces/{workspace_gid}", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "getWorkspaces",
      value: function getWorkspaces(opts, callback) {
        opts = opts || {};
        var postBody = null;
        var pathParams = {};
        var queryParams = {
          limit: opts["limit"],
          offset: opts["offset"],
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = [];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _WorkspaceResponseArray.WorkspaceResponseArray;
        return this.apiClient.callApi("/workspaces", "GET", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "removeUserForWorkspace",
      value: function removeUserForWorkspace(body, workspace_gid, callback) {
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling removeUserForWorkspace");
        }
        if (workspace_gid === undefined || workspace_gid === null) {
          throw new Error("Missing the required parameter 'workspace_gid' when calling removeUserForWorkspace");
        }
        var pathParams = {
          workspace_gid
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _EmptyResponseData.EmptyResponseData;
        return this.apiClient.callApi("/workspaces/{workspace_gid}/removeUser", "POST", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }, {
      key: "updateWorkspace",
      value: function updateWorkspace(body, workspace_gid, opts, callback) {
        opts = opts || {};
        var postBody = body;
        if (body === undefined || body === null) {
          throw new Error("Missing the required parameter 'body' when calling updateWorkspace");
        }
        if (workspace_gid === undefined || workspace_gid === null) {
          throw new Error("Missing the required parameter 'workspace_gid' when calling updateWorkspace");
        }
        var pathParams = {
          workspace_gid
        };
        var queryParams = {
          opt_fields: this.apiClient.buildCollectionParam(opts["opt_fields"], "csv")
        };
        var headerParams = {};
        var formParams = {};
        var authNames = ["oauth2"];
        var contentTypes = ["application/json; charset=UTF-8"];
        var accepts = ["application/json; charset=UTF-8"];
        var returnType = _WorkspaceResponseData.WorkspaceResponseData;
        return this.apiClient.callApi("/workspaces/{workspace_gid}", "PUT", pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
      }
    }]);
    return WorkspacesApi2;
  }();
  exports.WorkspacesApi = WorkspacesApi;
});

// node_modules/asana/dist/index.js
var require_dist2 = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "AddCustomFieldSettingRequest", {
    enumerable: true,
    get: function get() {
      return _AddCustomFieldSettingRequest.AddCustomFieldSettingRequest;
    }
  });
  Object.defineProperty(exports, "AddFollowersRequest", {
    enumerable: true,
    get: function get() {
      return _AddFollowersRequest.AddFollowersRequest;
    }
  });
  Object.defineProperty(exports, "AddMembersRequest", {
    enumerable: true,
    get: function get() {
      return _AddMembersRequest.AddMembersRequest;
    }
  });
  Object.defineProperty(exports, "AllOfProjectResponseOwner", {
    enumerable: true,
    get: function get() {
      return _AllOfProjectResponseOwner.AllOfProjectResponseOwner;
    }
  });
  Object.defineProperty(exports, "AllOfProjectTemplateBaseOwner", {
    enumerable: true,
    get: function get() {
      return _AllOfProjectTemplateBaseOwner.AllOfProjectTemplateBaseOwner;
    }
  });
  Object.defineProperty(exports, "AllOfProjectTemplateResponseOwner", {
    enumerable: true,
    get: function get() {
      return _AllOfProjectTemplateResponseOwner.AllOfProjectTemplateResponseOwner;
    }
  });
  Object.defineProperty(exports, "AllOfStoryResponseNewDateValue", {
    enumerable: true,
    get: function get() {
      return _AllOfStoryResponseNewDateValue.AllOfStoryResponseNewDateValue;
    }
  });
  Object.defineProperty(exports, "AllOfStoryResponseOldDateValue", {
    enumerable: true,
    get: function get() {
      return _AllOfStoryResponseOldDateValue.AllOfStoryResponseOldDateValue;
    }
  });
  Object.defineProperty(exports, "AllOfUserTaskListBaseOwner", {
    enumerable: true,
    get: function get() {
      return _AllOfUserTaskListBaseOwner.AllOfUserTaskListBaseOwner;
    }
  });
  Object.defineProperty(exports, "AllOfUserTaskListBaseWorkspace", {
    enumerable: true,
    get: function get() {
      return _AllOfUserTaskListBaseWorkspace.AllOfUserTaskListBaseWorkspace;
    }
  });
  Object.defineProperty(exports, "AllOfUserTaskListCompactOwner", {
    enumerable: true,
    get: function get() {
      return _AllOfUserTaskListCompactOwner.AllOfUserTaskListCompactOwner;
    }
  });
  Object.defineProperty(exports, "AllOfUserTaskListCompactWorkspace", {
    enumerable: true,
    get: function get() {
      return _AllOfUserTaskListCompactWorkspace.AllOfUserTaskListCompactWorkspace;
    }
  });
  Object.defineProperty(exports, "AllOfUserTaskListRequestOwner", {
    enumerable: true,
    get: function get() {
      return _AllOfUserTaskListRequestOwner.AllOfUserTaskListRequestOwner;
    }
  });
  Object.defineProperty(exports, "AllOfUserTaskListRequestWorkspace", {
    enumerable: true,
    get: function get() {
      return _AllOfUserTaskListRequestWorkspace.AllOfUserTaskListRequestWorkspace;
    }
  });
  Object.defineProperty(exports, "AllOfUserTaskListResponseOwner", {
    enumerable: true,
    get: function get() {
      return _AllOfUserTaskListResponseOwner.AllOfUserTaskListResponseOwner;
    }
  });
  Object.defineProperty(exports, "AllOfUserTaskListResponseWorkspace", {
    enumerable: true,
    get: function get() {
      return _AllOfUserTaskListResponseWorkspace.AllOfUserTaskListResponseWorkspace;
    }
  });
  Object.defineProperty(exports, "AllOfWorkspaceMembershipResponseUserTaskListOwner", {
    enumerable: true,
    get: function get() {
      return _AllOfWorkspaceMembershipResponseUserTaskListOwner.AllOfWorkspaceMembershipResponseUserTaskListOwner;
    }
  });
  Object.defineProperty(exports, "AllOfWorkspaceMembershipResponseUserTaskListWorkspace", {
    enumerable: true,
    get: function get() {
      return _AllOfWorkspaceMembershipResponseUserTaskListWorkspace.AllOfWorkspaceMembershipResponseUserTaskListWorkspace;
    }
  });
  Object.defineProperty(exports, "ApiClient", {
    enumerable: true,
    get: function get() {
      return _ApiClient.ApiClient;
    }
  });
  Object.defineProperty(exports, "AsanaNamedResource", {
    enumerable: true,
    get: function get() {
      return _AsanaNamedResource.AsanaNamedResource;
    }
  });
  Object.defineProperty(exports, "AsanaNamedResourceArray", {
    enumerable: true,
    get: function get() {
      return _AsanaNamedResourceArray.AsanaNamedResourceArray;
    }
  });
  Object.defineProperty(exports, "AsanaResource", {
    enumerable: true,
    get: function get() {
      return _AsanaResource.AsanaResource;
    }
  });
  Object.defineProperty(exports, "AttachmentBase", {
    enumerable: true,
    get: function get() {
      return _AttachmentBase.AttachmentBase;
    }
  });
  Object.defineProperty(exports, "AttachmentCompact", {
    enumerable: true,
    get: function get() {
      return _AttachmentCompact.AttachmentCompact;
    }
  });
  Object.defineProperty(exports, "AttachmentRequest", {
    enumerable: true,
    get: function get() {
      return _AttachmentRequest.AttachmentRequest;
    }
  });
  Object.defineProperty(exports, "AttachmentResponse", {
    enumerable: true,
    get: function get() {
      return _AttachmentResponse.AttachmentResponse;
    }
  });
  Object.defineProperty(exports, "AttachmentResponseArray", {
    enumerable: true,
    get: function get() {
      return _AttachmentResponseArray.AttachmentResponseArray;
    }
  });
  Object.defineProperty(exports, "AttachmentResponseData", {
    enumerable: true,
    get: function get() {
      return _AttachmentResponseData.AttachmentResponseData;
    }
  });
  Object.defineProperty(exports, "AttachmentResponseParent", {
    enumerable: true,
    get: function get() {
      return _AttachmentResponseParent.AttachmentResponseParent;
    }
  });
  Object.defineProperty(exports, "AttachmentResponseParentCreatedBy", {
    enumerable: true,
    get: function get() {
      return _AttachmentResponseParentCreatedBy.AttachmentResponseParentCreatedBy;
    }
  });
  Object.defineProperty(exports, "AttachmentsApi", {
    enumerable: true,
    get: function get() {
      return _AttachmentsApi.AttachmentsApi;
    }
  });
  Object.defineProperty(exports, "AuditLogAPIApi", {
    enumerable: true,
    get: function get() {
      return _AuditLogAPIApi.AuditLogAPIApi;
    }
  });
  Object.defineProperty(exports, "AuditLogEvent", {
    enumerable: true,
    get: function get() {
      return _AuditLogEvent.AuditLogEvent;
    }
  });
  Object.defineProperty(exports, "AuditLogEventActor", {
    enumerable: true,
    get: function get() {
      return _AuditLogEventActor.AuditLogEventActor;
    }
  });
  Object.defineProperty(exports, "AuditLogEventArray", {
    enumerable: true,
    get: function get() {
      return _AuditLogEventArray.AuditLogEventArray;
    }
  });
  Object.defineProperty(exports, "AuditLogEventContext", {
    enumerable: true,
    get: function get() {
      return _AuditLogEventContext.AuditLogEventContext;
    }
  });
  Object.defineProperty(exports, "AuditLogEventDetails", {
    enumerable: true,
    get: function get() {
      return _AuditLogEventDetails.AuditLogEventDetails;
    }
  });
  Object.defineProperty(exports, "AuditLogEventResource", {
    enumerable: true,
    get: function get() {
      return _AuditLogEventResource.AuditLogEventResource;
    }
  });
  Object.defineProperty(exports, "BatchAPIApi", {
    enumerable: true,
    get: function get() {
      return _BatchAPIApi.BatchAPIApi;
    }
  });
  Object.defineProperty(exports, "BatchBody", {
    enumerable: true,
    get: function get() {
      return _BatchBody.BatchBody;
    }
  });
  Object.defineProperty(exports, "BatchRequest", {
    enumerable: true,
    get: function get() {
      return _BatchRequest.BatchRequest;
    }
  });
  Object.defineProperty(exports, "BatchRequestAction", {
    enumerable: true,
    get: function get() {
      return _BatchRequestAction.BatchRequestAction;
    }
  });
  Object.defineProperty(exports, "BatchRequestActions", {
    enumerable: true,
    get: function get() {
      return _BatchRequestActions.BatchRequestActions;
    }
  });
  Object.defineProperty(exports, "BatchRequestOptions", {
    enumerable: true,
    get: function get() {
      return _BatchRequestOptions.BatchRequestOptions;
    }
  });
  Object.defineProperty(exports, "BatchResponse", {
    enumerable: true,
    get: function get() {
      return _BatchResponse.BatchResponse;
    }
  });
  Object.defineProperty(exports, "BatchResponseArray", {
    enumerable: true,
    get: function get() {
      return _BatchResponseArray.BatchResponseArray;
    }
  });
  Object.defineProperty(exports, "CreateMembershipRequest", {
    enumerable: true,
    get: function get() {
      return _CreateMembershipRequest.CreateMembershipRequest;
    }
  });
  Object.defineProperty(exports, "CreateTimeTrackingEntryRequest", {
    enumerable: true,
    get: function get() {
      return _CreateTimeTrackingEntryRequest.CreateTimeTrackingEntryRequest;
    }
  });
  Object.defineProperty(exports, "CustomFieldBase", {
    enumerable: true,
    get: function get() {
      return _CustomFieldBase.CustomFieldBase;
    }
  });
  Object.defineProperty(exports, "CustomFieldBaseDateValue", {
    enumerable: true,
    get: function get() {
      return _CustomFieldBaseDateValue.CustomFieldBaseDateValue;
    }
  });
  Object.defineProperty(exports, "CustomFieldBaseEnumOptions", {
    enumerable: true,
    get: function get() {
      return _CustomFieldBaseEnumOptions.CustomFieldBaseEnumOptions;
    }
  });
  Object.defineProperty(exports, "CustomFieldBaseEnumValue", {
    enumerable: true,
    get: function get() {
      return _CustomFieldBaseEnumValue.CustomFieldBaseEnumValue;
    }
  });
  Object.defineProperty(exports, "CustomFieldCompact", {
    enumerable: true,
    get: function get() {
      return _CustomFieldCompact.CustomFieldCompact;
    }
  });
  Object.defineProperty(exports, "CustomFieldGidEnumOptionsBody", {
    enumerable: true,
    get: function get() {
      return _CustomFieldGidEnumOptionsBody.CustomFieldGidEnumOptionsBody;
    }
  });
  Object.defineProperty(exports, "CustomFieldRequest", {
    enumerable: true,
    get: function get() {
      return _CustomFieldRequest.CustomFieldRequest;
    }
  });
  Object.defineProperty(exports, "CustomFieldResponse", {
    enumerable: true,
    get: function get() {
      return _CustomFieldResponse.CustomFieldResponse;
    }
  });
  Object.defineProperty(exports, "CustomFieldResponseArray", {
    enumerable: true,
    get: function get() {
      return _CustomFieldResponseArray.CustomFieldResponseArray;
    }
  });
  Object.defineProperty(exports, "CustomFieldResponseCreatedBy", {
    enumerable: true,
    get: function get() {
      return _CustomFieldResponseCreatedBy.CustomFieldResponseCreatedBy;
    }
  });
  Object.defineProperty(exports, "CustomFieldResponseData", {
    enumerable: true,
    get: function get() {
      return _CustomFieldResponseData.CustomFieldResponseData;
    }
  });
  Object.defineProperty(exports, "CustomFieldResponsePeopleValue", {
    enumerable: true,
    get: function get() {
      return _CustomFieldResponsePeopleValue.CustomFieldResponsePeopleValue;
    }
  });
  Object.defineProperty(exports, "CustomFieldSettingBase", {
    enumerable: true,
    get: function get() {
      return _CustomFieldSettingBase.CustomFieldSettingBase;
    }
  });
  Object.defineProperty(exports, "CustomFieldSettingCompact", {
    enumerable: true,
    get: function get() {
      return _CustomFieldSettingCompact.CustomFieldSettingCompact;
    }
  });
  Object.defineProperty(exports, "CustomFieldSettingResponse", {
    enumerable: true,
    get: function get() {
      return _CustomFieldSettingResponse.CustomFieldSettingResponse;
    }
  });
  Object.defineProperty(exports, "CustomFieldSettingResponseArray", {
    enumerable: true,
    get: function get() {
      return _CustomFieldSettingResponseArray.CustomFieldSettingResponseArray;
    }
  });
  Object.defineProperty(exports, "CustomFieldSettingResponseCustomField", {
    enumerable: true,
    get: function get() {
      return _CustomFieldSettingResponseCustomField.CustomFieldSettingResponseCustomField;
    }
  });
  Object.defineProperty(exports, "CustomFieldSettingResponseData", {
    enumerable: true,
    get: function get() {
      return _CustomFieldSettingResponseData.CustomFieldSettingResponseData;
    }
  });
  Object.defineProperty(exports, "CustomFieldSettingResponseParent", {
    enumerable: true,
    get: function get() {
      return _CustomFieldSettingResponseParent.CustomFieldSettingResponseParent;
    }
  });
  Object.defineProperty(exports, "CustomFieldSettingResponseProject", {
    enumerable: true,
    get: function get() {
      return _CustomFieldSettingResponseProject.CustomFieldSettingResponseProject;
    }
  });
  Object.defineProperty(exports, "CustomFieldSettingsApi", {
    enumerable: true,
    get: function get() {
      return _CustomFieldSettingsApi.CustomFieldSettingsApi;
    }
  });
  Object.defineProperty(exports, "CustomFieldsApi", {
    enumerable: true,
    get: function get() {
      return _CustomFieldsApi.CustomFieldsApi;
    }
  });
  Object.defineProperty(exports, "CustomFieldsBody", {
    enumerable: true,
    get: function get() {
      return _CustomFieldsBody.CustomFieldsBody;
    }
  });
  Object.defineProperty(exports, "CustomFieldsCustomFieldGidBody", {
    enumerable: true,
    get: function get() {
      return _CustomFieldsCustomFieldGidBody.CustomFieldsCustomFieldGidBody;
    }
  });
  Object.defineProperty(exports, "DateVariableCompact", {
    enumerable: true,
    get: function get() {
      return _DateVariableCompact.DateVariableCompact;
    }
  });
  Object.defineProperty(exports, "DateVariableRequest", {
    enumerable: true,
    get: function get() {
      return _DateVariableRequest.DateVariableRequest;
    }
  });
  Object.defineProperty(exports, "EmptyResponse", {
    enumerable: true,
    get: function get() {
      return _EmptyResponse.EmptyResponse;
    }
  });
  Object.defineProperty(exports, "EmptyResponseData", {
    enumerable: true,
    get: function get() {
      return _EmptyResponseData.EmptyResponseData;
    }
  });
  Object.defineProperty(exports, "EnumOption", {
    enumerable: true,
    get: function get() {
      return _EnumOption.EnumOption;
    }
  });
  Object.defineProperty(exports, "EnumOptionBase", {
    enumerable: true,
    get: function get() {
      return _EnumOptionBase.EnumOptionBase;
    }
  });
  Object.defineProperty(exports, "EnumOptionData", {
    enumerable: true,
    get: function get() {
      return _EnumOptionData.EnumOptionData;
    }
  });
  Object.defineProperty(exports, "EnumOptionInsertRequest", {
    enumerable: true,
    get: function get() {
      return _EnumOptionInsertRequest.EnumOptionInsertRequest;
    }
  });
  Object.defineProperty(exports, "EnumOptionRequest", {
    enumerable: true,
    get: function get() {
      return _EnumOptionRequest.EnumOptionRequest;
    }
  });
  Object.defineProperty(exports, "EnumOptionsEnumOptionGidBody", {
    enumerable: true,
    get: function get() {
      return _EnumOptionsEnumOptionGidBody.EnumOptionsEnumOptionGidBody;
    }
  });
  Object.defineProperty(exports, "EnumOptionsInsertBody", {
    enumerable: true,
    get: function get() {
      return _EnumOptionsInsertBody.EnumOptionsInsertBody;
    }
  });
  Object.defineProperty(exports, "Error", {
    enumerable: true,
    get: function get() {
      return _Error.Error;
    }
  });
  Object.defineProperty(exports, "ErrorResponse", {
    enumerable: true,
    get: function get() {
      return _ErrorResponse.ErrorResponse;
    }
  });
  Object.defineProperty(exports, "ErrorResponseErrors", {
    enumerable: true,
    get: function get() {
      return _ErrorResponseErrors.ErrorResponseErrors;
    }
  });
  Object.defineProperty(exports, "EventResponse", {
    enumerable: true,
    get: function get() {
      return _EventResponse.EventResponse;
    }
  });
  Object.defineProperty(exports, "EventResponseArray", {
    enumerable: true,
    get: function get() {
      return _EventResponseArray.EventResponseArray;
    }
  });
  Object.defineProperty(exports, "EventResponseChange", {
    enumerable: true,
    get: function get() {
      return _EventResponseChange.EventResponseChange;
    }
  });
  Object.defineProperty(exports, "EventResponseParent", {
    enumerable: true,
    get: function get() {
      return _EventResponseParent.EventResponseParent;
    }
  });
  Object.defineProperty(exports, "EventResponseResource", {
    enumerable: true,
    get: function get() {
      return _EventResponseResource.EventResponseResource;
    }
  });
  Object.defineProperty(exports, "EventResponseUser", {
    enumerable: true,
    get: function get() {
      return _EventResponseUser.EventResponseUser;
    }
  });
  Object.defineProperty(exports, "EventsApi", {
    enumerable: true,
    get: function get() {
      return _EventsApi.EventsApi;
    }
  });
  Object.defineProperty(exports, "GoalAddSubgoalRequest", {
    enumerable: true,
    get: function get() {
      return _GoalAddSubgoalRequest.GoalAddSubgoalRequest;
    }
  });
  Object.defineProperty(exports, "GoalAddSupportingRelationshipRequest", {
    enumerable: true,
    get: function get() {
      return _GoalAddSupportingRelationshipRequest.GoalAddSupportingRelationshipRequest;
    }
  });
  Object.defineProperty(exports, "GoalAddSupportingWorkRequest", {
    enumerable: true,
    get: function get() {
      return _GoalAddSupportingWorkRequest.GoalAddSupportingWorkRequest;
    }
  });
  Object.defineProperty(exports, "GoalBase", {
    enumerable: true,
    get: function get() {
      return _GoalBase.GoalBase;
    }
  });
  Object.defineProperty(exports, "GoalCompact", {
    enumerable: true,
    get: function get() {
      return _GoalCompact.GoalCompact;
    }
  });
  Object.defineProperty(exports, "GoalGidAddFollowersBody", {
    enumerable: true,
    get: function get() {
      return _GoalGidAddFollowersBody.GoalGidAddFollowersBody;
    }
  });
  Object.defineProperty(exports, "GoalGidAddSupportingRelationshipBody", {
    enumerable: true,
    get: function get() {
      return _GoalGidAddSupportingRelationshipBody.GoalGidAddSupportingRelationshipBody;
    }
  });
  Object.defineProperty(exports, "GoalGidRemoveFollowersBody", {
    enumerable: true,
    get: function get() {
      return _GoalGidRemoveFollowersBody.GoalGidRemoveFollowersBody;
    }
  });
  Object.defineProperty(exports, "GoalGidRemoveSupportingRelationshipBody", {
    enumerable: true,
    get: function get() {
      return _GoalGidRemoveSupportingRelationshipBody.GoalGidRemoveSupportingRelationshipBody;
    }
  });
  Object.defineProperty(exports, "GoalGidSetMetricBody", {
    enumerable: true,
    get: function get() {
      return _GoalGidSetMetricBody.GoalGidSetMetricBody;
    }
  });
  Object.defineProperty(exports, "GoalGidSetMetricCurrentValueBody", {
    enumerable: true,
    get: function get() {
      return _GoalGidSetMetricCurrentValueBody.GoalGidSetMetricCurrentValueBody;
    }
  });
  Object.defineProperty(exports, "GoalMembershipBase", {
    enumerable: true,
    get: function get() {
      return _GoalMembershipBase.GoalMembershipBase;
    }
  });
  Object.defineProperty(exports, "GoalMembershipCompact", {
    enumerable: true,
    get: function get() {
      return _GoalMembershipCompact.GoalMembershipCompact;
    }
  });
  Object.defineProperty(exports, "GoalMembershipResponse", {
    enumerable: true,
    get: function get() {
      return _GoalMembershipResponse.GoalMembershipResponse;
    }
  });
  Object.defineProperty(exports, "GoalMembershipResponseUser", {
    enumerable: true,
    get: function get() {
      return _GoalMembershipResponseUser.GoalMembershipResponseUser;
    }
  });
  Object.defineProperty(exports, "GoalMembershipResponseWorkspace", {
    enumerable: true,
    get: function get() {
      return _GoalMembershipResponseWorkspace.GoalMembershipResponseWorkspace;
    }
  });
  Object.defineProperty(exports, "GoalMetricBase", {
    enumerable: true,
    get: function get() {
      return _GoalMetricBase.GoalMetricBase;
    }
  });
  Object.defineProperty(exports, "GoalMetricCurrentValueRequest", {
    enumerable: true,
    get: function get() {
      return _GoalMetricCurrentValueRequest.GoalMetricCurrentValueRequest;
    }
  });
  Object.defineProperty(exports, "GoalMetricRequest", {
    enumerable: true,
    get: function get() {
      return _GoalMetricRequest.GoalMetricRequest;
    }
  });
  Object.defineProperty(exports, "GoalRelationshipBase", {
    enumerable: true,
    get: function get() {
      return _GoalRelationshipBase.GoalRelationshipBase;
    }
  });
  Object.defineProperty(exports, "GoalRelationshipBaseSupportedGoal", {
    enumerable: true,
    get: function get() {
      return _GoalRelationshipBaseSupportedGoal.GoalRelationshipBaseSupportedGoal;
    }
  });
  Object.defineProperty(exports, "GoalRelationshipBaseSupportingResource", {
    enumerable: true,
    get: function get() {
      return _GoalRelationshipBaseSupportingResource.GoalRelationshipBaseSupportingResource;
    }
  });
  Object.defineProperty(exports, "GoalRelationshipCompact", {
    enumerable: true,
    get: function get() {
      return _GoalRelationshipCompact.GoalRelationshipCompact;
    }
  });
  Object.defineProperty(exports, "GoalRelationshipRequest", {
    enumerable: true,
    get: function get() {
      return _GoalRelationshipRequest.GoalRelationshipRequest;
    }
  });
  Object.defineProperty(exports, "GoalRelationshipResponse", {
    enumerable: true,
    get: function get() {
      return _GoalRelationshipResponse.GoalRelationshipResponse;
    }
  });
  Object.defineProperty(exports, "GoalRelationshipResponseArray", {
    enumerable: true,
    get: function get() {
      return _GoalRelationshipResponseArray.GoalRelationshipResponseArray;
    }
  });
  Object.defineProperty(exports, "GoalRelationshipResponseData", {
    enumerable: true,
    get: function get() {
      return _GoalRelationshipResponseData.GoalRelationshipResponseData;
    }
  });
  Object.defineProperty(exports, "GoalRelationshipsApi", {
    enumerable: true,
    get: function get() {
      return _GoalRelationshipsApi.GoalRelationshipsApi;
    }
  });
  Object.defineProperty(exports, "GoalRelationshipsGoalRelationshipGidBody", {
    enumerable: true,
    get: function get() {
      return _GoalRelationshipsGoalRelationshipGidBody.GoalRelationshipsGoalRelationshipGidBody;
    }
  });
  Object.defineProperty(exports, "GoalRemoveSubgoalRequest", {
    enumerable: true,
    get: function get() {
      return _GoalRemoveSubgoalRequest.GoalRemoveSubgoalRequest;
    }
  });
  Object.defineProperty(exports, "GoalRemoveSupportingRelationshipRequest", {
    enumerable: true,
    get: function get() {
      return _GoalRemoveSupportingRelationshipRequest.GoalRemoveSupportingRelationshipRequest;
    }
  });
  Object.defineProperty(exports, "GoalRequest", {
    enumerable: true,
    get: function get() {
      return _GoalRequest.GoalRequest;
    }
  });
  Object.defineProperty(exports, "GoalRequestBase", {
    enumerable: true,
    get: function get() {
      return _GoalRequestBase.GoalRequestBase;
    }
  });
  Object.defineProperty(exports, "GoalResponse", {
    enumerable: true,
    get: function get() {
      return _GoalResponse.GoalResponse;
    }
  });
  Object.defineProperty(exports, "GoalResponseArray", {
    enumerable: true,
    get: function get() {
      return _GoalResponseArray.GoalResponseArray;
    }
  });
  Object.defineProperty(exports, "GoalResponseCurrentStatusUpdate", {
    enumerable: true,
    get: function get() {
      return _GoalResponseCurrentStatusUpdate.GoalResponseCurrentStatusUpdate;
    }
  });
  Object.defineProperty(exports, "GoalResponseData", {
    enumerable: true,
    get: function get() {
      return _GoalResponseData.GoalResponseData;
    }
  });
  Object.defineProperty(exports, "GoalResponseLikes", {
    enumerable: true,
    get: function get() {
      return _GoalResponseLikes.GoalResponseLikes;
    }
  });
  Object.defineProperty(exports, "GoalResponseMetric", {
    enumerable: true,
    get: function get() {
      return _GoalResponseMetric.GoalResponseMetric;
    }
  });
  Object.defineProperty(exports, "GoalResponseTeam", {
    enumerable: true,
    get: function get() {
      return _GoalResponseTeam.GoalResponseTeam;
    }
  });
  Object.defineProperty(exports, "GoalResponseTimePeriod", {
    enumerable: true,
    get: function get() {
      return _GoalResponseTimePeriod.GoalResponseTimePeriod;
    }
  });
  Object.defineProperty(exports, "GoalResponseWorkspace", {
    enumerable: true,
    get: function get() {
      return _GoalResponseWorkspace.GoalResponseWorkspace;
    }
  });
  Object.defineProperty(exports, "GoalUpdateRequest", {
    enumerable: true,
    get: function get() {
      return _GoalUpdateRequest.GoalUpdateRequest;
    }
  });
  Object.defineProperty(exports, "GoalsApi", {
    enumerable: true,
    get: function get() {
      return _GoalsApi.GoalsApi;
    }
  });
  Object.defineProperty(exports, "GoalsBody", {
    enumerable: true,
    get: function get() {
      return _GoalsBody.GoalsBody;
    }
  });
  Object.defineProperty(exports, "GoalsGoalGidBody", {
    enumerable: true,
    get: function get() {
      return _GoalsGoalGidBody.GoalsGoalGidBody;
    }
  });
  Object.defineProperty(exports, "InlineResponse412", {
    enumerable: true,
    get: function get() {
      return _InlineResponse.InlineResponse412;
    }
  });
  Object.defineProperty(exports, "InlineResponse412Errors", {
    enumerable: true,
    get: function get() {
      return _InlineResponse412Errors.InlineResponse412Errors;
    }
  });
  Object.defineProperty(exports, "JobBase", {
    enumerable: true,
    get: function get() {
      return _JobBase.JobBase;
    }
  });
  Object.defineProperty(exports, "JobBaseNewProject", {
    enumerable: true,
    get: function get() {
      return _JobBaseNewProject.JobBaseNewProject;
    }
  });
  Object.defineProperty(exports, "JobBaseNewProjectTemplate", {
    enumerable: true,
    get: function get() {
      return _JobBaseNewProjectTemplate.JobBaseNewProjectTemplate;
    }
  });
  Object.defineProperty(exports, "JobBaseNewTask", {
    enumerable: true,
    get: function get() {
      return _JobBaseNewTask.JobBaseNewTask;
    }
  });
  Object.defineProperty(exports, "JobCompact", {
    enumerable: true,
    get: function get() {
      return _JobCompact.JobCompact;
    }
  });
  Object.defineProperty(exports, "JobResponse", {
    enumerable: true,
    get: function get() {
      return _JobResponse.JobResponse;
    }
  });
  Object.defineProperty(exports, "JobResponseData", {
    enumerable: true,
    get: function get() {
      return _JobResponseData.JobResponseData;
    }
  });
  Object.defineProperty(exports, "JobsApi", {
    enumerable: true,
    get: function get() {
      return _JobsApi.JobsApi;
    }
  });
  Object.defineProperty(exports, "Like", {
    enumerable: true,
    get: function get() {
      return _Like.Like;
    }
  });
  Object.defineProperty(exports, "MemberCompact", {
    enumerable: true,
    get: function get() {
      return _MemberCompact.MemberCompact;
    }
  });
  Object.defineProperty(exports, "MembershipCompact", {
    enumerable: true,
    get: function get() {
      return _MembershipCompact.MembershipCompact;
    }
  });
  Object.defineProperty(exports, "MembershipCompactGoal", {
    enumerable: true,
    get: function get() {
      return _MembershipCompactGoal.MembershipCompactGoal;
    }
  });
  Object.defineProperty(exports, "MembershipCompactMember", {
    enumerable: true,
    get: function get() {
      return _MembershipCompactMember.MembershipCompactMember;
    }
  });
  Object.defineProperty(exports, "MembershipCompactParent", {
    enumerable: true,
    get: function get() {
      return _MembershipCompactParent.MembershipCompactParent;
    }
  });
  Object.defineProperty(exports, "MembershipRequest", {
    enumerable: true,
    get: function get() {
      return _MembershipRequest.MembershipRequest;
    }
  });
  Object.defineProperty(exports, "MembershipResponse", {
    enumerable: true,
    get: function get() {
      return _MembershipResponse.MembershipResponse;
    }
  });
  Object.defineProperty(exports, "MembershipResponseArray", {
    enumerable: true,
    get: function get() {
      return _MembershipResponseArray.MembershipResponseArray;
    }
  });
  Object.defineProperty(exports, "MembershipResponseData", {
    enumerable: true,
    get: function get() {
      return _MembershipResponseData.MembershipResponseData;
    }
  });
  Object.defineProperty(exports, "MembershipsApi", {
    enumerable: true,
    get: function get() {
      return _MembershipsApi.MembershipsApi;
    }
  });
  Object.defineProperty(exports, "MembershipsBody", {
    enumerable: true,
    get: function get() {
      return _MembershipsBody.MembershipsBody;
    }
  });
  Object.defineProperty(exports, "ModifyDependenciesRequest", {
    enumerable: true,
    get: function get() {
      return _ModifyDependenciesRequest.ModifyDependenciesRequest;
    }
  });
  Object.defineProperty(exports, "ModifyDependentsRequest", {
    enumerable: true,
    get: function get() {
      return _ModifyDependentsRequest.ModifyDependentsRequest;
    }
  });
  Object.defineProperty(exports, "NextPage", {
    enumerable: true,
    get: function get() {
      return _NextPage.NextPage;
    }
  });
  Object.defineProperty(exports, "OrganizationExportBase", {
    enumerable: true,
    get: function get() {
      return _OrganizationExportBase.OrganizationExportBase;
    }
  });
  Object.defineProperty(exports, "OrganizationExportCompact", {
    enumerable: true,
    get: function get() {
      return _OrganizationExportCompact.OrganizationExportCompact;
    }
  });
  Object.defineProperty(exports, "OrganizationExportRequest", {
    enumerable: true,
    get: function get() {
      return _OrganizationExportRequest.OrganizationExportRequest;
    }
  });
  Object.defineProperty(exports, "OrganizationExportResponse", {
    enumerable: true,
    get: function get() {
      return _OrganizationExportResponse.OrganizationExportResponse;
    }
  });
  Object.defineProperty(exports, "OrganizationExportResponseData", {
    enumerable: true,
    get: function get() {
      return _OrganizationExportResponseData.OrganizationExportResponseData;
    }
  });
  Object.defineProperty(exports, "OrganizationExportsApi", {
    enumerable: true,
    get: function get() {
      return _OrganizationExportsApi.OrganizationExportsApi;
    }
  });
  Object.defineProperty(exports, "OrganizationExportsBody", {
    enumerable: true,
    get: function get() {
      return _OrganizationExportsBody.OrganizationExportsBody;
    }
  });
  Object.defineProperty(exports, "PortfolioAddItemRequest", {
    enumerable: true,
    get: function get() {
      return _PortfolioAddItemRequest.PortfolioAddItemRequest;
    }
  });
  Object.defineProperty(exports, "PortfolioBase", {
    enumerable: true,
    get: function get() {
      return _PortfolioBase.PortfolioBase;
    }
  });
  Object.defineProperty(exports, "PortfolioCompact", {
    enumerable: true,
    get: function get() {
      return _PortfolioCompact.PortfolioCompact;
    }
  });
  Object.defineProperty(exports, "PortfolioGidAddCustomFieldSettingBody", {
    enumerable: true,
    get: function get() {
      return _PortfolioGidAddCustomFieldSettingBody.PortfolioGidAddCustomFieldSettingBody;
    }
  });
  Object.defineProperty(exports, "PortfolioGidAddItemBody", {
    enumerable: true,
    get: function get() {
      return _PortfolioGidAddItemBody.PortfolioGidAddItemBody;
    }
  });
  Object.defineProperty(exports, "PortfolioGidAddMembersBody", {
    enumerable: true,
    get: function get() {
      return _PortfolioGidAddMembersBody.PortfolioGidAddMembersBody;
    }
  });
  Object.defineProperty(exports, "PortfolioGidRemoveCustomFieldSettingBody", {
    enumerable: true,
    get: function get() {
      return _PortfolioGidRemoveCustomFieldSettingBody.PortfolioGidRemoveCustomFieldSettingBody;
    }
  });
  Object.defineProperty(exports, "PortfolioGidRemoveItemBody", {
    enumerable: true,
    get: function get() {
      return _PortfolioGidRemoveItemBody.PortfolioGidRemoveItemBody;
    }
  });
  Object.defineProperty(exports, "PortfolioGidRemoveMembersBody", {
    enumerable: true,
    get: function get() {
      return _PortfolioGidRemoveMembersBody.PortfolioGidRemoveMembersBody;
    }
  });
  Object.defineProperty(exports, "PortfolioMembershipBase", {
    enumerable: true,
    get: function get() {
      return _PortfolioMembershipBase.PortfolioMembershipBase;
    }
  });
  Object.defineProperty(exports, "PortfolioMembershipBasePortfolio", {
    enumerable: true,
    get: function get() {
      return _PortfolioMembershipBasePortfolio.PortfolioMembershipBasePortfolio;
    }
  });
  Object.defineProperty(exports, "PortfolioMembershipCompact", {
    enumerable: true,
    get: function get() {
      return _PortfolioMembershipCompact.PortfolioMembershipCompact;
    }
  });
  Object.defineProperty(exports, "PortfolioMembershipResponse", {
    enumerable: true,
    get: function get() {
      return _PortfolioMembershipResponse.PortfolioMembershipResponse;
    }
  });
  Object.defineProperty(exports, "PortfolioMembershipResponseArray", {
    enumerable: true,
    get: function get() {
      return _PortfolioMembershipResponseArray.PortfolioMembershipResponseArray;
    }
  });
  Object.defineProperty(exports, "PortfolioMembershipResponseData", {
    enumerable: true,
    get: function get() {
      return _PortfolioMembershipResponseData.PortfolioMembershipResponseData;
    }
  });
  Object.defineProperty(exports, "PortfolioMembershipsApi", {
    enumerable: true,
    get: function get() {
      return _PortfolioMembershipsApi.PortfolioMembershipsApi;
    }
  });
  Object.defineProperty(exports, "PortfolioRemoveItemRequest", {
    enumerable: true,
    get: function get() {
      return _PortfolioRemoveItemRequest.PortfolioRemoveItemRequest;
    }
  });
  Object.defineProperty(exports, "PortfolioRequest", {
    enumerable: true,
    get: function get() {
      return _PortfolioRequest.PortfolioRequest;
    }
  });
  Object.defineProperty(exports, "PortfolioResponse", {
    enumerable: true,
    get: function get() {
      return _PortfolioResponse.PortfolioResponse;
    }
  });
  Object.defineProperty(exports, "PortfolioResponseArray", {
    enumerable: true,
    get: function get() {
      return _PortfolioResponseArray.PortfolioResponseArray;
    }
  });
  Object.defineProperty(exports, "PortfolioResponseCurrentStatusUpdate", {
    enumerable: true,
    get: function get() {
      return _PortfolioResponseCurrentStatusUpdate.PortfolioResponseCurrentStatusUpdate;
    }
  });
  Object.defineProperty(exports, "PortfolioResponseCustomFieldSettings", {
    enumerable: true,
    get: function get() {
      return _PortfolioResponseCustomFieldSettings.PortfolioResponseCustomFieldSettings;
    }
  });
  Object.defineProperty(exports, "PortfolioResponseCustomFields", {
    enumerable: true,
    get: function get() {
      return _PortfolioResponseCustomFields.PortfolioResponseCustomFields;
    }
  });
  Object.defineProperty(exports, "PortfolioResponseData", {
    enumerable: true,
    get: function get() {
      return _PortfolioResponseData.PortfolioResponseData;
    }
  });
  Object.defineProperty(exports, "PortfolioResponseWorkspace", {
    enumerable: true,
    get: function get() {
      return _PortfolioResponseWorkspace.PortfolioResponseWorkspace;
    }
  });
  Object.defineProperty(exports, "PortfoliosApi", {
    enumerable: true,
    get: function get() {
      return _PortfoliosApi.PortfoliosApi;
    }
  });
  Object.defineProperty(exports, "PortfoliosBody", {
    enumerable: true,
    get: function get() {
      return _PortfoliosBody.PortfoliosBody;
    }
  });
  Object.defineProperty(exports, "PortfoliosPortfolioGidBody", {
    enumerable: true,
    get: function get() {
      return _PortfoliosPortfolioGidBody.PortfoliosPortfolioGidBody;
    }
  });
  Object.defineProperty(exports, "Preview", {
    enumerable: true,
    get: function get() {
      return _Preview.Preview;
    }
  });
  Object.defineProperty(exports, "ProjectBase", {
    enumerable: true,
    get: function get() {
      return _ProjectBase.ProjectBase;
    }
  });
  Object.defineProperty(exports, "ProjectBaseCurrentStatus", {
    enumerable: true,
    get: function get() {
      return _ProjectBaseCurrentStatus.ProjectBaseCurrentStatus;
    }
  });
  Object.defineProperty(exports, "ProjectBaseCurrentStatusUpdate", {
    enumerable: true,
    get: function get() {
      return _ProjectBaseCurrentStatusUpdate.ProjectBaseCurrentStatusUpdate;
    }
  });
  Object.defineProperty(exports, "ProjectBriefBase", {
    enumerable: true,
    get: function get() {
      return _ProjectBriefBase.ProjectBriefBase;
    }
  });
  Object.defineProperty(exports, "ProjectBriefCompact", {
    enumerable: true,
    get: function get() {
      return _ProjectBriefCompact.ProjectBriefCompact;
    }
  });
  Object.defineProperty(exports, "ProjectBriefRequest", {
    enumerable: true,
    get: function get() {
      return _ProjectBriefRequest.ProjectBriefRequest;
    }
  });
  Object.defineProperty(exports, "ProjectBriefResponse", {
    enumerable: true,
    get: function get() {
      return _ProjectBriefResponse.ProjectBriefResponse;
    }
  });
  Object.defineProperty(exports, "ProjectBriefResponseData", {
    enumerable: true,
    get: function get() {
      return _ProjectBriefResponseData.ProjectBriefResponseData;
    }
  });
  Object.defineProperty(exports, "ProjectBriefResponseProject", {
    enumerable: true,
    get: function get() {
      return _ProjectBriefResponseProject.ProjectBriefResponseProject;
    }
  });
  Object.defineProperty(exports, "ProjectBriefsApi", {
    enumerable: true,
    get: function get() {
      return _ProjectBriefsApi.ProjectBriefsApi;
    }
  });
  Object.defineProperty(exports, "ProjectBriefsProjectBriefGidBody", {
    enumerable: true,
    get: function get() {
      return _ProjectBriefsProjectBriefGidBody.ProjectBriefsProjectBriefGidBody;
    }
  });
  Object.defineProperty(exports, "ProjectCompact", {
    enumerable: true,
    get: function get() {
      return _ProjectCompact.ProjectCompact;
    }
  });
  Object.defineProperty(exports, "ProjectDuplicateRequest", {
    enumerable: true,
    get: function get() {
      return _ProjectDuplicateRequest.ProjectDuplicateRequest;
    }
  });
  Object.defineProperty(exports, "ProjectDuplicateRequestScheduleDates", {
    enumerable: true,
    get: function get() {
      return _ProjectDuplicateRequestScheduleDates.ProjectDuplicateRequestScheduleDates;
    }
  });
  Object.defineProperty(exports, "ProjectGidAddCustomFieldSettingBody", {
    enumerable: true,
    get: function get() {
      return _ProjectGidAddCustomFieldSettingBody.ProjectGidAddCustomFieldSettingBody;
    }
  });
  Object.defineProperty(exports, "ProjectGidAddFollowersBody", {
    enumerable: true,
    get: function get() {
      return _ProjectGidAddFollowersBody.ProjectGidAddFollowersBody;
    }
  });
  Object.defineProperty(exports, "ProjectGidAddMembersBody", {
    enumerable: true,
    get: function get() {
      return _ProjectGidAddMembersBody.ProjectGidAddMembersBody;
    }
  });
  Object.defineProperty(exports, "ProjectGidDuplicateBody", {
    enumerable: true,
    get: function get() {
      return _ProjectGidDuplicateBody.ProjectGidDuplicateBody;
    }
  });
  Object.defineProperty(exports, "ProjectGidProjectBriefsBody", {
    enumerable: true,
    get: function get() {
      return _ProjectGidProjectBriefsBody.ProjectGidProjectBriefsBody;
    }
  });
  Object.defineProperty(exports, "ProjectGidProjectStatusesBody", {
    enumerable: true,
    get: function get() {
      return _ProjectGidProjectStatusesBody.ProjectGidProjectStatusesBody;
    }
  });
  Object.defineProperty(exports, "ProjectGidRemoveCustomFieldSettingBody", {
    enumerable: true,
    get: function get() {
      return _ProjectGidRemoveCustomFieldSettingBody.ProjectGidRemoveCustomFieldSettingBody;
    }
  });
  Object.defineProperty(exports, "ProjectGidRemoveFollowersBody", {
    enumerable: true,
    get: function get() {
      return _ProjectGidRemoveFollowersBody.ProjectGidRemoveFollowersBody;
    }
  });
  Object.defineProperty(exports, "ProjectGidRemoveMembersBody", {
    enumerable: true,
    get: function get() {
      return _ProjectGidRemoveMembersBody.ProjectGidRemoveMembersBody;
    }
  });
  Object.defineProperty(exports, "ProjectGidSaveAsTemplateBody", {
    enumerable: true,
    get: function get() {
      return _ProjectGidSaveAsTemplateBody.ProjectGidSaveAsTemplateBody;
    }
  });
  Object.defineProperty(exports, "ProjectGidSectionsBody", {
    enumerable: true,
    get: function get() {
      return _ProjectGidSectionsBody.ProjectGidSectionsBody;
    }
  });
  Object.defineProperty(exports, "ProjectMembershipBase", {
    enumerable: true,
    get: function get() {
      return _ProjectMembershipBase.ProjectMembershipBase;
    }
  });
  Object.defineProperty(exports, "ProjectMembershipCompact", {
    enumerable: true,
    get: function get() {
      return _ProjectMembershipCompact.ProjectMembershipCompact;
    }
  });
  Object.defineProperty(exports, "ProjectMembershipCompactArray", {
    enumerable: true,
    get: function get() {
      return _ProjectMembershipCompactArray.ProjectMembershipCompactArray;
    }
  });
  Object.defineProperty(exports, "ProjectMembershipCompactResponse", {
    enumerable: true,
    get: function get() {
      return _ProjectMembershipCompactResponse.ProjectMembershipCompactResponse;
    }
  });
  Object.defineProperty(exports, "ProjectMembershipNormalResponse", {
    enumerable: true,
    get: function get() {
      return _ProjectMembershipNormalResponse.ProjectMembershipNormalResponse;
    }
  });
  Object.defineProperty(exports, "ProjectMembershipNormalResponseData", {
    enumerable: true,
    get: function get() {
      return _ProjectMembershipNormalResponseData.ProjectMembershipNormalResponseData;
    }
  });
  Object.defineProperty(exports, "ProjectMembershipsApi", {
    enumerable: true,
    get: function get() {
      return _ProjectMembershipsApi.ProjectMembershipsApi;
    }
  });
  Object.defineProperty(exports, "ProjectRequest", {
    enumerable: true,
    get: function get() {
      return _ProjectRequest.ProjectRequest;
    }
  });
  Object.defineProperty(exports, "ProjectResponse", {
    enumerable: true,
    get: function get() {
      return _ProjectResponse.ProjectResponse;
    }
  });
  Object.defineProperty(exports, "ProjectResponseArray", {
    enumerable: true,
    get: function get() {
      return _ProjectResponseArray.ProjectResponseArray;
    }
  });
  Object.defineProperty(exports, "ProjectResponseCompletedBy", {
    enumerable: true,
    get: function get() {
      return _ProjectResponseCompletedBy.ProjectResponseCompletedBy;
    }
  });
  Object.defineProperty(exports, "ProjectResponseCreatedFromTemplate", {
    enumerable: true,
    get: function get() {
      return _ProjectResponseCreatedFromTemplate.ProjectResponseCreatedFromTemplate;
    }
  });
  Object.defineProperty(exports, "ProjectResponseData", {
    enumerable: true,
    get: function get() {
      return _ProjectResponseData.ProjectResponseData;
    }
  });
  Object.defineProperty(exports, "ProjectResponseProjectBrief", {
    enumerable: true,
    get: function get() {
      return _ProjectResponseProjectBrief.ProjectResponseProjectBrief;
    }
  });
  Object.defineProperty(exports, "ProjectResponseTeam", {
    enumerable: true,
    get: function get() {
      return _ProjectResponseTeam.ProjectResponseTeam;
    }
  });
  Object.defineProperty(exports, "ProjectResponseWorkspace", {
    enumerable: true,
    get: function get() {
      return _ProjectResponseWorkspace.ProjectResponseWorkspace;
    }
  });
  Object.defineProperty(exports, "ProjectSaveAsTemplateRequest", {
    enumerable: true,
    get: function get() {
      return _ProjectSaveAsTemplateRequest.ProjectSaveAsTemplateRequest;
    }
  });
  Object.defineProperty(exports, "ProjectSectionInsertRequest", {
    enumerable: true,
    get: function get() {
      return _ProjectSectionInsertRequest.ProjectSectionInsertRequest;
    }
  });
  Object.defineProperty(exports, "ProjectStatusBase", {
    enumerable: true,
    get: function get() {
      return _ProjectStatusBase.ProjectStatusBase;
    }
  });
  Object.defineProperty(exports, "ProjectStatusCompact", {
    enumerable: true,
    get: function get() {
      return _ProjectStatusCompact.ProjectStatusCompact;
    }
  });
  Object.defineProperty(exports, "ProjectStatusRequest", {
    enumerable: true,
    get: function get() {
      return _ProjectStatusRequest.ProjectStatusRequest;
    }
  });
  Object.defineProperty(exports, "ProjectStatusResponse", {
    enumerable: true,
    get: function get() {
      return _ProjectStatusResponse.ProjectStatusResponse;
    }
  });
  Object.defineProperty(exports, "ProjectStatusResponseArray", {
    enumerable: true,
    get: function get() {
      return _ProjectStatusResponseArray.ProjectStatusResponseArray;
    }
  });
  Object.defineProperty(exports, "ProjectStatusResponseData", {
    enumerable: true,
    get: function get() {
      return _ProjectStatusResponseData.ProjectStatusResponseData;
    }
  });
  Object.defineProperty(exports, "ProjectStatusesApi", {
    enumerable: true,
    get: function get() {
      return _ProjectStatusesApi.ProjectStatusesApi;
    }
  });
  Object.defineProperty(exports, "ProjectTemplateBase", {
    enumerable: true,
    get: function get() {
      return _ProjectTemplateBase.ProjectTemplateBase;
    }
  });
  Object.defineProperty(exports, "ProjectTemplateBaseRequestedDates", {
    enumerable: true,
    get: function get() {
      return _ProjectTemplateBaseRequestedDates.ProjectTemplateBaseRequestedDates;
    }
  });
  Object.defineProperty(exports, "ProjectTemplateBaseRequestedRoles", {
    enumerable: true,
    get: function get() {
      return _ProjectTemplateBaseRequestedRoles.ProjectTemplateBaseRequestedRoles;
    }
  });
  Object.defineProperty(exports, "ProjectTemplateBaseTeam", {
    enumerable: true,
    get: function get() {
      return _ProjectTemplateBaseTeam.ProjectTemplateBaseTeam;
    }
  });
  Object.defineProperty(exports, "ProjectTemplateCompact", {
    enumerable: true,
    get: function get() {
      return _ProjectTemplateCompact.ProjectTemplateCompact;
    }
  });
  Object.defineProperty(exports, "ProjectTemplateGidInstantiateProjectBody", {
    enumerable: true,
    get: function get() {
      return _ProjectTemplateGidInstantiateProjectBody.ProjectTemplateGidInstantiateProjectBody;
    }
  });
  Object.defineProperty(exports, "ProjectTemplateInstantiateProjectRequest", {
    enumerable: true,
    get: function get() {
      return _ProjectTemplateInstantiateProjectRequest.ProjectTemplateInstantiateProjectRequest;
    }
  });
  Object.defineProperty(exports, "ProjectTemplateInstantiateProjectRequestRequestedDates", {
    enumerable: true,
    get: function get() {
      return _ProjectTemplateInstantiateProjectRequestRequestedDates.ProjectTemplateInstantiateProjectRequestRequestedDates;
    }
  });
  Object.defineProperty(exports, "ProjectTemplateInstantiateProjectRequestRequestedRoles", {
    enumerable: true,
    get: function get() {
      return _ProjectTemplateInstantiateProjectRequestRequestedRoles.ProjectTemplateInstantiateProjectRequestRequestedRoles;
    }
  });
  Object.defineProperty(exports, "ProjectTemplateResponse", {
    enumerable: true,
    get: function get() {
      return _ProjectTemplateResponse.ProjectTemplateResponse;
    }
  });
  Object.defineProperty(exports, "ProjectTemplateResponseArray", {
    enumerable: true,
    get: function get() {
      return _ProjectTemplateResponseArray.ProjectTemplateResponseArray;
    }
  });
  Object.defineProperty(exports, "ProjectTemplateResponseData", {
    enumerable: true,
    get: function get() {
      return _ProjectTemplateResponseData.ProjectTemplateResponseData;
    }
  });
  Object.defineProperty(exports, "ProjectTemplatesApi", {
    enumerable: true,
    get: function get() {
      return _ProjectTemplatesApi.ProjectTemplatesApi;
    }
  });
  Object.defineProperty(exports, "ProjectUpdateRequest", {
    enumerable: true,
    get: function get() {
      return _ProjectUpdateRequest.ProjectUpdateRequest;
    }
  });
  Object.defineProperty(exports, "ProjectsApi", {
    enumerable: true,
    get: function get() {
      return _ProjectsApi.ProjectsApi;
    }
  });
  Object.defineProperty(exports, "ProjectsBody", {
    enumerable: true,
    get: function get() {
      return _ProjectsBody.ProjectsBody;
    }
  });
  Object.defineProperty(exports, "ProjectsProjectGidBody", {
    enumerable: true,
    get: function get() {
      return _ProjectsProjectGidBody.ProjectsProjectGidBody;
    }
  });
  Object.defineProperty(exports, "RemoveCustomFieldSettingRequest", {
    enumerable: true,
    get: function get() {
      return _RemoveCustomFieldSettingRequest.RemoveCustomFieldSettingRequest;
    }
  });
  Object.defineProperty(exports, "RemoveFollowersRequest", {
    enumerable: true,
    get: function get() {
      return _RemoveFollowersRequest.RemoveFollowersRequest;
    }
  });
  Object.defineProperty(exports, "RemoveMembersRequest", {
    enumerable: true,
    get: function get() {
      return _RemoveMembersRequest.RemoveMembersRequest;
    }
  });
  Object.defineProperty(exports, "RequestedRoleRequest", {
    enumerable: true,
    get: function get() {
      return _RequestedRoleRequest.RequestedRoleRequest;
    }
  });
  Object.defineProperty(exports, "RuleTriggerGidRunBody", {
    enumerable: true,
    get: function get() {
      return _RuleTriggerGidRunBody.RuleTriggerGidRunBody;
    }
  });
  Object.defineProperty(exports, "RuleTriggerRequest", {
    enumerable: true,
    get: function get() {
      return _RuleTriggerRequest.RuleTriggerRequest;
    }
  });
  Object.defineProperty(exports, "RuleTriggerResponse", {
    enumerable: true,
    get: function get() {
      return _RuleTriggerResponse.RuleTriggerResponse;
    }
  });
  Object.defineProperty(exports, "RuleTriggerResponseData", {
    enumerable: true,
    get: function get() {
      return _RuleTriggerResponseData.RuleTriggerResponseData;
    }
  });
  Object.defineProperty(exports, "RulesApi", {
    enumerable: true,
    get: function get() {
      return _RulesApi.RulesApi;
    }
  });
  Object.defineProperty(exports, "SectionBase", {
    enumerable: true,
    get: function get() {
      return _SectionBase.SectionBase;
    }
  });
  Object.defineProperty(exports, "SectionCompact", {
    enumerable: true,
    get: function get() {
      return _SectionCompact.SectionCompact;
    }
  });
  Object.defineProperty(exports, "SectionGidAddTaskBody", {
    enumerable: true,
    get: function get() {
      return _SectionGidAddTaskBody.SectionGidAddTaskBody;
    }
  });
  Object.defineProperty(exports, "SectionRequest", {
    enumerable: true,
    get: function get() {
      return _SectionRequest.SectionRequest;
    }
  });
  Object.defineProperty(exports, "SectionResponse", {
    enumerable: true,
    get: function get() {
      return _SectionResponse.SectionResponse;
    }
  });
  Object.defineProperty(exports, "SectionResponseArray", {
    enumerable: true,
    get: function get() {
      return _SectionResponseArray.SectionResponseArray;
    }
  });
  Object.defineProperty(exports, "SectionResponseData", {
    enumerable: true,
    get: function get() {
      return _SectionResponseData.SectionResponseData;
    }
  });
  Object.defineProperty(exports, "SectionTaskInsertRequest", {
    enumerable: true,
    get: function get() {
      return _SectionTaskInsertRequest.SectionTaskInsertRequest;
    }
  });
  Object.defineProperty(exports, "SectionsApi", {
    enumerable: true,
    get: function get() {
      return _SectionsApi.SectionsApi;
    }
  });
  Object.defineProperty(exports, "SectionsInsertBody", {
    enumerable: true,
    get: function get() {
      return _SectionsInsertBody.SectionsInsertBody;
    }
  });
  Object.defineProperty(exports, "SectionsSectionGidBody", {
    enumerable: true,
    get: function get() {
      return _SectionsSectionGidBody.SectionsSectionGidBody;
    }
  });
  Object.defineProperty(exports, "StatusUpdateBase", {
    enumerable: true,
    get: function get() {
      return _StatusUpdateBase.StatusUpdateBase;
    }
  });
  Object.defineProperty(exports, "StatusUpdateCompact", {
    enumerable: true,
    get: function get() {
      return _StatusUpdateCompact.StatusUpdateCompact;
    }
  });
  Object.defineProperty(exports, "StatusUpdateRequest", {
    enumerable: true,
    get: function get() {
      return _StatusUpdateRequest.StatusUpdateRequest;
    }
  });
  Object.defineProperty(exports, "StatusUpdateResponse", {
    enumerable: true,
    get: function get() {
      return _StatusUpdateResponse.StatusUpdateResponse;
    }
  });
  Object.defineProperty(exports, "StatusUpdateResponseArray", {
    enumerable: true,
    get: function get() {
      return _StatusUpdateResponseArray.StatusUpdateResponseArray;
    }
  });
  Object.defineProperty(exports, "StatusUpdateResponseData", {
    enumerable: true,
    get: function get() {
      return _StatusUpdateResponseData.StatusUpdateResponseData;
    }
  });
  Object.defineProperty(exports, "StatusUpdateResponseParent", {
    enumerable: true,
    get: function get() {
      return _StatusUpdateResponseParent.StatusUpdateResponseParent;
    }
  });
  Object.defineProperty(exports, "StatusUpdatesApi", {
    enumerable: true,
    get: function get() {
      return _StatusUpdatesApi.StatusUpdatesApi;
    }
  });
  Object.defineProperty(exports, "StatusUpdatesBody", {
    enumerable: true,
    get: function get() {
      return _StatusUpdatesBody.StatusUpdatesBody;
    }
  });
  Object.defineProperty(exports, "StoriesApi", {
    enumerable: true,
    get: function get() {
      return _StoriesApi.StoriesApi;
    }
  });
  Object.defineProperty(exports, "StoriesStoryGidBody", {
    enumerable: true,
    get: function get() {
      return _StoriesStoryGidBody.StoriesStoryGidBody;
    }
  });
  Object.defineProperty(exports, "StoryBase", {
    enumerable: true,
    get: function get() {
      return _StoryBase.StoryBase;
    }
  });
  Object.defineProperty(exports, "StoryCompact", {
    enumerable: true,
    get: function get() {
      return _StoryCompact.StoryCompact;
    }
  });
  Object.defineProperty(exports, "StoryRequest", {
    enumerable: true,
    get: function get() {
      return _StoryRequest.StoryRequest;
    }
  });
  Object.defineProperty(exports, "StoryResponse", {
    enumerable: true,
    get: function get() {
      return _StoryResponse.StoryResponse;
    }
  });
  Object.defineProperty(exports, "StoryResponseArray", {
    enumerable: true,
    get: function get() {
      return _StoryResponseArray.StoryResponseArray;
    }
  });
  Object.defineProperty(exports, "StoryResponseAssignee", {
    enumerable: true,
    get: function get() {
      return _StoryResponseAssignee.StoryResponseAssignee;
    }
  });
  Object.defineProperty(exports, "StoryResponseCustomField", {
    enumerable: true,
    get: function get() {
      return _StoryResponseCustomField.StoryResponseCustomField;
    }
  });
  Object.defineProperty(exports, "StoryResponseData", {
    enumerable: true,
    get: function get() {
      return _StoryResponseData.StoryResponseData;
    }
  });
  Object.defineProperty(exports, "StoryResponseDates", {
    enumerable: true,
    get: function get() {
      return _StoryResponseDates.StoryResponseDates;
    }
  });
  Object.defineProperty(exports, "StoryResponseOldDates", {
    enumerable: true,
    get: function get() {
      return _StoryResponseOldDates.StoryResponseOldDates;
    }
  });
  Object.defineProperty(exports, "StoryResponseOldEnumValue", {
    enumerable: true,
    get: function get() {
      return _StoryResponseOldEnumValue.StoryResponseOldEnumValue;
    }
  });
  Object.defineProperty(exports, "StoryResponseOldSection", {
    enumerable: true,
    get: function get() {
      return _StoryResponseOldSection.StoryResponseOldSection;
    }
  });
  Object.defineProperty(exports, "StoryResponsePreviews", {
    enumerable: true,
    get: function get() {
      return _StoryResponsePreviews.StoryResponsePreviews;
    }
  });
  Object.defineProperty(exports, "StoryResponseProject", {
    enumerable: true,
    get: function get() {
      return _StoryResponseProject.StoryResponseProject;
    }
  });
  Object.defineProperty(exports, "StoryResponseStory", {
    enumerable: true,
    get: function get() {
      return _StoryResponseStory.StoryResponseStory;
    }
  });
  Object.defineProperty(exports, "StoryResponseTag", {
    enumerable: true,
    get: function get() {
      return _StoryResponseTag.StoryResponseTag;
    }
  });
  Object.defineProperty(exports, "StoryResponseTarget", {
    enumerable: true,
    get: function get() {
      return _StoryResponseTarget.StoryResponseTarget;
    }
  });
  Object.defineProperty(exports, "StoryResponseTask", {
    enumerable: true,
    get: function get() {
      return _StoryResponseTask.StoryResponseTask;
    }
  });
  Object.defineProperty(exports, "TagBase", {
    enumerable: true,
    get: function get() {
      return _TagBase.TagBase;
    }
  });
  Object.defineProperty(exports, "TagCompact", {
    enumerable: true,
    get: function get() {
      return _TagCompact.TagCompact;
    }
  });
  Object.defineProperty(exports, "TagRequest", {
    enumerable: true,
    get: function get() {
      return _TagRequest.TagRequest;
    }
  });
  Object.defineProperty(exports, "TagResponse", {
    enumerable: true,
    get: function get() {
      return _TagResponse.TagResponse;
    }
  });
  Object.defineProperty(exports, "TagResponseArray", {
    enumerable: true,
    get: function get() {
      return _TagResponseArray.TagResponseArray;
    }
  });
  Object.defineProperty(exports, "TagResponseData", {
    enumerable: true,
    get: function get() {
      return _TagResponseData.TagResponseData;
    }
  });
  Object.defineProperty(exports, "TagsApi", {
    enumerable: true,
    get: function get() {
      return _TagsApi.TagsApi;
    }
  });
  Object.defineProperty(exports, "TagsBody", {
    enumerable: true,
    get: function get() {
      return _TagsBody.TagsBody;
    }
  });
  Object.defineProperty(exports, "TaskAddFollowersRequest", {
    enumerable: true,
    get: function get() {
      return _TaskAddFollowersRequest.TaskAddFollowersRequest;
    }
  });
  Object.defineProperty(exports, "TaskAddProjectRequest", {
    enumerable: true,
    get: function get() {
      return _TaskAddProjectRequest.TaskAddProjectRequest;
    }
  });
  Object.defineProperty(exports, "TaskAddTagRequest", {
    enumerable: true,
    get: function get() {
      return _TaskAddTagRequest.TaskAddTagRequest;
    }
  });
  Object.defineProperty(exports, "TaskBase", {
    enumerable: true,
    get: function get() {
      return _TaskBase.TaskBase;
    }
  });
  Object.defineProperty(exports, "TaskBaseCompletedBy", {
    enumerable: true,
    get: function get() {
      return _TaskBaseCompletedBy.TaskBaseCompletedBy;
    }
  });
  Object.defineProperty(exports, "TaskBaseDependencies", {
    enumerable: true,
    get: function get() {
      return _TaskBaseDependencies.TaskBaseDependencies;
    }
  });
  Object.defineProperty(exports, "TaskBaseExternal", {
    enumerable: true,
    get: function get() {
      return _TaskBaseExternal.TaskBaseExternal;
    }
  });
  Object.defineProperty(exports, "TaskBaseMemberships", {
    enumerable: true,
    get: function get() {
      return _TaskBaseMemberships.TaskBaseMemberships;
    }
  });
  Object.defineProperty(exports, "TaskBaseSection", {
    enumerable: true,
    get: function get() {
      return _TaskBaseSection.TaskBaseSection;
    }
  });
  Object.defineProperty(exports, "TaskCompact", {
    enumerable: true,
    get: function get() {
      return _TaskCompact.TaskCompact;
    }
  });
  Object.defineProperty(exports, "TaskCountResponse", {
    enumerable: true,
    get: function get() {
      return _TaskCountResponse.TaskCountResponse;
    }
  });
  Object.defineProperty(exports, "TaskCountResponseData", {
    enumerable: true,
    get: function get() {
      return _TaskCountResponseData.TaskCountResponseData;
    }
  });
  Object.defineProperty(exports, "TaskDuplicateRequest", {
    enumerable: true,
    get: function get() {
      return _TaskDuplicateRequest.TaskDuplicateRequest;
    }
  });
  Object.defineProperty(exports, "TaskGidAddDependenciesBody", {
    enumerable: true,
    get: function get() {
      return _TaskGidAddDependenciesBody.TaskGidAddDependenciesBody;
    }
  });
  Object.defineProperty(exports, "TaskGidAddDependentsBody", {
    enumerable: true,
    get: function get() {
      return _TaskGidAddDependentsBody.TaskGidAddDependentsBody;
    }
  });
  Object.defineProperty(exports, "TaskGidAddFollowersBody", {
    enumerable: true,
    get: function get() {
      return _TaskGidAddFollowersBody.TaskGidAddFollowersBody;
    }
  });
  Object.defineProperty(exports, "TaskGidAddProjectBody", {
    enumerable: true,
    get: function get() {
      return _TaskGidAddProjectBody.TaskGidAddProjectBody;
    }
  });
  Object.defineProperty(exports, "TaskGidAddTagBody", {
    enumerable: true,
    get: function get() {
      return _TaskGidAddTagBody.TaskGidAddTagBody;
    }
  });
  Object.defineProperty(exports, "TaskGidDuplicateBody", {
    enumerable: true,
    get: function get() {
      return _TaskGidDuplicateBody.TaskGidDuplicateBody;
    }
  });
  Object.defineProperty(exports, "TaskGidRemoveDependenciesBody", {
    enumerable: true,
    get: function get() {
      return _TaskGidRemoveDependenciesBody.TaskGidRemoveDependenciesBody;
    }
  });
  Object.defineProperty(exports, "TaskGidRemoveDependentsBody", {
    enumerable: true,
    get: function get() {
      return _TaskGidRemoveDependentsBody.TaskGidRemoveDependentsBody;
    }
  });
  Object.defineProperty(exports, "TaskGidRemoveFollowersBody", {
    enumerable: true,
    get: function get() {
      return _TaskGidRemoveFollowersBody.TaskGidRemoveFollowersBody;
    }
  });
  Object.defineProperty(exports, "TaskGidRemoveProjectBody", {
    enumerable: true,
    get: function get() {
      return _TaskGidRemoveProjectBody.TaskGidRemoveProjectBody;
    }
  });
  Object.defineProperty(exports, "TaskGidRemoveTagBody", {
    enumerable: true,
    get: function get() {
      return _TaskGidRemoveTagBody.TaskGidRemoveTagBody;
    }
  });
  Object.defineProperty(exports, "TaskGidSetParentBody", {
    enumerable: true,
    get: function get() {
      return _TaskGidSetParentBody.TaskGidSetParentBody;
    }
  });
  Object.defineProperty(exports, "TaskGidStoriesBody", {
    enumerable: true,
    get: function get() {
      return _TaskGidStoriesBody.TaskGidStoriesBody;
    }
  });
  Object.defineProperty(exports, "TaskGidSubtasksBody", {
    enumerable: true,
    get: function get() {
      return _TaskGidSubtasksBody.TaskGidSubtasksBody;
    }
  });
  Object.defineProperty(exports, "TaskGidTimeTrackingEntriesBody", {
    enumerable: true,
    get: function get() {
      return _TaskGidTimeTrackingEntriesBody.TaskGidTimeTrackingEntriesBody;
    }
  });
  Object.defineProperty(exports, "TaskRemoveFollowersRequest", {
    enumerable: true,
    get: function get() {
      return _TaskRemoveFollowersRequest.TaskRemoveFollowersRequest;
    }
  });
  Object.defineProperty(exports, "TaskRemoveProjectRequest", {
    enumerable: true,
    get: function get() {
      return _TaskRemoveProjectRequest.TaskRemoveProjectRequest;
    }
  });
  Object.defineProperty(exports, "TaskRemoveTagRequest", {
    enumerable: true,
    get: function get() {
      return _TaskRemoveTagRequest.TaskRemoveTagRequest;
    }
  });
  Object.defineProperty(exports, "TaskRequest", {
    enumerable: true,
    get: function get() {
      return _TaskRequest.TaskRequest;
    }
  });
  Object.defineProperty(exports, "TaskResponse", {
    enumerable: true,
    get: function get() {
      return _TaskResponse.TaskResponse;
    }
  });
  Object.defineProperty(exports, "TaskResponseArray", {
    enumerable: true,
    get: function get() {
      return _TaskResponseArray.TaskResponseArray;
    }
  });
  Object.defineProperty(exports, "TaskResponseAssigneeSection", {
    enumerable: true,
    get: function get() {
      return _TaskResponseAssigneeSection.TaskResponseAssigneeSection;
    }
  });
  Object.defineProperty(exports, "TaskResponseCustomFields", {
    enumerable: true,
    get: function get() {
      return _TaskResponseCustomFields.TaskResponseCustomFields;
    }
  });
  Object.defineProperty(exports, "TaskResponseData", {
    enumerable: true,
    get: function get() {
      return _TaskResponseData.TaskResponseData;
    }
  });
  Object.defineProperty(exports, "TaskResponseParent", {
    enumerable: true,
    get: function get() {
      return _TaskResponseParent.TaskResponseParent;
    }
  });
  Object.defineProperty(exports, "TaskResponseTags", {
    enumerable: true,
    get: function get() {
      return _TaskResponseTags.TaskResponseTags;
    }
  });
  Object.defineProperty(exports, "TaskResponseWorkspace", {
    enumerable: true,
    get: function get() {
      return _TaskResponseWorkspace.TaskResponseWorkspace;
    }
  });
  Object.defineProperty(exports, "TaskSetParentRequest", {
    enumerable: true,
    get: function get() {
      return _TaskSetParentRequest.TaskSetParentRequest;
    }
  });
  Object.defineProperty(exports, "TasksApi", {
    enumerable: true,
    get: function get() {
      return _TasksApi.TasksApi;
    }
  });
  Object.defineProperty(exports, "TasksBody", {
    enumerable: true,
    get: function get() {
      return _TasksBody.TasksBody;
    }
  });
  Object.defineProperty(exports, "TasksTaskGidBody", {
    enumerable: true,
    get: function get() {
      return _TasksTaskGidBody.TasksTaskGidBody;
    }
  });
  Object.defineProperty(exports, "TeamAddUserRequest", {
    enumerable: true,
    get: function get() {
      return _TeamAddUserRequest.TeamAddUserRequest;
    }
  });
  Object.defineProperty(exports, "TeamBase", {
    enumerable: true,
    get: function get() {
      return _TeamBase.TeamBase;
    }
  });
  Object.defineProperty(exports, "TeamCompact", {
    enumerable: true,
    get: function get() {
      return _TeamCompact.TeamCompact;
    }
  });
  Object.defineProperty(exports, "TeamGidAddUserBody", {
    enumerable: true,
    get: function get() {
      return _TeamGidAddUserBody.TeamGidAddUserBody;
    }
  });
  Object.defineProperty(exports, "TeamGidProjectsBody", {
    enumerable: true,
    get: function get() {
      return _TeamGidProjectsBody.TeamGidProjectsBody;
    }
  });
  Object.defineProperty(exports, "TeamGidRemoveUserBody", {
    enumerable: true,
    get: function get() {
      return _TeamGidRemoveUserBody.TeamGidRemoveUserBody;
    }
  });
  Object.defineProperty(exports, "TeamMembershipBase", {
    enumerable: true,
    get: function get() {
      return _TeamMembershipBase.TeamMembershipBase;
    }
  });
  Object.defineProperty(exports, "TeamMembershipCompact", {
    enumerable: true,
    get: function get() {
      return _TeamMembershipCompact.TeamMembershipCompact;
    }
  });
  Object.defineProperty(exports, "TeamMembershipResponse", {
    enumerable: true,
    get: function get() {
      return _TeamMembershipResponse.TeamMembershipResponse;
    }
  });
  Object.defineProperty(exports, "TeamMembershipResponseArray", {
    enumerable: true,
    get: function get() {
      return _TeamMembershipResponseArray.TeamMembershipResponseArray;
    }
  });
  Object.defineProperty(exports, "TeamMembershipResponseData", {
    enumerable: true,
    get: function get() {
      return _TeamMembershipResponseData.TeamMembershipResponseData;
    }
  });
  Object.defineProperty(exports, "TeamMembershipsApi", {
    enumerable: true,
    get: function get() {
      return _TeamMembershipsApi.TeamMembershipsApi;
    }
  });
  Object.defineProperty(exports, "TeamRemoveUserRequest", {
    enumerable: true,
    get: function get() {
      return _TeamRemoveUserRequest.TeamRemoveUserRequest;
    }
  });
  Object.defineProperty(exports, "TeamRequest", {
    enumerable: true,
    get: function get() {
      return _TeamRequest.TeamRequest;
    }
  });
  Object.defineProperty(exports, "TeamResponse", {
    enumerable: true,
    get: function get() {
      return _TeamResponse.TeamResponse;
    }
  });
  Object.defineProperty(exports, "TeamResponseArray", {
    enumerable: true,
    get: function get() {
      return _TeamResponseArray.TeamResponseArray;
    }
  });
  Object.defineProperty(exports, "TeamResponseData", {
    enumerable: true,
    get: function get() {
      return _TeamResponseData.TeamResponseData;
    }
  });
  Object.defineProperty(exports, "TeamResponseOrganization", {
    enumerable: true,
    get: function get() {
      return _TeamResponseOrganization.TeamResponseOrganization;
    }
  });
  Object.defineProperty(exports, "TeamsApi", {
    enumerable: true,
    get: function get() {
      return _TeamsApi.TeamsApi;
    }
  });
  Object.defineProperty(exports, "TeamsBody", {
    enumerable: true,
    get: function get() {
      return _TeamsBody.TeamsBody;
    }
  });
  Object.defineProperty(exports, "TeamsTeamGidBody", {
    enumerable: true,
    get: function get() {
      return _TeamsTeamGidBody.TeamsTeamGidBody;
    }
  });
  Object.defineProperty(exports, "TemplateRole", {
    enumerable: true,
    get: function get() {
      return _TemplateRole.TemplateRole;
    }
  });
  Object.defineProperty(exports, "TimePeriodBase", {
    enumerable: true,
    get: function get() {
      return _TimePeriodBase.TimePeriodBase;
    }
  });
  Object.defineProperty(exports, "TimePeriodCompact", {
    enumerable: true,
    get: function get() {
      return _TimePeriodCompact.TimePeriodCompact;
    }
  });
  Object.defineProperty(exports, "TimePeriodResponse", {
    enumerable: true,
    get: function get() {
      return _TimePeriodResponse.TimePeriodResponse;
    }
  });
  Object.defineProperty(exports, "TimePeriodResponseArray", {
    enumerable: true,
    get: function get() {
      return _TimePeriodResponseArray.TimePeriodResponseArray;
    }
  });
  Object.defineProperty(exports, "TimePeriodResponseData", {
    enumerable: true,
    get: function get() {
      return _TimePeriodResponseData.TimePeriodResponseData;
    }
  });
  Object.defineProperty(exports, "TimePeriodsApi", {
    enumerable: true,
    get: function get() {
      return _TimePeriodsApi.TimePeriodsApi;
    }
  });
  Object.defineProperty(exports, "TimeTrackingEntriesApi", {
    enumerable: true,
    get: function get() {
      return _TimeTrackingEntriesApi.TimeTrackingEntriesApi;
    }
  });
  Object.defineProperty(exports, "TimeTrackingEntriesTimeTrackingEntryGidBody", {
    enumerable: true,
    get: function get() {
      return _TimeTrackingEntriesTimeTrackingEntryGidBody.TimeTrackingEntriesTimeTrackingEntryGidBody;
    }
  });
  Object.defineProperty(exports, "TimeTrackingEntryBase", {
    enumerable: true,
    get: function get() {
      return _TimeTrackingEntryBase.TimeTrackingEntryBase;
    }
  });
  Object.defineProperty(exports, "TimeTrackingEntryBaseData", {
    enumerable: true,
    get: function get() {
      return _TimeTrackingEntryBaseData.TimeTrackingEntryBaseData;
    }
  });
  Object.defineProperty(exports, "TimeTrackingEntryCompact", {
    enumerable: true,
    get: function get() {
      return _TimeTrackingEntryCompact.TimeTrackingEntryCompact;
    }
  });
  Object.defineProperty(exports, "TimeTrackingEntryCompactArray", {
    enumerable: true,
    get: function get() {
      return _TimeTrackingEntryCompactArray.TimeTrackingEntryCompactArray;
    }
  });
  Object.defineProperty(exports, "TypeaheadApi", {
    enumerable: true,
    get: function get() {
      return _TypeaheadApi.TypeaheadApi;
    }
  });
  Object.defineProperty(exports, "UpdateTimeTrackingEntryRequest", {
    enumerable: true,
    get: function get() {
      return _UpdateTimeTrackingEntryRequest.UpdateTimeTrackingEntryRequest;
    }
  });
  Object.defineProperty(exports, "UserBase", {
    enumerable: true,
    get: function get() {
      return _UserBase.UserBase;
    }
  });
  Object.defineProperty(exports, "UserBaseResponse", {
    enumerable: true,
    get: function get() {
      return _UserBaseResponse.UserBaseResponse;
    }
  });
  Object.defineProperty(exports, "UserBaseResponseData", {
    enumerable: true,
    get: function get() {
      return _UserBaseResponseData.UserBaseResponseData;
    }
  });
  Object.defineProperty(exports, "UserBaseResponsePhoto", {
    enumerable: true,
    get: function get() {
      return _UserBaseResponsePhoto.UserBaseResponsePhoto;
    }
  });
  Object.defineProperty(exports, "UserCompact", {
    enumerable: true,
    get: function get() {
      return _UserCompact.UserCompact;
    }
  });
  Object.defineProperty(exports, "UserRequest", {
    enumerable: true,
    get: function get() {
      return _UserRequest.UserRequest;
    }
  });
  Object.defineProperty(exports, "UserResponse", {
    enumerable: true,
    get: function get() {
      return _UserResponse.UserResponse;
    }
  });
  Object.defineProperty(exports, "UserResponseArray", {
    enumerable: true,
    get: function get() {
      return _UserResponseArray.UserResponseArray;
    }
  });
  Object.defineProperty(exports, "UserResponseData", {
    enumerable: true,
    get: function get() {
      return _UserResponseData.UserResponseData;
    }
  });
  Object.defineProperty(exports, "UserTaskListBase", {
    enumerable: true,
    get: function get() {
      return _UserTaskListBase.UserTaskListBase;
    }
  });
  Object.defineProperty(exports, "UserTaskListCompact", {
    enumerable: true,
    get: function get() {
      return _UserTaskListCompact.UserTaskListCompact;
    }
  });
  Object.defineProperty(exports, "UserTaskListRequest", {
    enumerable: true,
    get: function get() {
      return _UserTaskListRequest.UserTaskListRequest;
    }
  });
  Object.defineProperty(exports, "UserTaskListResponse", {
    enumerable: true,
    get: function get() {
      return _UserTaskListResponse.UserTaskListResponse;
    }
  });
  Object.defineProperty(exports, "UserTaskListResponseData", {
    enumerable: true,
    get: function get() {
      return _UserTaskListResponseData.UserTaskListResponseData;
    }
  });
  Object.defineProperty(exports, "UserTaskListsApi", {
    enumerable: true,
    get: function get() {
      return _UserTaskListsApi.UserTaskListsApi;
    }
  });
  Object.defineProperty(exports, "UsersApi", {
    enumerable: true,
    get: function get() {
      return _UsersApi.UsersApi;
    }
  });
  Object.defineProperty(exports, "WebhookCompact", {
    enumerable: true,
    get: function get() {
      return _WebhookCompact.WebhookCompact;
    }
  });
  Object.defineProperty(exports, "WebhookCompactResource", {
    enumerable: true,
    get: function get() {
      return _WebhookCompactResource.WebhookCompactResource;
    }
  });
  Object.defineProperty(exports, "WebhookFilter", {
    enumerable: true,
    get: function get() {
      return _WebhookFilter.WebhookFilter;
    }
  });
  Object.defineProperty(exports, "WebhookRequest", {
    enumerable: true,
    get: function get() {
      return _WebhookRequest.WebhookRequest;
    }
  });
  Object.defineProperty(exports, "WebhookRequestFilters", {
    enumerable: true,
    get: function get() {
      return _WebhookRequestFilters.WebhookRequestFilters;
    }
  });
  Object.defineProperty(exports, "WebhookResponse", {
    enumerable: true,
    get: function get() {
      return _WebhookResponse.WebhookResponse;
    }
  });
  Object.defineProperty(exports, "WebhookResponseArray", {
    enumerable: true,
    get: function get() {
      return _WebhookResponseArray.WebhookResponseArray;
    }
  });
  Object.defineProperty(exports, "WebhookResponseData", {
    enumerable: true,
    get: function get() {
      return _WebhookResponseData.WebhookResponseData;
    }
  });
  Object.defineProperty(exports, "WebhookUpdateRequest", {
    enumerable: true,
    get: function get() {
      return _WebhookUpdateRequest.WebhookUpdateRequest;
    }
  });
  Object.defineProperty(exports, "WebhooksApi", {
    enumerable: true,
    get: function get() {
      return _WebhooksApi.WebhooksApi;
    }
  });
  Object.defineProperty(exports, "WebhooksBody", {
    enumerable: true,
    get: function get() {
      return _WebhooksBody.WebhooksBody;
    }
  });
  Object.defineProperty(exports, "WebhooksWebhookGidBody", {
    enumerable: true,
    get: function get() {
      return _WebhooksWebhookGidBody.WebhooksWebhookGidBody;
    }
  });
  Object.defineProperty(exports, "WorkspaceAddUserRequest", {
    enumerable: true,
    get: function get() {
      return _WorkspaceAddUserRequest.WorkspaceAddUserRequest;
    }
  });
  Object.defineProperty(exports, "WorkspaceBase", {
    enumerable: true,
    get: function get() {
      return _WorkspaceBase.WorkspaceBase;
    }
  });
  Object.defineProperty(exports, "WorkspaceCompact", {
    enumerable: true,
    get: function get() {
      return _WorkspaceCompact.WorkspaceCompact;
    }
  });
  Object.defineProperty(exports, "WorkspaceGidAddUserBody", {
    enumerable: true,
    get: function get() {
      return _WorkspaceGidAddUserBody.WorkspaceGidAddUserBody;
    }
  });
  Object.defineProperty(exports, "WorkspaceGidProjectsBody", {
    enumerable: true,
    get: function get() {
      return _WorkspaceGidProjectsBody.WorkspaceGidProjectsBody;
    }
  });
  Object.defineProperty(exports, "WorkspaceGidRemoveUserBody", {
    enumerable: true,
    get: function get() {
      return _WorkspaceGidRemoveUserBody.WorkspaceGidRemoveUserBody;
    }
  });
  Object.defineProperty(exports, "WorkspaceGidTagsBody", {
    enumerable: true,
    get: function get() {
      return _WorkspaceGidTagsBody.WorkspaceGidTagsBody;
    }
  });
  Object.defineProperty(exports, "WorkspaceMembershipBase", {
    enumerable: true,
    get: function get() {
      return _WorkspaceMembershipBase.WorkspaceMembershipBase;
    }
  });
  Object.defineProperty(exports, "WorkspaceMembershipCompact", {
    enumerable: true,
    get: function get() {
      return _WorkspaceMembershipCompact.WorkspaceMembershipCompact;
    }
  });
  Object.defineProperty(exports, "WorkspaceMembershipRequest", {
    enumerable: true,
    get: function get() {
      return _WorkspaceMembershipRequest.WorkspaceMembershipRequest;
    }
  });
  Object.defineProperty(exports, "WorkspaceMembershipResponse", {
    enumerable: true,
    get: function get() {
      return _WorkspaceMembershipResponse.WorkspaceMembershipResponse;
    }
  });
  Object.defineProperty(exports, "WorkspaceMembershipResponseArray", {
    enumerable: true,
    get: function get() {
      return _WorkspaceMembershipResponseArray.WorkspaceMembershipResponseArray;
    }
  });
  Object.defineProperty(exports, "WorkspaceMembershipResponseData", {
    enumerable: true,
    get: function get() {
      return _WorkspaceMembershipResponseData.WorkspaceMembershipResponseData;
    }
  });
  Object.defineProperty(exports, "WorkspaceMembershipResponseUserTaskList", {
    enumerable: true,
    get: function get() {
      return _WorkspaceMembershipResponseUserTaskList.WorkspaceMembershipResponseUserTaskList;
    }
  });
  Object.defineProperty(exports, "WorkspaceMembershipResponseVacationDates", {
    enumerable: true,
    get: function get() {
      return _WorkspaceMembershipResponseVacationDates.WorkspaceMembershipResponseVacationDates;
    }
  });
  Object.defineProperty(exports, "WorkspaceMembershipsApi", {
    enumerable: true,
    get: function get() {
      return _WorkspaceMembershipsApi.WorkspaceMembershipsApi;
    }
  });
  Object.defineProperty(exports, "WorkspaceRemoveUserRequest", {
    enumerable: true,
    get: function get() {
      return _WorkspaceRemoveUserRequest.WorkspaceRemoveUserRequest;
    }
  });
  Object.defineProperty(exports, "WorkspaceRequest", {
    enumerable: true,
    get: function get() {
      return _WorkspaceRequest.WorkspaceRequest;
    }
  });
  Object.defineProperty(exports, "WorkspaceResponse", {
    enumerable: true,
    get: function get() {
      return _WorkspaceResponse.WorkspaceResponse;
    }
  });
  Object.defineProperty(exports, "WorkspaceResponseArray", {
    enumerable: true,
    get: function get() {
      return _WorkspaceResponseArray.WorkspaceResponseArray;
    }
  });
  Object.defineProperty(exports, "WorkspaceResponseData", {
    enumerable: true,
    get: function get() {
      return _WorkspaceResponseData.WorkspaceResponseData;
    }
  });
  Object.defineProperty(exports, "WorkspacesApi", {
    enumerable: true,
    get: function get() {
      return _WorkspacesApi.WorkspacesApi;
    }
  });
  Object.defineProperty(exports, "WorkspacesWorkspaceGidBody", {
    enumerable: true,
    get: function get() {
      return _WorkspacesWorkspaceGidBody.WorkspacesWorkspaceGidBody;
    }
  });
  var _ApiClient = require_ApiClient();
  var _AddCustomFieldSettingRequest = require_AddCustomFieldSettingRequest();
  var _AddFollowersRequest = require_AddFollowersRequest();
  var _AddMembersRequest = require_AddMembersRequest();
  var _AllOfProjectResponseOwner = require_AllOfProjectResponseOwner();
  var _AllOfProjectTemplateBaseOwner = require_AllOfProjectTemplateBaseOwner();
  var _AllOfProjectTemplateResponseOwner = require_AllOfProjectTemplateResponseOwner();
  var _AllOfStoryResponseNewDateValue = require_AllOfStoryResponseNewDateValue();
  var _AllOfStoryResponseOldDateValue = require_AllOfStoryResponseOldDateValue();
  var _AllOfUserTaskListBaseOwner = require_AllOfUserTaskListBaseOwner();
  var _AllOfUserTaskListBaseWorkspace = require_AllOfUserTaskListBaseWorkspace();
  var _AllOfUserTaskListCompactOwner = require_AllOfUserTaskListCompactOwner();
  var _AllOfUserTaskListCompactWorkspace = require_AllOfUserTaskListCompactWorkspace();
  var _AllOfUserTaskListRequestOwner = require_AllOfUserTaskListRequestOwner();
  var _AllOfUserTaskListRequestWorkspace = require_AllOfUserTaskListRequestWorkspace();
  var _AllOfUserTaskListResponseOwner = require_AllOfUserTaskListResponseOwner();
  var _AllOfUserTaskListResponseWorkspace = require_AllOfUserTaskListResponseWorkspace();
  var _AllOfWorkspaceMembershipResponseUserTaskListOwner = require_AllOfWorkspaceMembershipResponseUserTaskListOwner();
  var _AllOfWorkspaceMembershipResponseUserTaskListWorkspace = require_AllOfWorkspaceMembershipResponseUserTaskListWorkspace();
  var _AsanaNamedResource = require_AsanaNamedResource();
  var _AsanaNamedResourceArray = require_AsanaNamedResourceArray();
  var _AsanaResource = require_AsanaResource();
  var _AttachmentBase = require_AttachmentBase();
  var _AttachmentCompact = require_AttachmentCompact();
  var _AttachmentRequest = require_AttachmentRequest();
  var _AttachmentResponse = require_AttachmentResponse();
  var _AttachmentResponseArray = require_AttachmentResponseArray();
  var _AttachmentResponseData = require_AttachmentResponseData();
  var _AttachmentResponseParent = require_AttachmentResponseParent();
  var _AttachmentResponseParentCreatedBy = require_AttachmentResponseParentCreatedBy();
  var _AuditLogEvent = require_AuditLogEvent();
  var _AuditLogEventActor = require_AuditLogEventActor();
  var _AuditLogEventArray = require_AuditLogEventArray();
  var _AuditLogEventContext = require_AuditLogEventContext();
  var _AuditLogEventDetails = require_AuditLogEventDetails();
  var _AuditLogEventResource = require_AuditLogEventResource();
  var _BatchBody = require_BatchBody();
  var _BatchRequest = require_BatchRequest();
  var _BatchRequestAction = require_BatchRequestAction();
  var _BatchRequestActions = require_BatchRequestActions();
  var _BatchRequestOptions = require_BatchRequestOptions();
  var _BatchResponse = require_BatchResponse();
  var _BatchResponseArray = require_BatchResponseArray();
  var _CreateMembershipRequest = require_CreateMembershipRequest();
  var _CreateTimeTrackingEntryRequest = require_CreateTimeTrackingEntryRequest();
  var _CustomFieldBase = require_CustomFieldBase();
  var _CustomFieldBaseDateValue = require_CustomFieldBaseDateValue();
  var _CustomFieldBaseEnumOptions = require_CustomFieldBaseEnumOptions();
  var _CustomFieldBaseEnumValue = require_CustomFieldBaseEnumValue();
  var _CustomFieldCompact = require_CustomFieldCompact();
  var _CustomFieldGidEnumOptionsBody = require_CustomFieldGidEnumOptionsBody();
  var _CustomFieldRequest = require_CustomFieldRequest();
  var _CustomFieldResponse = require_CustomFieldResponse();
  var _CustomFieldResponseArray = require_CustomFieldResponseArray();
  var _CustomFieldResponseCreatedBy = require_CustomFieldResponseCreatedBy();
  var _CustomFieldResponseData = require_CustomFieldResponseData();
  var _CustomFieldResponsePeopleValue = require_CustomFieldResponsePeopleValue();
  var _CustomFieldSettingBase = require_CustomFieldSettingBase();
  var _CustomFieldSettingCompact = require_CustomFieldSettingCompact();
  var _CustomFieldSettingResponse = require_CustomFieldSettingResponse();
  var _CustomFieldSettingResponseArray = require_CustomFieldSettingResponseArray();
  var _CustomFieldSettingResponseCustomField = require_CustomFieldSettingResponseCustomField();
  var _CustomFieldSettingResponseData = require_CustomFieldSettingResponseData();
  var _CustomFieldSettingResponseParent = require_CustomFieldSettingResponseParent();
  var _CustomFieldSettingResponseProject = require_CustomFieldSettingResponseProject();
  var _CustomFieldsBody = require_CustomFieldsBody();
  var _CustomFieldsCustomFieldGidBody = require_CustomFieldsCustomFieldGidBody();
  var _DateVariableCompact = require_DateVariableCompact();
  var _DateVariableRequest = require_DateVariableRequest();
  var _EmptyResponse = require_EmptyResponse();
  var _EmptyResponseData = require_EmptyResponseData();
  var _EnumOption = require_EnumOption();
  var _EnumOptionBase = require_EnumOptionBase();
  var _EnumOptionData = require_EnumOptionData();
  var _EnumOptionInsertRequest = require_EnumOptionInsertRequest();
  var _EnumOptionRequest = require_EnumOptionRequest();
  var _EnumOptionsEnumOptionGidBody = require_EnumOptionsEnumOptionGidBody();
  var _EnumOptionsInsertBody = require_EnumOptionsInsertBody();
  var _Error = require_Error();
  var _ErrorResponse = require_ErrorResponse();
  var _ErrorResponseErrors = require_ErrorResponseErrors();
  var _EventResponse = require_EventResponse();
  var _EventResponseArray = require_EventResponseArray();
  var _EventResponseChange = require_EventResponseChange();
  var _EventResponseParent = require_EventResponseParent();
  var _EventResponseResource = require_EventResponseResource();
  var _EventResponseUser = require_EventResponseUser();
  var _GoalAddSubgoalRequest = require_GoalAddSubgoalRequest();
  var _GoalAddSupportingRelationshipRequest = require_GoalAddSupportingRelationshipRequest();
  var _GoalAddSupportingWorkRequest = require_GoalAddSupportingWorkRequest();
  var _GoalBase = require_GoalBase();
  var _GoalCompact = require_GoalCompact();
  var _GoalGidAddFollowersBody = require_GoalGidAddFollowersBody();
  var _GoalGidAddSupportingRelationshipBody = require_GoalGidAddSupportingRelationshipBody();
  var _GoalGidRemoveFollowersBody = require_GoalGidRemoveFollowersBody();
  var _GoalGidRemoveSupportingRelationshipBody = require_GoalGidRemoveSupportingRelationshipBody();
  var _GoalGidSetMetricBody = require_GoalGidSetMetricBody();
  var _GoalGidSetMetricCurrentValueBody = require_GoalGidSetMetricCurrentValueBody();
  var _GoalMembershipBase = require_GoalMembershipBase();
  var _GoalMembershipCompact = require_GoalMembershipCompact();
  var _GoalMembershipResponse = require_GoalMembershipResponse();
  var _GoalMembershipResponseUser = require_GoalMembershipResponseUser();
  var _GoalMembershipResponseWorkspace = require_GoalMembershipResponseWorkspace();
  var _GoalMetricBase = require_GoalMetricBase();
  var _GoalMetricCurrentValueRequest = require_GoalMetricCurrentValueRequest();
  var _GoalMetricRequest = require_GoalMetricRequest();
  var _GoalRelationshipBase = require_GoalRelationshipBase();
  var _GoalRelationshipBaseSupportedGoal = require_GoalRelationshipBaseSupportedGoal();
  var _GoalRelationshipBaseSupportingResource = require_GoalRelationshipBaseSupportingResource();
  var _GoalRelationshipCompact = require_GoalRelationshipCompact();
  var _GoalRelationshipRequest = require_GoalRelationshipRequest();
  var _GoalRelationshipResponse = require_GoalRelationshipResponse();
  var _GoalRelationshipResponseArray = require_GoalRelationshipResponseArray();
  var _GoalRelationshipResponseData = require_GoalRelationshipResponseData();
  var _GoalRelationshipsGoalRelationshipGidBody = require_GoalRelationshipsGoalRelationshipGidBody();
  var _GoalRemoveSubgoalRequest = require_GoalRemoveSubgoalRequest();
  var _GoalRemoveSupportingRelationshipRequest = require_GoalRemoveSupportingRelationshipRequest();
  var _GoalRequest = require_GoalRequest();
  var _GoalRequestBase = require_GoalRequestBase();
  var _GoalResponse = require_GoalResponse();
  var _GoalResponseArray = require_GoalResponseArray();
  var _GoalResponseCurrentStatusUpdate = require_GoalResponseCurrentStatusUpdate();
  var _GoalResponseData = require_GoalResponseData();
  var _GoalResponseLikes = require_GoalResponseLikes();
  var _GoalResponseMetric = require_GoalResponseMetric();
  var _GoalResponseTeam = require_GoalResponseTeam();
  var _GoalResponseTimePeriod = require_GoalResponseTimePeriod();
  var _GoalResponseWorkspace = require_GoalResponseWorkspace();
  var _GoalUpdateRequest = require_GoalUpdateRequest();
  var _GoalsBody = require_GoalsBody();
  var _GoalsGoalGidBody = require_GoalsGoalGidBody();
  var _InlineResponse = require_InlineResponse412();
  var _InlineResponse412Errors = require_InlineResponse412Errors();
  var _JobBase = require_JobBase();
  var _JobBaseNewProject = require_JobBaseNewProject();
  var _JobBaseNewProjectTemplate = require_JobBaseNewProjectTemplate();
  var _JobBaseNewTask = require_JobBaseNewTask();
  var _JobCompact = require_JobCompact();
  var _JobResponse = require_JobResponse();
  var _JobResponseData = require_JobResponseData();
  var _Like = require_Like();
  var _MemberCompact = require_MemberCompact();
  var _MembershipCompact = require_MembershipCompact();
  var _MembershipCompactGoal = require_MembershipCompactGoal();
  var _MembershipCompactMember = require_MembershipCompactMember();
  var _MembershipCompactParent = require_MembershipCompactParent();
  var _MembershipRequest = require_MembershipRequest();
  var _MembershipResponse = require_MembershipResponse();
  var _MembershipResponseArray = require_MembershipResponseArray();
  var _MembershipResponseData = require_MembershipResponseData();
  var _MembershipsBody = require_MembershipsBody();
  var _ModifyDependenciesRequest = require_ModifyDependenciesRequest();
  var _ModifyDependentsRequest = require_ModifyDependentsRequest();
  var _NextPage = require_NextPage();
  var _OrganizationExportBase = require_OrganizationExportBase();
  var _OrganizationExportCompact = require_OrganizationExportCompact();
  var _OrganizationExportRequest = require_OrganizationExportRequest();
  var _OrganizationExportResponse = require_OrganizationExportResponse();
  var _OrganizationExportResponseData = require_OrganizationExportResponseData();
  var _OrganizationExportsBody = require_OrganizationExportsBody();
  var _PortfolioAddItemRequest = require_PortfolioAddItemRequest();
  var _PortfolioBase = require_PortfolioBase();
  var _PortfolioCompact = require_PortfolioCompact();
  var _PortfolioGidAddCustomFieldSettingBody = require_PortfolioGidAddCustomFieldSettingBody();
  var _PortfolioGidAddItemBody = require_PortfolioGidAddItemBody();
  var _PortfolioGidAddMembersBody = require_PortfolioGidAddMembersBody();
  var _PortfolioGidRemoveCustomFieldSettingBody = require_PortfolioGidRemoveCustomFieldSettingBody();
  var _PortfolioGidRemoveItemBody = require_PortfolioGidRemoveItemBody();
  var _PortfolioGidRemoveMembersBody = require_PortfolioGidRemoveMembersBody();
  var _PortfolioMembershipBase = require_PortfolioMembershipBase();
  var _PortfolioMembershipBasePortfolio = require_PortfolioMembershipBasePortfolio();
  var _PortfolioMembershipCompact = require_PortfolioMembershipCompact();
  var _PortfolioMembershipResponse = require_PortfolioMembershipResponse();
  var _PortfolioMembershipResponseArray = require_PortfolioMembershipResponseArray();
  var _PortfolioMembershipResponseData = require_PortfolioMembershipResponseData();
  var _PortfolioRemoveItemRequest = require_PortfolioRemoveItemRequest();
  var _PortfolioRequest = require_PortfolioRequest();
  var _PortfolioResponse = require_PortfolioResponse();
  var _PortfolioResponseArray = require_PortfolioResponseArray();
  var _PortfolioResponseCurrentStatusUpdate = require_PortfolioResponseCurrentStatusUpdate();
  var _PortfolioResponseCustomFieldSettings = require_PortfolioResponseCustomFieldSettings();
  var _PortfolioResponseCustomFields = require_PortfolioResponseCustomFields();
  var _PortfolioResponseData = require_PortfolioResponseData();
  var _PortfolioResponseWorkspace = require_PortfolioResponseWorkspace();
  var _PortfoliosBody = require_PortfoliosBody();
  var _PortfoliosPortfolioGidBody = require_PortfoliosPortfolioGidBody();
  var _Preview = require_Preview();
  var _ProjectBase = require_ProjectBase();
  var _ProjectBaseCurrentStatus = require_ProjectBaseCurrentStatus();
  var _ProjectBaseCurrentStatusUpdate = require_ProjectBaseCurrentStatusUpdate();
  var _ProjectBriefBase = require_ProjectBriefBase();
  var _ProjectBriefCompact = require_ProjectBriefCompact();
  var _ProjectBriefRequest = require_ProjectBriefRequest();
  var _ProjectBriefResponse = require_ProjectBriefResponse();
  var _ProjectBriefResponseData = require_ProjectBriefResponseData();
  var _ProjectBriefResponseProject = require_ProjectBriefResponseProject();
  var _ProjectBriefsProjectBriefGidBody = require_ProjectBriefsProjectBriefGidBody();
  var _ProjectCompact = require_ProjectCompact();
  var _ProjectDuplicateRequest = require_ProjectDuplicateRequest();
  var _ProjectDuplicateRequestScheduleDates = require_ProjectDuplicateRequestScheduleDates();
  var _ProjectGidAddCustomFieldSettingBody = require_ProjectGidAddCustomFieldSettingBody();
  var _ProjectGidAddFollowersBody = require_ProjectGidAddFollowersBody();
  var _ProjectGidAddMembersBody = require_ProjectGidAddMembersBody();
  var _ProjectGidDuplicateBody = require_ProjectGidDuplicateBody();
  var _ProjectGidProjectBriefsBody = require_ProjectGidProjectBriefsBody();
  var _ProjectGidProjectStatusesBody = require_ProjectGidProjectStatusesBody();
  var _ProjectGidRemoveCustomFieldSettingBody = require_ProjectGidRemoveCustomFieldSettingBody();
  var _ProjectGidRemoveFollowersBody = require_ProjectGidRemoveFollowersBody();
  var _ProjectGidRemoveMembersBody = require_ProjectGidRemoveMembersBody();
  var _ProjectGidSaveAsTemplateBody = require_ProjectGidSaveAsTemplateBody();
  var _ProjectGidSectionsBody = require_ProjectGidSectionsBody();
  var _ProjectMembershipBase = require_ProjectMembershipBase();
  var _ProjectMembershipCompact = require_ProjectMembershipCompact();
  var _ProjectMembershipCompactArray = require_ProjectMembershipCompactArray();
  var _ProjectMembershipCompactResponse = require_ProjectMembershipCompactResponse();
  var _ProjectMembershipNormalResponse = require_ProjectMembershipNormalResponse();
  var _ProjectMembershipNormalResponseData = require_ProjectMembershipNormalResponseData();
  var _ProjectRequest = require_ProjectRequest();
  var _ProjectResponse = require_ProjectResponse();
  var _ProjectResponseArray = require_ProjectResponseArray();
  var _ProjectResponseCompletedBy = require_ProjectResponseCompletedBy();
  var _ProjectResponseCreatedFromTemplate = require_ProjectResponseCreatedFromTemplate();
  var _ProjectResponseData = require_ProjectResponseData();
  var _ProjectResponseProjectBrief = require_ProjectResponseProjectBrief();
  var _ProjectResponseTeam = require_ProjectResponseTeam();
  var _ProjectResponseWorkspace = require_ProjectResponseWorkspace();
  var _ProjectSaveAsTemplateRequest = require_ProjectSaveAsTemplateRequest();
  var _ProjectSectionInsertRequest = require_ProjectSectionInsertRequest();
  var _ProjectStatusBase = require_ProjectStatusBase();
  var _ProjectStatusCompact = require_ProjectStatusCompact();
  var _ProjectStatusRequest = require_ProjectStatusRequest();
  var _ProjectStatusResponse = require_ProjectStatusResponse();
  var _ProjectStatusResponseArray = require_ProjectStatusResponseArray();
  var _ProjectStatusResponseData = require_ProjectStatusResponseData();
  var _ProjectTemplateBase = require_ProjectTemplateBase();
  var _ProjectTemplateBaseRequestedDates = require_ProjectTemplateBaseRequestedDates();
  var _ProjectTemplateBaseRequestedRoles = require_ProjectTemplateBaseRequestedRoles();
  var _ProjectTemplateBaseTeam = require_ProjectTemplateBaseTeam();
  var _ProjectTemplateCompact = require_ProjectTemplateCompact();
  var _ProjectTemplateGidInstantiateProjectBody = require_ProjectTemplateGidInstantiateProjectBody();
  var _ProjectTemplateInstantiateProjectRequest = require_ProjectTemplateInstantiateProjectRequest();
  var _ProjectTemplateInstantiateProjectRequestRequestedDates = require_ProjectTemplateInstantiateProjectRequestRequestedDates();
  var _ProjectTemplateInstantiateProjectRequestRequestedRoles = require_ProjectTemplateInstantiateProjectRequestRequestedRoles();
  var _ProjectTemplateResponse = require_ProjectTemplateResponse();
  var _ProjectTemplateResponseArray = require_ProjectTemplateResponseArray();
  var _ProjectTemplateResponseData = require_ProjectTemplateResponseData();
  var _ProjectUpdateRequest = require_ProjectUpdateRequest();
  var _ProjectsBody = require_ProjectsBody();
  var _ProjectsProjectGidBody = require_ProjectsProjectGidBody();
  var _RemoveCustomFieldSettingRequest = require_RemoveCustomFieldSettingRequest();
  var _RemoveFollowersRequest = require_RemoveFollowersRequest();
  var _RemoveMembersRequest = require_RemoveMembersRequest();
  var _RequestedRoleRequest = require_RequestedRoleRequest();
  var _RuleTriggerGidRunBody = require_RuleTriggerGidRunBody();
  var _RuleTriggerRequest = require_RuleTriggerRequest();
  var _RuleTriggerResponse = require_RuleTriggerResponse();
  var _RuleTriggerResponseData = require_RuleTriggerResponseData();
  var _SectionBase = require_SectionBase();
  var _SectionCompact = require_SectionCompact();
  var _SectionGidAddTaskBody = require_SectionGidAddTaskBody();
  var _SectionRequest = require_SectionRequest();
  var _SectionResponse = require_SectionResponse();
  var _SectionResponseArray = require_SectionResponseArray();
  var _SectionResponseData = require_SectionResponseData();
  var _SectionTaskInsertRequest = require_SectionTaskInsertRequest();
  var _SectionsInsertBody = require_SectionsInsertBody();
  var _SectionsSectionGidBody = require_SectionsSectionGidBody();
  var _StatusUpdateBase = require_StatusUpdateBase();
  var _StatusUpdateCompact = require_StatusUpdateCompact();
  var _StatusUpdateRequest = require_StatusUpdateRequest();
  var _StatusUpdateResponse = require_StatusUpdateResponse();
  var _StatusUpdateResponseArray = require_StatusUpdateResponseArray();
  var _StatusUpdateResponseData = require_StatusUpdateResponseData();
  var _StatusUpdateResponseParent = require_StatusUpdateResponseParent();
  var _StatusUpdatesBody = require_StatusUpdatesBody();
  var _StoriesStoryGidBody = require_StoriesStoryGidBody();
  var _StoryBase = require_StoryBase();
  var _StoryCompact = require_StoryCompact();
  var _StoryRequest = require_StoryRequest();
  var _StoryResponse = require_StoryResponse();
  var _StoryResponseArray = require_StoryResponseArray();
  var _StoryResponseAssignee = require_StoryResponseAssignee();
  var _StoryResponseCustomField = require_StoryResponseCustomField();
  var _StoryResponseData = require_StoryResponseData();
  var _StoryResponseDates = require_StoryResponseDates();
  var _StoryResponseOldDates = require_StoryResponseOldDates();
  var _StoryResponseOldEnumValue = require_StoryResponseOldEnumValue();
  var _StoryResponseOldSection = require_StoryResponseOldSection();
  var _StoryResponsePreviews = require_StoryResponsePreviews();
  var _StoryResponseProject = require_StoryResponseProject();
  var _StoryResponseStory = require_StoryResponseStory();
  var _StoryResponseTag = require_StoryResponseTag();
  var _StoryResponseTarget = require_StoryResponseTarget();
  var _StoryResponseTask = require_StoryResponseTask();
  var _TagBase = require_TagBase();
  var _TagCompact = require_TagCompact();
  var _TagRequest = require_TagRequest();
  var _TagResponse = require_TagResponse();
  var _TagResponseArray = require_TagResponseArray();
  var _TagResponseData = require_TagResponseData();
  var _TagsBody = require_TagsBody();
  var _TaskAddFollowersRequest = require_TaskAddFollowersRequest();
  var _TaskAddProjectRequest = require_TaskAddProjectRequest();
  var _TaskAddTagRequest = require_TaskAddTagRequest();
  var _TaskBase = require_TaskBase();
  var _TaskBaseCompletedBy = require_TaskBaseCompletedBy();
  var _TaskBaseDependencies = require_TaskBaseDependencies();
  var _TaskBaseExternal = require_TaskBaseExternal();
  var _TaskBaseMemberships = require_TaskBaseMemberships();
  var _TaskBaseSection = require_TaskBaseSection();
  var _TaskCompact = require_TaskCompact();
  var _TaskCountResponse = require_TaskCountResponse();
  var _TaskCountResponseData = require_TaskCountResponseData();
  var _TaskDuplicateRequest = require_TaskDuplicateRequest();
  var _TaskGidAddDependenciesBody = require_TaskGidAddDependenciesBody();
  var _TaskGidAddDependentsBody = require_TaskGidAddDependentsBody();
  var _TaskGidAddFollowersBody = require_TaskGidAddFollowersBody();
  var _TaskGidAddProjectBody = require_TaskGidAddProjectBody();
  var _TaskGidAddTagBody = require_TaskGidAddTagBody();
  var _TaskGidDuplicateBody = require_TaskGidDuplicateBody();
  var _TaskGidRemoveDependenciesBody = require_TaskGidRemoveDependenciesBody();
  var _TaskGidRemoveDependentsBody = require_TaskGidRemoveDependentsBody();
  var _TaskGidRemoveFollowersBody = require_TaskGidRemoveFollowersBody();
  var _TaskGidRemoveProjectBody = require_TaskGidRemoveProjectBody();
  var _TaskGidRemoveTagBody = require_TaskGidRemoveTagBody();
  var _TaskGidSetParentBody = require_TaskGidSetParentBody();
  var _TaskGidStoriesBody = require_TaskGidStoriesBody();
  var _TaskGidSubtasksBody = require_TaskGidSubtasksBody();
  var _TaskGidTimeTrackingEntriesBody = require_TaskGidTimeTrackingEntriesBody();
  var _TaskRemoveFollowersRequest = require_TaskRemoveFollowersRequest();
  var _TaskRemoveProjectRequest = require_TaskRemoveProjectRequest();
  var _TaskRemoveTagRequest = require_TaskRemoveTagRequest();
  var _TaskRequest = require_TaskRequest();
  var _TaskResponse = require_TaskResponse();
  var _TaskResponseArray = require_TaskResponseArray();
  var _TaskResponseAssigneeSection = require_TaskResponseAssigneeSection();
  var _TaskResponseCustomFields = require_TaskResponseCustomFields();
  var _TaskResponseData = require_TaskResponseData();
  var _TaskResponseParent = require_TaskResponseParent();
  var _TaskResponseTags = require_TaskResponseTags();
  var _TaskResponseWorkspace = require_TaskResponseWorkspace();
  var _TaskSetParentRequest = require_TaskSetParentRequest();
  var _TasksBody = require_TasksBody();
  var _TasksTaskGidBody = require_TasksTaskGidBody();
  var _TeamAddUserRequest = require_TeamAddUserRequest();
  var _TeamBase = require_TeamBase();
  var _TeamCompact = require_TeamCompact();
  var _TeamGidAddUserBody = require_TeamGidAddUserBody();
  var _TeamGidProjectsBody = require_TeamGidProjectsBody();
  var _TeamGidRemoveUserBody = require_TeamGidRemoveUserBody();
  var _TeamMembershipBase = require_TeamMembershipBase();
  var _TeamMembershipCompact = require_TeamMembershipCompact();
  var _TeamMembershipResponse = require_TeamMembershipResponse();
  var _TeamMembershipResponseArray = require_TeamMembershipResponseArray();
  var _TeamMembershipResponseData = require_TeamMembershipResponseData();
  var _TeamRemoveUserRequest = require_TeamRemoveUserRequest();
  var _TeamRequest = require_TeamRequest();
  var _TeamResponse = require_TeamResponse();
  var _TeamResponseArray = require_TeamResponseArray();
  var _TeamResponseData = require_TeamResponseData();
  var _TeamResponseOrganization = require_TeamResponseOrganization();
  var _TeamsBody = require_TeamsBody();
  var _TeamsTeamGidBody = require_TeamsTeamGidBody();
  var _TemplateRole = require_TemplateRole();
  var _TimePeriodBase = require_TimePeriodBase();
  var _TimePeriodCompact = require_TimePeriodCompact();
  var _TimePeriodResponse = require_TimePeriodResponse();
  var _TimePeriodResponseArray = require_TimePeriodResponseArray();
  var _TimePeriodResponseData = require_TimePeriodResponseData();
  var _TimeTrackingEntriesTimeTrackingEntryGidBody = require_TimeTrackingEntriesTimeTrackingEntryGidBody();
  var _TimeTrackingEntryBase = require_TimeTrackingEntryBase();
  var _TimeTrackingEntryBaseData = require_TimeTrackingEntryBaseData();
  var _TimeTrackingEntryCompact = require_TimeTrackingEntryCompact();
  var _TimeTrackingEntryCompactArray = require_TimeTrackingEntryCompactArray();
  var _UpdateTimeTrackingEntryRequest = require_UpdateTimeTrackingEntryRequest();
  var _UserBase = require_UserBase();
  var _UserBaseResponse = require_UserBaseResponse();
  var _UserBaseResponseData = require_UserBaseResponseData();
  var _UserBaseResponsePhoto = require_UserBaseResponsePhoto();
  var _UserCompact = require_UserCompact();
  var _UserRequest = require_UserRequest();
  var _UserResponse = require_UserResponse();
  var _UserResponseArray = require_UserResponseArray();
  var _UserResponseData = require_UserResponseData();
  var _UserTaskListBase = require_UserTaskListBase();
  var _UserTaskListCompact = require_UserTaskListCompact();
  var _UserTaskListRequest = require_UserTaskListRequest();
  var _UserTaskListResponse = require_UserTaskListResponse();
  var _UserTaskListResponseData = require_UserTaskListResponseData();
  var _WebhookCompact = require_WebhookCompact();
  var _WebhookCompactResource = require_WebhookCompactResource();
  var _WebhookFilter = require_WebhookFilter();
  var _WebhookRequest = require_WebhookRequest();
  var _WebhookRequestFilters = require_WebhookRequestFilters();
  var _WebhookResponse = require_WebhookResponse();
  var _WebhookResponseArray = require_WebhookResponseArray();
  var _WebhookResponseData = require_WebhookResponseData();
  var _WebhookUpdateRequest = require_WebhookUpdateRequest();
  var _WebhooksBody = require_WebhooksBody();
  var _WebhooksWebhookGidBody = require_WebhooksWebhookGidBody();
  var _WorkspaceAddUserRequest = require_WorkspaceAddUserRequest();
  var _WorkspaceBase = require_WorkspaceBase();
  var _WorkspaceCompact = require_WorkspaceCompact();
  var _WorkspaceGidAddUserBody = require_WorkspaceGidAddUserBody();
  var _WorkspaceGidProjectsBody = require_WorkspaceGidProjectsBody();
  var _WorkspaceGidRemoveUserBody = require_WorkspaceGidRemoveUserBody();
  var _WorkspaceGidTagsBody = require_WorkspaceGidTagsBody();
  var _WorkspaceMembershipBase = require_WorkspaceMembershipBase();
  var _WorkspaceMembershipCompact = require_WorkspaceMembershipCompact();
  var _WorkspaceMembershipRequest = require_WorkspaceMembershipRequest();
  var _WorkspaceMembershipResponse = require_WorkspaceMembershipResponse();
  var _WorkspaceMembershipResponseArray = require_WorkspaceMembershipResponseArray();
  var _WorkspaceMembershipResponseData = require_WorkspaceMembershipResponseData();
  var _WorkspaceMembershipResponseUserTaskList = require_WorkspaceMembershipResponseUserTaskList();
  var _WorkspaceMembershipResponseVacationDates = require_WorkspaceMembershipResponseVacationDates();
  var _WorkspaceRemoveUserRequest = require_WorkspaceRemoveUserRequest();
  var _WorkspaceRequest = require_WorkspaceRequest();
  var _WorkspaceResponse = require_WorkspaceResponse();
  var _WorkspaceResponseArray = require_WorkspaceResponseArray();
  var _WorkspaceResponseData = require_WorkspaceResponseData();
  var _WorkspacesWorkspaceGidBody = require_WorkspacesWorkspaceGidBody();
  var _AttachmentsApi = require_AttachmentsApi();
  var _AuditLogAPIApi = require_AuditLogAPIApi();
  var _BatchAPIApi = require_BatchAPIApi();
  var _CustomFieldSettingsApi = require_CustomFieldSettingsApi();
  var _CustomFieldsApi = require_CustomFieldsApi();
  var _EventsApi = require_EventsApi();
  var _GoalRelationshipsApi = require_GoalRelationshipsApi();
  var _GoalsApi = require_GoalsApi();
  var _JobsApi = require_JobsApi();
  var _MembershipsApi = require_MembershipsApi();
  var _OrganizationExportsApi = require_OrganizationExportsApi();
  var _PortfolioMembershipsApi = require_PortfolioMembershipsApi();
  var _PortfoliosApi = require_PortfoliosApi();
  var _ProjectBriefsApi = require_ProjectBriefsApi();
  var _ProjectMembershipsApi = require_ProjectMembershipsApi();
  var _ProjectStatusesApi = require_ProjectStatusesApi();
  var _ProjectTemplatesApi = require_ProjectTemplatesApi();
  var _ProjectsApi = require_ProjectsApi();
  var _RulesApi = require_RulesApi();
  var _SectionsApi = require_SectionsApi();
  var _StatusUpdatesApi = require_StatusUpdatesApi();
  var _StoriesApi = require_StoriesApi();
  var _TagsApi = require_TagsApi();
  var _TasksApi = require_TasksApi();
  var _TeamMembershipsApi = require_TeamMembershipsApi();
  var _TeamsApi = require_TeamsApi();
  var _TimePeriodsApi = require_TimePeriodsApi();
  var _TimeTrackingEntriesApi = require_TimeTrackingEntriesApi();
  var _TypeaheadApi = require_TypeaheadApi();
  var _UserTaskListsApi = require_UserTaskListsApi();
  var _UsersApi = require_UsersApi();
  var _WebhooksApi = require_WebhooksApi();
  var _WorkspaceMembershipsApi = require_WorkspaceMembershipsApi();
  var _WorkspacesApi = require_WorkspacesApi();
});

// src/index.ts
var core2 = __toESM(require_core(), 1);

// src/action.ts
var core = __toESM(require_core(), 1);
var github = __toESM(require_github(), 1);

// src/asana-client.ts
var import_asana = __toESM(require_dist2(), 1);
import {promisify} from "util";
class AsanaClient {
  storiesApi;
  tasksApi;
  attachmentsApi;
  sectionsApi;
  constructor(asanaPAT) {
    const defaultClient = import_asana.default.ApiClient.instance;
    const oauth2 = defaultClient.authentications["oauth2"];
    oauth2.accessToken = asanaPAT;
    this.storiesApi = new import_asana.default.StoriesApi;
    this.tasksApi = new import_asana.default.TasksApi;
    this.attachmentsApi = new import_asana.default.AttachmentsApi;
    this.sectionsApi = new import_asana.default.SectionsApi;
  }
  async addComment(taskId, commentId, text, isPinned) {
    const data = {
      text,
      is_pinned: isPinned
    };
    const body = new import_asana.default.TaskGidStoriesBody.constructFromObject({ data });
    const opts = {};
    return await promisify(this.storiesApi.createStoryForTask).bind(this.storiesApi)(body, taskId, opts);
  }
  async findComment(taskId, commentId) {
    const opts = {
      limit: 200
    };
    const comments = await promisify(this.storiesApi.createStoryForTask).bind(this.storiesApi)(taskId, opts);
    return comments.find((c) => c.gid === commentId);
  }
  async completeTask(taskId) {
    let apiInstance = new import_asana.default.TasksApi;
    let body = new import_asana.default.TasksTaskGidBody.constructFromObject({
      data: {
        is_completed: true
      }
    });
    let opts = {};
    return promisify(apiInstance.updateTask).bind(apiInstance)(taskId, body, opts);
  }
  async removeComment(commentId) {
    return promisify(this.storiesApi.deleteStory).bind(this.storiesApi)(commentId);
  }
  async getTask(taskId, fields) {
    const opts = {
      opt_fields: fields
    };
    return promisify(this.tasksApi.getTask).bind(this.tasksApi)(taskId, opts);
  }
  async moveSection(taskId, targets) {
    const task = await this.getTask(taskId, ["projects", "projects.name"]);
    targets.map(async (t) => {
      const project = task.data.projects.find((p) => p.name === t.project);
      if (!project) {
        return;
      }
      const sections = await promisify(this.sectionsApi.getSectionsForProject).bind(this.sectionsApi)(project.gid, {
        opt_fields: ["name"]
      });
      const targetSection = sections.data.find((s) => s.name === t.section);
      if (!targetSection) {
        return;
      }
      let opts = {
        body: new import_asana.default.SectionGidAddTaskBody.constructFromObject({
          data: {
            task: taskId
          }
        })
      };
      await promisify(this.sectionsApi.addTaskForSection).bind(this.sectionsApi)(targetSection.gid, opts);
    });
  }
  async addAttachments(taskId, prName, prUrl) {
    const apiInstance = new import_asana.default.AttachmentsApi;
    const opts = {
      resource_subtype: "external",
      parent: taskId,
      url: prUrl,
      name: prName,
      connect_to_app: false
    };
    return new Promise((resolve, reject) => {
      apiInstance.createAttachmentForObject(opts, (error2, data) => {
        if (error2)
          return reject(error2);
        return reject(data);
      });
    });
  }
}

// src/action.ts
async function action() {
  const ASANA_PAT = core.getInput("asana-pat", { required: true });
  const ACTION = core.getInput("action", { required: true });
  const TRIGGER_PHRASE = core.getInput("trigger-phrase") || "";
  const PULL_REQUEST = github.context.payload.pull_request;
  const REGEX_STRING = `${TRIGGER_PHRASE}(?:\\s*)https:\\/\\/app.asana.com\\/(\\d+)\\/(?<project>\\d+)\\/(?<task>\\d+)`;
  const REGEX = new RegExp(REGEX_STRING, "g");
  const client = await new AsanaClient(ASANA_PAT);
  if (!PULL_REQUEST?.body) {
    return;
  }
  const foundAsanaTasks = [];
  let parseAsanaURL;
  while ((parseAsanaURL = REGEX.exec(PULL_REQUEST.body)) !== null) {
    const taskId = parseAsanaURL.groups?.task;
    if (!taskId) {
      core.error(`Invalid Asana task URL after the trigger phrase ${TRIGGER_PHRASE}`);
      continue;
    }
    foundAsanaTasks.push(taskId);
  }
  console.info(`found ${foundAsanaTasks.length} taskIds:`, foundAsanaTasks.join(","));
  console.info("calling", ACTION);
  switch (ACTION) {
    case "assert-link": {
      const githubToken = core.getInput("github-token", { required: true });
      const linkRequired = core.getInput("link-required", { required: true }) === "true";
      const octokit = new github.GitHub(githubToken);
      const statusState = !linkRequired || foundAsanaTasks.length > 0 ? "success" : "error";
      core.info(`setting ${statusState} for ${github.context.payload.pull_request?.head.sha}`);
      await octokit.repos.createStatus({
        ...github.context.repo,
        context: "asana-link-presence",
        state: statusState,
        description: "asana link not found",
        sha: github.context.payload.pull_request?.head.sha
      });
      break;
    }
    case "add-comment": {
      const commentId = core.getInput("comment-id");
      const htmlText = core.getInput("text", { required: true });
      const isPinned = core.getInput("is-pinned") === "true";
      const comments = [];
      for (const taskId of foundAsanaTasks) {
        if (commentId) {
          const comment2 = await client.findComment(taskId, commentId);
          if (comment2) {
            console.info("found existing comment", comment2.gid);
            continue;
          }
        }
        const comment = await client.addComment(taskId, commentId, htmlText, isPinned);
        comments.push(comment);
      }
      return comments;
    }
    case "remove-comment": {
      const commentId = core.getInput("comment-id", { required: true });
      const removedCommentIds = [];
      for (const taskId of foundAsanaTasks) {
        const comment = await client.findComment(taskId, commentId);
        if (comment) {
          console.info("removing comment", comment.gid);
          try {
            await client.removeComment(comment.gid);
          } catch (error3) {
            console.error("rejecting promise", error3);
          }
          removedCommentIds.push(comment.gid);
        }
      }
      return removedCommentIds;
    }
    case "complete-task": {
      const isComplete = core.getInput("is-complete") === "true";
      const taskIds = [];
      for (const taskId of foundAsanaTasks) {
        console.info("marking task", taskId, isComplete ? "complete" : "incomplete");
        try {
          await client.completeTask(taskId);
        } catch (error3) {
          console.error("rejecting promise", error3);
        }
        taskIds.push(taskId);
      }
      return taskIds;
    }
    case "move-section": {
      const targetJSON = core.getInput("targets", { required: true });
      const targets = JSON.parse(targetJSON);
      const movedTasks = [];
      for (const taskId of foundAsanaTasks) {
        await client.moveSection(taskId, targets);
        movedTasks.push(taskId);
      }
      return movedTasks;
    }
    case "attach-pr": {
      if (!PULL_REQUEST.html_url) {
        throw Error("Pull request url not found");
      }
      for (const taskId of foundAsanaTasks) {
        await client.addAttachments(taskId, PULL_REQUEST.title, PULL_REQUEST.html_url);
      }
      break;
    }
    default:
      core.setFailed(`unexpected action ${ACTION}`);
  }
}
var action_default = action;

// src/index.ts
async function run() {
  try {
    await action_default();
  } catch (error3) {
    core2.default.setFailed(error3.message);
  }
}
run();
